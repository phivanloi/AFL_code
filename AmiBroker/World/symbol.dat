#USA NASDAQ
MRM,1168539,Medirom Healthcare Technologies Inc,24
VTAQU,1168242,Ventoux Ccm Acquisition Corp,24
VIIAU,1168419,7GC & Holdings Co Inc,24
CFIVU,1168409,CF Acquisition Corp IV,24
DUNEU,1168031,Dune Acquisition Corp,24
SVOKU,1168241,Seven Oaks Acquisition Corp,24
MTACU,1168240,Medtech Acquisition Corp,24
SCOAU,1168244,Scion Tech Growth I,24
VIRI,1168243,Virios Therapeutics Llc,24
COOLU,1168245,Corner Growth Acquisition Corp,24
KINZU,1168412,Kins Technology Group Inc.,24
ROCCU,1168418,Roth CH Acquisition II Co,24
RMGBU,1168319,Rmg Acquisition Corporation II,24
HMCOU,1168869,HumanCo Acquisition Corp,24
NEBCU,1168312,Nebula Caravel Acquisition Corp,24
MDWT,1167960,Midwest Holding Inc,24
WISH,1167961,Contextlogic Inc,24
SCPS,1168033,Scopus Biopharma Inc,24
BCAB,1167959,Bioatla Inc,24
BLUWU,1168034,Blue Water Acquisition Corp,24
MRACU,1168032,Marquee Raine Acquisition Corp,24
WNW,1168035,Wunong Net Technology Co Ltd,24
UPST,1167751,Upstart Holdings Inc,24
SFT,1163664,Shift Technologies,24
AACG,15481,ATA Inc,24
AACQ,1166476,Artius Acquisition Inc,24
AACQU,1165414,Artius Acquisition Inc,24
AAL,44412,American Airlines Group,24
AAME,15301,Atlantic American Corporation,24
AAOI,41287,Applied Opt,24
AAON,15302,AAON Inc,24
AAPL,6408,Apple Inc,24
AAWW,15304,Atlas Air Worldwide Holdings,24
AAXN,6509,Axon Enterprise Inc,24
ABCB,15306,Ameris Bancorp,24
ABCM,1167032,Abcam PLC,24
ABEO,943141,Abeona Therapeutics Inc,24
ABIO,15310,ARCA Biopharma Inc,24
ABMD,15311,ABIOMED Inc,24
ABTX,960553,Allegiance Bancshares Inc,24
ABUS,31163,Arbutus Biopharma Corp,24
ACAD,15314,ACADIA Pharmaceuticals Inc,24
ACAM,1129463,Acamar Partners Acquisition Corp Class A,24
ACAMU,1163541,Acamar Partners Acquisition Corp,24
ACBI,960554,Atlantic Capital Bancshares Inc,24
ACCD,1163040,Accolade Inc,24
ACER,16825,Acer Therapeutics Inc,24
ACET,1061143,Adicet Bio Inc,24
ACEV,1166477,ACE Convergence Acquisition Corp,24
ACEVU,1163503,Ace Convergence Acquisition Corp,24
ACGL,39321,Arch Capital Group Ltd,24
ACGLO,1043278,Arch Capital Group Ltd ADR,24
ACGLP,991168,Arch Capital Group Ltd ADR Series E,24
ACHC,15321,Acadia Healthcare Company Inc,24
ACHV,16799,Achieve Life Sciences Inc,24
ACIA,977674,Acacia Communications Inc,24
ACIU,989652,AC Immune Ltd,24
ACIW,15323,ACI Worldwide Inc,24
ACLL,1163342,Acell Inc,24
ACLS,15324,Axcelis Technologies Inc,24
ACMR,1054776,Acm Research Inc,24
ACNB,15325,ACNB Corporation,24
ACOR,15327,Acorda Therapeutics Inc,24
ACRS,960555,Aclaris Therapeutics Inc,24
ACRX,15329,AcelRx Pharmaceuticals Inc,24
ACST,40048,Acasti Pharma Inc,24
ACTC,1167586,ArcLight Clean Transition Corp,24
ACTCU,1166478,ArcLight Clean Transition Corp,24
ACTG,15330,Acacia Research Corporation,24
ADAP,951677,Adaptimmune Therapeutics Plc,24
ADBE,6373,Adobe Systems Incorporated,24
ADES,15336,Advanced Emissions Solutions Inc,24
ADI,7869,Analog Devices Inc,24
ADIL,1056450,Adial Pharmaceuticals Inc,24
ADMA,942653,ADMA Biologics Inc,24
ADMP,48410,Adamis Pharma,24
ADMS,101900,Adamas Pharma,24
ADOCU,1167317,Edoc Acquisition Corp,24
ADP,9019,Automatic Data Processing Inc,24
ADPT,1137571,Adaptive Biotechnologies Corp,24
ADSK,6363,Autodesk Inc,24
ADTN,13962,ADTRAN Inc,24
ADTX,1164070,Aditx Therapeutics Inc,24
ADUS,15339,Addus HomeCare Corporation,24
ADV,989530,Advantage Solutions Inc,24
ADVM,940832,Adverum Biotechnologies Inc,24
ADXN,1163716,Addex Therapeutics Ltd,24
ADXS,42583,Advaxis Inc,24
AEGN,15341,Aegion Corp,24
AEHL,15671,Antelope Enterprise Holdings Ltd,24
AEHR,15343,Aehr Test Systems,24
AEIS,13963,Advanced Energy Industries Inc,24
AEMD,50887,Aethlon Medical Inc,24
AEP,8144,American Electric Power Company Inc,24
AEPPL,1163547,American Electric Power Company Inc,24
AEPPZ,1165648,American Electric Power Company Inc,24
AERI,48411,Aerie Pharmace,24
AESE,1053083,Allied Esports Entertainment Inc,24
AEY,15347,ADDvantage Technologies Group Inc,24
AEYE,52322,AudioEye Inc,24
AFIB,1164147,Acutus Medical Inc,24
AFIN,1089251,American Financial TRS Inc Class A,24
AFINP,1163621,American Finance Trust Inc PR,24
AFMD,941649,Affimed NV,24
AFYA,1141596,Afya Ltd,24
AGBA,1163741,AGBA Acquisition Ltd,24
AGBAU,1166479,AGBA Acquisition Ltd,24
AGCUU,1166757,Altimeter Growth Corp,24
AGEN,15356,Agenus Inc,24
AGFS,101903,AgroFresh Solutions Inc,24
AGIO,41286,Agios Pharm,24
AGLE,976068,Aeglea Bio Therapeutics Inc,24
AGMH,1073602,AGM Group Holdings Inc Class A,24
AGNC,15358,AGNC Investment Corp,24
AGNCN,1043279,AGNC Investment Corp ADR,24
AGRX,102890,Agile Thrpe,24
AGTC,100220,Applied Genetic,24
AGYS,15359,Agilysys Inc,24
AHACU,1166363,Alpha Healthcare Acq Corp,24
AHCO,1064342,Adapthealth Corp,24
AHPI,15361,Allied Healthcare Products Inc,24
AIH,1153246,Aesthetic Medical Intl Holding Ltd,24
AIHS,1072330,Senmiao Technology Ltd,24
AIKI,17229,Aikido Pharma Inc,24
AIMC,15362,Altra Holdings Inc,24
AINV,24377,Apollo Investment Corp,24
AIRG,986295,Airgain Inc,24
AIRT,15364,Air T Inc,24
AIRTP,1163796,Air T Inc PR,24
AKAM,6460,Akamai Technologies Inc,24
AKBA,100227,Akebia Ther,24
AKER,100175,Akers Biosciences Inc,24
AKRO,1137410,Akero Therapeutics Inc,24
AKTS,960944,Akoustis Technologies Inc,24
AKTX,100176,Akari Therapeutics PLC,24
AKU,1166480,Akumin Inc,24
AKUS,1163026,Akouos Inc,24
ALAC,1097546,Alberton Acquisition Corp,24
ALACU,1163654,Alberton Acquisition Corp,24
ALBO,15560,Albireo Pharma Inc,24
ALCO,15367,Alico Inc,24
ALDX,101902,Aldeyra The,24
ALEC,1121154,Alector Inc,24
ALGM,1167058,Allegro Microsystems Inc,24
ALGN,15368,Align Technology Inc,24
ALGS,1166959,Aligos Therapeutics Inc,24
ALGT,15369,Allegiant Travel Company,24
ALIM,15370,Alimera Sciences Inc,24
ALJJ,52672,ALJ Regional Holdings Inc,24
ALKS,15371,Alkermes Plc,24
ALLK,1084218,Allakos Inc,24
ALLO,1096237,Allogene Therapeutics Inc,24
ALLT,15373,Allot Communications Ltd,24
ALNA,1053091,Allena Pharmaceuticals Inc,24
ALNY,15375,Alnylam Pharmaceuticals Inc,24
ALOT,15377,AstroNova Inc,24
ALPN,6428,Alpine Immune Sciences Inc,24
ALRM,955557,Alarm.com Holdings Inc,24
ALRN,1014083,Aileron Therapeutics Inc,24
ALRS,1152340,Alerus Financial Corp,24
ALSK,15379,Alaska Communications Systems,24
ALT,24419,Altimmune Inc,24
ALTA,954884,Altabancorp,24
ALTM,1009355,Altus Midstream Co,24
ALTR,1053088,Altair Engineering Inc,24
ALTUU,1167962,Altitude Acquisition Corp,24
ALVR,1163504,Allovir Inc,24
ALXN,13810,Alexion Pharmaceuticals Inc,24
ALXO,1163343,Alx Oncology Holdings ,24
ALYA,15974,Alithya Group inc Class A,24
AMAL,1089602,Amalgamated Bank,24
AMAT,6386,Applied Materials Inc,24
AMBA,40050,Ambarella Inc,24
AMCI,1097841,AMCI Acquisition Corp Class A,24
AMCIU,1163709,AMCI Acquisition Corp,24
AMCX,39322,AMC Networks Inc,24
AMD,8274,Advanced Micro Devices Inc,24
AMED,15391,Amedisys Inc,24
AMEH,1056241,Apollo Medical Holdings Inc,24
AMGN,6466,Amgen Inc,24
AMHC,1163569,Amplitude Healthcare Acquisition Corp,24
AMHCU,1155528,Amplitude Healthcare Acquisition Co,24
AMKR,15393,Amkor Technology Inc,24
AMNB,15394,American National Bankshares Inc,24
AMOT,15395,Allied Motion Technologies Inc,24
AMPH,102891,Amphastar P,24
AMRB,15399,American River Bankshares,24
AMRH,1054960,Ameri Holdings Inc,24
AMRK,100205,Amark Preci,24
AMRN,32541,Amarin Corporation PLC,24
AMRS,15402,Amyris Inc,24
AMSC,15403,American Superconductor Corporation,24
AMSF,15404,AMERISAFE Inc,24
AMST,1166235,Amesite Operating Co,24
AMSWA,15406,American Software Inc,24
AMTB,1095928,Mercantil Bank Holding Corp Class A,24
AMTBB,1095929,Amerant Bancorp Inc,24
AMTI,1161533,Applied Molecular Transport Inc,24
AMTX,52321,Aemetis Inc,24
AMWD,15409,American Woodmark Corporation,24
AMYT,1163895,Amryt Pharma Holdings Ltd,24
AMZN,6435,Amazon.com Inc,24
ANAB,995702,AnaptysBio Inc,24
ANAT,15412,American National Insurance Company,24
ANCN,1122224,Anchiano Therapeutics Ltd,24
ANDA,1129348,Andina Acquisition Corp III,24
ANDAU,1163624,Andina Acquisition Corp III,24
ANDE,15416,The Andersons Inc,24
ANGI,32542,ANGI Homeservices Inc,24
ANGO,15420,AngioDynamics Inc,24
ANIK,15421,Anika Therapeutics Inc,24
ANIP,32536,ANI Pharmaceuticals Inc,24
ANIX,52325,Anixa Biosciences Inc,24
ANNX,1163484,Annexon Inc,24
ANPC,1155945,Anpac Bio Medical Science Co Ltd,24
ANSS,15424,ANSYS Inc,24
ANTE,13964,Airnet Technology Inc,24
ANY,940823,Sphere 3D Corp,24
AOSL,15428,Alpha and Omega Semiconductor Ltd,24
AOUT,1165658,American Outdoor Brands Inc,24
APA,8103,Apache Corporation,24
APDN,942662,Applied DNA Sciences Inc,24
APEI,15430,American Public Education Inc,24
APEN,40076,Apollo Endosurgery Inc,24
API,1163025,Agora Inc,24
APLS,1054802,Apellis Pharmaceuticals Inc,24
APLT,1129440,Applied Therapeutics Inc,24
APM,1116146,Aptorum Group Ltd Class A,24
APOG,15433,Apogee Enterprises Inc,24
APOP,986296,Cellect Biotechnology Ltd,24
APPF,955558,Appfolio Inc,24
APPN,1010718,Appian Corp,24
APPS,41004,Digital Turbine Inc,24
APRE,1152988,Aprea Therapeutics Inc,24
APTO,942490,Aptose Biosciences Inc,24
APTX,1080048,Aptinyx Inc,24
APVO,985950,Aptevo Therapeutics Inc,24
APWC,15437,Asia Pacific Wire & Cable Corp Ltd,24
APXT,1163579,Apex Technology Acquisition Corp,24
APXTU,1163540,Apex Technology Acquisition Corp,24
APYX,30677,Apyx Medical Inc,24
AQB,994772,AquaBounty Technologies Inc,24
AQMS,958219,Aqua Metals Inc,24
AQST,1084846,Aquestive Therapeutics Inc,24
ARAV,100235,Aravive Inc,24
ARAY,15438,Accuray Incorporated,24
ARBGU,1167425,Aequi Acquisition Corp,24
ARCB,15309,ArcBest Corp,24
ARCC,39342,Ares Capital Corporation,24
ARCE,1096074,Arco Platform ,24
ARCT,40973,Arcturus Therapeutics Holdings Inc,24
ARDS,1089243,Aridis Pharmaceuticals Inc,24
ARDX,102893,Ardelyx Inc,24
AREC,1122743,American Resources Corp Class A,24
ARGX,1010655,argenx NV ADR,24
ARKR,15448,Ark Restaurants Corp,24
ARLP,15449,Alliance Resource Partners LP,24
ARNA,13966,Arena Pharmaceuticals Inc,24
AROW,15451,Arrow Financial Corporation,24
ARPO,1043329,Aerpio Pharmaceuticals Inc,24
ARQT,1156573,Arcutis Biotherapeutics Inc,24
ARRY,1166923,Array Technologies Inc,24
ARTL,1123098,Artelo Biosciences Inc,24
ARTNA,15456,Artesian Resources Corporation,24
ARTW,15457,Arts-Way Manufacturing Co Inc,24
ARVN,1096077,Arvinas Inc,24
ARWR,15459,Arrowhead Pharmaceuticals Inc,24
ARYA,1096206,Arya Sciences Acquisition Corp Class A,24
ASLN,1073897,Aslan Pharmaceuticals Ltd ADR,24
ASMB,17526,Assembly Biosciences Inc,24
ASML,39320,ASML Holding NV ADR,24
ASND,945085,Ascendis Pharma AS,24
ASO,1166427,Academy Sports Outdoors Inc,24
ASPS,39323,Altisource Portfolio Solutions SA,24
ASPU,960950,Aspen Group Inc,24
ASRT,15900,Assertio Therapeutics Inc,24
ASRV,15473,AmeriServ Financial Inc,24
ASRVP,1163638,Ameriserv Capital Trust I PR,24
ASTC,15474,Astrotech Corp,24
ASTE,15475,Astec Industries Inc,24
ASUR,15479,Asure Software Inc,24
ASYS,15480,Amtech Systems Inc,24
ATAX,15482,America First Tax Exempt Investors,24
ATCX,1097916,Atlas Technical Consultants Inc,24
ATEC,15484,Alphatec Holdings Inc,24
ATEX,945080,Anterix Inc,24
ATHA,1166231,Athira Pharma Inc,24
ATHE,16952,Alterity Therapeutics Ltd,24
ATHX,15486,Athersys Inc,24
ATIF,1130912,ATIF Holdings Ltd,24
ATLC,6425,Atlanticus Holdings Corporation,24
ATLO,15487,Ames National Corporation,24
ATNF,1052948,180 Life Sciences Corp,24
ATNI,15489,ATN International Inc,24
ATNX,1012040,Athenex Inc,24
ATOM,986076,Atomera Inc,24
ATOS,40051,Atossa Genetics Inc,24
ATRA,942487,Atara Biotherapeutics Inc,24
ATRC,15492,AtriCure Inc,24
ATRI,15493,ATRION Corporation,24
ATRO,15495,Astronics Corporation,24
ATRS,24424,Antares Pharma Inc,24
ATSG,32380,Air Transport Services Group Inc,24
ATVI,6464,Activision Blizzard Inc,24
ATXI,1012041,Avenue Therapeutics Inc,24
AUB,17427,Atlantic Union Bankshares Corp,24
AUBN,15498,Auburn National Bancorporation Inc,24
AUDC,15499,AudioCodes Ltd,24
AUPH,941158,Aurinia Pharmaceuticals Inc,24
AUTL,1081659,Autolus Therapeutics Ltd,24
AUTO,15312,Autoweb Inc,24
AUVI,1166475,Applied UV Inc,24
AVAV,15502,AeroVironment Inc,24
AVCO,1097734,Avalon Globocare Corp,24
AVCT,17570,American Virtual Cloud Technologies Inc,24
AVDL,16103,Avadel Pharmaceuticals PLC,24
AVEO,15504,AVEO Pharmaceuticals Inc,24
AVGO,13969,Broadcom Inc,24
AVGOP,1159532,Broadcom Mandatory Conv Pref,24
AVGR,945076,Avinger Inc,24
AVID,15505,Avid Technology Inc,24
AVIR,1167131,Atea Pharmaceuticals Inc,24
AVNW,15508,Aviat Networks Inc,24
AVO,1166409,Mission Produce Inc,24
AVRO,1080088,AVROBIO Inc,24
AVT,21188,Avnet Inc,24
AVXL,52320,Anavex Life Sciences Corp,24
AWH,17508,Aspira Womens Health Inc,24
AWRE,15511,Aware Inc,24
AXAS,15512,Abraxas Petroleum Corporation,24
AXDX,40052,Accelerate Diagnostics Inc,24
AXGN,41289,Axogen Inc,24
AXLA,1129486,Axcella Health Inc,24
AXNX,1096499,Axonics Modulation Technologies Inc,24
AXSM,961626,Axsome Therapeutics Inc,24
AXTI,15513,AXT Inc,24
AY,102887,Atlantica Yield PLC,24
AYLA,1161007,Ayala Pharmaceuticals Inc,24
AYRO,17565,AYRO Inc,24
AYTU,996118,Aytu BioScience Inc,24
AZN,39111,AstraZeneca PLC ADR,24
AZPN,39221,Aspen Technology Inc,24
AZRX,986247,AzurRx BioPharma Inc,24
AZYO,1166731,Aziyo Biologics Inc,24
BAND,1054803,Bandwidth Inc,24
BANF,15519,BancFirst Corporation,24
BANFP,960560,BFC Capital Trust II Pref,24
BANR,15520,Banner Corporation,24
BANX,44410,Stonecastle,24
BASI,15522,Bioanalytical Systems Inc,24
BATRA,976450,Liberty Media Corp Braves A,24
BATRK,976451,Liberty Media Corp Braves C,24
BBBY,6389,Bed Bath & Beyond Inc,24
BBCP,1034513,Concrete Pumping Holdings Class A,24
BBGI,15525,Beasley Broadcast Group Inc,24
BBI,39339,Brickell Biotech Inc,24
BBIG,1076547,Vinco Ventures Inc,24
BBIO,1137570,BridgeBio Pharma Inc,24
BBQ,15892,BBQ Holdings Inc,24
BBSI,15529,Barrett Business Services Inc,24
BCACU,1165882,Brookline Capital Acquisition Corp,24
BCBP,15531,BCB Bancorp Inc,24
BCDA,1155964,Biocardia Inc,24
BCEL,1137408,Atreca Inc,24
BCLI,50914,Brainstorm Cell Therapeutics Inc,24
BCML,1073427,BayCom Corp,24
BCOR,29761,Blucora Inc,24
BCOV,32540,Brightcove Inc,24
BCOW,1117903,1895 of Wisconsin Inc Bancorp,24
BCPC,15534,Balchem Corporation,24
BCRX,15535,BioCryst Pharmaceuticals Inc,24
BCTG,1165880,Bctg Acquisition Corp,24
BCYC,1131059,Bicycle Therapeutics Ltd,24
BDGE,15539,Bridge Bancorp Inc,24
BDSI,15541,BioDelivery Sciences International,24
BDSX,1167060,Biodesix Inc,24
BDTX,1156575,Black Diamond Therapeutics Inc,24
BEAM,1156638,Beam Therapeutics Inc,24
BEAT,15542,BioTelemetry Inc,24
BECN,15545,Beacon Roofing Supply Inc,24
BEEM,50891,Beam Global,24
BELFA,15546,Bel Fuse A Inc,24
BELFB,15547,Bel Fuse B Inc,24
BFC,1097534,Bank First National Corp,24
BFIN,15551,BankFinancial Corporation,24
BFRA,1062636,Biofrontera AG ADR,24
BFST,1073417,Business First Bancshares Inc,24
BGCP,15554,BGC Partners Inc,24
BGFV,15555,Big 5 Sporting Goods Corporation,24
BGNE,968966,BeiGene Ltd,24
BHAT,1142214,Blue Hat Interactive Entertainment ,24
BHF,1031336,Brighthouse Financial Inc,24
BHSEU,1166979,Bull Horn Holdings Corp,24
BHTG,1054791,BioHiTech Global Inc,24
BIDU,6378,Baidu Inc,24
BIGC,1164094,Bigcommerce Holdings Inc,24
BIIB,6487,Biogen Inc,24
BILI,1073087,Bilibili Inc,24
BIMI,16729,BOQI International Medical Inc,24
BIOC,15559,Biocept Inc,24
BIOL,15577,BIOLASE Inc,24
BIVI,1142315,Biovie Inc,24
BJRI,15565,BJs Restaurants Inc,24
BKCC,24373,BlackRock Kelso Capital Corporation,24
BKEP,15567,Blueknight Energy Partners LP LLC,24
BKEPP,1058123,Blueknight Energy Partners LP Pref,24
BKNG,13072,Booking Holdings Inc,24
BKSC,15570,Bank of South Carolina Corp,24
BKYI,52199,BIO-Key International Inc,24
BL,992965,Blackline Inc,24
BLBD,100169,Blue Bird Corp,24
BLCM,943137,Bellicum Pharmaceuticals Inc,24
BLCT,1163123,Bluecity Holding Ltd ,24
BLDP,6522,Ballard Power Systems Inc,24
BLDR,15572,Builders FirstSource Inc,24
BLFS,100173,BioLife Solutions Inc,24
BLI,1163344,Berkeley Lights Inc,24
BLIN,15573,Bridgeline Digital Inc,24
BLKB,15574,Blackbaud Inc,24
BLMN,31171,Bloomin Brands Inc,24
BLNK,52609,Blink Charging Co,24
BLPH,945666,Bellerophon Therapeutics Inc,24
BLRX,15576,BioLineRx Ltd,24
BLSA,1167033,Bcls Acquisition Corp,24
BLUE,40978,Bluebird bio Inc,24
BMCH,41329,BMC Stock Holdings Inc,24
BMRA,942608,Biomerica Inc,24
BMRC,15578,Bank of Marin Bancorp,24
BMRN,15579,Biomarin Pharmaceutical Inc,24
BMTC,15580,Bryn Mawr Bank Corporation,24
BNFT,41291,Benefitfocus Inc,24
BNGO,1096506,Bionano Genomics Inc,24
BNR,1162158,Burning Rock Biotech Ltd,24
BNSO,15585,Bonso Electronics International Inc,24
BNTC,52684,Benitec Biopharma Ltd ADR,24
BNTX,1152992,BioNTech SE,24
BOCH,15588,Bank of Commerce Holdings,24
BOKF,15591,BOK Financial Corporation,24
BOMN,1012042,Boston Omaha Corp,24
BOOM,15595,Dmc Global Inc,24
BOSC,15597,BOS Better Online Solutions,24
BOTJ,31011,Bank of the James Financial Group,24
BOWX,1167587,BowX Acquisition Corp,24
BOWXU,1164649,Bowx Acquisition Corp,24
BOXL,1055953,Boxlight Corp Class A,24
BPFH,15600,Boston Private Financial Holdings,24
BPMC,951001,Blueprint Medicines Corp,24
BPOP,39324,Popular Inc,24
BPOPM,960565,Popular Capital Trust II Pref,24
BPOPN,960566,Popular Capital Trust I Pref,24
BPRN,1031337,Bank Of Princeton,24
BPTH,100171,Bio Path Holdings Inc,24
BPY,958120,Brookfield Property Partners LP,24
BPYPN,1163537,Brookfield Property Partners LP PR,24
BPYPO,1163562,Brookfield Property Partners LP,24
BPYPP,1163563,Brookfield Property Partners LP,24
BPYU,39162,Brookfield Property Reit Inc,24
BPYUP,959943,Brookfield Property Reit Inc Pref A,24
BRID,15603,Bridgford Foods Corporation,24
BRKL,15604,Brookline Bancorp Inc,24
BRKR,39153,Bruker Corporation,24
BRKS,15606,Brooks Automation Inc,24
BRLI,1163896,Brilliant Acquisition Corp,24
BRLIU,1162795,Brilliant Acquisition Corp,24
BROG,1082077,Brooge Holdings Ltd,24
BRP,1153166,Brp Group Inc,24
BRPA,1056129,Big Rock Partners Acquisition Corp,24
BRPAU,1055092,Big Rock Partners Acquisition Corp Unit,24
BRQS,960641,Borqs Technologies Inc,24
BRY,1084932,Berry Petroleum Corp,24
BSBK,1163736,Bogota Financial Corp,24
BSET,15609,Bassett Furniture Industries,24
BSGM,1096509,Biosig Technologies Inc,24
BSQR,15612,BSQUARE Corporation,24
BSRR,15613,Sierra Bancorp,24
BSVN,1096069,Bank7 Corp,24
BSY,1166359,Bentley Systems Inc,24
BTAI,1071995,BioXcel Therapeutics Inc,24
BTAQU,1165395,Burgundy Tech Acquisition,24
BTBT,1072979,Bit Digital Inc,24
BTWN,1167895,Bridgetown Holdings Ltd,24
BTWNU,1166980,Bridgetown Holdings Ltd,24
BUSE,15618,First Busey Corp,24
BVXV,953046,BiondVax Pharmaceuticals Ltd ADR,24
BWAY,1127923,Brainsway Ltd,24
BWB,1072223,Bridgewater Bancshares Inc,24
BWEN,15620,Broadwind Energy Inc,24
BWFG,101904,Bankwell Financial Group Inc,24
BWMX,1096534,Betterware De Mexico SA de CV,24
BXRX,1155860,Baudax Bio Inc,24
BYFC,15625,Broadway Financial Corporation,24
BYND,1129317,Beyond Meat Inc,24
BYSI,997802,BeyondSpring Inc,24
BZUN,953525,Baozun Inc,24
CAAS,15626,China Automotive Systems Inc,24
CABA,1153247,Cabaletta Bio Inc,24
CAC,15627,Camden National Corporation,24
CACC,15629,Credit Acceptance Corporation,24
CAKE,15634,The Cheesecake Factory,24
CALA,942329,Calithera Biosciences Inc,24
CALB,1028154,California BanCorp,24
CALM,15638,Cal-Maine Foods Inc,24
CALT,1161534,Calliditas Therapeutics,24
CAMP,15639,CalAmp Corp,24
CAMT,15640,Camtek Ltd,24
CAN,1155529,Canaan Inc,24
CAPAU,1165883,Highcape Capital Acquisition Corp,24
CAPR,52893,Capricor Therapeutics Inc,24
CAR,39223,Avis Budget Group Inc,24
CARA,100226,Cara Therapeutic,24
CARE,52891,Carter Bank and Trust,24
CARG,1052244,CarGurus,24
CARV,15644,Carver Bancorp Inc,24
CASA,1056452,Casa Systems Inc,24
CASH,15645,Meta Financial Group Inc,24
CASI,102906,CASI Pharmaceuticals Inc,24
CASS,15647,Cass Information Systems Inc,24
CASY,15649,Caseys General Stores Inc,24
CATB,955559,Catabasis Pharmaceuticals Inc,24
CATC,960968,Cambridge Bancorp,24
CATM,15650,Cardtronics Inc,24
CATY,15651,Cathay General Bancorp,24
CBAN,15655,Colony Bankcorp Inc,24
CBAT,15654,CBAK Energy Technology Inc,24
CBAY,102889,Cymabay Therapeu,24
CBFV,942495,CB Financial Services Inc,24
CBIO,17379,Catalyst Biosciences Inc,24
CBLI,15659,Cleveland BioLabs Inc,24
CBMB,1096508,CBM Bancorp Inc,24
CBMG,102894,Cellular Bi,24
CBNK,1096079,Capital Bancorp,24
CBPO,15665,China Biologic Products Inc,24
CBRL,15666,Cracker Barrel Old Country Store,24
CBSH,15668,Commerce Bancshares Inc,24
CBTX,1054801,CBTX,24
CCAP,1163696,Crescent Capital BDC Inc,24
CCB,1082094,Coastal Financial Corp,24
CCBG,15670,Capital City Bank Group,24
CCCC,1166558,C4 Therapeutics Inc,24
CCD,949616,Calamos Dynamic Convertible,24
CCLP,16221,CSI Compressco LP,24
CCMP,13079,CMC Materials Inc,24
CCNC,962334,Code Chain New Continent Ltd,24
CCNE,15675,CNB Financial Corporation,24
CCOI,15676,Cogent Communications Group Inc,24
CCRC,962328,China Customer Relations Centers Inc,24
CCRN,15677,Cross Country Healthcare Inc,24
CCXI,31013,ChemoCentryx Inc,24
CD,1166429,Chindata Group Holdings Ltd,24
CDAK,1166924,Codiak BioSciences Inc,24
CDEV,976458,Centennial Resource Development Inc,24
CDK,941651,CDK Global Holdings LLC,24
CDLX,1061933,Cardlytics Inc,24
CDMO,16950,Peregrine Pharmaceuticals Inc,24
CDMOP,960646,Peregrine Pharmaceuticals Inc Pref,24
CDNA,940825,Caredx Inc,24
CDNS,6388,Cadence Design Systems Inc,24
CDTX,949617,Cidara Therapeutics Inc,24
CDW,41292,CDW Corp,24
CDXC,52674,Chromadex Corp,24
CDXS,15680,Codexis Inc,24
CDZI,15681,Cadiz Inc,24
CECE,15683,CECO Environmental Corp,24
CELC,1050112,Celcuity LLC,24
CELH,52417,Celsius Holdings Inc,24
CEMI,31014,Chembio Diagnostics Inc,24
CENT,15687,Central Garden & Pet Company,24
CENTA,15688,Central Garden & Pet Company A,24
CENX,39326,Century Aluminum Company,24
CERC,961627,Cerecor Inc,24
CERE,1165415,Cerevel Therapeutics Holdings Inc,24
CERN,13068,Cerner Corp,24
CERS,15691,Cerus Corporation,24
CETX,50929,Cemtrex Inc,24
CETXP,996530,Cemtrex Inc Pref,24
CEVA,15693,CEVA Inc,24
CFB,1143675,CrossFirst Bankshares Inc,24
CFBI,1009353,Community First Bancshares Inc,24
CFBK,15694,CF Bankshares Inc,24
CFFI,15696,C&F Financial Corporation,24
CFFN,15697,Capitol Federal Financial Inc,24
CFIIU,1165659,CF Finance Acquisition Corp II,24
CFMS,955560,ConforMIS Inc,24
CFRX,940767,ContraFect Corp,24
CG,32537,Carlyle Group Inc,24
CGBD,1024872,TCG BDC Inc,24
CGC,1057241,Canopy Growth Corp,24
CGEN,15702,Compugen,24
CGIX,41293,Cancer Genetics Inc,24
CGNX,15703,Cognex Corporation,24
CGO,960569,Calamos Global Total Return,24
CGRO,1165423,Collective Growth Corp,24
CGROU,1158982,Collective Growth Corp,24
CHCI,15704,Comstock Holding Companies Inc,24
CHCO,15705,City Holding Company,24
CHDN,15706,Churchill Downs Incorporated,24
CHEF,15708,The Chefs Warehouse Inc,24
CHEK,948329,Check Cap Ltd,24
CHFS,31067,CHF Solutions Inc,24
CHI,960570,Calamos Convertible Opportunities and ,24
CHKP,6444,Check Point Software Technologies Ltd,24
CHMA,958224,Chiasma Inc,24
CHMG,40054,Chemung Financial Corp,24
CHNG,1137416,Change Healthcare Inc,24
CHNGU,1163710,Change Healthcare Inc,24
CHNR,15716,China Natural Resources Inc,24
CHPM,1163783,CHP Merger Corp,24
CHPMU,1155634,Chp Merger Corp,24
CHRS,15719,Coherus BioSciences Inc,24
CHRW,6426,CH Robinson Worldwide Inc,24
CHSCL,960571,CHS Inc CL Pref,24
CHSCM,960572,CHS Inc CM Pref,24
CHSCN,960573,CHS Inc CN Pref,24
CHSCO,960574,CHS Inc CO Pref,24
CHSCP,960575,CHS Inc Pref,24
CHTR,15722,Charter Communications Inc,24
CHUY,31172,Chuy's Holdings Inc,24
CHW,960576,Calamos Global Dynamic ,24
CHY,960577,Calamos Convertible and High ,24
CIDM,15725,Cinedigm Corp,24
CIH,1156680,China Index Holdings Ltd,24
CIIC,1163774,Ciig Merger Corp,24
CIICU,1155943,Ciig Merger Corp,24
CIICW,1167908,Ciig Merger Equity Warrants ,24
CINF,6507,Cincinnati Financial Corporation,24
CIVB,16072,Civista Bancshares Inc,24
CIZN,15730,Citizens Holding Company,24
CJJD,15731,China Jo-Jo Drugstores Inc,24
CKPT,1017257,Checkpoint Therapeutics Inc,24
CLAR,15538,Clarus Corp,24
CLBK,1073762,Columbia Financial Inc,24
CLBS,24434,Caladrius Biosciences Inc,24
CLCT,15735,Collectors Universe Inc,24
CLDB,52889,Cortland Bancorp,24
CLDX,15736,Celldex Therapeutics Inc,24
CLEU,1159429,China Liberal Education Holdings,24
CLFD,15737,Clearfield Inc,24
CLGN,1053943,Collplant Biotechnologies Ltd,24
CLIR,31018,ClearSign Combustion Corporation,24
CLLS,955561,Cellectis SA,24
CLMT,15739,Calumet Specialty Products Partners,24
CLNE,15740,Clean Energy Fuels Corp,24
CLPS,1076736,CLPS Inc,24
CLPT,50983,Clearpoint Neuro Inc,24
CLRB,941165,Cellectar Biosciences Inc,24
CLRO,15742,ClearOne Inc,24
CLSD,979015,Clearside Biomedical Inc,24
CLSK,1122391,CleanSpark Inc,24
CLSN,13971,Celsion Corp,24
CLVS,15744,Clovis Oncology Inc,24
CLWT,15745,Euro Tech Holdings Company Ltd,24
CLXT,1024878,Calyxt Inc,24
CMBM,1137415,Cambium Networks Corp,24
CMCO,15746,Columbus McKinnon Corporation,24
CMCSA,6516,Comcast Corp,24
CMCT,30900,CIM Commercial Trust Corp,24
CME,13080,CME Group Inc,24
CMLFU,1165592,Cm Life Sciences Inc,24
CMLS,1090474,Cumulus Media Inc Class A,24
CMPI,1164168,Checkmate Pharmaceuticals Inc,24
CMPR,17506,Cimpress NV,24
CMPS,1166232,Compass Pathways Plc,24
CMPX,1167311,Compass Therapeutics Inc,24
CMRX,40981,Chimerix Inc,24
CMTL,15753,Comtech Telecommunications Corp,24
CNBKA,15757,Century Bancorp Inc,24
CNCE,100204,Concert Pharmaceuticals Inc,24
CNDT,994247,Conduent Inc,24
CNET,15759,ZW Data Action Technologies Inc,24
CNFR,958249,Conifer Holding Inc,24
CNNB,960980,Cincinnati Bancorp,24
CNOB,40056,ConnectOne Bancorp Inc,24
CNSL,15763,Consolidated Communications,24
CNSP,1153686,Cns Pharmaceuticals Inc,24
CNST,1084217,Constellation Pharmaceuticals Inc,24
CNTG,1153685,Centogene B V,24
CNTY,15765,Century Casinos Inc,24
CNXC,1167588,Concentrix Corp,24
CNXN,16875,PC Connection Inc,24
COCP,50947,Cocrystal Pharma Inc,24
CODA,52212,Coda Octopus Group Inc,24
CODX,1024873,Co-Diagnostics Inc,24
COFS,1163580,ChoiceOne Financial Services Inc,24
COGT,1073037,Cogent Biosciences Inc,24
COHR,15773,Coherent Inc,24
COHU,15774,Cohu Inc,24
COKE,15775,Coca-Cola Bottling Co Consolidated,24
COLB,15776,Columbia Banking System Inc,24
COLL,951679,Collegium Pharmaceutical Inc,24
COLM,15777,Columbia Sportswear Company,24
COMM,48413,Commscope Hlding,24
CONE,40058,CyrusOne Inc,24
CONN,15779,Conns Inc,24
COOP,52734,Mr. Cooper Group Inc,24
CORE,15781,Core-Mark Holding Company Inc,24
CORT,15782,Corcept Therapeutics Incorporated,24
COST,6443,Costco Wholesale Corp,24
COUP,991169,Coupa Software Inc,24
COWN,15784,Cowen Group Inc,24
CPAH,31019,CounterPath Corp,24
CPHC,15787,Canterbury Park Holding Corporation,24
CPIX,15789,Cumberland Pharmaceuticals Inc,24
CPLP,15791,Capital Product Partners LP,24
CPRT,39327,Copart Inc,24
CPRX,15794,Catalyst Pharmaceuticals Inc,24
CPSH,945072,Cps Technologies,24
CPSI,15795,Computer Programs and Systems Inc,24
CPSS,15797,Consumer Portfolio Services Inc,24
CPST,6517,Capstone Turbine Corp,24
CPTA,41294,Capitala Finance Corp,24
CPTAL,1010835,Capitala Finance Corp ELKS,24
CRAI,15800,CRA International Inc,24
CRBP,949618,Corbus Pharmaceuticals Holding,24
CRDF,31073,Cardiff Oncology Inc,24
CREE,13972,Cree Inc,24
CREG,15807,China Recycling Energy Corp,24
CRESY,15808,Cresud SACIF y A,24
CREX,17069,Creative Realities Inc,24
CRIS,15811,Curis Inc,24
CRMT,15814,Americas Car-Mart Inc,24
CRNC,1156199,Cerence Inc,24
CRNT,15815,Ceragon Networks Ltd,24
CRNX,1088196,Crinetics Pharmaceuticals Inc,24
CRON,1071987,Cronos Group Inc,24
CROX,6414,Crocs Inc,24
CRSA,1123583,Crescent Acquisition Corp Class A,24
CRSAU,1163655,Crescent Acquisition Corp,24
CRSP,992762,Crispr Therapeutics AG,24
CRSR,1166236,Corsair Gaming Inc,24
CRTD,1131017,Creatd Inc,24
CRTO,48404,Criteo Sa,24
CRTX,1129437,Cortexyme Inc,24
CRUS,13973,Cirrus Logic Inc,24
CRVL,15819,CorVel Corp,24
CRVS,968967,Corvus Pharmaceuticals Inc,24
CRWD,1131557,Crowdstrike Holdings Inc,24
CRWS,15821,Crown Crafts Inc,24
CSBR,52598,Champions Oncology Inc,24
CSCO,260,Cisco Systems Inc,24
CSCW,15631,Color Star Technology Co Ltd,24
CSGP,15828,CoStar Group Inc,24
CSGS,15829,CSG Systems International Inc,24
CSII,15830,Cardiovascular Systems Inc,24
CSIQ,15831,Canadian Solar Inc,24
CSOD,15833,Cornerstone OnDemand Inc,24
CSPI,15834,CSP Inc,24
CSQ,960579,Calamos Strategic Total Return,24
CSSE,1031736,Chicken Soup for the Soul Entertainment,24
CSSEP,1136077,Chicken Soup for The Soul Entertainment Inc Pref Series A,24
CSTE,31020,Caesarstone Ltd,24
CSTL,1141821,Castle Biosciences Inc,24
CSTR,989654,Capstar Financial Holdings Inc,24
CSWC,15838,Capital Southwest Corporation,24
CSWI,958821,CSW Industrials Inc,24
CSX,7906,CSX Corporation,24
CTAS,6360,Cintas Corporation,24
CTBI,15840,Community Trust Bancorp Inc,24
CTG,15846,Computer Task Group Incorporated,24
CTHR,15847,Charles & Colvard Ltd,24
CTIB,15848,Yunhong CTI Ltd,24
CTIC,15849,CTi Biopharma Corp,24
CTMX,960580,CytomX Therapeutics Inc,24
CTRE,102910,Caretrust Inc,24
CTRM,1122513,Castor Maritime Inc,24
CTRN,15850,Citi Trends Inc,24
CTSH,6454,Cognizant Technology Solutions Corp Class A,24
CTSO,943140,Cytosorbents Crp,24
CTXR,992681,Citius Pharmaceuticals Inc,24
CTXS,6421,Citrix Systems Inc,24
CUBA,960581,Herzfeld Caribbean Basin,24
CUE,1056454,Cue Biopharma,24
CURI,1163602,Curiositystream Inc.,24
CUTR,15852,Cutera Inc,24
CVAC,1164707,CureVac NV,24
CVBF,15853,CVB Financial Corporation,24
CVCO,15855,Cavco Industries Inc,24
CVCY,15856,Central Valley Community Bancorp,24
CVET,1122330,Covetrus Inc,24
CVGI,15857,Commercial Vehicle Group Inc,24
CVGW,15858,Calavo Growers Inc,24
CVLG,15861,Covenant Logistics Group Inc,24
CVLT,39328,CommVault Systems Inc,24
CVLY,15860,Codorus Valley Bancorp Inc,24
CVV,15862,CVD Equipment Corporation,24
CWBC,15864,Community West Bancshares,24
CWBR,1056501,CohBar Inc,24
CWCO,15865,Consolidated Water Co Ltd,24
CWST,15867,Casella Waste Systems Inc,24
CXDC,15869,China XD Plastics Company Limited,24
CXDO,30756,Crexendo Inc,24
CYAD,954876,Celyad SA,24
CYAN,15872,Cyanotech Corporation,24
CYBE,15873,CyberOptics Corporation,24
CYBR,941652,Cyberark Software Ltd,24
CYCC,15876,Cyclacel Pharmaceuticals Inc,24
CYCN,1127916,Cyclerion Therapeutics Inc,24
CYRN,15841,Cyren Ltd,24
CYRX,50936,Cryoport Inc,24
CYTK,15881,Cytokinetics Inc,24
CZNC,15885,Citizens & Northern Corp,24
CZR,31022,Caesars Entertainment Corporation,24
CZWI,15886,Citizens Community Bancorp Inc,24
DADA,1161535,Dada Nexus Ltd,24
DAIO,15888,Data I/O Corporation,24
DAKT,15889,Daktronics Inc,24
DARE,101909,Dare Bioscience Inc,24
DBDR,1167589,Roman DBDR Tech Acquisition Corp,24
DBDRU,1167139,Roman Dbdr Tech Acq Corp,24
DBVT,943145,DBV Technologies,24
DBX,1072273,Dropbox Inc,24
DCOM,15895,Dime Community Bancshares Inc,24
DCOMP,1163581,Dime Community Bancshares Inc PR,24
DCPH,1050145,Deciphera Pharmaceuticals LLC,24
DCRBU,1167042,Decarbonization Plus,24
DCT,1164644,Duck Creek Technologies Inc,24
DCTH,15896,Delcath Systems Inc,24
DDI,1163029,Doubledown Interactive Co Ltd,24
DDOG,1152784,Datadog Inc,24
DENN,15899,Denny Corp,24
DFFN,51862,Diffusion Pharmaceuticals Inc,24
DFHT,1166482,Deerfield Healthcare Technology Acquisitions Corp,24
DFHTU,1163897,Deerfield Healthcare Technology Acquisitions Corp,24
DFPH,1165660,DFP Healthcare Acquisitions Corp,24
DFPHU,1158981,Dfp Healthcare Acquisitions Corp,24
DGICA,15905,Donegal Group A Inc,24
DGICB,15906,Donegal Group B Inc,24
DGII,15907,Digi International Inc,24
DGLY,15909,Digital Ally Inc,24
DGNS,1167427,Dragoneer Growth Opportunities II ,24
DHC,39243,Diversified Healthcare Trust,24
DHIL,15910,Diamond Hill Investment Group Inc,24
DIOD,15913,Diodes Incorporated,24
DISCA,6382,Discovery Inc Class A,24
DISCB,15914,Discovery Communications B Inc,24
DISCK,15915,Discovery Communications C Inc,24
DISH,6364,DISH Network Corporation,24
DJCO,15917,Daily Journal Corp,24
DKNG,1156548,DraftKings Inc,24
DLHC,31024,DLH Holdings Corp,24
DLPN,1057060,Dolphin Entertainment Inc,24
DLTH,961629,Duluth Holdings Inc,24
DLTR,14776,Dollar Tree Inc,24
DMAC,1114565,DiaMedica Therapeutics Inc,24
DMLP,15923,Dorchester Minerals LP,24
DMRC,15925,Digimarc Corporation,24
DMTK,1052946,DermTech Inc,24
DNKN,13977,Dunkin Brands Group Inc,24
DNLI,1055910,Denali Therapeutics Inc,24
DOCU,1073599,DocuSign Inc,24
DOGZ,1057018,Dogness International Corp Class A,24
DOMO,1082075,Domo Inc,24
DOOO,1096063,BRP Inc,24
DORM,15927,Dorman Products Inc,24
DOX,39189,Amdocs Ltd,24
DOYU,1141590,DouYu International Holdings,24
DRAD,15930,Digirad Corp,24
DRADP,1163784,Digirad Corp PR,24
DRIO,50995,DarioHealth Corp,24
DRNA,100231,Dicerna Pharmaceuticals Inc,24
DRRX,15935,Durect Corporation,24
DRTT,1163558,Dirtt Environmen,24
DSACU,1167134,Duddell Street Acquisition Corp,24
DSGX,15939,Descartes Systems Group Inc,24
DSKE,960616,Daseke Inc,24
DSPG,15940,DSP Group Inc,24
DSWL,15942,Deswell Industries Inc,24
DTEA,953816,Davidstea Inc,24
DTIL,1123797,Precision BioSciences Inc,24
DTSS,976550,Datasea Inc,24
DUO,1153445,Fangdd Network Group Ltd,24
DUOT,1123602,Duos Technologies Group Inc,24
DVAX,15947,Dynavax Technologies Corporation,24
DWSN,15950,Dawson Geophysical Company,24
DXCM,15951,DexCom Inc,24
DXLG,15751,Destination XL Group Inc,24
DXPE,15952,DXP Enterprises Inc,24
DXYN,15953,The Dixie Group Inc,24
DYAI,52668,Dyadic International Inc,24
DYN,1166009,Dyne Therapeutics Inc,24
DYNT,15956,Dynatronics Corporation,24
DZSI,17611,DZS Inc,24
EA,6472,Electronic Arts Inc,24
EAR,1166960,Eargo Inc,24
EARS,940826,Auris Medical Holding Ltd,24
EAST,1031391,Eastside Distilling Inc,24
EBAY,256,eBay Inc,24
EBAYL,1129471,eBay Inc ELKS,24
EBIX,15959,Ebix Inc,24
EBMT,15960,Eagle Bancorp Montana Inc,24
EBON,1162796,Ebang International Holdings,24
EBSB,15961,Meridian Interstate Bancorp Inc,24
EBTC,15962,Enterprise Bancorp Inc,24
ECHO,15965,Echo Global Logistics Inc,24
ECOL,15966,US Ecology Inc,24
ECOR,1081599,Electrocore LLC,24
ECPG,15967,Encore Capital Group Inc,24
EDAP,15972,EDAP TMS SA,24
EDIT,968968,Editas Medicine Inc,24
EDRY,1081559,EuroDry Ltd,24
EDSA,49336,Edesa Biotech Inc,24
EDTK,1163358,Skillful Craftsman Education Tech,24
EDUC,15977,Educational Development Corporation,24
EEFT,15978,Euronet Worldwide Inc,24
EFOI,940827,Energy Focu,24
EFSC,15982,Enterprise Financial Services,24
EGAN,15984,eGain Corporation,24
EGBN,15985,Eagle Bancorp Inc,24
EGLE,15987,Eagle Bulk Shipping Inc,24
EGOV,15988,NIC Inc,24
EGRX,100209,Eagle Pharmaceuticals Inc,24
EH,1155902,Ehang Holdings Ltd,24
EHTH,15989,eHealth Inc,24
EIDX,1081660,Eidos Therapeutics Inc,24
EIGI,48415,Endurance International Group Holdings Inc,24
EIGR,100200,Eiger Biopharmaceuticals Inc,24
EKSO,51021,Ekso Bionics Holdings Inc,24
ELOX,51018,Eloxx Pharmaceuticals Inc,24
ELSE,15996,Electro-Sensors Inc,24
ELTK,15997,Eltek Ltd,24
ELYS,1131387,Elys Game Technology Corp,24
EMCF,15998,Emclaire Financial Corp,24
EMKR,16001,EMCORE Corporation,24
EML,16002,Eastern Co,24
ENDP,16004,Endo International PLC,24
ENG,16005,ENGlobal Corporation,24
ENLV,940840,Enlivex Therapeutics Ltd,24
ENOB,960990,Enochian Biosciences Inc,24
ENPH,31028,Enphase Energy Inc,24
ENSG,16008,The Ensign Group Inc,24
ENTA,40984,Enanta Pharmaceuticals Inc,24
ENTG,13978,Entegris Inc,24
ENTX,1061142,Entera Bio Ltd,24
EOLS,1061935,Evolus Inc,24
EOSE,1163373,Eos Energy Enterprises Inc,24
EPAY,16013,Bottomline Technologies Inc,24
EPIX,955850,ESSA Pharma Inc,24
EPSN,52750,Epsilon Energy Ltd,24
EPZM,40985,Epizyme Inc,24
EQ,1096242,Equillium Inc,24
EQBK,961630,Equity Bancshares Inc,24
EQIX,13067,Equinix Inc,24
EQOS,1123798,Diginex Ltd,24
ERES,1166483,East Resources Acquisition Co,24
ERESU,1163485,East Resources Acquisition Co,24
ERIC,22047,Telefonaktiebolaget LM Ericsson B ADR,24
ERIE,16017,Erie Indemnity Company,24
ERII,16018,Energy Recovery Inc,24
ERYP,1055043,Erytech Pharma SA ADR,24
ESBK,16022,Elmira Savings Bank,24
ESCA,16023,Escalade Incorporated,24
ESEA,16024,Euroseas Ltd,24
ESGR,16025,Enstar Group Limited,24
ESGRP,1088711,Enstar Group Ltd Pref Series D,24
ESLT,39122,Elbit Systems Ltd,24
ESPR,41302,Esperion Th,24
ESQ,1014085,Esquire Financial Holdings Inc,24
ESSA,16030,ESSA Bancorp Inc,24
ESSC,1163652,East Stone Acquisition Corp,24
ESSCU,1163625,East Stone Acquisition Corp,24
ESTA,1084215,Establishment Labs Holdings Inc,24
ESXB,40987,Community Bankers Trust Corp,24
ETAC,1166484,E.Merge Technology Acquisition Corp,24
ETACU,1165661,EMerge Technology Acquisition Corp,24
ETNB,1153684,89bio Inc,24
ETON,1096500,Eton Pharmaceuticals Inc,24
ETSY,949620,Etsy Inc,24
ETTX,1096114,Entasis Therapeutics Holdings Inc,24
EVBG,989531,Everbridge Inc,24
EVER,1081602,EverQuote Inc Class A,24
EVFM,942666,Evofem Biosciences Inc,24
EVGN,101862,Evogene,24
EVK,30750,Ever-Glory International Group Inc,24
EVLO,1073473,Evelo Biosciences Inc,24
EVOK,41303,Evoke Pharma Inc,24
EVOL,16036,Evolving Systems Inc,24
EVOP,1075231,EVO Payments Inc,24
EWBC,16037,East West Bancorp Inc,24
EXAS,16040,EXACT Sciences Corporation,24
EXC,7949,Exelon Corporation,24
EXEL,32545,Exelixis Inc,24
EXFO,16042,EXFO Inc,24
EXLS,16044,ExlService Holdings Inc,24
EXPC,1163663,Experience Investment Corp,24
EXPCU,1152783,Experience Investment Corp,24
EXPD,6468,Expeditors International of Washington Inc,24
EXPE,6449,Expedia Inc,24
EXPI,1077150,eXp World Holdings Inc,24
EXPO,16045,Exponent Inc,24
EXTR,6508,Extreme Networks Inc,24
EYE,1052916,National Vision Holdings Inc,24
EYEG,958226,EyeGate Pharmaceuticals Inc,24
EYEN,1061139,Eyenovia Inc,24
EYES,942659,Second Sight Medical Products,24
EYPT,16973,Eyepoint Pharmaceuticals Inc,24
EZPW,16048,EZCORP Inc,24
FAMI,1065447,Farmmi Inc,24
FANG,40062,Diamondback Energy Inc,24
FANH,15728,Fanhua Inc,24
FARM,16052,Farmer Bros. Co,24
FARO,16053,FARO Technologies Inc,24
FAST,6409,Fastenal Company,24
FAT,1052404,FAT Brands Inc,24
FATBP,1163898,FAT Brands Inc,24
FATE,41304,Fate Therapeutics Inc,24
FB,26490,Facebook Inc,24
FBIO,15758,Fortress Biotech Inc,24
FBIOP,1055045,Fortress Biotech Inc Pref Series A,24
FBIZ,16054,First Business Financial Services,24
FBMS,16056,The First Bancshares Inc,24
FBNC,16057,First Bancorp,24
FBRX,1006461,Forte Biosciences Inc,24
FBSS,16060,Fauquier Bankshares Inc,24
FCAC,1167590,Falcon Capital Acquisition Corp,24
FCACU,1166486,Falcon Capital Acquisition Corp,24
FCAP,16062,First Capital Inc,24
FCBC,16063,First Community Bancshares Inc,24
FCBP,1057338,First Choice Bancorp,24
FCCO,16064,First Community Corporation,24
FCCY,16065,1st Constitution Bancorp,24
FCEL,16066,FuelCell Energy Inc,24
FCFS,16068,FirstCash Inc,24
FCNCA,16070,First Citizens BancShares Inc,24
FCRD,24381,First Eagle Alternative Capital BDC Inc,24
FDBC,1052355,Fidelity D&D Bancorp Inc,24
FDUS,960591,Fidus Investment Corp,24
FEIM,16077,Frequency Electronics Inc,24
FELE,16078,Franklin Electric Co Inc,24
FENC,1050110,Fennec Pharmaceuticals Inc,24
FEYE,41305,FireEye Inc,24
FFBC,16080,First Financial Bancorp,24
FFBW,1052371,Ffbw Inc,24
FFHL,16087,Fuwei Films Holdings Co Ltd,24
FFIC,16088,Flushing Financial Corporation,24
FFIN,16089,First Financial Bankshares Inc,24
FFIV,13763,F5 Networks Inc,24
FFNW,16094,First Financial Northwest Inc,24
FFWM,942496,First Foundation Inc,24
FGBI,960592,First Guaranty Bancshares Inc,24
FGEN,942658,FibroGen Inc,24
FHB,986077,First Hawaiian Inc,24
FHTX,1167034,Foghorn Therapeutics Inc,24
FIBK,16096,First Interstate BancSystem Inc,24
FIII,1166485,Forum Merger III Corp,24
FIIIU,1165398,Forum Merger III Corp,24
FISI,16099,Financial Institutions Inc,24
FISV,6370,Fiserv Inc,24
FITB,6358,Fifth Third Bancorp,24
FITBI,960593,Fifth Third Bancorp ADR,24
FIVE,31033,Five Below Inc,24
FIVN,100183,Five9 Inc,24
FIXX,1073036,Homology Medicines Inc,24
FIZZ,16100,National Beverage Corp,24
FLDM,16101,Fluidigm Corporation,24
FLEX,6465,Flex Ltd,24
FLGT,991170,Fulgent Genetics Inc,24
FLIC,16102,First of Long Island Corp,24
FLIR,8934,FLIR Systems Inc,24
FLL,30761,Full House Resorts Inc,24
FLMN,1062876,Falcon Minerals Corp Class A,24
FLNT,989653,Fluent Inc,24
FLRZ,1156721,F5 Finishes Inc,24
FLUX,52244,Flux Power Holdings Inc,24
FLWS,16105,1-800 FLOWERS.COM Inc,24
FLXN,100224,Flexion Theraptc,24
FLXS,16106,Flexsteel Industries Inc,24
FMAO,961006,Farmers & Merchants Bancorp Inc,24
FMBH,102896,First Mid Illinois Bancshares Inc,24
FMBI,16107,First Midwest Bancorp Inc,24
FMNB,16110,Farmers National Banc Corp,24
FMTX,1162592,Forma Therapeutics Holdings Inc,24
FNCB,52826,FNCB Bancorp Inc,24
FNHC,17324,Fednat Holding Co,24
FNKO,1053090,Funko Inc,24
FNLC,16114,First Bancorp Inc,24
FNWB,945077,First Northwest Bancorp,24
FOCS,1080050,Focus Financial Partners Inc,24
FOLD,16116,Amicus Therapeutics Inc,24
FONR,16117,Fonar Corporation,24
FORD,16118,Forward Industries Inc,24
FORM,16119,FormFactor Inc,24
FORR,16120,Forrester Research Inc,24
FORTY,16121,Formula Systems 1985 Ltd ADR,24
FOSL,32395,Fossil Group Inc,24
FOX,1123484,Fox Corp Class B,24
FOXA,1123483,Fox Corp Class A,24
FOXF,41307,Fox Factory Holding Corp,24
FPAY,993272,FlexShopper Inc,24
FPRX,41306,Five Prime Therapeutics Inc,24
FRAF,16128,Franklin Financial Services Corp,24
FRAN,16123,Francescas Holdings,24
FRBA,48416,First Bank,24
FRBK,16124,Republic First Bancorp Inc,24
FREE,1131006,Whole Earth Brands Inc,24
FREQ,1152989,Frequency Therapeutics Inc,24
FRG,31071,Franchise Group Inc,24
FRGAP,1166487,Franchise Group Inc,24
FRGI,31034,Fiesta Restaurant Group Inc,24
FRHC,1123899,Freedom Holding Corp,24
FRLN,1164169,Freeline Therapeutics Holdings Plc,24
FRME,16127,First Merchants Corporation,24
FROG,1165970,Jfrog Ltd,24
FRPH,16865,Frp Holdings Ord,24
FRPT,942669,Freshpet Inc,24
FRSX,1013465,Foresight Autonomous Holdings Ltd ADR,24
FRTA,992763,Forterra Inc,24
FSBW,31035,FS Bancorp Inc,24
FSDC,1164708,Fs Development Corp,24
FSEA,1163717,First Seacoast Bancorp,24
FSFG,16133,First Savings Financial Group Inc,24
FSLR,13569,First Solar Inc,24
FSRV,1163697,Finserv Acquisition Corp,24
FSRVU,1153692,Finserv Acquisition Corp,24
FSTR,16138,LB Foster Company,24
FSTX,977678,FStar Therapeutics Inc,24
FSV,953817,FirstService Corp,24
FTCVU,1167896,Fintech Acquisition Corp V,24
FTDR,1096042,Frontdoor Inc,24
FTEK,16140,Fuel Tech Inc,24
FTFT,17241,Future Fintech Group Inc,24
FTHM,1163492,Fathom Holdings Inc,24
FTIVU,1166435,Fintech Acquisition IV Corp,24
FTNT,16141,Fortinet Inc,24
FTOC,1167000,FTAC Olympus Acquisition Corp,24
FTOCU,1165510,Ftac Olympus Acquisition,24
FULC,1141593,Fulcrum Therapeutics Inc,24
FULT,16145,Fulton Financial Corporation,24
FUNC,16146,First United Corporation,24
FUND,960597,Sprott Focus Trust,24
FUSB,17461,First US Bancshares Inc,24
FUSN,1163027,Fusion Pharmaceuticals Inc,24
FUTU,1123144,Futu Holdings Ltd,24
FUV,1050151,Arcimoto Inc,24
FVAM,1166967,5 01 Acquisition Corp,24
FVCB,961021,FVCBankcorp Inc,24
FVE,20398,Five Star Quality Care Inc,24
FWONA,16514,Liberty Media Formula One Corp A,24
FWONK,940831,Liberty Media Formula One Corp C,24
FWP,943147,Forward Pharma A S,24
FWRD,16148,Forward Air Corporation,24
FXNC,1123910,First National Corp,24
GABC,16151,German American Bancorp Inc,24
GAIA,16154,Gaia Inc,24
GAIN,24369,Gladstone Investment Corporation,24
GAINL,1129472,Gladstone Investment Corp Pref Series E,24
GAINM,989656,Gladstone Investment Corp,24
GALT,31036,Galectin Therapeutics Inc,24
GAN,1160912,Gan Ltd,24
GASS,16157,StealthGas Inc,24
GBCI,16158,Glacier Bancorp Inc,24
GBDC,24375,Golub Capital BDC Inc,24
GBIO,1162159,Generation Bio Co,24
GBLI,16159,Global Indemnity PLC,24
GBLIL,1008725,Global Indemnity Ltd ELKS,24
GBT,958250,Global Blood Therapeutics Inc,24
GCBC,16161,Greene County Bancorp Inc,24
GCMG,1114557,GCM Grosvenor Inc,24
GDEN,16481,Golden Entertainment Inc,24
GDRX,1166237,Goodrx Holdings Inc,24
GDS,992966,GDS Holdings Ltd,24
GDYN,1096423,Grid Dynamics Holdings Inc,24
GEC,16824,Great Elm Capital Group Inc,24
GECC,993177,Great Elm Capital Corp,24
GECCL,1052734,Great Elm Capital Corp,24
GENC,16164,Gencor Industries Inc,24
GENE,16165,Genetic Technologies Ltd,24
GEOS,16854,Geospace Technologies Corporation,24
GERN,16169,Geron Corporation,24
GEVO,16171,Gevo Inc,24
GFED,16172,Guaranty Federal Bancshares Inc,24
GFN,16173,General Finance Corporation,24
GFNCP,1058125,General Finance Corp Series C Pref,24
GGAL,32371,Grupo Financiero Galicia SA ADR,24
GH,1096128,Guardant Health Inc,24
GHIV,1163737,Gores Holdings IV Inc,24
GHIVU,1156613,Gores Holdings IV Inc,24
GHSI,1128919,Guardion Health Sciences Inc,24
GIFI,16176,Gulf Island Fabrication Inc,24
GIGM,16178,Giga Media Ltd,24
GIII,16179,G-III Apparel Group Ltd,24
GILD,6365,Gilead Sciences Inc,24
GILT,16180,Gilat,24
GLAD,24374,Gladstone Capital Corporation,24
GLBS,16184,Globus Maritime Ltd,24
GLBZ,16185,Glen Burnie Bancorp,24
GLDD,16188,Great Lakes Dredge & Dock,24
GLG,41297,TD Holdings Inc,24
GLIBA,31048,GCI Liberty Inc Class A,24
GLIBP,40077,GCI Liberty Inc Pref Series A,24
GLMD,100192,Galmed Pharmaceuticals Ltd,24
GLNG,16190,Golar LNG Limited,24
GLPG,953048,Galapagos NV ADR,24
GLPI,42582,Gaming & Leisure Properties,24
GLRE,16192,Greenlight Capital Re Ltd,24
GLSI,1163493,Greenwich Lifesciences Inc,24
GLTO,1167063,Galecto Inc,24
GLUU,16193,Glu Mobile Inc,24
GLYC,100221,GlycoMimetics Inc,24
GMAB,941908,Genmab AS,24
GMBL,1127835,Esports Entertainment Group Inc,24
GMDA,1096135,Gamida Cell Ltd,24
GMLP,16196,Golar LNG Partners LP,24
GMLPP,1058126,Golar LNG Partners LP Series A Pref,24
GNCA,100225,Genocea Biosciences Inc,24
GNFT,1123799,Genfit,24
GNLN,1127926,Greenlane Holdings Inc,24
GNMK,16198,GenMark Diagnostics Inc,24
GNPX,1066615,Genprex Inc,24
GNRS,1165663,Greenrose Acquisition Corp,24
GNRSU,1156761,Greenrose Acquisition Corp,24
GNSS,16541,Genasys Inc,24
GNTX,16200,Gentex Corporation,24
GNTY,1010528,Guaranty Bancshares Inc,24
GNUS,50840,Genius Brands International Inc,24
GO,1137413,Grocery Outlet Holding Corp,24
GOCO,1163277,Gohealth Llc,24
GOGL,17494,Golden Ocean Group Ltd,24
GOGO,41308,Gogo Inc,24
GOOD,16204,Gladstone Commercial Corporation,24
GOODM,1058127,Gladstone Commercial Corp Series D Pref,24
GOODN,960606,Gladstone Commercial Corp Pref,24
GOOG,100160,Alphabet Inc Class C,24
GOOGL,6369,Alphabet Inc Class A,24
GOSS,1116151,Gossamer Bio Inc,24
GOVX,52412,GeoVax Labs Inc,24
GP,1165664,GreenPower Motor Company Inc,24
GPP,958230,Green Plains Partners LP,24
GPRE,16208,Green Plains Renewable Energy Inc,24
GPRO,102883,GoPro Inc,24
GRAY,1166403,Graybug Vision Inc,24
GRBK,15561,Green Brick Partners Inc,24
GRCY,1166488,Greencity Acquisition Corp,24
GRCYU,1163486,Greencity Acquisition Corp,24
GRFS,16209,Grifols SA ADR,24
GRIF,16210,Griffin Industrial Realty Inc,24
GRIL,1163775,Muscle Maker Inc,24
GRIN,1084845,Grindrod Shipping Holdings Ltd,24
GRMN,6442,Garmin Ltd,24
GRNQ,1095118,GreenPro Capital Corp,24
GRNV,1163639,Greenvision Acquisition Corp.,24
GRNVU,1155636,Greenvision Acquisition Corp,24
GROW,16213,US Global Investors Inc,24
GRPN,32546,Groupon Inc,24
GRSVU,1164646,Gores Holdings V Inc,24
GRTS,1096115,Gritstone Oncology Inc,24
GRTX,1153687,Galera Therapeutics Inc,24
GRVY,16216,Gravity Co Ltd,24
GRWG,1097533,GrowGeneration Corp,24
GSBC,16218,Great Southern Bancorp Inc,24
GSHD,1073210,Goosehead Insurance Inc,24
GSIT,16220,GSI Technology Inc,24
GSKY,1075234,GreenSky LLC,24
GSM,16222,Ferroglobe PLC,24
GSMG,1096065,Glory Star New Media Group Holdings Ltd,24
GSUM,989657,Gridsum Holding Inc,24
GT,265,The Goodyear Tire & Rubber Company,24
GTEC,1090475,Greenland Acquisition Corp,24
GTH,1162593,Genetron Holdings Ltd,24
GTHX,1010656,G1 Therapeutics Inc,24
GTIM,16225,Good Times Restaurants Inc,24
GTLS,16227,Chart Industries Inc,24
GTYH,993273,GTY Technology Holdings Inc A,24
GURE,16231,Gulf Resources Inc,24
GVP,30788,GSE Systems Inc,24
GWAC,1167897,Good Works Acquisition Corp,24
GWGH,941655,GWG Holdings Inc,24
GWPH,40989,GW Pharmaceuticals PLC ADR,24
GWRS,52757,Global Water Resources Inc,24
GXGX,1163751,GX Acquisition Corp,24
GXGXU,1131056,GX Acquisition Corp,24
GYRO,16232,Gyrodyne Company of America Inc,24
HA,16233,Hawaiian Holdings Inc,24
HAACU,1167591,Health Assurance Acquisition Corp,24
HAFC,16234,Hanmi Financial Corporation,24
HAIN,13979,The Hain Celestial Group Inc,24
HALL,16235,Hallmark Financial Services Inc,24
HALO,16236,Halozyme Therapeutics Inc,24
HAPP,1153249,Happiness Biotech Group Ltd,24
HARP,1121161,Harpoon Therapeutics Inc,24
HAS,8351,Hasbro Inc,24
HAYN,16240,Haynes International Inc,24
HBAN,6493,Huntington Bancshares Incorporated,24
HBANN,986297,Huntington Bancshares Inc,24
HBANO,1058128,Huntington Bancshares Inc Series D ADR,24
HBCP,16241,Home Bancorp Inc,24
HBIO,16243,Harvard Bioscience Inc,24
HBMD,31038,Howard Bancorp Inc,24
HBNC,16244,Horizon Bancorp,24
HBP,48402,Huttig Building,24
HBT,1153038,Hbt Financial Inc,24
HCAC,1123581,Hennessy Capital Acquisition Corp IV Class A,24
HCACU,1165432,Hennessy Capital Acquisition Corp IV,24
HCAP,40991,Harvest Capital Credit Corporation,24
HCAPZ,1163096,Harvest Capital Credit Notes,24
HCAT,1142294,Health Catalyst Inc,24
HCCH,1084835,HL Acquisitions Corp,24
HCCHU,1165666,HL Acquisitions Corp,24
HCCI,16247,Heritage-Crystal Clean Inc,24
HCKT,16249,The Hackett Group Inc,24
HCM,968969,Hutchison China MediTech Ltd,24
HCSG,16251,Healthcare Services Group Inc,24
HDS,41309,HD Supply Holdings Inc,24
HDSN,16253,Hudson Technologies Inc,24
HEAR,31055,Turtle Beach Corp,24
HEC,1165665,Hudson Executive Investment Corp,24
HECCU,1162163,Hudson Executive Investment Corp,24
HEES,16255,H&E Equipment Services Inc,24
HELE,16256,Helen of Troy Ltd,24
HEPA,50982,Hepion Pharmaceuticals Inc,24
HFBL,16260,Home Federal Bancorp Louisiana,24
HFEN,1167314,HF Enterprises Inc,24
HFFG,1046340,Hf Foods Group Inc,24
HFWA,16262,Heritage Financial Corporation,24
HGBL,1129174,Heritage Global Inc,24
HGEN,40070,Humanigen Inc,24
HGSH,16264,China HGS Real Estate Inc,24
HHR,1073209,HeadHunter Group PLC ADR,24
HIBB,16266,Hibbett Sports Inc,24
HIFS,16267,Hingham Institution for Savings,24
HIHO,16268,Highway Holdings Limited,24
HIMX,16270,Himax Technologies Inc,24
HJLI,1077004,Hancock Jaffe Laboratories,24
HKIT,1165511,Hitek Global,24
HLG,955852,Hailiang Education Group Inc,24
HLIO,17209,Helios Technologies Inc,24
HLIT,16273,Harmonic Inc,24
HLNE,997108,Hamilton Lane Inc,24
HLXA,1166978,Helix Acquisition Corp,24
HMHC,48419,Houghton Mifflin Harcourt Co,24
HMNF,16275,HMN Financial Inc,24
HMST,31040,HomeStreet Inc,24
HMSY,16278,HMS Holdings Corp,24
HMTV,40992,Hemisphere Media Group Inc,24
HNNA,101916,Hennessy Ad,24
HNRG,16280,Hallador Energy Company,24
HOFT,16282,Hooker Furniture Corporation,24
HOFV,1072283,Hall of Fame Resort Entertainment Co,24
HOLI,16285,Hollysys Automation Technologies Ltd,24
HOLUU,1164648,Holicity Inc,24
HOLX,6515,Hologic Inc,24
HOMB,16287,Home BancShares Inc,24
HONE,985778,HarborOne Bancorp Inc,24
HOOK,1127925,Hookipa Pharma Inc,24
HOPE,15523,Hope Bancorp Inc,24
HOTH,1122730,Hoth Therapeutics Inc,24
HOVNP,1058129,Hovnanian Enterprises Inc ADR,24
HPK,16857,Highpeak Energy Acquisition Corp,24
HQI,1081650,Hirequest Inc,24
HQY,940768,Healthequity Inc,24
HRMY,1164710,Harmony Biosciences Holdings,24
HROW,40067,Harrow Health Inc,24
HRTX,100207,Heron Therapeuti,24
HRZN,16293,Horizon Technology Finance,24
HSAQ,1164651,Health Sciences Acquisitions Corp,24
HSDT,1073491,Helius Medical Technologies Inc Class A,24
HSIC,6405,Henry Schein Inc,24
HSII,16295,Heidrick & Struggles International,24
HSKA,16296,Heska Corporation,24
HSON,16265,Hudson Global Inc,24
HST,7927,Host Hotels & Resorts Inc,24
HSTM,16299,HealthStream Inc,24
HSTO,41298,Histogen Inc,24
HTBI,31044,HomeTrust Bancshares Inc,24
HTBK,16301,Heritage Commerce Corp,24
HTBX,41310,Heat Biologics Inc,24
HTGM,951680,HTG Molecular Diagnostics Inc,24
HTHT,16304,Huazhu Group Ltd,24
HTIA,1163702,Healthcare Trust Inc PR,24
HTLD,16305,Heartland Express Inc,24
HTLF,16306,Heartland Financial USA Inc,24
HUBG,16308,Hub Group Inc,24
HUGE,1091143,FSD Pharma Inc Class B,24
HUIZ,1156720,Huize Holding Ltd,24
HURC,16309,Hurco Companies Inc,24
HURN,16310,Huron Consulting Group Inc,24
HUSN,1031390,Hudson Capital Inc,24
HVBC,995096,HV Bancorp Inc,24
HWBK,16312,Hawthorn Bancshares Inc,24
HWC,16242,Hancock Whitney Corp,24
HWCC,16313,Houston Wire & Cable Company,24
HWKN,16314,Hawkins Inc,24
HX,1052914,Hexindai Inc,24
HYAC,1163640,Haymaker Acquisition Corp II,24
HYACU,1052913,Haymaker Acquisition II Corp,24
HYGO,1166360,Hygo Energy Transition Ltd,24
HYMC,1072285,Hycroft Mining Holding Corporation,24
HYRE,1082134,HyreCar Inc,24
HZNP,16316,Horizon Pharma PLC,24
IAC,6447,IAC/InterActiveCorp,24
IART,16317,Integra LifeSciences Holdings,24
IBCP,16319,Independent Bank Corporation,24
IBEX,1073097,IBEX Ltd,24
IBKR,16321,Interactive Brokers Group Inc,24
IBOC,16322,International Bancshares Corporation,24
IBTX,40994,Independent Bank Group Inc,24
ICAD,16323,icad inc,24
ICBK,945071,County Bancorp,24
ICCC,16324,ImmuCell Corporation,24
ICCH,999055,ICC Holdings Inc,24
ICFI,16325,ICF International Inc,24
ICHR,994018,Ichor Holdings Ltd,24
ICLK,1056455,iClick Interactive Asia Group,24
ICLR,16327,ICON PLC,24
ICMB,100218,Investcorp Credit Management BDC Inc,24
ICON,32386,Iconix Brand Group Inc,24
ICPT,40065,Intercept Pharmaceuticals Inc,24
ICUI,16329,ICU Medical Inc,24
IDCC,16330,InterDigital Inc,24
IDEX,31077,Ideanomics Inc,24
IDN,30801,Intellicheck Mobilisa Inc,24
IDRA,16332,Idera Pharmaceuticals Inc,24
IDXG,16885,Interpace Diagnostics Group Inc,24
IDXX,16336,IDEXX Laboratories Inc,24
IDYA,1131057,Ideaya Biosciences Inc,24
IEA,991229,Infrastructure and Energy Alternatives Inc,24
IEC,30802,IEC Electronics Corp,24
IEP,16337,Icahn Enterprises LP,24
IESC,16338,IES Holdings Inc,24
IFMK,996146,iFresh Inc,24
IFRX,1054800,InflaRx N.V.,24
IGACU,1166758,IG Acquisition Corp,24
IGIC,1073490,International General Insurance Holdings Ltd,24
IGMS,1152339,IGM Biosciences Inc,24
IHRT,1131121,iHeartMedia Inc Class A,24
III,16344,Information Services Group Inc,24
IIIN,16345,Insteel Industries Inc,24
IIIV,1081674,i3 Verticals Inc,24
IIN,16347,IntriCon Corporation,24
IIVI,16348,II-VI Incorporated,24
IKNX,16350,Ikonics Corporation,24
IKT,1167064,Inhibikase Therapeutics Inc,24
ILMN,13081,Illumina Inc,24
ILPT,1057998,Industrial Logistics Properties Trust,24
IMAB,1156244,I Mab,24
IMAC,1121890,Imac Holdings Inc,24
IMBI,17527,iMedia Brands Inc,24
IMGN,16351,ImmunoGen Inc,24
IMKTA,16353,Ingles Markets Incorporated,24
IMMP,31056,Immutep Ltd ADR,24
IMMR,16354,Immersion Corporation,24
IMNM,1166430,Immunome Inc,24
IMOS,16356,ChipMOS Technologies Inc,24
IMRA,1158866,Imara Inc,24
IMRN,1013393,Immuron Ltd ADR,24
IMTE,1031664,Integrated Media Technology Ltd,24
IMTX,1163899,Immatics NV,24
IMUX,102927,Immunic Inc,24
IMVT,1160904,Immunovant Inc,24
IMXI,999053,International Money Express Inc,24
INAB,1167240,In8bio Inc,24
INAQU,1165881,Insu Acquisition Corp II,24
INBK,40068,First Internet Bancorp,24
INBKL,991228,First Internet Bancorp,24
INBX,1165305,Inhibrx Inc,24
INCY,16360,Incyte Corporation,24
INDB,16361,Independent Bank,24
INFI,16363,Infinity Pharmaceuticals Inc,24
INFN,16364,Infinera Corporation,24
INGN,100222,Inogen Inc,24
INM,1167593,InMed Pharmaceuticals Inc,24
INMB,1121783,INmune Bio Inc,24
INMD,1142316,InMode Ltd,24
INO,30810,Inovio Pharmaceuticals Inc,24
INOD,16369,Innodata Inc,24
INOV,945665,Inovalon Holdings Inc,24
INPX,101908,Inpixon,24
INSE,943133,Inspired Entertainment Inc,24
INSG,16775,Inseego Corp,24
INSM,16371,Insmed Inc,24
INTC,251,Intel Corporation,24
INTG,16374,The Intergroup Corporation,24
INTU,6448,Intuit Inc,24
INTZ,1166739,Intrusion Inc,24
INVA,17346,Innoviva Inc,24
INVE,16378,Identive Group Inc,24
INVO,1130923,INVO Bioscience Inc,24
INZY,1163487,Inozyme Pharma Inc,24
IONS,13982,Ionis Pharmaceuticals Inc,24
IOSP,16381,Innospec Inc,24
IOVA,52812,Iovance Biotherapeutics Inc,24
IPAR,16382,Inter Parfums Inc,24
IPDN,40996,Professional Diversity Network Inc,24
IPGP,13981,IPG Photonics Corporation,24
IPHA,1153095,Innate Pharma,24
IPHI,21165,Inphi Corporation,24
IPLDP,960040,Interstate Power and Light Co,24
IPWR,48406,Ideal Power Inc,24
IQ,1073098,iQIYI Inc,24
IRBT,16390,iRobot Corporation,24
IRCP,15436,IRSA Propiedades Comerciales SA ADR,24
IRDM,16391,Iridium Communications Inc,24
IRIX,16394,IRIDEX Corporation,24
IRMD,940829,Iradimed Co,24
IROQ,16395,IF Bancorp Inc,24
IRTC,992765,iRhythm Technologies Inc,24
IRWD,16396,Ironwood Pharmaceuticals Inc,24
ISBC,16397,Investors Bancorp Inc,24
ISEE,41336,IVERIC bio Inc,24
ISIG,16399,Insignia Systems Inc,24
ISNS,16401,Image Sensing Systems Inc,24
ISRG,6393,Intuitive Surgical Inc,24
ISSC,16403,Innovative Solutions and Support,24
ISTR,103935,Investar Holding Corp,24
ITAC,1167592,Industrial Tech Acquisitions Inc,24
ITACU,1165593,Industrial Tech Acquisitions Inc,24
ITCI,100223,Intracellular Th,24
ITI,30818,Iteris Inc,24
ITIC,16406,Investors Title Company,24
ITMR,1123306,Itamar Medical Ltd,24
ITOS,1163488,Iteos Therapeutics Inc,24
ITRI,13983,Itron Inc,24
ITRM,1075485,Iterum Therapeutics PLC,24
ITRN,16408,Ituran Location and Control Ltd,24
IVA,1163253,Inventiva Sa,24
IVAC,16409,Intevac Inc,24
IZEA,52478,IZEA Inc,24
JACK,16412,Jack In The Box Inc,24
JAGX,953049,Jaguar Health Inc,24
JAKK,16414,JAKKS Pacific Inc,24
JAMF,1163350,Jamf Holding,24
JAN,15440,Janone Inc,24
JAQCU,1166015,Jupiter Acquisition Corp,24
JAZZ,16417,Jazz Pharmaceuticals PLC,24
JBHT,13082,JB Hunt Transport Services Inc,24
JBLU,6403,JetBlue Airways Corp,24
JBSS,16418,John B Sanfilippo & Son Inc,24
JCICU,1166740,Jack Creek Investment Corp,24
JCOM,16420,j2 Global Inc,24
JCS,16421,Communications Systems Inc,24
JCTCF,16422,Jewett-Cameron Trading Company Ltd,24
JD,102911,JD.com Inc Adr,24
JFIN,1116150,Jiayin Group Inc,24
JFU,1152299,9F Inc,24
JG,1088703,Aurora Mobile Ltd,24
JJSF,16427,J & J Snack Foods Corp,24
JKHY,16428,Jack Henry & Associates Inc,24
JNCE,995704,Jounce Therapeutics Inc,24
JOBS,16431,51job Inc,24
JOUT,16434,Johnson Outdoors Inc,24
JRJC,16436,China Finance Online Co Limited,24
JRSH,1075585,Jerash Holdings US Inc,24
JRVR,943135,James River Group Holdings Ltd,24
JUPW,1166749,Jupiter Wellness Inc,24
JVA,16439,Coffee Holding Co Inc,24
JYAC,1167594,Jiya Acquisition Corp,24
JYNT,942668,The Joint Corp,24
KALA,1024880,Kala Pharmaceuticals Inc,24
KALU,16441,Kaiser Aluminum Corporation,24
KALV,949615,Kalvista Pharmaceuticals Inc,24
KBAL,16443,Kimball International Inc,24
KBNT,1165309,Kubient Inc,24
KBSF,40976,KBS Fashion Group Ltd,24
KC,1161009,Kingsoft Cloud Holdings Ltd,24
KDMN,985947,Kadmon Holdings LLC,24
KDNY,949614,Chinook Therapeutics Inc,24
KDP,10548,Keurig Dr Pepper Inc,24
KE,943148,Kimball Electronics,24
KELYA,16445,Kelly Services A Inc,24
KELYB,16446,Kelly Services B Inc,24
KEQU,16448,Kewaunee Scientific Corporation,24
KERN,1069502,Akerna Corp,24
KFFB,16452,Kentucky First Federal Bancorp,24
KFRC,16454,Kforce Inc,24
KHC,270,Kraft Heinz Co,24
KIDS,1052242,Orthopediatrics Corp,24
KIN,48403,Kindred Bioscncs,24
KINS,16456,Kingstone Companies Inc,24
KIRK,16459,Kirklands Inc,24
KLAC,6462,KLA-Tencor Corporation,24
KLDO,1123001,Kaleido Biosciences Inc,24
KLIC,16461,Kulicke and Soffa Industries Inc,24
KLXE,1095917,KLX Energy Services Holdings Inc,24
KMDA,40998,Kamada,24
KNDI,16463,Kandi Technologies Group Inc,24
KNSA,1075232,Kiniksa Pharmaceuticals Ltd,24
KNSL,986078,Kinsale Capital Group Inc,24
KNTE,1167739,Kinnate Biopharma Inc,24
KOD,1096118,Kodiak Sciences Inc,24
KOPN,16469,Kopin Corporation,24
KOSS,16470,Koss Corporation,24
KPTI,42593,Karyopharm Therapeutics Inc,24
KRBP,1166966,Kiromic Biopharma Inc,24
KRKR,1153683,36Kr Holdings Inc,24
KRMD,1131518,Repro Med Systems Inc,24
KRNT,949622,Kornit Digital Ltd,24
KRNY,16471,Kearny Financial Corp,24
KRON,1166741,Kronos Bio Inc,24
KROS,1159426,Keros Therapeutics Inc,24
KRTX,1137572,Karuna Therapeutics Inc,24
KRUS,1142208,Kura Sushi USA Inc,24
KRYS,1050114,Krystal Biotech Inc,24
KSMT,1166759,Kismet Acquisition One Corp,24
KSMTU,1164647,Kismet Acquisition One Corp,24
KSPN,17413,Kaspien Holdings Inc,24
KTCC,16474,Key Tronic Corporation,24
KTOS,16476,Kratos Defense & Security Solutions,24
KTOV,961631,Kitov Pharmaceuticals Holdings Ltd,24
KTRA,50980,Kintara Therapeutics Inc,24
KURA,960623,Kura Oncology Inc,24
KVHI,16478,KVH Industries Inc,24
KXIN,1054858,Kaixin Auto Holdings,24
KYMR,1165399,Kymera Therapeutics Inc,24
KZIA,16772,Kazia Therapeutics Ltd ADR,24
KZR,1081658,Kezar Life Sciences Inc,24
LACQ,1058000,Leisure Acquisition Corp,24
LACQU,1166489,Leisure Acquisition Corp,24
LAKE,16482,Lakeland Industries Inc,24
LAMR,6422,Lamar Advertising Company,24
LANC,16483,Lancaster Colony Corporation,24
LAND,40072,Gladstone Land Corporation,24
LANDP,986298,Gladstone Land Corp Pref,24
LARK,16484,Landmark Bancorp Inc,24
LASR,1073208,nLIGHT Inc,24
LATN,1163681,Union Acquisition Corp II,24
LATNU,1153341,Union Acquisition Corp 2,24
LAUR,995930,Laureate Education Inc,24
LAWS,16486,Lawson Products Inc,24
LAZR,1121160,Luminar Technologies,24
LAZY,1072329,Lazydays Holdings Inc,24
LBAI,16488,Lakeland Bancorp Inc,24
LBC,1055911,Luther Burbank,24
LBRDA,943142,Liberty Broadband Srs A,24
LBRDK,943143,Liberty Broadband Srs C,24
LBTYA,6371,Liberty Global PLC,24
LBTYB,16490,Liberty Global PLC Class B,24
LBTYK,16491,Liberty Global PLC Class C,24
LCA,1163682,Landcadia Holdings II Inc,24
LCAHU,979016,Landcadia Holdings II Inc,24
LCAPU,1165402,Lionheart Acquisition II Corp,24
LCNB,16493,LCNB Corporation,24
LCUT,16495,Lifetime Brands Inc,24
LCYAU,1166922,Landcadia Holdings III Inc,24
LE,100234,Lands End Inc,24
LECO,39105,Lincoln Electric Holdings Inc,24
LEDS,16498,SemiLEDS Corporation,24
LEGH,1097779,Legacy Housing Corp,24
LEGN,1161496,Legend Biotech Corp,24
LESL,1167065,Leslies Inc,24
LEVL,1073472,Level One Bancorp,24
LFAC,1082076,LF Capital Acquisition Corp Class A,24
LFACU,1163626,LF Capital Acquisition Corp,24
LFUS,16499,Littelfuse Inc,24
LFVN,40073,Lifevantage Corporation,24
LGHL,1163719,Lion Group Holding Ltd,24
LGIH,44409,LGI Homes,24
LGND,16501,Ligand Pharmaceuticals Incorporated,24
LHCG,16502,LHC Group,24
LI,1164093,Li Auto Inc,24
LIFE,6368,aTyr Pharma Inc,24
LILA,954881,Liberty Latin America Ltd,24
LILAK,954882,Liberty Latin America Ltd Class C,24
LINC,16504,Lincoln Educational Services,24
LIND,41295,Lindblad Expeditions Holdings Inc,24
LIQT,949595,LiqTech International Inc,24
LITE,958233,Lumentum Holdings Inc,24
LIVE,16509,Live Ventures Inc,24
LIVK,1163641,LIV Capital Acquisition Corp,24
LIVKU,1155986,Liv Capital Acquisition Corp,24
LIVN,960625,LivaNova PLC,24
LIVX,1052401,Livexlive Media Inc,24
LIXT,1131214,Lixte Biotechnology Holdings Inc,24
LIZI,1156361,Lizhi Inc,24
LJPC,100203,La Jolla Pharmaceutical Co,24
LKCO,16467,Luokung Technology Corp,24
LKFN,16511,Lakeland Financial Corporation,24
LKQ,39152,LKQ Corporation,24
LLIT,15911,Lianluo Smart Ltd,24
LLNW,16513,Limelight Networks Inc,24
LMAT,31047,LeMaitre Vascular Inc,24
LMB,941162,Limbach Holdings Inc,24
LMFA,961755,LM Funding America Inc,24
LMNR,16518,Limoneira Co,24
LMNX,16519,Luminex Corporation,24
LMPX,1155530,Lmp Automotive Holdings Inc,24
LMRK,943149,Landmark Infrastructure Part,24
LMRKN,1073494,Landmark Infrastructure Partners LP Pref,24
LMRKO,987084,Landmark Infrastructure Partners LP,24
LMRKP,1058130,Landmark Infrastructure Partners LP Series A Pref,24
LMST,16868,Limestone Bancorp Inc,24
LNDC,16523,Landec Corporation,24
LNSR,1166760,LENSAR Inc,24
LNT,39176,Alliant Energy Corp,24
LNTH,955563,Lantheus Holdings Inc,24
LOAC,1091244,Longevity Acquisition Corp,24
LOAN,16525,Manhattan Bridge Capital Inc,24
LOB,958234,Live Oak Bancshares Inc,24
LOCO,940762,El Pollo Loco Holdings Inc,24
LOGC,1096133,LogicBio Therapeutics Inc,24
LOGI,21634,Logitech International SA,24
LOOP,16531,Loop Industries Inc,24
LOPE,16532,Grand Canyon Education Inc,24
LORL,16533,Loral Space and Communications Inc,24
LOVE,1073623,The Lovesac Company,24
LPCN,100167,Lipocine Inc,24
LPLA,16535,LPL Financial Holdings Inc,24
LPRO,1057699,Open Lending Corp,24
LPSN,16538,LivePerson Inc,24
LPTH,16539,LightPath Technologies Inc,24
LPTX,995931,Leap Therapeutics Inc,24
LQDA,1084929,Liquidia Technologies Inc,24
LQDT,16540,Liquidity Services Inc,24
LRCX,6445,Lam Research Corp,24
LRMR,102924,Larimar Therapeutics Inc,24
LSAC,1165437,LifeSci Acquisition Corp,24
LSACU,1158865,LifeSci Acquisition Corp,24
LSBK,16543,Lake Shore Bancorp Inc,24
LSCC,16544,Lattice Semiconductor Corporation,24
LSTR,16545,Landstar System Inc,24
LSXMA,976454,Liberty Media Corp SiriusXM A,24
LSXMB,976455,Liberty Media Corp SiriusXM B,24
LSXMK,976456,Liberty Media Corp SiriusXM C,24
LTBR,16546,Lightbridge Corp,24
LTRN,1161538,Lantern Pharma Inc,24
LTRPA,941657,Liberty Tri,24
LTRPB,941160,Liberty Tripadvisor Holdings Inc,24
LTRX,16549,Lantronix Inc,24
LULU,32383,Lululemon Athletica Inc,24
LUMO,16740,Lumos Pharma Inc,24
LUNA,16552,Luna Innovations Incorporated,24
LUNG,1166431,Pulmonx Corp,24
LUXAU,1167140,Lux Health Tech Acq Corp,24
LWAY,16553,Lifeway Foods Inc,24
LX,1056506,Lexinfintech Holdings Ltd,24
LXEH,1166559,Lixiang Education Holding Co Ltd,24
LXRX,16554,Lexicon Pharmaceuticals Inc,24
LYFT,1123146,LYFT Inc,24
LYL,1052949,Dragon Victory International Ltd,24
LYRA,1160914,Lyra Therapeutics Inc,24
LYTS,16555,LSI Industries Inc,24
MAACU,1166742,Montes Archimedes Acquisition Corp,24
MACK,31049,Merrimack Pharmaceuticals Inc,24
MACUU,1166961,Mallard Acquisition Corp,24
MAGS,16558,Magal Security Systems Ltd,24
MANH,16561,Manhattan Associates Inc,24
MANT,13985,ManTech International Corporation,24
MAR,8136,Marriott International Inc,24
MARA,940830,Marathon Patent Group Inc,24
MARK,16300,Remark Holdings Inc,24
MARPS,16563,Marine Petroleum Trust,24
MASI,16565,Masimo Corporation,24
MAT,7917,Mattel Inc,24
MATW,16567,Matthews International Corporation,24
MAXN,1165668,Maxeon Solar Technologies Ltd,24
MAYS,16569,J W Mays Inc,24
MBCN,941658,Middlefield Banc,24
MBII,41313,Marrone Bio Innovations Inc,24
MBIN,1052915,Merchants Bancorp,24
MBINP,1163742,Merchants Bancorp PR,24
MBIO,1043280,Mustang Bio Inc,24
MBNKP,1163769,Medallion Bank PR,24
MBOT,17263,Microbot Medical Inc,24
MBRX,985131,Moleculin Biotech Inc,24
MBUU,100232,Malibu Boats Inc,24
MBWM,16576,Mercantile Bank Corporation,24
MCAC,1165669,Mountain Crest Acquisition Corp,24
MCACU,1161536,Mountain Crest Acquisition Corp,24
MCBC,16577,Macatawa Bank Corporation,24
MCBS,1152990,MetroCity Bankshares,24
MCEP,16580,Mid-Con Energy Partners LP,24
MCFE,1166965,McAfee Corp,24
MCFT,958235,Mastercraft Boat Holdings Inc,24
MCHP,6391,Microchip Technology Inc,24
MCHX,16581,Marchex Inc,24
MCMJ,1153338,Merida Merger I,24
MCRB,955564,Seres Therapeutics Inc,24
MCRI,16583,Monarch Casino & Resort Inc,24
MDB,1052405,MongoDB,24
MDCA,16587,MDC Partners Inc,24
MDGL,17214,Madrigal Pharmaceuticals Inc,24
MDGS,960628,Medigus Ltd ADR,24
MDIA,1163752,Mediaco Holding Inc,24
MDJH,1117860,MDJM Ltd,24
MDLZ,32372,Mondelez International Inc,24
MDRR,1115208,Medalist Diversified Reit Inc,24
MDRRP,1163582,Medalist Diversified Reit Inc PR,24
MDRX,9231,Allscripts Healthcare Solutions Inc,24
MDVL,940837,Medavail Holdings Inc,24
MDWD,100202,Mediwound Ltd,24
MDXG,41000,MiMedx Group Inc,24
MEDP,986248,Medpace Holdings Inc,24
MEDS,1136097,Trxade Group Inc,24
MEIP,31050,MEI Pharma Inc,24
MELI,16599,MercadoLibre Inc,24
MEOH,16603,Methanex Corporation,24
MERC,16604,Mercer International Inc,24
MESA,1089261,Mesa Air Group Inc,24
MESO,942042,Mesoblast Ltd,24
METC,995932,Ramaco Resources Inc,24
METX,1097643,Meten Edtechx Education Group Ltd,24
MFH,955569,Mercurity Fintech Holding Inc,24
MFIN,17312,Medallion Financial Corp,24
MFNC,16610,Mackinac Financial Corporation,24
MGEE,16615,MGE Energy Inc,24
MGEN,102919,Miragen Therapeutics Inc,24
MGI,32348,Moneygram Int,24
MGIC,16616,Magic,24
MGLN,16617,Magellan Health Services Inc,24
MGNI,101891,Magnite Inc,24
MGNX,42590,MacroGenics Inc,24
MGPI,16618,MGP Ingredients Inc,24
MGRC,16619,McGrath RentCorp,24
MGTA,1080051,Magenta Therapeutics Inc,24
MGTX,1076787,MeiraGTx Holdings PLC,24
MGYR,16620,Magyar Bancorp Inc,24
MHLD,16622,Maiden Holdings Ltd,24
MICT,41002,MICT Inc,24
MIDD,13058,Middleby Corp,24
MIK,102902,The Michaels Companies Inc,24
MIME,961632,Mimecast Ltd,24
MIND,16623,Mind Technology Inc,24
MINDP,1058131,Mitcham Industries Inc Series A Pref,24
MIRM,1141591,Mirum Pharmaceuticals Inc,24
MIST,1129439,Milestone Pharmaceuticals Inc,24
MITK,16627,Mitek Systems Inc,24
MITO,1122221,Stealth BioTherapeutics Corp,24
MKD,1156186,Molecular Data Inc,24
MKGI,52093,Monaker Group Inc,24
MKSI,16629,MKS Instruments Inc,24
MKTX,16631,MarketAxess Holdings Inc,24
MLAB,16632,Mesa Laboratories Inc,24
MLAC,1166490,Malacca Straits Acquisition Co Ltd,24
MLACU,1163347,Malacca Straits Acq Co Ltd,24
MLCO,39332,Melco Resorts & Entertainment Ltd,24
MLHR,16633,Herman Miller Inc,24
MLND,41012,Millendo Therapeutics Inc,24
MLVF,16636,Malvern Bancorp Inc,24
MMAC,942486,MMA Capital Management LLC,24
MMLP,16637,Martin Midstream Partners LP,24
MMSI,16638,Merit Medical Systems Inc,24
MMYT,16640,MakeMyTrip Limited,24
MNCL,1121798,Monocle Acquisition Corp,24
MNDO,16641,MIND CTI Ltd,24
MNKD,16644,MannKind Corp,24
MNOV,16645,MediciNova Inc,24
MNPR,1152792,Monopar Therapeutics Inc,24
MNRO,16647,Monro Muffler Brake Inc,24
MNSB,1129445,Mainstreet Bank,24
MNST,6355,Monster Beverage Corp,24
MNTX,16650,Manitex International Inc,24
MOFG,16653,MidWestOne Financial Group Inc,24
MOHO,1155048,Ecmoho Ltd,24
MOMO,943151,Momo Inc,24
MOR,1053141,MorphoSys AG ADR,24
MORF,1137414,Morphic Holding Inc,24
MORN,16655,Morningstar Inc,24
MOSY,16656,MoSys Inc,24
MOTS,1061929,Motus GI Holdings Inc,24
MOXC,961051,Moxian Inc,24
MPAA,13987,Motorcar Parts of America Inc,24
MPB,16659,Mid Penn Bancorp,24
MPWR,16662,Monolithic Power Systems Inc,24
MRAM,991171,Everspin Technologies Inc,24
MRBK,1054834,Meridian Bank,24
MRCC,960629,Monroe Capital Corp,24
MRCY,16663,Mercury Systems Inc,24
MREO,1073628,Mereo BioPharma Group PLC ADR,24
MRIN,41221,Marin Software Inc,24
MRKR,993180,Marker Therapeutics Inc,24
MRLN,16665,Marlin Business Services Corp,24
MRNA,1114321,Moderna Inc,24
MRNS,940835,Marinus Pharmaceuticals Inc,24
MRSN,1014086,Mersana Therapeutics Inc,24
MRTN,16667,Marten Transport Ltd,24
MRTX,41315,Mirati Ther,24
MRUS,978739,Merus NV,24
MRVI,1167329,Maravai Lifesciences Holdings Inc,24
MRVL,6520,Marvell Technology Group Ltd,24
MSBI,980196,Midland States Bancorp Inc,24
MSEX,16670,Middlesex Water Company,24
MSFT,252,Microsoft Corporation,24
MSON,16675,MISONIX Inc,24
MSTR,16678,MicroStrategy Incorporated,24
MSVB,1089226,Mid-Southern Bancorp Inc,24
MTBC,940836,MTBC Inc,24
MTBCP,1058132,MTBC Inc Pref,24
MTC,1117904,MMTEC Inc,24
MTCH,961621,Match Group Inc,24
MTCR,1166010,Metacrine Inc,24
MTEM,17342,Molecular Templates Inc,24
MTEX,16680,Mannatech Incorporated,24
MTLS,102908,Materialise NV,24
MTP,962329,Midatech Pharma PLC ADR,24
MTRX,16683,Matrix Service Co,24
MTSC,16684,MTS Systems Corporation,24
MTSI,31051,MACOM Technology Solutions Holdings Inc,24
MTSL,16685,MER Telemanagement Solutions Ltd,24
MU,8092,Micron Technology Inc,24
MVBF,1056239,MVB Financial Corp,24
MVIS,16687,Microvision Inc,24
MVNR,1167067,Mavenir Private Holdings II Ltd,24
MWK,1131556,Mohawk Group Inc,24
MXIM,13084,Maxim Integrated Products Inc,24
MYFW,1082095,First Western Financial Inc,24
MYGN,16690,Myriad Genetics Inc,24
MYRG,16691,MYR Group Inc,24
MYSZ,985957,My Size Inc,24
MYT,953815,Urban Tea Inc,24
NAII,16695,Natural Alternatives International,24
NAKD,962330,Naked Brand Group Ltd,24
NAOV,1054790,NanoVibronix Inc,24
NARI,1161253,Inari Medical Inc,24
NATH,16699,Nathans Famous Inc,24
NATI,16700,National Instruments Corporation,24
NATR,16702,Natures Sunshine Products Inc,24
NAVI,101919,Navient Corp,24
NBAC,1163698,Newborn Acquisition Corp,24
NBACU,1163672,Newborn Acquisition Corp,24
NBEV,960941,Newage Inc,24
NBIX,16707,Neurocrine Biosciences Inc,24
NBLX,989444,Noble Midstream Partners LP,24
NBN,16708,Northeast Bancorp,24
NBRV,958826,Nabriva Therapeutics AG,24
NBSE,41008,NeuBase Therapeutics Inc,24
NBTB,16709,NBT Bancorp Inc,24
NCBS,961054,Nicolet Bankshares Inc,24
NCMI,16713,National CineMedia Inc,24
NCNA,1050147,NuCana PLC,24
NCNO,1163256,Ncino,24
NCSM,1008764,NCS Multistage Holdings Inc,24
NCTY,16714,The9 Ltd ADR,24
NDAQ,6395,24 Inc,24
NDLS,41318,Noodles & Company,24
NDRA,1024336,ENDRA Life Sciences Inc,24
NDSN,16715,Nordson Corporation,24
NEO,40083,NeoGenomics Inc,24
NEOG,16719,Neogen Corporation,24
NEON,31052,Neonode Inc,24
NEOS,958236,Neos Therapeutics Inc,24
NEPH,50930,Nephros Inc,24
NERV,103936,Minerva Neurosciences Inc,24
NESR,1010658,National Energy Services Reunited Corp,24
NETE,15653,Net Element Inc,24
NEWA,1031028,Newater Technology Inc,24
NEWT,16726,Newtek Business Services Corp,24
NEXT,953818,Nextdecade Corp,24
NFBK,16728,Northfield Bancorp Inc,24
NFE,1097781,New Fortress Energy LLC,24
NFLX,13063,Netflix Inc,24
NGACU,1166743,Nextgen Acquisition Corp,24
NGHC,100217,National General Holdings Corp,24
NGHCN,1058133,National General Holdings Corp Series C ADR,24
NGHCO,955565,National General Holdings Corp,24
NGHCP,1058134,National General Holdings Corp Series A Pref,24
NGM,1096136,NGM Biopharmaceuticals Inc,24
NGMS,1167330,Neogames SA,24
NH,980155,Nanthealth LLC,24
NHIC,1166491,Newhold Investment Corp,24
NHICU,1165671,Newhold Investment Corp,24
NHLD,50944,National Holdings,24
NHTC,52779,Natural Health Trend,24
NICE,16733,Nice Ltd ADR,24
NICK,16734,Nicholas Financial Inc,24
NISN,994479,Nisun International Enterprise Development Group Co Ltd,24
NIU,1096132,Niu Technologies,24
NK,958237,NantKwest Inc,24
NKLA,1162166,Nikola Corp,24
NKSH,16738,National Bankshares Inc,24
NKTR,16739,Nektar Therapeutics,24
NKTX,1163124,Nkarta Inc,24
NLOK,6494,NortonLifeLock Inc,24
NLTX,100193,Neoleukin Therapeutics,24
NMCI,1096013,Navios Maritime Containers Inc,24
NMFC,24296,New Mountain Finance Corporation,24
NMFCL,1163677,New Mountain Finance Corp,24
NMIH,44411,NMI Holdings Inc,24
NMMCU,1166362,North Mountain Merger Corp,24
NMRD,1062239,Nemaura Medical Inc,24
NMRK,1056451,Newmark Group Inc,24
NMTR,985884,9 Meters Biopharma Inc,24
NNBR,16744,NN Inc,24
NNDM,968970,Nano Dimension Ltd,24
NNOX,1165306,Nano X Imaging Ltd,24
NOACU,1167312,Natural Order Acquisition Corp,24
NODK,998045,NI Holdings Inc,24
NOVN,989532,Novan Inc,24
NOVS,1163765,Novus Capital Corp,24
NOVSU,1165673,Novus Capital Corp,24
NOVT,16219,Novanta Inc,24
NPA,1163592,New Providence Acquisition Corp,24
NPAUU,1152782,New Providence Acquisition Corp,24
NRBO,985561,Neurobo Pharmaceuticals Inc,24
NRC,41007,National Research Corp,24
NRIM,16752,Northrim BanCorp Inc,24
NRIX,1163489,Nurix Therapeutics Inc,24
NSEC,16753,National Security Group Inc,24
NSIT,16755,Insight Enterprises Inc,24
NSSC,16757,NAPCO Security Technologies Inc,24
NSTG,41317,Nanostrg Te,24
NSYS,16758,Nortech Systems Incorporated,24
NTAP,6440,NetApp Inc,24
NTCT,16759,NetScout Systems Inc,24
NTEC,958238,Intec Pharma Ltd,24
NTES,6439,NetEase Inc,24
NTGR,16760,NETGEAR Inc,24
NTIC,16761,Northern Technologies,24
NTLA,978740,Intellia Therapeutics Inc,24
NTNX,989658,Nutanix Inc,24
NTRA,955853,Natera Inc,24
NTRS,6419,Northern Trust Corporation,24
NTUS,15515,Natus Medical Incorporated,24
NTWK,16766,NetSol Technologies Inc,24
NUAN,13988,Nuance Communications Inc,24
NURO,16767,NeuroMetrix Inc,24
NUVA,16769,NuVasive Inc,24
NUZE,1161255,Nuzee Inc,24
NVAX,16770,Novavax Inc,24
NVCN,102888,Neovasc Inc,24
NVCR,958827,Novocure Ltd,24
NVDA,6497,NVIDIA Corporation,24
NVEC,16771,NVE Corporation,24
NVEE,41316,NV5 Global Inc,24
NVFY,100186,Nova Lifestyle I,24
NVIV,949623,InVivo Therapeutics Holdings Corp,24
NVMI,16773,Nova,24
NVUS,941661,Novus Therapeutics Inc,24
NWBI,16776,Northwest Bancshares Inc,24
NWE,20889,NorthWestern Corporation,24
NWFL,16777,Norwood Financial Corp,24
NWL,8345,Newell Brands Inc,24
NWLI,16779,National Western Life Insurance Co,24
NWPX,16780,Northwest Pipe Company,24
NWS,13065,News Corp B,24
NWSA,13795,News Corp A,24
NXGN,39106,Nextgen Healthcare Inc,24
NXPI,13989,NXP Semiconductors NV,24
NXST,16781,Nexstar Broadcasting Group Inc,24
NXTC,1129436,NextCure Inc,24
NXTD,941659,NXT-ID Inc,24
NYMT,16783,New York Mortgage Trust Inc,24
NYMTM,1163601,New York Mortgage Trust Inc PR,24
NYMTN,1052962,New York Mortgage Trust Inc Pref,24
NYMTO,960633,New York Mortgage Trust Inc Pr Pref,24
NYMTP,960634,New York Mortgage Trust Inc Pref,24
NYMX,16784,Nymox Pharmaceutical Corp,24
OAS,39279,Oasis Petroleum Inc,24
OBAS,16788,Optibase,24
OBCI,16789,Ocean Bio-Chem Inc,24
OBLN,991172,Obalon Therapeutics Inc,24
OBNK,1073426,Origin Bancorp Inc,24
OBSV,995705,ObsEva SA,24
OCC,16790,Optical Cable Corporation,24
OCCI,1096494,OFS Credit Company Inc,24
OCCIP,1163683,OFS Credit Company Inc PR,24
OCFC,16791,OceanFirst Financial Corp,24
OCGN,942665,Ocugen Inc,24
OCSI,960595,Oaktree Strategic Income Corporation,24
OCSL,24368,Oaktree Specialty Lending Corp,24
OCUL,940764,Ocular Therapeutix Inc,24
OCUP,36719,Ocuphire Pharma Inc,24
ODFL,39333,Old Dominion Freight Line Inc,24
ODP,278,ODP Corp,24
ODT,1055908,Odonate Therapeutics,24
OEG,31021,Orbital Energy Group Inc,24
OESX,30896,Orion Energy Systems Inc,24
OFED,16796,Oconee Federal Financial Corp,24
OFIX,16797,Orthofix Medical Inc,24
OFLX,16798,Omega Flex Inc,24
OFS,960636,OFS Capital Corp,24
OIIM,16800,O2Micro International Limited,24
OKTA,1006169,Okta Inc,24
OLB,1165443,OLB Group Inc,24
OLED,16860,Universal Display,24
OLLI,958239,Ollies Bargain Outlet Holdings Inc,24
OLMA,1167423,Olema Pharmaceuticals Inc,24
OM,1166011,Outset Medical Inc,24
OMAB,16805,Grupo Aeroportuario del Centro Norte SAB de CV,24
OMCL,16806,Omnicell Inc,24
OMER,16807,Omeros Corporation,24
OMEX,16808,Odyssey Marine Exploration Inc,24
OMP,1050115,Oasis Midstream Partners LP,24
ON,16812,ON Semiconductor Corporation,24
ONB,20159,Old National Bancorp,24
ONCR,1166560,Oncorus Inc,24
ONCS,52488,OncoSec Medical Inc,24
ONCT,16229,Oncternal Therapeutics Inc,24
ONCY,16810,Oncolytics Biotech Inc,24
ONDS,1131396,Ondas Holdings Inc,24
ONEM,1156572,1Life Healthcare Inc,24
ONEW,1153167,Onewater Marine,24
ONTX,41319,Onconova Therapeutics Inc,24
ONVO,41278,Organovo Holdings Inc,24
OPBK,1073155,OP Bancorp,24
OPCH,15562,Option Care Health Inc,24
OPES,1072293,Opes Acquisition Corp,24
OPGN,951571,OpGen Inc,24
OPHC,16818,OptimumBank Holdings Inc,24
OPI,20180,Office Properties Income Trust,24
OPINI,1019684,Office Properties Income Trust Senior Note,24
OPK,32360,Opko Health Inc,24
OPNT,51982,Opiant Pharmaceuticals Inc,24
OPOF,16821,Old Point Financial Corporation,24
OPRA,1084934,Opera Ltd,24
OPRT,1152813,Oportun Financial Corp,24
OPRX,52660,OPTIMIZERx Corp,24
OPT,1166962,Opthea Ltd,24
OPTN,1052243,OptiNose,24
OPTT,16823,Ocean Power Technologies Inc,24
ORBC,16827,ORBCOMM Inc,24
ORGO,994771,Organogenesis Holdings Inc,24
ORGS,52456,Orgenesis Inc,24
ORIC,1159668,Oric Pharmaceuticals Inc,24
ORLY,13074,O Reilly Automotive Inc,24
ORMP,41010,Oramed Pharmaceuticals Inc,24
ORPH,1166404,Orphazyme A/S,24
ORRF,16836,Orrstown Financial Services Inc,24
ORTX,1097551,Orchard Therapeutics PLC,24
OSBC,16837,Old Second Bancorp Inc,24
OSIS,16840,OSI Systems Inc,24
OSMT,1096131,Osmotica Pharmaceuticals PLC,24
OSN,16841,Ossen Innovation Co Ltd,24
OSPN,17480,OneSpan Inc,24
OSS,1061439,One Stop Systems Inc,24
OSTK,16842,Overstockcom Inc,24
OSUR,16843,OraSure Technologies Inc,24
OSW,1055294,OneSpaWorld Holdings Ltd,24
OTEL,41011,Otelco Inc,24
OTIC,941163,Otonomy Inc,24
OTLK,977675,OUTLOOK THERAPEUTICS INC,24
OTRAU,1166748,Otr Acquisition Corp,24
OTRK,50977,Ontrak Inc,24
OTRKP,1165674,Ontrak Inc,24
OTTR,16846,Otter Tail Corporation,24
OVBC,16848,Ohio Valley Banc Corp,24
OVID,1009133,Ovid Therapeutics Inc,24
OVLY,16849,Oak Valley Bancorp,24
OXBR,101921,Oxbridge Re Holdings Ltd,24
OXBRW,1163106,Oxbridge Re Holdings Equity Warrant,24
OXFD,48399,Oxford Immunotec Global PLC,24
OXLC,960638,Oxford Lane Capital Corp,24
OXLCM,1024874,Oxford Lane Capital Corp Pref,24
OXLCO,960640,Oxford Lane Capital Corp CO Pref,24
OXLCP,1163087,Oxford Lane Capital Series,24
OXSQ,24379,Oxford Square Capital Corp,24
OXSQL,1008726,Oxford Square Capital Corp ELKS,24
OYST,1153339,Oyster Point Pharma Inc,24
OZK,16855,Bank Ozk,24
OZON,1167464,Ozon Holdings PLC,24
PAAS,6432,Pan American Silver Corp,24
PACB,16856,Pacific Biosciences of California,24
PACW,16859,PacWest Bancorp,24
PAE,1163804,PAE Inc,24
PAHC,101922,Phibro Animal Health Corporation,24
PAICU,1165308,Petra Acquisition Inc,24
PAND,1163348,Pandion Therapeutics Holdco Llc,24
PANL,100196,Pangaea Logistic,24
PASG,1156858,Passage Bio Inc,24
PATI,945079,Patriot Transportation Holding Inc,24
PATK,16864,Patrick Industries Inc,24
PAVM,986081,PAVmed Inc,24
PAYA,1099056,Paya Holdings Inc,24
PAYS,50885,Paysign Inc,24
PAYX,6406,Paychex Inc,24
PBCT,32373,People United Financial Inc,24
PBCTP,993975,People United Financial Inc,24
PBFS,1163753,Pioneer Bancorp Inc,24
PBHC,16867,Pathfinder Bancorp Inc,24
PBIP,16870,Prudential Bancorp Inc Pennsylvania,24
PBLA,961089,Panbela Therapeutics Inc,24
PBPB,42592,Potbelly Co,24
PBTS,1127917,Powerbridge Technologies Co Ltd,24
PBYI,41231,Puma Biotechnology Inc,24
PCAR,6430,PACCAR Inc,24
PCB,1089750,PCB Bancorp,24
PCH,16876,PotlatchDeltic Corp,24
PCOM,16878,Points International Ltd.,24
PCRX,16879,Pacira Pharmaceuticals Inc,24
PCSA,1166761,Processa Pharmaceuticals Inc,24
PCSB,1008978,PCSB Financial Corp,24
PCTI,16880,PC-Tel Inc,24
PCTY,100228,Paylocity Holdng,24
PCVX,1162161,Vaxcyte Inc,24
PCYG,30901,Park City Group Inc,24
PCYO,16882,Pure Cycle Corporation,24
PDCE,29762,PDC Energy Inc,24
PDCO,6477,Patterson Companies Inc,24
PDD,1089236,Pinduoduo,24
PDEX,16883,Pro-Dex Inc,24
PDFS,16884,PDF Solutions Inc,24
PDLB,1052112,PDL Community Bancorp,24
PDLI,6372,PDL BioPharma Inc,24
PDSB,958823,PDS Biotechnology Corp,24
PEBK,16886,Peoples Bancorp of North Carolina,24
PEBO,17626,Peoples Bancorp Inc,24
PECK,976452,Peck Company Holdings Inc,24
PEGA,16889,Pegasystems Inc,24
PEIX,16890,Pacific Ethanol Inc,24
PENN,39334,Penn National Gaming Inc,24
PEP,8358,PepsiCo Inc,24
PERI,16895,Perion Network,24
PESI,16897,Perma-Fix Environmental Svcs Inc,24
PETQ,1024881,PetIQ Inc,24
PETS,16899,PetMed Express Inc,24
PETZ,1050165,TDH Holdings Inc,24
PFBC,16900,Preferred Bank,24
PFBI,16901,Premier Financial Bancorp Inc,24
PFC,16073,First Defiance Financial Corp,24
PFG,8267,Principal Financial Group Inc,24
PFHD,1131444,Professional Holding Corp,24
PFIE,100172,Profire Ene,24
PFIN,16904,P&F Industries Inc,24
PFIS,101910,Peoples Fin,24
PFLT,960644,PennantPark Floating Rate Capital Ltd,24
PFMT,31057,Performant Financial Corporation,24
PFPT,31058,Proofpoint Inc,24
PFSW,16905,PFSweb Inc,24
PGC,16906,Peapack-Gladstone Financial,24
PGEN,41216,Precigen Inc,24
PGNY,1153169,Progyny Inc,24
PHAS,1096497,PhaseBio Pharmaceuticals Inc,24
PHAT,1153168,Phathom Pharmaceuticals Inc,24
PHCF,1116302,Puhui Wealth Investment Management Co Ltd,24
PHICU,1167424,Population Health Investment Co Inc,24
PHIO,100174,Phio Pharmaceuticals Corp,24
PHUN,992969,Phunware Inc,24
PI,985958,Impinj Inc,24
PICO,16912,PICO Holdings Inc,24
PIH,100189,1347 Property In,24
PIHPP,1073024,1347 Property Insurance Holdings Inc Pref Series A,24
PINC,41323,Premier Inc,24
PIRS,955566,Pieris Pharmaceuticals Inc,24
PIXY,1014087,ShiftPixy Inc,24
PKBK,16913,Parke Bancorp Inc,24
PKOH,16914,Park Ohio Holdings Corp,24
PLAB,16915,Photronics Inc,24
PLAY,942485,Dave & Buster Entertainment,24
PLBC,16916,Plumas Bancorp,24
PLCE,16918,Children Place Inc,24
PLIN,1163665,China Xiangtai Food Co Ltd,24
PLL,1076596,Piedmont Lithium Ltd ADR,24
PLMR,1127922,Palomar Holdings Inc,24
PLPC,16923,Preformed Line Products Company,24
PLRX,1161406,Pliant Therapeutics Inc,24
PLSE,985717,Pulse Biosciences Inc,24
PLUG,16924,Plug Power Inc,24
PLUS,16925,ePlus inc,24
PLXP,100190,PLx Pharma Inc,24
PLXS,16926,Plexus Corp,24
PLYA,997803,Playa Hotels & Resorts BV,24
PMBC,16928,Pacific Mercantile Bancorp,24
PMD,16930,Psychemedics Corporation,24
PME,15701,Pingtan Marine Enterprise Ltd,24
PMVP,1166405,Pmv Pharmaceuticals Inc,24
PNBK,16935,Patriot National Bancorp Inc,24
PNFP,16937,Pinnacle Financial Partners Inc,24
PNNT,24367,PennantPark Investment Corporation,24
PNRG,16939,PrimeEnergy Corporation,24
PNTG,1163770,Pennant Group Inc,24
POAI,52286,Predictive Oncology Inc,24
PODD,16942,Insulet Corporation,24
POLA,994020,Polar Power Inc,24
POOL,16943,Pool Corporation,24
POWI,16945,Power Integrations Inc,24
POWL,16946,Powell Industries Inc,24
POWW,1131468,Ammo Inc,24
PPBI,16949,Pacific Premier Bancorp Inc,24
PPC,20774,Pilgrims Pride Corp,24
PPD,1156641,Ppd Inc,24
PPIH,16611,Perma-Pipe International Holdings Inc,24
PPSI,41337,Pioneer Pow,24
PRAA,16951,PRA Group Inc,24
PRAH,942655,PRA Health Sciences Inc,24
PRAX,1166963,Praxis Precision Medicines Inc,24
PRCP,16953,Perceptron Inc,24
PRDO,15684,Perdoceo Education Corp,24
PRFT,16954,Perficient Inc,24
PRFX,1165508,Painreform Ltd,24
PRGS,16956,Progress Software Corporation,24
PRGX,16957,PRGX Global Inc,24
PRIM,16958,Primoris Services Corporation,24
PRLD,1166406,Prelude Therapeutics Inc,24
PROF,1159538,Profound Medical Corp,24
PROG,1162594,Progenity Inc,24
PROV,16963,Provident Financial Holdings Inc,24
PRPH,16964,ProPhase Labs Inc,24
PRPL,960609,Purple Innovation Inc,24
PRPO,101923,Precipio Inc,24
PRQR,942362,ProQR Therapeutics NV,24
PRSC,16965,The Providence Service Corporation,24
PRTA,39343,Prothena Corporation plc,24
PRTC,1167595,PureTech Health PLC,24
PRTH,994019,Priority Technology Holdings Inc,24
PRTK,17395,Paratek Pharmaceuticals Inc,24
PRTS,16968,Carparts.Com Inc,24
PRVB,1089437,Provention Bio Inc,24
PRVL,1137407,Prevail Therapeutics Inc,24
PS,1075235,Pluralsight LLC,24
PSAC,1165675,Property Solutions Acquisition Corp,24
PSACU,1163357,Property Solutions Acquisition,24
PSEC,16974,Prospect Capital Corporation,24
PSHG,15894,Performance Shipping Inc,24
PSMT,16976,PriceSmart Inc,24
PSNL,1137412,Personalis Inc,24
PSTI,16980,Pluristem,24
PSTV,15883,Plus Therapeutics Inc,24
PSTX,1163254,Poseida Therapeutics Inc,24
PT,1089263,Pintec Technology Holdings Ltd,24
PTAC,1163684,PropTech Acquisition Corp,24
PTACU,1155635,Proptech Acquisition,24
PTC,16932,PTC Inc,24
PTCT,41321,PTC Therapeutics Inc,24
PTE,15780,Polarityte Inc,24
PTEN,6423,Patterson-UTI Energy Inc,24
PTGX,986249,Protagonist Therapeutics Inc,24
PTI,963705,Proteostasis Therapeutics Inc,24
PTICU,1167755,Proptech Investment II Corp,24
PTMN,24376,Portman Ridge Finance Corp,24
PTNR,16986,Partner Communications Company Ltd,24
PTON,1152791,Peloton Interactive Inc,24
PTPI,1167898,Petros Pharmaceuticals Inc,24
PTRS,1165446,Partners Bancorp,24
PTSI,16988,PAM Transportation Services Inc,24
PTVCA,15621,Protective Insurance Corp Class A,24
PTVCB,15622,Protective Insurance Corp Class B,24
PTVE,1165971,Pactiv Evergreen Inc,24
PULM,100180,Pulmatrix Inc,24
PUYI,1127194,Puyi Inc ADR,24
PVAC,20837,Penn Virginia Corporation,24
PVBC,958240,Provident Bancorp Inc,24
PWFL,16334,PowerFleet Inc,24
PWOD,16998,Penns Woods Bancorp Inc,24
PXLW,17000,Pixelworks Inc,24
PXMD,1163505,Paxmedica Inc,24
PXS,960648,Pyxis Tankers Inc,24
PYPD,1163028,PolyPid,24
PYPL,956170,PayPal Holdings Inc,24
PZZA,17001,Papa John's International Inc,24
QADA,17003,QAD A Inc,24
QADB,17004,QAD B Inc,24
QCOM,6376,Qualcomm Incorporated,24
QCRH,17008,QCR Holdings Inc,24
QDEL,17009,Quidel Corporation,24
QELL,1167596,Qell Acquisition Corp.,24
QELLU,1166561,Qell Acquisition Corp,24
QFIN,1097548,360 Finance Inc,24
QH,1163125,Quhuo Ltd,24
QIWI,41016,QIWI plc,24
QK,1153689,Q And K International Group Ltd,24
QLGN,955567,Qualigen Therapeutics Inc,24
QLYS,40089,Qualys Inc,24
QMCO,21085,Quantum Corporation,24
QNST,17014,QuinStreet Inc,24
QQQX,960649,Nuveen NASDAQ 100 Dynamic Overwrite,24
QRHC,102909,Quest Resource Holding Corp,24
QRTEA,6489,Qurate Retail Inc Series A,24
QRTEB,16506,Qurate Retail Inc Series B,24
QRTEP,1165676,Qurate Retail Inc,24
QRVO,945074,Qorvo Inc,24
QTNT,102913,Quotient Ltd,24
QTRX,1055909,Quanterix Corp,24
QTT,1096012,Qutoutiao Inc,24
QUIK,13990,QuickLogic Corporation,24
QUMU,17058,Qumu Corp,24
QURE,100212,Uniqure NV,24
RACA,1163255,Therapeutics Acquisition Corp,24
RADA,17018,Rada Electronic Industries Ltd,24
RADI,1166762,Radius Global Infrastructure Inc,24
RAIL,17019,Freightcar America Inc,24
RAND,960650,Rand Capital Corp,24
RAPT,1142209,RAPT Therapeutics Inc,24
RARE,100239,Ultragenyx,24
RAVE,17002,Rave Restaurant Group Inc,24
RAVN,17021,Raven Industries Inc,24
RBB,1027142,RBB Bancorp,24
RBBN,6385,Ribbon Communications Inc,24
RBCAA,17022,Republic Bancorp Inc,24
RBCN,17023,Rubicon Technology Inc,24
RBKB,1118020,Rhinebeck Bancorp Inc,24
RBNC,955849,Reliant Bancorp Inc,24
RCEL,941754,Avita Medical Ltd,24
RCHG,1167597,Recharge Acquisition Corp,24
RCHGU,1166562,Recharge Acquisition Corp,24
RCII,17026,Rent-A-Center Inc,24
RCKT,946347,Rocket Pharmaceuticals Inc,24
RCKY,17028,Rocky Brands Inc,24
RCM,998046,R1 RCM Inc,24
RCMT,17029,RCM Technologies Inc,24
RCON,17030,Recon Technology Ltd,24
RDCM,17032,Radcom Ltd,24
RDFN,1027143,Redfin Corp,24
RDHL,40090,Redhill Biopharma Ltd,24
RDI,17035,Reading International Inc,24
RDIB,17036,Reading International B Inc,24
RDNT,17037,RadNet Inc,24
RDUS,102914,Radius Heal,24
RDVT,1073137,Red Violet Inc,24
RDWR,13991,Radware Ltd,24
REAL,1137573,TheRealReal Inc,24
REDU,1052406,RISE Education Cayman Ltd,24
REED,48648,Reed Inc,24
REFR,17042,Research Frontiers Incorporated,24
REG,20718,Regency Centers Corporation,24
REGI,31062,Renewable Energy Group Inc,24
REGN,32391,Regeneron Pharmaceuticals Inc,24
REKR,1043334,Rekor Systems Inc,24
RELL,17045,Richardson Electronics Ltd,24
RELV,17046,Reliv International Inc,24
REPH,100181,Recro Pharm,24
REPL,1084220,Replimune Group Inc,24
RESN,102916,Resonant Inc,24
RETA,977732,Reata Pharmaceuticals Inc,24
RETO,1055313,ReTo Eco-Solutions Inc,24
REYN,1156576,Reynolds Consumer Products Inc,24
RFIL,17051,RF Industries Ltd,24
RGCO,17053,RGC Resources Inc,24
RGEN,17055,Repligen Corporation,24
RGLD,13992,Royal Gold Inc,24
RGLS,40092,Regulus Therapeutics Inc,24
RGNX,958828,Regenxbio Inc,24
RGP,17038,Resources Connection Inc,24
RIBT,48407,Ricebran Tech,24
RICK,17056,RCI Hospitality Holdings Inc,24
RIDE,1123577,Lordstown Motors Corp,24
RIDEW,1167211,Lordstown Motors Corp Warrant,24
RIGL,17057,Rigel Pharmaceuticals Inc,24
RILY,50909,B. Riley Financial Inc,24
RILYL,993976,B. Riley Financial Inc,24
RIOT,15434,Riot Blockchain Inc,24
RIVE,1091141,Riverview Financial Corp,24
RKDA,953050,Arcadia Biosciences Inc,24
RLAY,1163278,Relay Therapeutics Inc,24
RLMD,1131528,Relmada Therapeutics Inc,24
RMBI,1163538,Richmond Mutual Bancorporation Inc,24
RMBL,1052407,RumbleON Inc,24
RMBS,6455,Rambus Inc,24
RMCF,17064,Rocky Mountain Chocolate Factory,24
RMNI,1052375,Rimini Street Inc,24
RMR,962331,RMR Group Inc,24
RMTI,17066,Rockwell Medical Inc,24
RNA,1162157,Avidity Biosciences Inc,24
RNDB,985780,Randolph Bancorp Inc,24
RNET,17068,RigNet Inc,24
RNLX,1163349,Renalytix AI,24
RNST,17071,Renasant Corporation,24
RNWK,17072,RealNetworks Inc,24
ROAD,1073226,Construction Partners Inc,24
ROCH,1165677,Roth Ch Acquisition I Co,24
ROCHU,1160913,Roth Ch Acquisition I Co,24
ROCK,17073,Gibraltar Industries Inc,24
ROIC,17078,Retail Opportunity Investments,24
ROKU,1050149,Roku Inc,24
ROLL,17079,RBC Bearings Incorporated,24
ROOT,1167039,Root Inc,24
ROST,6437,Ross Stores Inc,24
RP,17085,RealPage Inc,24
RPAY,1089225,Repay Holdings Corp,24
RPD,958242,Rapid7 Inc,24
RPRX,1162162,Royalty Pharma Plc,24
RPTX,1162595,Repare Therapeutics Inc,24
RRBI,1129393,Red River Bancshares Inc,24
RRGB,17089,Red Robin Gourmet Burgers Inc,24
RRR,977677,Red Rock Resorts Inc,24
RSSS,1163720,Research Solutions Inc,24
RTLR,1131058,Rattler Midstream LP,24
RUBY,1084219,Rubius Therapeutics Inc,24
RUHN,1123968,Ruhnn Holding Ltd,24
RUN,958243,Sunrun Inc,24
RUSHA,17098,Rush Enterprises A Inc,24
RUSHB,17099,Rush Enterprises B Inc,24
RUTH,17100,Ruth's Hospitality Group Inc,24
RVMD,1156702,Revolution Medicines Inc,24
RVNC,100237,Revance The,24
RVSB,17102,Riverview Bancorp Inc,24
RWLK,941660,Rewalk Robotics Ltd,24
RXT,1164095,Rackspace Technology Inc,24
RYAAY,6397,Ryanair Holdings PLC ADR,24
RYTM,1050737,Rhythm Pharmaceuticals Inc,24
RZLT,1131543,Rezolute Inc,24
SABR,101911,Sabre Corpo,24
SAFM,17106,Sanderson Farms Inc,24
SAFT,17107,Safety Insurance Group Inc,24
SAGE,940842,Sage Therapeutic,24
SAIA,17108,Saia Inc,24
SAII,1166763,Software Acquisition Group Inc II,24
SAIIU,1166243,Software Acquisition Group Inc II,24
SAL,30918,Salisbury Bancorp Inc,24
SALM,17109,Salem Media Group Inc,24
SAMA,1117905,Schultze Special Purpose Acquisition Corp,24
SAMAU,1165678,Schultze Special Purpose Acquisition Corp,24
SAMG,41338,Silvercrest Asset Management Group Inc,24
SANM,17110,Sanmina Corporation,24
SANW,17111,S&W Seed Company,24
SASR,17114,Sandy Spring Bancorp Inc,24
SATS,17116,EchoStar Corporation,24
SAVA,16984,Cassava Sciences Inc,24
SBAC,39107,SBA Communications Corp,24
SBBP,960651,Strongbridge Biopharma plc,24
SBCF,17121,Seacoast Banking Corporation of Florida,24
SBFG,17024,Rurban Financial,24
SBGI,17122,Sinclair Broadcast Group Inc,24
SBLK,17123,Star Bulk Carriers Corp,24
SBNY,17124,Signature Bank,24
SBRA,24371,Sabra Healthcare REIT Inc,24
SBSI,17126,Southside Bancshares Inc,24
SBT,1055091,Sterling Bancorp Inc,24
SBTX,1167743,Silverback Therapeutics Inc,24
SBUX,6500,Starbucks Corporation,24
SCHL,17129,Scholastic Corporation,24
SCHN,17130,Schnitzer Steel Industries Inc,24
SCKT,17133,Socket Mobile Inc,24
SCOR,17140,Comscore Inc,24
SCPH,1054958,Scpharmaceuticals Inc,24
SCPL,1129319,Sciplay Corp,24
SCSC,17141,ScanSource Inc,24
SCVL,17143,Shoe Carnival Inc,24
SCWX,976457,Secureworks Corp,24
SCYX,101905,Scynexis Inc,24
SDC,1152335,SmileDirectClub Inc,24
SDGR,1156642,Schrodinger Inc,24
SEAC,17146,SeaChange International Inc,24
SECO,1050116,Secoo Holding Ltd,24
SEDG,949625,SolarEdge Technologies Inc,24
SEED,17147,Origin Agritech Ltd,24
SEEL,15435,Seelos Therapeutics Inc,24
SEER,1167741,Seer Inc,24
SEIC,17148,SEI Investments Company,24
SELB,985559,Selecta Biosciences Inc,24
SELF,962506,Global Self Storage Inc,24
SENEA,17149,Seneca Foods Corp A,24
SENEB,17150,Seneca Foods Corp B,24
SESN,100219,Sesen Bio Inc,24
SFBC,40095,Sound Financial Bancorp Inc,24
SFBS,101906,ServisFirst Bancshares Inc,24
SFET,1054451,Safe-T Group Ltd ADR,24
SFIX,1054959,Stitch Fix,24
SFM,41328,Sprouts Farmers Market Inc,24
SFNC,17153,Simmons First National Corporation,24
SFST,17154,Southern First Bancshares Inc,24
SG,1097773,Sirius International Insurance Group Ltd,24
SGA,24395,Saga Communications Inc,24
SGAMU,1167524,Seaport Global Acquisition Corp,24
SGBX,1017259,SG Blocks Inc,24
SGC,17155,Superior Uniform Group Inc,24
SGEN,13076,Seagen Inc,24
SGH,1010720,Smart Global Holdings Inc,24
SGLB,52150,Sigma Labs Inc,24
SGMA,17157,SigmaTron International Inc,24
SGMO,17158,Sangamo Therapeutics Inc,24
SGMS,17159,Scientific Games Corp,24
SGOC,17161,SGOCO Group Ltd,24
SGRP,17162,SPAR Group Inc,24
SGRY,958829,Surgery Partners Inc,24
SGTX,1167742,Sigilon Therapeutics Inc,24
SHBI,17163,Shore Bancshares Inc,24
SHC,1167331,Sotera Health Co,24
SHEN,17164,Shenandoah Telecommunications Co,24
SHIP,17166,Seanergy Maritime Holdings Corp,24
SHOO,17169,Steven Madden Ltd,24
SHSP,100178,SharpSpring Inc,24
SHYF,6404,Shyft Group Inc,24
SIBN,1096422,Si-Bone Inc,24
SIC,1091189,Select Interior Concepts Inc Class A,24
SIEB,17173,Siebert Financial Corp,24
SIEN,942492,Sientra Inc,24
SIFY,6524,Sify Technologies Limited,24
SIGA,17175,SIGA Technologies Inc,24
SIGI,17176,Selective Insurance Group Inc,24
SILC,17178,Silicom,24
SILK,1123967,Silk Road Medical Inc,24
SIMO,17180,Silicon Motion Technology,24
SINA,6377,SINA Corp,24
SINO,17181,Sino-Global Shipping America Ltd,24
SINT,100184,SINTX Technologies Inc,24
SIOX,954870,Sio Gene Therapies Inc,24
SIRI,6427,Sirius XM Holding Inc,24
SITM,1155092,Sitime Corporation,24
SIVB,17183,SVB Financial Group,24
SJ,1121795,Scienjoy Holding Corp,24
SKYW,17186,SkyWest Inc,24
SLAB,17187,Silicon Laboratories Inc,24
SLCT,16711,Select Bancorp Inc,24
SLDB,1061145,Solid Biosciences LLC,24
SLGG,1123000,Super League Gaming Inc,24
SLGL,1061437,Sol Gel Technologies Ltd,24
SLGN,17188,Silgan Holdings Inc,24
SLM,8089,SLM Corp,24
SLMBP,960658,SLM Corp Pb Pref,24
SLN,1166493,Silence Therapeutics PLC,24
SLNO,942654,Soleno Therapeutics Inc,24
SLP,17189,Simulations Plus Inc,24
SLRC,24378,Solar Capital Ltd,24
SLRX,945070,Salarius Pharmaceuticals Inc,24
SLS,16155,Sellas Life Sciences Group Inc,24
SMBC,17193,Southern Missouri Bancorp Inc,24
SMBK,962332,SmartFinancial Inc,24
SMCI,17195,Super Micro Computer Inc,24
SMED,17196,Sharps Compliance Corp,24
SMID,52710,Smith-Midland Corp,24
SMIT,17197,Schmitt Industries Inc,24
SMMC,1163666,South Mountain Merger Corp,24
SMMCU,1163645,South Mountain Merger Corp,24
SMMF,17198,Summit Financial Group Inc,24
SMMT,946348,Summit Therapeutics PLC,24
SMPL,16453,Simply Good Foods Co,24
SMSI,17201,Smith Micro Software Inc,24
SMTC,17203,Semtech Corporation,24
SMTI,52139,Sanara Medtech Inc,24
SMTX,17204,SMTC Corporation,24
SNBR,1054772,Sleep Number Corp,24
SNCA,30709,Seneca Biopharma Inc,24
SNCR,17207,Synchronoss Technologies Inc,24
SND,992968,Smart Sand Inc,24
SNDE,989446,Sundance Energy Australia Ltd ADR,24
SNDL,1142210,Sundial Growers Inc,24
SNDX,968972,Syndax Pharmaceuticals Inc,24
SNES,993179,SenesTech Inc,24
SNEX,16375,Stonex Group Inc,24
SNFCA,17208,Security National Financial,24
SNGX,51002,Soligenix Inc,24
SNOA,16793,Sonoma Pharmaceuticals Inc,24
SNPS,39335,Synopsys Inc,24
SNSS,17212,Sunesis Pharmaceuticals Inc,24
SNY,21258,Sanofi ADR,24
SOHO,16590,Sotherly Hotels Inc,24
SOHOB,987085,Sotherly Hotels Inc Series B Pref,24
SOHON,1163721,Sotherly Hotels Inc PR,24
SOHOO,1052963,Sotherly Hotels Inc Pref,24
SOHU,6379,Sohu.Com Inc,24
SOLO,1091128,Electrameccanica Vehicles Corp,24
SOLY,1122729,Soliton Inc,24
SONA,17221,Southern National Bancorp Virginia,24
SONM,1129488,Sonim Technologies Inc,24
SONN,31041,Sonnet Biotherapeutics Holdings Inc,24
SONO,1088200,Sonos Inc,24
SP,17255,SP Plus Corp,24
SPCB,41284,Supercom Lt,24
SPEL,1166926,Spinal Elements Holdings Inc,24
SPFI,1129489,South Plains Financial Inc,24
SPI,962507,SPI Energy Co Ltd,24
SPKE,940844,Spark Energy Inc,24
SPKEP,997926,Spark Energy Inc Pref,24
SPLK,31066,Splunk Inc,24
SPNE,955568,SeaSpine Holdings Corp,24
SPNS,17234,Sapiens International Corporation NV,24
SPOK,17466,Spok Holdings Inc,24
SPPI,17235,Spectrum Pharmaceuticals Inc,24
SPRB,1166745,Spruce Biosciences Inc,24
SPRO,1053089,Spero Therapeutics Inc,24
SPRT,17238,Support.com Inc,24
SPSC,17239,SPS Commerce Inc,24
SPT,1155835,Sprout Social Inc,24
SPTN,17240,SpartanNash Co,24
SPWH,101907,Sportsmans,24
SPWR,8939,SunPower Corporation,24
SQBG,41339,Sequential Brands Group Inc,24
SQFT,1163494,Presidio Property Trust,24
SRAC,1163642,Stable Road Acquisition Corp,24
SRACU,1153340,Stable Road Acquisition Corp,24
SRAX,52661,SRAX Inc,24
SRCE,17244,1st Source Corporation,24
SRCL,6499,Stericycle Inc,24
SRDX,17245,SurModics Inc,24
SREV,17246,ServiceSource International Inc,24
SRGA,1163900,Surgalign Holdings Inc,24
SRNE,48425,Sorrento Therape,24
SRPT,15506,Sarepta Therapeutics Inc,24
SRRA,958225,Sierra Oncology Inc,24
SRRK,1075233,Scholar Rock Holding Corp,24
SRTS,985132,Sensus Healthcare Inc,24
SSB,17127,South State Corp,24
SSBI,17249,Summit State Bank,24
SSKN,16598,STRATA Skin Sciences Inc,24
SSNC,17251,SS&C Technologies Holdings Inc,24
SSNT,50857,SilverSun Technologies Inc,24
SSP,13089,E. W. Scripps Co Class A,24
SSPK,1163622,Silver Spike Acquisition Corp,24
SSPKU,1163595,Silver Spike Acquisition Corp,24
SSRM,9238,SSR Mining Inc,24
SSSS,960613,SuRo Capital Corp,24
SSTI,1011049,Shotspotter Inc,24
SSYS,17253,Stratasys Ltd,24
STAA,17254,STAAR Surgical Company,24
STAF,50992,Staffing 360 Solutions Inc,24
STAY,48390,Extended Stay America Inc,24
STBA,17257,S&T Bancorp Inc,24
STCN,16634,Steel Connect Inc,24
STEP,1166013,Stepstone Group Inc,24
STFC,17264,State Auto Financial Corporation,24
STIM,1081600,Neuronetics Inc,24
STKL,17265,SunOpta Inc.,24
STKS,953051,One Group Hospitality Inc,24
STLD,6387,Steel Dynamics Inc,24
STMP,17267,Stampscom Inc,24
STND,51088,Standard AVB Financial Corp,24
STNE,1096238,StoneCo Ltd,24
STOK,1137411,Stoke Therapeutics Inc,24
STRA,17270,Strategic Education Inc,24
STRL,17272,Sterling Construction Company Inc,24
STRM,17273,Streamline Health Solutions Inc,24
STRO,1096075,Sutro Biopharma,24
STRS,17275,Stratus Properties Inc,24
STRT,17276,Strattec Security Corporation,24
STSA,1152336,Satsuma Pharmaceuticals Inc,24
STTK,1166744,Shattuck Labs Inc,24
STWOU,1166492,ACON S2 Acquisition Corp,24
STX,8940,Seagate Technology PLC,24
STXB,1073225,Spirit of Texas Bancshares Inc,24
SUMO,1165972,Sumo Logic Inc,24
SUMR,17280,Summer Infant Inc,24
SUNS,24372,Solar Senior Capital Ltd,24
SUNW,52057,Sunworks Inc,24
SUPN,31069,Supernus Pharmaceuticals Inc,24
SURF,1073373,Surface Oncology Inc,24
SVA,17288,Sinovac Biotech Ltd,24
SVAC,1167598,Starboard Value Acquisition Corp,24
SVACU,1166017,Starboard Value Acquisition Corp,24
SVBI,17289,Severn Bancorp Inc,24
SVC,20324,Service Properties Trust,24
SVMK,1096076,SVMK Inc,24
SVRA,30652,Savara Inc,24
SVSVU,1167465,Spring Valley Acquisition Corp,24
SVVC,960660,Firsthand Technology Value,24
SWAV,1123145,Shockwave Medical Inc,24
SWBI,17291,Smith & Wesson Brands Inc,24
SWIR,17292,Sierra Wireless Inc.,24
SWKH,52595,SWK Holdings Corp,24
SWKS,32378,Skyworks Solutions Inc,24
SWTX,1152337,SpringWorks Therapeutics Inc,24
SXTC,1116657,China SXT Pharmaceuticals Inc,24
SY,1129394,So-Young International Inc,24
SYBT,17296,Stock Yards Bancorp Inc,24
SYBX,958825,Synlogic Inc,24
SYKE,17297,Sykes Enterprises Incorporated,24
SYNA,17300,Synaptics Incorporated,24
SYNC,39341,Synacor Inc,24
SYNH,942671,INC Research Holdings Inc,24
SYNL,17301,Synalloy Corporation,24
SYPR,17305,Sypris Solutions Inc,24
SYRS,985718,Syros Pharmaceuticals Inc,24
SYTA,1166433,Siyata Mobile Inc,24
TA,30935,TravelCenters of America LLC,24
TACO,100168,Del Taco Restaurants Inc,24
TACT,17308,TransAct Technologies Incorporated,24
TAIT,17309,Taitron Components Incorporated,24
TANH,948332,Tantech Holdings Ltd,24
TAOP,15760,Taoping Inc,24
TARA,942498,Protara Therapeutics Inc,24
TARS,1166964,Tarsus Pharmaceuticals Inc,24
TAST,17310,Carrols Restaurant Group Inc,24
TATT,17311,Tat Techno,24
TAYD,17314,Taylor Devices Inc,24
TBBK,17316,The Bancorp Inc,24
TBIO,1081624,Translate Bio Inc,24
TBK,943153,Triumph Bancorp,24
TBLT,1115210,Toughbuilt Industries Inc,24
TBNK,17318,Territorial Bancorp Inc,24
TBPH,102920,Theravance Biopharma Inc,24
TC,1097737,TuanChe ADR,24
TCBI,17321,Texas Capital Bancshares Inc,24
TCBIP,960661,Texas Capital Bancshares Inc Pi Pref,24
TCBK,17322,TriCo Bancshares,24
TCCO,17323,Technical Communications,24
TCDA,1081562,Tricida Inc,24
TCF,20842,TCF Financial Corporation,24
TCFC,41331,Community Financial Corp,24
TCMD,985781,Tactile Systems Technology Inc,24
TCOM,6451,Trip.com Group Ltd ADR,24
TCON,945082,TRACON Pharmaceuticals Inc,24
TCPC,960662,BlackRock TCP Capital Corp,24
TCRR,1121155,Tcr2 Therapeutics Inc,24
TCX,30937,Tucows Inc.,24
TDAC,1095119,Trident Acquisitions Corp,24
TEAM,962333,Atlassian Corp Plc,24
TECH,17327,Bio-Techne Corp,24
TECTP,1163685,Tectonic Financial Inc PR,24
TEDU,100188,Tarena Intl Adr,24
TEKKU,1167036,Tekkorp Digital Acquisition Corp,24
TELA,1153691,Tela Bio Inc,24
TELL,16661,Tellurian Inc,24
TENB,1084931,Tenable Holdings Inc,24
TENX,16852,Tenax Therapeutics Inc,24
TER,8362,Teradyne Inc,24
TESS,17332,TESSCO Technologies Incorporated,24
TFFP,1153446,Tff Pharmaceuticals Inc,24
TFSL,17336,TFS Financial Corporation,24
TGA,17337,TransGlobe Energy Corporation,24
TGLS,31006,Tecnoglass Inc,24
TGTX,41018,TG Therapeutics Inc,24
TH,960585,Target Hospitality Corp Class A,24
THBR,1163559,Thunder Bridge Acquisition II Ltd,24
THBRU,1163523,Thunder Bridge Acquisition II Ltd,24
THCA,1163705,Tuscan Holdings Corp II,24
THCB,1123578,Tuscan Holdings Corp,24
THCBU,1165679,Tuscan Holdings Corp,24
THFF,17341,First Financial Corporation Indiana,24
THMO,16468,Thermogenesis Holdings Inc,24
THRM,15446,Gentherm Inc,24
THRY,40983,Thryv Holdings Inc,24
THTX,17340,Theratechnologies Inc.,24
TIG,1163279,Trean Insurance Group Inc,24
TIGO,53046,Millicom International Cellular SA,24
TIGR,1123579,Up Fintech Holding Ltd,24
TILE,16340,Interface Inc,24
TIPT,41330,Tiptree Inc,24
TITN,17356,Titan Machinery Inc,24
TLC,1073627,Taiwan Liposome Co Ltd ADR,24
TLGT,30805,Teligent Inc,24
TLMD,1163718,Soc Telemed Inc,24
TLND,986082,Talend SA,24
TLRY,1084213,Tilray Inc,24
TLS,1167332,Telos Corp,24
TLSA,1097545,Tiziana Life Sciences PLC ADR,24
TMDI,51144,Titan Medical Inc,24
TMDX,1129318,TransMedics Group Inc,24
TMPMU,1166981,Turmeric Acquisition Corp,24
TMTS,1167599,Spartacus Acquisition Corp,24
TMUS,19694,T-Mobile US Inc,24
TNAV,17363,TeleNav Inc,24
TNDM,48409,Tandem Diabetes Care Inc,24
TNXP,41341,Tonix Pharmaceuticals Holding Corp,24
TOMZ,52384,TOMI Environmental Solutions Inc,24
TOPS,17370,Top Ships Inc,24
TOTA,1089642,Tottenham Acquisition I Ltd,24
TOUR,101924,Tuniu Corp,24
TOWN,17372,Towne Bank,24
TPCO,945657,Tribune Publishing Co,24
TPIC,985959,TPI Composites Inc,24
TPTX,1127924,Turning Point Therapeutics Inc,24
TRCH,48420,Torchlight Energ,24
TREE,17377,Lendingtree Inc,24
TRHC,989659,Tabula Rasa HealthCare Inc,24
TRIB,17380,Trinity Biotech plc,24
TRIL,48950,Trillium Therapeutics Inc,24
TRIP,32539,TripAdvisor Inc,24
TRIT,1163703,Triterras Inc,24
TRMB,39337,Trimble Inc,24
TRMD,17385,Torm PLC Class A,24
TRMK,17386,Trustmark Corporation,24
TRMT,1046331,Tremont Mortgage Trust,24
TRNS,17387,Transcat Inc,24
TROW,6480,T. Rowe Price Group Inc,24
TRS,17389,TriMas Corporation,24
TRST,17390,TrustCo Bank Corp NY,24
TRUE,101926,Truecar Inc,24
TRUP,940816,Trupanion Inc,24
TRVG,994234,Trivago NV,24
TRVI,1129320,Trevi Therapeutics Inc,24
TRVN,100177,Trevena Inc,24
TSBK,17391,Timberland Bancorp Inc,24
TSC,41019,TriState Capital Holdings Inc,24
TSCAP,1073103,TriState Capital Holdings Inc ADR Series A,24
TSCO,32379,Tractor Supply Company,24
TSEM,17393,Tower Semiconductor Ltd,24
TSHA,1166361,Taysha Gene Therapies Inc,24
TSIAU,1167316,Ts Innovation Acquisitions Corp,24
TSLA,13994,Tesla Inc,24
TSRI,17397,TSR Inc,24
TTCF,1089330,Tattooed Chef Inc,24
TTCFW,1167216,Tattooed Chef Inc Warrant,24
TTD,989534,Trade Desk Inc,24
TTEC,17403,TTEC Holdings Inc,24
TTEK,17404,Tetra Tech Inc,24
TTGT,17405,TechTarget Inc,24
TTMI,17407,TTM Technologies Inc,24
TTNP,50957,Titan Pharmaceuticals Inc,24
TTOO,940845,T2 Biosystms Inc,24
TTWO,13995,Take-Two Interactive Software Inc,24
TURN,17353,180 Degree Capital Corp,24
TUSK,991230,Mammoth Energy Services Inc,24
TVACU,1167315,Thayer Ventures Acquisition Corp,24
TVTX,100229,Travere Therapeutics Inc,24
TVTY,16311,Tivity Health Inc,24
TW,1123969,Tradeweb Markets Inc,24
TWCTU,1165514,Twc Tech Holdings II,24
TWIN,17412,Twin Disc Incorporated,24
TWNK,961754,Hostess Brands Inc,24
TWOU,100211,2U Inc,24
TWST,1096240,Twist Bioscience Corp,24
TXG,1152338,10X Genomics Inc,24
TXMD,949611,TherapeuticsMD Inc,24
TXN,8268,Texas Instruments Incorporated,24
TXRH,17416,Texas Roadhouse Inc,24
TYHT,989660,Shineco Inc,24
TYME,1031339,Tyme Technologies Inc,24
TZAC,1091202,Tenzing Acquisition Corp,24
TZOO,39156,Travelzoo Inc,24
UAL,13061,United Airlines Holdings Inc,24
UBCP,17421,United Bancorp Inc,24
UBFO,17422,United Security Bancshares,24
UBOH,17425,United Bancshares Inc,24
UBSI,17428,United Bankshares Inc,24
UBX,1073224,Unity Biotechnology Inc,24
UCBI,17430,United Community Banks Inc,24
UCL,1161539,Ucloudlink Group Inc,24
UCTT,17432,Ultra Clean Holdings Inc,24
UEIC,17434,Universal Electronics Inc,24
UEPS,17435,Net 1 UEPS Technologies Inc,24
UFCS,17436,United Fire Group Inc,24
UFPI,17437,Ufp Industries Inc,24
UFPT,17438,UFP Technologies Inc,24
UG,17439,United-Guardian Inc,24
UHAL,17440,Amerco,24
UIHC,40101,United Insurance Holdings Corp,24
ULBI,17441,Ultralife Corporation,24
ULH,17420,Universal Logistics Holdings Inc,24
ULTA,39338,Ulta Beauty Inc,24
UMBF,17446,UMB Financial Corporation,24
UMPQ,17447,Umpqua Holdings Corporation,24
UNAM,17448,Unico American Corporation,24
UNB,17449,Union Bankshares Inc,24
UNIT,951002,Uniti Group Inc,24
UNTY,17454,Unity Bancorp Inc,24
UONE,17076,Urban One,24
UONEK,17077,Urban One Inc Class D,24
UPLD,942670,Upland Software Inc,24
UPWK,1096129,Upwork Inc,24
URBN,13087,Urban Outfitters Inc,24
URGN,1009134,UroGen Pharma Ltd,24
UROV,1096072,Urovant Sciences,24
USAK,17458,USA Truck Inc,24
USAP,17459,Universal Stainless & Alloy,24
USAT,17460,USA Technologies Inc,24
USAU,15931,US Gold Corp,24
USCR,17462,U S Concrete Inc,24
USEG,17463,US Energy Corp,24
USIO,958251,Usio Inc,24
USLM,17465,United States Lime & Minerals Inc,24
USWS,16658,US Well Services Inc,24
UTHR,32374,United Therapeutics Corporation,24
UTMD,17472,Utah Medical Products Inc,24
UTSI,6452,UTStarcom Holdings Corp,24
UVSP,17473,Univest Corporation Pennsylvania,24
UXIN,1080044,Uxin Ltd,24
VACQU,1166434,Vector Acquisition Corp,24
VALU,17474,Value Line Inc,24
VBFC,17477,Village Bank and Trust Financial,24
VBIV,16917,VBI Vaccines Inc,24
VBLT,942327,Vascular Biogenics Ltd,24
VBTX,942488,Veritex Holdings Inc,24
VC,39150,Visteon Corp,24
VCEL,15477,Vericel Corp Ord,24
VCNX,1088194,Vaccinex Inc,24
VCTR,1061932,Victory Capital Holdings Inc,24
VCYT,48421,Veracyte Inc,24
VECO,17481,Veeco Instruments Inc,24
VEON,29714,VEON Ltd,24
VERB,1073049,VERB TECHNOLOGY COMPANY INC,24
VERI,1010529,Veritone Inc,24
VERO,1052241,Venus Concept Inc,24
VERU,16095,Veru Inc,24
VERX,1163495,Vertex,24
VERY,1155751,Vericity Inc,24
VG,24317,Vonage Holdings Corp,24
VIAC,8171,ViacomCBS Inc,24
VIACA,1163792,ViacomCBS Inc,24
VIAV,6438,Viavi Solutions Inc,24
VICR,17485,Vicor Corporation,24
VIE,1152991,Viela Bio Inc,24
VIHAU,1166408,Vpc Impact Acquisition Holdings,24
VIOT,1096071,Viomi Technology ADR,24
VIR,1153039,Vir Biotechnology Inc,24
VIRC,17489,Virco Manufacturing Corporation,24
VIRT,949627,Virtu Financial Inc,24
VISL,41332,Vislink Technologies Inc,24
VITL,1163507,Vital Farms Inc,24
VIVE,51929,Viveve Medical Inc,24
VIVO,17493,Meridian Bioscience Inc,24
VJET,48395,Voxeljet Ag,24
VKTX,951005,Viking Therapeutics Inc,24
VLDR,1096533,Velodyne Lidar Inc,24
VLGEA,17495,Village Super Market Inc,24
VLY,29717,Valley National Bancorp,24
VLYPO,1043277,Valley National Bancorp B Pref,24
VLYPP,960514,Valley National Bancorp A Pref,24
VMAC,1165680,Vistas Media Acquisition Company Inc,24
VMACU,1164097,Vistas Media Acq Co,24
VNDA,17498,Vanda Pharmaceuticals Inc,24
VNET,17499,21Vianet Group Inc,24
VNOM,102923,Viper Energy Ut,24
VOD,22196,Vodafone Group PLC ADR,24
VOXX,17502,VOXX International Corporation,24
VRA,17507,Vera Bradley Inc,24
VRAY,961108,ViewRay Inc,24
VRCA,1080049,Verrica Pharmaceuticals Inc,24
VREX,995706,Varex Imaging Corp,24
VRM,1161540,Vroom,24
VRME,51981,VerifyMe Inc,24
VRNA,963591,Verona Pharma PLC ADR,24
VRNS,100233,Varonis Systems,24
VRNT,39157,Verint Systems Inc,24
VRRM,999054,Verra Mobility Corp,24
VRSK,39340,Verisk Analytics Inc,24
VRSN,6407,VeriSign Inc,24
VRTS,17514,Virtus Investment Partners Inc,24
VRTU,17515,Virtusa Corporation,24
VRTX,6353,Vertex Pharmaceuticals Inc,24
VSAT,17517,ViaSat Inc,24
VSEC,17521,VSE Corporation,24
VSPR,1167600,Vesper Healthcare Acquisition Corp,24
VSPRU,1166390,Vesper Healthcare Acquisition Corp,24
VSTA,1163506,Vasta Platform Ltd,24
VSTM,31075,Verastem Inc,24
VTGN,985960,VistaGen Therapeutics Inc,24
VTNR,40103,Vertex Energy Inc,24
VTRS,13570,Viatris Inc,24
VTRU,1165973,Vitru Ltd,24
VTSI,52004,VirTra Inc,24
VTVT,958245,vTv Therapeutics Inc,24
VUZI,51011,Vuzix Corp Cmn Stk,24
VVPR,994716,VivoPower International PLC,24
VXRT,16693,Vaxart Inc,24
VYGR,961634,Voyager Therapeutics Inc,24
VYNE,1061141,Vyne Therapeutics Inc,24
WABC,17530,Westamerica Bancorporation,24
WAFD,17546,Washington Federal Inc,24
WAFU,1129462,Wah Fu Education Group Ltd,24
WASH,17531,Washington Trust Bancorp Inc,24
WATT,100206,Energous Co,24
WB,101899,Weibo Corp,24
WBA,8355,Walgreens Boots Alliance Inc,24
WDAY,32361,Workday Inc,24
WDC,8117,Western Digital Corporation,24
WDFC,17540,WD-40 Company,24
WEN,32543,The Wendy Co,24
WERN,17541,Werner Enterprises Inc,24
WETF,17543,WisdomTree Investments Inc,24
WEYS,17544,Weyco Group Inc,24
WHF,960670,WhiteHorse Finance,24
WHLM,940847,Wilhelmina,24
WHLR,40105,Wheeler Real Estate Investment Trust Inc,24
WHLRD,989535,Wheeler Real Estate Investment Trust Inc,24
WHLRP,960671,Wheeler Real Estate Investment Trust Inc Pref,24
WIFI,17549,Boingo Wireless Inc,24
WILC,17550,G Willi-Food International Ltd,24
WIMI,1141824,WiMi Hologram Cloud Inc,24
WINA,17553,Winmark Corporation,24
WING,953821,Wingstop Inc,24
WINT,39330,Windtree Therapeutics Inc,24
WIRE,17555,Encore Wire Corporation,24
WISA,1089515,Summit Wireless Technologies,24
WIX,42595,Wix.Com Ltd,24
WKEY,1163583,Wisekey International Holding AG,24
WKHS,50880,Workhorse Group Inc,24
WLDN,17559,Willdan Group Inc,24
WLFC,17560,Willis Lease Finance Corporation,24
WLTW,29740,Willis Towers Watson PLC,24
WMG,1161407,Warner Music Group,24
WNEB,17545,Western New England Bancorp Inc,24
WORX,991226,Scworx Corp,24
WPRT,32388,Westport Fuel Systems Inc,24
WRAP,1082105,Wrap Technologies Inc,24
WRLD,17569,World Acceptance Corporation,24
WSBC,17572,WesBanco Inc,24
WSBF,17573,Waterstone Financial Inc,24
WSC,960584,WillScot Corp Class A,24
WSFS,17575,WSFS Financial Corporation,24
WSG,1141823,Wanda Sports Group Co Ltd,24
WSTG,17576,Wayside Technology Group Inc,24
WTBA,17578,West Bancorporation,24
WTER,50893,Alkaline Water Company Inc,24
WTFC,17579,Wintrust Financial Corporation,24
WTFCM,960672,Wintrust Financial Corp Pref,24
WTFCP,1165681,Wintrust Financial Corp,24
WTRE,1123962,Watford Hldg Ltd,24
WTREP,1163706,Watford Holdings Ltd PR,24
WTRH,986299,Waitr Holdings Inc,24
WVE,961635,Wave Life Sciences Ltd,24
WVFC,17582,WVS Financial Corp,24
WVVI,17583,Willamette Valley Vineyards Inc,24
WVVIP,1163539,Willamette Valley Vineyards Inc PR,24
WW,32353,WW International Inc,24
WWD,17585,Woodward Inc,24
WWR,17457,Westwater Resources Inc,24
WYNN,6392,Wynn Resorts Limited,24
XAIR,1052097,Beyond Air Inc,24
XBIO,50984,Xenetic Biosciences Inc,24
XBIT,949628,XBiotech Inc,24
XCUR,1136270,Exicure Inc,24
XEL,7875,Xcel Energy Inc,24
XELA,1024875,Exela Technologies Inc,24
XELB,958247,Xcel Brands Inc,24
XENE,943154,Xenon Pharmaceuticals Inc,24
XENT,940761,Intersect ENT Inc,24
XERS,1080052,Xeris Pharmaceuticals Inc,24
XFOR,1054957,X4 Pharmaceuticals Inc,24
XGN,1152785,Exagen Inc,24
XLNX,6467,Xilinx Inc,24
XLRN,41285,Acceleron P,24
XNCR,48422,Xencor Inc,24
XNET,102928,Xunlei Ltd Adr,24
XOMA,17594,XOMA Corp,24
XONE,40106,The ExOne Company,24
XP,1155836,Xp Inc,24
XPEL,1142327,Xpel Inc,24
XPER,17396,Xperi Corp,24
XRAY,6411,Dentsply Sirona Inc,24
XSPA,30963,XpresSpa Group Inc,24
XTLB,41333,X T L Biopharmaceuticals Ltd,24
YGMZ,1167040,Mingzhu Logistics Holdings Ltd,24
YI,1096066,111 Inc,24
YJ,1129395,Yunji Inc,24
YMAB,1096068,Y mAbs Therapeutics,24
YNDX,13999,Yandex NV,24
YORW,17604,The York Water Company,24
YQ,1167736,17 Education Technology Group Inc,24
YRCW,6458,YRC Worldwide Inc,24
YSACU,1167601,Yellowstone Acquisition Co,24
YTEN,32393,Yield10 Bioscience Inc,24
YTRA,994250,Yatra Online Inc,24
YVR,16489,Liquid Media Group Ltd,24
YY,40109,YY Inc Class A,24
Z,17606,Zillow Group Inc Class C,24
ZAGG,17607,ZAGG Inc,24
ZBRA,17608,Zebra Technologies Corporation,24
ZCMD,1156667,Zhongchao Inc,24
ZEAL,1031180,Zealand Pharma A/S ADR,24
ZEUS,17609,Olympic Steel Inc,24
ZGNX,17610,Zogenix Inc,24
ZGYH,1165682,Yunhong International,24
ZGYHU,1163711,Yunhong International,24
ZION,6418,Zions Bancorporation,24
ZIONN,960549,Zions Bancorporation Ph ADR,24
ZIONO,960548,Zions Bancorporation Pg ADR,24
ZIONP,960546,Zions Bancorporation Pa ADR,24
ZIOP,17614,ZIOPHARM Oncology Inc,24
ZIXI,17617,Zix Corporation,24
ZKIN,1043281,ZK International Group Co Ltd,24
ZLAB,1050117,Zai Lab Ltd,24
ZM,1127188,Zoom Video Communications Inc,24
ZNGA,27527,Zynga Inc,24
ZNTEU,1167426,Zanite Acquisition Corp,24
ZNTL,1159380,Zentalis Pharmaceuticals Llc,24
ZS,1072222,Zscaler Inc,24
ZSAN,945075,Zosano Pharma Corp,24
ZUMZ,17625,Zumiez Inc,24
ZVO,20612,Zovio Inc,24
ZYNE,958248,Zynerba Pharmaceuticals Inc,24
ZYXI,1122406,Zynex Inc,24
ABCL,1167955,Abcellera Biologics Inc,24
ABNB,1167744,Airbnb Inc,24
CERT,1167752,Certara Inc,24
CVLB,1123504,Conversion Labs Inc,24
CYTH,52243,Ctd Holdings Inc,24
EDTXU,1167957,Edtechx Holdings Acquisition II Cor,24
FDMT,1167954,4D Molecular Therapeutics Inc,24
GBS,1167135,Gbs,24
HYFM,1167746,Hydrofarm Holdings Group Inc,24
NBTX,1167958,Nanobiotix,24
OCG,1167749,Oriental Culture Holding Ltd,24
PUBM,1167747,Pubmatic Inc,24
VVOS,1167750,Vivos Therapeutics Inc,24
ABST,1167129,Absolute Software Corporation,24
AEZS,15348,Aeterna Zentaris Inc,24
APHA,1062862,Aphria Inc,24
BLU,52406,BELLUS Health Inc,24
CIGI,16137,Colliers International Group Inc Bats,24
DCBO,1167737,Docebo Inc,24
IMV,1081591,Imv Inc,24
KOR,1165435,Corvus Gold Inc,24
LMNL,52638,ProMetic Life Sciences Inc,24
MDNA,1165670,Medicenna Therapeutics Corp,24
MOGO,1073633,Mogo Inc,24
NEPT,16720,Neptune Wellness Solutions Inc,24
OGI,1096199,OrganiGram Holdings Inc,24
OTEX,16844,Open Text Corp,24
VFF,1123048,Village Farms International Inc,24
VMD,1062557,Viemed Healthcare Inc,24
DFH,1168996,Dream Finders Homes Inc,24
LEGOU,1169120,Legato Merger Corp,24
TZPSU,1168995,TZP Strategies Acquisition Corp,24
GMBTU,1169115,Queen's Gambit Growth Capital,24
FOXWU,1169121,FoxWayne Enterprises Acquisition Corp,24
DRVN,1168847,Driven Brands Holdings Inc,24
EACPU,1168992,Edify Acquisition Corp,24
AEACU,1168991,Authentic Equity Acquisition Corp,24
PLTK,1168839,Playtika Holding Corp,24
POSH,1168857,Poshmark Inc,24
MONCU,1168994,Monument Circle Acquisition Corp,24
SLCRU,1168999,Silver Crest Acquisition Corp,24
WOOF,1168863,Pet Acquisition LLC,24
ENVIU,1168993,Environmental Impact Acquisition Co,24
FINMU,1169000,Marlin Technology Corp,24
AFRM,1168844,Affirm Holdings Inc,24
MSGM,1168855,Motorsport Gaming Us LLC,24
QLI,1168859,Qilian International Holding Group Ltd,24
BCYPU,1168845,Big Cypress Acquisition Corp,24
GRCL,1168851,Gracell Biotechnologies Inc,24
GSAQU,1168852,Global Synergy Acquisition Corp,24
EPHYU,1168848,Epiphany Technology Acquisition Corp,24
KLAQU,1168853,Kl Acquisition Corp,24
CGEM,1168846,Cullinan Oncology LLC,24
PRSRU,1168858,Prospector Capital Corp,24
TMKRU,1168861,Tastemaker Acquisition Corp,24
SVFAU,1168860,SVF Investment Corp,24
PACXU,1168856,Pioneer Merger Corp,24
LWACU,1168854,Locust Walk Acquisition Corp,24
VTIQU,1169079,VectoIQ Acquisition II Corp,24
BENEU,1168238,Benessere Capital Acquisition Corp,24
CFFVU,1169871,CF Acquisition V Corp,24
CLRMU,1169853,Clarim Acquisition Corp,24
GCACU,1169331,Growth Capital Acquisition Corp,24
HMPT,1169333,Home Point Capital Inc,24
NLSP,1169873,NLS Pharmaceutics AG,24
ZWRKU,1169870,Z-Work Acquisition Corp,24
XM,1097393,Qualtrics International Inc,24
OCDX,1169117,Ortho Clinical Diagnostics Holdings PLC,24
VINP,1169119,Vinci Partners Investments Ltd,24
ITHXU,1169866,ITHAX Acquisition Corp,24
IGNYU,1169857,Ignyte Acquisition Corp,24
AGFY,1169190,Agrify Corp,24
CAHCU,1169339,CA Healthcare Acquisition Corp,24
HCAQ,1169332,HealthCor Catalio Acquisition Corp,24
FSSIU,1169338,Fortistar Sustainable Solutions Corp,24
SHLS,1169118,Shoals Technologies Group Inc,24
TIRX,1169337,Tian Ruixiang Holdings Ltd,24
SSAAU,1169791,Science Strategic Acquisition Alpha Corp,24
HCIIU,1169808,Hudson Executive Investment Corp II,24
LMAOU,1169802,LMF Acquisition Opportunities Inc,24
EZGO,1169892,EZGO Technologies Ltd,24
DHHCU,1169846,DiamondHead Holdings Corp,24
BTNB,1169175,Bridgetown 2 Holdings Ltd,24
BIOTU,1169826,Biotech Acquisition Co,24
EUSGU,1169587,European Sustainable Growth Acquisition Corp,24
LMACU,1169589,Liberty Media Acquisition Corp,24
MNTK,1169176,Montauk Renewables Inc,24
HUDI,1169180,Huadi International Group Co Ltd,24
NAACU,1169177,North Atlantic Acquisition Corp,24
OEPWU,1169795,One Equity Partners Open Water I Corp,24
PAX,1169114,Patria Investments Ltd,24
SHACU,1169804,SCP & Healthcare Acquisition Co,24
VOSOU,1169122,Virtuoso Acquisition Corp,24
GMIIU,1169847,Gores Metropoulos II Inc,24
OSTRU,1169800,Oyster Enterprises Acquisition Corp,24
OCAXU,1169880,OCA Acquisition Corp,24
GNACU,1169829,Group Nine Acquisition Corp,24
HCCCU,1169856,Healthcare Capital Corp,24
HCICU,1169266,Hennessy Capital Investment V Corp,24
ADERU,1169824,26 Capital Acquisition Corp,24
HLAHU,1169721,Hamilton Lane Alliance Holdings I Inc,24
DLCAU,1169301,Deep Lake Capital Acquisition Corp,24
ENFAU,1169822,890 5th Avenue Partners Inc,24
GPACU,960610,Global Partner Acquisition II Unit,24
SWETU,1169863,Athlon Acquisition Corp,24
POWRU,1169888,Powered Brands,24
PAQCU,1169727,Provident Acquisition Corp,24
LJAQU,1169837,Lightjump Acquisition Corp,24
MCADU,1169803,Mountain Crest Acquisition II Corp,24
BLTSU,1169814,Bright Lights Acquisition Corp,24
INKAU,1169835,KludeIn I Acquisition Corp,24
VCKAU,1169885,Vickers Vantage Corp I,24
OMEG,1169901,Omega Alpha SPAC,24
PPGHU,1169841,Poema Global Holdings Corp,24
KAIRU,1169858,Kairos Acquisition Corp,24
AKICU,1169806,Sports Ventures Acquisition Corp,24
HCARU,1169797,Healthcare Services Acquisition Corp,24
ACKIU,1169900,Ackrell SPAC Partners I Co,24
IIIIU,1169872,Insu Acquisition Corp III,24
GHVIU,1169865,Gores Holdings VI Inc,24
GLAQU,1169855,Globis Acquisition Corp,24
SNRHU,1169813,Senior Connect Acquisition Corp I,24
CTAQU,1169801,Carney Technology Acquisition Corp. II,24
FLACU,1169794,Frazier Lifesciences Acquisition Corp,24
MUDSU,1169809,Mudrick Capital Acquisition Corporation II,24
RAACU,1169790,Revolution Acceleration Acquisition Corp,24
DDMXU,1169875,DD3 Acquisition Corp II,24
RSVAU,1169793,Rodgers Silicon Valley Acquisition Corp,24
VCVCU,1169798,10X Capital Venture Acquisition Corp,24
VMAR,1168331,Vision Marine Technologies Inc,24
LSAQ,1169860,Lifesci Acquisition II Corp,24
CFACU,1169812,CF Finance Acquisition III Corp,24
BWACU,1169819,Better World Acquisition Corp,24
DBTX,1169943,Decibel Therapeutics Inc,24
LGVN,1169944,Longeveron LLC,24
NEXI,1169945,Neximmune Inc,24
TLIS,1169946,Talis Biomedical Corp,24
BVS,1169942,Bioventus Inc,24
BMBL,1169490,Bumble Inc,24
APR,1169489,Apria Inc,24
BPTS,1169507,Biophytis,24
FOREU,1169340,Foresight Acquisition Corp,24
DSP,1169493,Viant Technology Inc,24
SDH,1169949,Global Internet of People Inc,24
PGRWU,1169491,Progress Acquisition Corp,24
ADAG,1169487,Adagene Inc,24
BAOS,1169815,Baosheng Media Group Holdings Ltd,24
BOLT,1169506,Bolt Biotherapeutics,24
ANGN,1169480,Angion Biomedica Corp,24
ARKIU,1169825,Ark Global Acquisition Corp,24
IMCR,1169481,Immunocore Holdings Ltd,24
FWAA,1169854,Fifth Wall Acquisition Corp I,24
CNEY,1169897,CN Energy Group Inc,24
COVAU,1169717,COVA Acquisition Corp,24
EVAX,1169334,Evaxion Biotech AS,24
PHVS,1169483,Pharvaris BV,24
LHDX,1169482,Lucira Health Inc,24
JOFFU,1169821,JOFF Fintech Acquisition Corp,24
TBCPU,1169792,Thunder Bridge Capital Partners III Inc,24
TERN,1169485,Terns Pharmaceuticals Inc,24
SDACU,1169789,Sustainable Development Acquisition I Corp,24
RMGCU,1169881,RMG Acquisition Corp III,24
VOR,1169486,Vor Biopharma Inc,24
SANA,1169350,Sana Biotechnology Inc,24
SNSE,1169484,Sensei Biotherapeutics Inc,24
LABP,1169349,Landos Biopharma Inc,24
DCRNU,1169365,Decarbonization Plus Acquisition II,24
ITQRU,1169848,Itiquira Acquisition Corp,24
ASAXU,1169852,Astrea Acquisition Corp,24
CENHU,1169834,Centricus Acquisition Corp,24
GHACU,1169799,Gaming & Hospitality Acquisition Corp,24
KRNLU,1169836,Kernel Group Holdings Inc,24
THMAU,1169817,Thimble Point Acquisition Corp,24
NRACU,1169830,Noble Rock Acquisition Corp,24
ARYD,1170358,ARYA Sciences Acquisition IV Corp,24
MACQU,1170228,MCAP Acquisition Corp,24
ISLEU,1170362,Isleworth Healthcare Acquisition Corp,24
GIIXU,1170340,Gores Holdings VIII Inc,24
EJFAU,1170360,EJF Acquisition Corp,24
HIIIU,1170341,Hudson Executive Investment Corp III,24
SRNGU,1170364,Soaring Eagle Acquisition Corp,24
SLAMU,1171249,Slam Corp,24
ASPCU,1170203,Alpha Capital Acquisition Co,24
CFVIU,1170325,CF Acquisition Corp VI,24
KIIIU,1170327,Kismet Acquisition Three Corp,24
FSRXU,1171241,FinServ Acquisition II Corp,24
KAIIU,1170326,Kismet Acquisition Two Corp,24
FSII,1170200,FS Development II Corp,24
AUUD,1170247,Auddia Inc,24
ABGI,1170199,ABG Acquisition I Corp,24
MACAU,1170329,Moringa Acquisition Corp,24
NVSAU,1170201,New Vista Acquisition Corp,24
PFDRU,1170202,Pathfinder Acquisition Corp,24
SPTKU,1170251,SportsTek Acquisition Corp,24
MSACU,1169989,Medicus Sciences Acquisition Corp,24
SCLEU,1170332,Broadscale Acquisition Corp,24
RCLFU,1170331,Rosecliff Acquisition I Corp,24
TCACU,1170333,Tuatara Capital Acquisition Corp,24
TSIBU,1170334,Tishman Speyer Innovation II Corp,24
LGACU,1170328,Lazard Growth Acquisition Corp I,24
SCOBU,1170126,ScION Tech Growth II,24
VLON,1170128,Vallon Pharmaceuticals Inc,24
GIGGU,1170124,GigCapital4 Inc,24
VENAU,1170335,Venus Acquisition Corp,24
GANX,1171597,Gain Therapeutics Inc,24
RACB,1171769,Research Alliance Corp II,24
SNCY,1171385,Sun Country Airlines Holdings Inc,24
JWEL,1171383,Jowell Global Ltd.,24
LBPH,1171382,Longboard Pharmaceuticals Inc,24
JOAN,1171270,Joann Inc,24
MITC,1171589,Meatech 3D Ltd,24
VAQC,1171540,Vector Acquisition II Corp,24
AGGRU,1171380,Agile Growth Corp,24
VPCBU,1171316,VPC Impact Acquisition Holdings II,24
LHAA,1171313,Lerer Hippeau Acquisition Corp,24
KVSA,1171202,Khosla Ventures Acquisition Co,24
INNV,1171266,InnovAge Holding Corp,24
ROCRU,1170342,Roth CH Acquisition III Co,24
GBRGU,1171310,Goldenbridge Acquisition Ltd,24
ACHL,1172060,Achilles Therapeutics PLC ADR,24
TDUP,1171959,ThredUp Inc,24
ALHC,1171961,Alignment Healthcare LLC,24
DSGN,1171962,Design Therapeutics Inc,24
EWTX,1171992,Edgewise Therapeutics Inc,24
HYW,1171972,Hywin Holdings Ltd ADR,24
IKNA,1171963,Ikena Oncology Inc,24
CRCT,1171773,Cricut Inc,24
DSEY,1171775,Diversey Holdings Ltd,24
OLK,1171967,Olink Holding AB  ADR,24
KVSB,1171964,Khosla Ventures Acquisition Co II,24
KVSC,1171965,Khosla Ventures Acquisition Co III,24
ACVA,1171772,ACV Auctions Inc,24
GLHAU,1171598,Glass Houses Acquisition Corp,24
UPC,1171275,Universe Pharmaceuticals Inc,24
MOVE,1171800,Movano Inc,24
TIL,1171768,Instil Bio Inc,24
FNCH,1171825,Finch Therapeutics Group Inc,24
CNTB,1171596,Connect Biopharma Holdings Ltd,24
AFCG,1169488,AFC Gamma Inc,24
AMAOU,1171822,American Acquisition Opportunity Inc Unit,24
REVHU,1171838,Revolution Healthcare Acquisition Corp Unit,24
EBACU,1171823,European Biotech Acquisition Corp Unit,24
RXDX,1171798,Prometheus Biosciences Inc,24
FTPAU,1171824,FTAC Parnassus Acquisition Corp Unit,24
KARO,1171975,Karooooo Ltd,24
ULCC,1171971,Frontier Group Holdings Inc,24

#USA NEWYORK
COMP,1172059,Compass Inc,26
OPA_U,1172038,Magnum Opus Acquisition Ltd Unit,26
OLO,1171799,Olo Inc,26
DOCN,1171774,DigitalOcean Holdings Inc,26
SEMR,1171777,Semrush Holdings Inc,26
ZH,1171968,Zhihu Inc ADR,26
VZIO,1171778,Vizio Holding Corp,26
COUR,1171969,Coursera Inc,26
HAYW,1171379,Hayward Holdings Inc,26
CPNG,1171204,Coupang LLC,26
FHS,1171378,First High School Education Group Co Ltd,26
RBLX,1168998,Roblox Corp,26
RAAS,1170154,Cloopen Group Holding Ltd,26
ASZ_U,1171240,Austerlitz Acquisition II Corp,26
NAPA,1171599,Duckhorn Portfolio Inc,26
OSCR,1170442,Oscar Health Inc,26
GROY,1171743,Gold Royalty Corp,26
TUYA,1171765,Tuya Inc ADR,26
VEI,1171757,Vine Energy Inc,26
SGFY,1169492,Signify Health Inc,26
LDI,1169367,Loandepot Inc,26
NXU_U,1169777,Novus Capital II Corp,26
ATC,1169362,Atotech BV,26
ONTF,1169335,ON24 Inc,26
TIXT,1169336,TELUS International,26
MDH_U,1169783,MDH Acquisition Corp,26
AAC_U,1169775,Ares Acquisition Corp,26
CAS_U,1167466,Cascade Acquisition Corp,26
FRX_U,1167570,Forest Road Acquisition Corp Unit,26
OCA_U,1167467,Omnichannel Acquisition Corp,26
CAP_U,1169769,Capitol Investment Corp V,26
MIT_U,1169746,Mason Industrial Technology Inc,26
ZIM,1169179,ZIM Integrated Shipping Services Ltd,26
DNZ_U,1169754,D and Z Media Acquisition Corp,26
PV_U,1169580,Primavera Capital Acquisition Corp,26
RLX,1169116,RLX Technology Inc,26
TBA,1169252,Thoma Bravo Advantage,26
AGCB,1169576,Altimeter Growth 2 Corp,26
CRU_U,1169768,Crucible Acquisition Corp,26
FVT_U,1169739,Fortress Value Acquisition III Corp,26
LHC_U,1168865,Leo Holdings II Corp,26
KUKE,1168864,Kuke Music Holding Ltd,26
ROT_U,1168866,Rotor Acquisition Corp,26
MYTE,1168997,MYT Netherlands Parent BV,26
GFX_U,1168239,Golden Falcon Acquisition Corp,26
CND_U,1167754,Concord Acquisition Corp,26
CCV_U,1168030,Churchill Capital V Corp,26
ATA_U,1168029,Americas Technology Acquisition Cor26
NG,34151,NovaGold Resources Inc,26
A,8942,Agilent Technologies Inc,26
AA,254,Alcoa Corp,26
AAIC,20217,Arlington Asset Investment Corp,26
AAMC,949565,Altisource Asset Management Corp,26
AAN,39136,Aarons Inc,26
AAP,32509,Advance Auto Parts Inc,26
AAT,20424,American Assets Trust Inc,26
AAU,34372,Almaden Minerals Ltd,26
AB,942475,AllianceBernstein Holding LP,26
ABB,21238,ABB Ltd,26
ABBV,40041,AbbVie Inc,26
ABC,8060,AmerisourceBergen,26
ABEV,39315,Ambev SA ADR,26
ABG,20347,Asbury Automotive Group Inc,26
ABM,20795,ABM Industries Incorporated,26
ABR,20796,Arbor Realty Trust,26
ABT,8192,Abbott Laboratories,26
AC,961750,Associated Capital Group Inc,26
ACA,1097712,Arcosa Inc,26
ACC,39216,American Campus Communities Inc,26
ACCO,20908,Acco Brands Corporation,26
ACEL,1095982,Accel Entertainment Inc,26
ACH,32317,Aluminum Corp of China Ltd ADR,26
ACM,39169,Aecom Technology Corporation,26
ACN,7884,Accenture plc,26
ACND,1166454,Ascendant Digital Acquisition Corp,26
ACP,959585,Aberdeen Income Credit Strategies Fund,26
ACRE,29635,Ares Commercial Real Estate,26
ACU,30643,Acme United Corporation,26
ACV,959586,AllianzGI Diversified Income & Convertible Fund,26
ACY,30644,AeroCentury Corp,26
ADC,20843,Agree Realty Corporation,26
ADCT,1152987,Adc Therapeutics SA,26
ADM,8080,Archer-Daniels-Midland Company,26
ADME,1014120,Aptus Drawdown Managed Equity ETF,26
ADNT,992960,Adient PLC,26
ADS,32507,Alliance Data Systems Corp,26
ADT,32367,ADT Inc,26
ADX,959588,Adams Diversified Equity,26
AE,30647,Adams Resources & Energy Inc,26
AEB,1163802,Aegon NV,26
AEE,8288,Ameren Corp,26
AEF,30690,Aberdeen Emerging Markets Equity Income Fund,26
AEG,21217,Aegon NV ADR,26
AEL,20134,American Equity Investment Life Holding Co,26
AEM,13930,Agnico Eagle Mines Limited,26
AENZ,41213,Aenza SAA,26
AEO,32311,American Eagle Outfitters Inc,26
AER,20797,AerCap Holdings NV,26
AES,8299,The AES Corporation,26
AFB,959591,AllianceBernstein National Municipal Income Fund,26
AFC,1013286,Allied Capital 6.875% Notes Exp 15 Apr 2047,26
AFG,39217,American Financial Group Inc,26
AFGB,1163629,American Financial Group Inc,26
AFGC,1163628,American Financial Group Inc,26
AFGD,1163627,American Financial Group Inc,26
AFGE,941640,American Financial Group AFGE,26
AFI,976066,Armstrong Flooring Inc,26
AFL,8256,Aflac Inc,26
AFT,959599,Apollo Senior Floating Rate,26
AG,32319,First Majestic Silver Corp,26
AGCO,39138,AGCO Corporation,26
AGD,959601,Alpine Global Dynamic Dividend,26
AGE,1115728,AgeX Therapeutics Inc,26
AGM,20172,Federal Agricultural Mortgage,26
AGO,39272,Assured Guaranty Ltd,26
AGR,962325,Avangrid Inc,26
AGRO,21048,Adecoagro SA,26
AGS,1061417,PlayAGS Inc,26
AGX,24439,Argan Inc,26
AHC,21049,AH Belo Corporation,26
AHH,41192,Armada Hflr Pr,26
AHT,20279,Ashford Hospitality Trust Inc,26
AIC,959613,Arlington Asset Investment Corp ELKS,26
AIF,959614,Apollo Tactical ,26
AIG,8021,American International Group Inc,26
AIM,30789,AIM ImmunoTech Inc,26
AIN,20425,Albany International Corporation,26
AINC,942639,Ashford Inc,26
AIR,21218,AAR Corp,26
AIRI,949567,Air Industries Group,26
AIT,20162,Applied Industrial Technologies,26
AIV,8303,Apartment Investment and Management Co,26
AIW,959617,Arlington Asset Investment ELKS,26
AIZ,8061,Assurant Inc,26
AIZN,1167563,Assurant Inc,26
AIZP,1072304,Assurant Inc Series D Pref,26
AJG,39263,Arthur J Gallagher & Co,26
AJRD,21116,Aerojet Rocketdyne Holdings Inc,26
AJX,945635,Great Ajax Corp,26
AKOA,20557,Embotelladora Andina,26
AKOB,32355,Andina B ADR,26
AKR,20727,Acadia Realty Trust,26
AL,20976,Air Lease Corporation,26
ALB,32524,Albemarle Corp,26
ALE,21148,Allete Inc,26
ALEX,20515,Alexander & Baldwin Holdings Inc,26
ALG,20952,Alamo Group Inc,26
ALK,39218,Alaska Air Group Inc,26
ALL,8221,Allstate Corp,26
ALLE,48361,Allegion PLC,26
ALLY,101848,Ally Financial Inc,26
ALSN,32322,Allison Transmission Holdings Inc,26
ALTG,1131053,Alta Equipment Group Inc,26
ALUS,1163596,Alussa Energy Acquisition Corp,26
ALV,13931,Autoliv Inc,26
ALX,20978,Alexanders Inc,26
AM,20516,Antero Midstream Corp,26
AMBC,40974,Ambac Financial Group Inc,26
AMBO,20349,Ambow Education Holding Ltd,26
AMC,48376,AMC Entertainment Holdings Inc,26
AMCR,1142204,Amcor,26
AME,39219,Ametek Inc,26
AMG,20280,Affiliated Managers Group Inc,26
AMH,942360,American Homes 4 Rent,26
AMK,1141597,AssetMark Financial Holdings Inc,26
AMN,20348,AMN Healthcare Services Inc,26
AMOV,15396,America Movil SAB de CV ADR Class A,26
AMP,8020,Ameriprise Financial Inc,26
AMPE,48662,Ampio Pharm,26
AMPY,1123076,Amplify Energy Corp,26
AMRC,21050,Ameresco Inc,26
AMRX,16389,Amneal Pharmaceuticals Inc Class A,26
AMS,949569,American Shared Hospital Srvcs,26
AMT,8036,American Tower Corp,26
AMWL,1166007,American Well Corp,26
AMX,8183,America Movil SAB de CV ADR,26
AN,7865,AutoNation Inc,26
ANET,103925,Arista Networks,26
ANF,8120,Abercrombie & Fitch Company,26
ANH,20350,Anworth Mortgage Asset,26
ANTM,8123,Anthem Inc,26
ANVS,1156611,Annovis Bio Inc,26
AOD,959639,Alpine Total Dynamic Dividend,26
AON,8350,Aon PLC,26
AOS,39291,Smith AO Corporation,26
AP,20607,Ampco-Pittsburgh Corporation,26
APAM,41193,Artisan Partners Asset Management Inc,26
APD,8263,Air Products and Chemicals Inc,26
APG,1163097,Api Group Corp,26
APH,13833,Amphenol Corporation,26
APLE,959642,Apple Hospitality REIT Inc,26
APO,41254,Apollo Global Management LLC Class A,26
APRN,1013645,Blue Apron Holdings Inc,26
APSG,1167560,Apollo Strategic Growth Capital,26
APT,30654,Alpha Pro Tech Ltd,26
APTS,30655,Preferred Apartment Communities Inc,26
APTV,32331,Aptiv PLC,26
AQNA,1163597,Algonquin Power Utilities Corp,26
AQNB,1163598,Algonquin Power Utilities Corp,26
AQUA,1054949,Evoqua Water Technologies,26
AR,48375,Antero Resources Corp,26
ARA,976445,American Renal Associates Holdings Inc,26
ARC,20351,ARC Document Solutions Inc,26
ARCH,8070,Arch Resources Inc,26
ARCO,20389,Arcos Dorados Holdings Inc,26
ARD,997798,Ardagh Group SA,26
ARDC,959643,Ares Dynamic Credit Allocation Fund Inc,26
ARE,29638,Alexandria Real Estate Equities Inc,26
ARES,958113,Ares Management Corp Class A,26
ARGO,15357,Argo Group International Holdings Ltd,26
ARI,20146,Apollo Commercial Real Estate Finance Inc,26
ARL,20281,American Realty Investors Inc,26
ARLO,1088201,Arlo Technologies,26
ARMK,48388,Aramark Holdings,26
ARMP,52469,Armata Pharmaceuticals Inc,26
ARNC,992959,Arconic Corp,26
AROC,20633,Archrock Inc,26
ARR,20671,ARMOUR Residential REIT Inc,26
ARW,39170,Arrow Electronics Inc,26
ASA,50656,ASA Gold and Precious Metals Ltd,26
ASAN,1166240,Asana Inc,26
ASAQ,1166998,Atlantic Avenue Acquisition Corp,26
ASB,15461,Associated Banc-Corp,26
ASC,41178,Ardmore Shpng,26
ASG,959653,Liberty All Star Growth,26
ASGN,15467,ASGN Inc,26
ASH,7860,Ashland Global Holdings Inc,26
ASIX,989521,AdvanSix Inc,26
ASM,34373,Avino Silver & Gold Mines Ltd,26
ASPL,1167562,Aspirational Consumer Lifestyle Corp,26
ASPN,945651,Aspen Aerogels Inc,26
ASR,8269,Grupo Aeroportuario del Sureste SAB de CV ADR,26
ASX,20137,ASE Industrial Holding Co Ltd ADR,26
ATCO,21092,Seaspan Corporation,26
ATEN,101850,A10 Network,26
ATGE,13839,Adtalem Global Education Inc,26
ATH,994014,Athene Holding Ltd,26
ATHM,48389,Autohome Inc ADR,26
ATI,8002,Allegheny Technologies Incorporated,26
ATKR,985128,Atkore International Group Inc,26
ATNM,102075,Actinium Pharmaceuticals Inc,26
ATO,20844,Atmos Energy Corporation,26
ATR,20979,AptarGroup Inc,26
ATTO,942322,Atento SA,26
ATUS,1013387,Altice USA Inc,26
ATV,20518,Acorn International Inc,26
AU,20610,AngloGold Ashanti Ltd ADR,26
AUMN,24403,Golden Minerals Company,26
AUY,8200,Yamana Gold Inc,26
AVA,21096,Avista Corporation,26
AVAL,942358,Grupo Aval,26
AVAN,1167561,Avanti Acquisition Corp,26
AVB,8135,AvalonBay Communities Inc,26
AVD,20559,American Vanguard Corporation,26
AVK,959654,Advent Claymore Convertible Securities,26
AVLR,1076697,Avalara Inc,26
AVNS,943129,Avanos Medical Inc,26
AVNT,21084,Avient Corp,26
AVTR,1130930,Avantor Inc,26
AVY,8097,Avery Dennison Corp,26
AVYA,1057240,Avaya Holdings Corp,26
AWF,959655,AllianceBernstein Global High,26
AWI,20249,Armstrong World Industries Inc,26
AWK,39173,American Water Works,26
AWP,959656,Aberdeen Global Premier Properties,26
AWR,20391,American States Water Company,26
AWX,30659,Avalon Holdings Corporation,26
AX,15590,Axos Financial Inc,26
AXL,20250,American Axle & Manufacturing,26
AXO,1163756,Axos Financial Inc,26
AXP,8182,American Express Company,26
AXR,21149,AMREP Corporation,26
AXS,39259,AXIS Capital Holdings Ltd,26
AXTA,942636,Axalta Coating Systems Ltd,26
AXU,34371,Alexco Resource Corp,26
AYI,20846,Acuity Brands Inc,26
AYX,998043,Alteryx Inc,26
AZEK,1162160,Azek Company Inc,26
AZO,8282,AutoZone Inc,26
AZRE,991221,Azure Power Global Ltd,26
AZUL,1006164,Azul SA,26
AZZ,21241,AZZ Incorporated,26
BA,238,Boeing Co,26
BABA,941155,Alibaba Group Holdings Ltd ADR,26
BAC,243,Bank of America Corp,26
BAF,959666,BlackRock Municipal Income Investment,26
BAH,20199,Booz Allen Hamilton Holding,26
BAK,29600,Braskem SA Class A,26
BALY,1167501,Bally's Corp,26
BAM,20219,Brookfield Asset Management Inc,26
BANC,15518,Banc of California Inc,26
BAP,21010,Credicorp Ltd,26
BATL,17020,Halcon Resources Corp,26
BAX,7951,Baxter International Inc,26
BB,6374,BlackBerry Ltd,26
BBAR,32312,BBVA Banco Frances SA ADR,26
BBD,32327,Banco Bradesco SA ADR,26
BBDC,24314,Barings BDC Inc,26
BBDO,959669,Banco Bradesco S/A ADR,26
BBF,959670,BlackRock Municipal Income,26
BBK,959671,BlackRock Municipal Bond,26
BBL,20910,BHP Billiton PLC ADR,26
BBN,959672,BlackRock Taxable Municipal Bond Trust,26
BBU,985715,Brookfield Business Partners LP,26
BBVA,20173,Banco Bilbao Viscaya Argentaria SA,26
BBW,20429,Build-A-Bear Workshop Inc,26
BBY,8077,Best Buy Co Inc,26
BC,8124,Brunswick Corporation,26
BCC,41197,Boise Cascad Llc,26
BCEI,20474,Bonanza Creek Energy Inc,26
BCH,32344,Banco De Chile,26
BCO,21052,Brinks Company,26
BCS,21053,Barclays PLC ADR,26
BCSF,1097399,Bain Capital Specialty Finance Inc,26
BCV,30663,Bancroft Fund Limited,26
BCX,959681,BlackRock Resources & Commodities Strategy Trust,26
BDC,21150,Belden Inc,26
BDJ,959683,BlackRock Enhanced Equity Dividend Trust,26
BDL,949571,Flanigans Enterprises Inc,26
BDN,20520,Brandywine Realty Trust,26
BDR,30665,Blonder Tongue Laboratories Inc,26
BDX,8067,Becton Dickinson and Company,26
BE,1088195,Bloom Energy Corp,26
BEDU,1010654,Bright Scholar Education Holdings Ltd Class A,26
BEKE,1164709,Ke Holdings Inc,26
BEN,8167,Franklin Resources Inc,26
BEP,958114,Brookfield Renewable Partners LP,26
BEPC,1163886,Brookfield Renewable Corp,26
BERY,41195,Berry Global Group Inc,26
BEST,1050111,BEST Inc,26
BFA,20730,Brown Forman Corp A,26
BFB,8081,Brown Forman,26
BFAM,41256,Bright Horizons,26
BFK,959685,BlackRock Municipal ,26
BFO,959686,BlackRock Florida Municipal 2020 Term,26
BFS,20911,Saul Centers Inc,26
BFT,1167513,Foley Trasimene Acquisition II Corp,26
BFY,30666,BlackRock New York MIT II,26
BFZ,959688,BlackRock California Municipal ,26
BG,39190,Bunge Limited,26
BGB,959689,Blackstone GSO Strategic Credit,26
BGH,959691,Babson Capital Global Short Duration Hi Yield,26
BGI,949572,Birks Group Inc,26
BGIO,997107,BlackRock 2022 Global Income Opportunity Trust,26
BGR,959692,BlackRock Energy and Resources,26
BGS,20521,B&G Foods Inc,26
BGSF,959693,BG Staffing Inc,26
BGT,959694,BlackRock Floating Rate ,26
BGX,959695,Blackstone GSO Long Short Credit ,26
BGY,959696,BlackRock International Growth and ,26
BH,20673,Biglari Holdings Inc,26
BHB,30667,Bar Harbor Bankshares Inc,26
BHC,13960,Bausch Health Companies Inc,26
BHE,20430,Benchmark Electronics Inc,26
BHK,959697,BlackRock Core Bond,26
BHLB,15557,Berkshire Hills Bancorp Inc,26
BHP,23647,BHP Billiton Ltd ADR,26
BHR,48365,Braemar Hotel & Resorts Inc,26
BHV,30668,BlackRock Virginia MBT,26
BHVN,1009130,Biohaven Pharmaceutical Holding Co Ltd,26
BIF,959700,Boulder Growth and ,26
BIG,8215,Big Lots Inc,26
BILL,1155833,Bill Com Holdings Inc,26
BIO,20475,Bio-Rad Laboratories Inc,26
BIOB,20561,Bio-Rad Laboratories B,26
BIOX,1064341,Bioceres Crop Solutions Corp,26
BIP,958116,Brookfield Infrastructure Partners LP,26
BIT,959701,Blackrock Multi Sector ,26
BJ,1077002,BJs Wholesale Club Holdings Inc,26
BK,8352,Bank of New York Mellon,26
BKD,39252,Brookdale Senior Living Inc,26
BKE,39294,Buckle Inc,26
BKH,20912,Black Hills Corporation,26
BKI,20476,Black Knight Inc,26
BKK,959704,BlackRock Municipal 2020 Term,26
BKN,959705,BlackRock Investment Quality Municipal,26
BKR,8320,Baker Hughes A Ge Company LLC,26
BKT,959706,BlackRock ,26
BKTI,30917,BK Technologies Inc,26
BKU,20981,BankUnited Inc,26
BLD,955539,Topbuild Corp,26
BLE,30670,BlackRock MIT II,26
BLK,13078,BlackRock Inc,26
BLL,8048,Ball Corporation,26
BLW,959708,BlackRock Limited Duration Income Trust,26
BLX,20431,Foreign Trade Bank of Latin America Inc,26
BMA,20982,Macro Bank Inc,26
BME,959709,BlackRock Health Sciences Trust,26
BMEZ,1156888,BlackRock Health Sciences Trust II,26
BMI,20913,Badger Meter Inc,26
BMY,8142,Bristol-Myers Squibb Company,26
BNED,958117,Barnes & Noble Education Inc,26
BNL,1166008,Broadstone Net Lease Inc,26
BNY,959716,BlackRock New York Municipal Income Trust,26
BOE,959717,BlackRock Global Opportunities Equity Trust,26
BOH,20732,Bank of Hawaii Corporation,26
BOOT,942484,Boot Barn Holdin,26
BORR,1160902,Borr Drilling Ltd,26
BOX,20282,Box Inc,26
BP,21257,BP PLC ADR,26
BPMP,1052909,BP Midstream Partners LP,26
BPT,958119,BP Prudhoe Bay Royalty Trust,26
BQ,1166428,Boqii Holding Ltd,26
BR,39159,Broadridge Financial Solutions Inc,26
BRBR,1153093,Bellring Brands LLC,26
BRC,21151,Brady Corporation,26
BRFS,20733,BRF SA,26
BRG,949573,Bluerock Residential Growth REIT Inc,26
BRKA,20562,Berkshire Hathaway Inc,26
BRKB,13834,Berkshire Hathaway B,26
BRMK,1073475,Broadmark Realty Capital Inc,26
BRN,30675,Barnwell Industries Inc,26
BRO,20849,Brown & Brown Inc,26
BRT,20915,BRT Realty Trust,26
BRX,48377,Brixmor Property,26
BSA,986291,Brightsphere Investment Group PLC ELKS,26
BSAC,32313,Banco Santander Chile,26
BSBR,32310,Banco Santander Brasil SA ADR,26
BSD,959723,BlackRock Strategic Municipal,26
BSE,959724,BlackRock New York Municipal Income Quality,26
BSIG,942357,Brightsphere Investment Group Inc,26
BSL,959725,Blackstone GSO Senior Floating Rate Term,26
BSM,953041,Black Stone Minerals LP,26
BSMX,39308,Grupo Financiero Santander Mexico SAB De CV Series B ADR,26
BSN,1167564,Broadstone Acquisition Corp,26
BST,945636,BlackRock Science & Technology,26
BSTZ,1141345,BlackRock Science and Technology Trust II,26
BSX,8248,Boston Scientific Corp,26
BTA,959726,BlackRock Long-Term Municipal Advantage Trust,26
BTG,949574,B2Gold Corp,26
BTI,34896,British American Tobacco PLC ADR,26
BTN,30676,Ballantyne Strong Inc,26
BTO,959727,John Hancock Financial Opportunities Fund,26
BTT,959728,Blackrock Municipal Target Term,26
BTU,1010610,Peabody Energy Corp,26
BTZ,959729,BlackRock Credit Allocation Income Trust,26
BUD,25318,Anheuser Busch Inbev NV ADR,26
BUI,959730,BlackRock Utility & Infrastructure Trust,26
BUR,1166999,Burford Capital Ltd,26
BURL,41257,Burlington Stores Inc,26
BV,1080084,BrightView Holdings,26
BVH,52751,Bluegreen Vacations Holding Corp,26
BVN,32318,Compania de Minas Buenaventura SAA ADR,26
BW,955540,Babcock & Wilcox Enterprises Inc,26
BWA,19693,BorgWarner Inc,26
BWG,959731,Legg Mason BW Global Income Opportunities Inc,26
BWLA,955844,Bowl America Inc,26
BWXT,32336,BWX Technologies Inc,26
BX,13933,Blackstone Group Inc,26
BXC,20613,BlueLinx Holdings Inc,26
BXG,1054950,Bluegreen Vacations Corp,26
BXMT,20857,Blackstone Mortgage Trust Inc,26
BXMX,959732,Nuveen S&P 500 Buy-Write Income Fund,26
BXP,8116,Boston Properties Inc,26
BXS,20916,Bancorpsouth Bank,26
BY,1014080,Byline Bancorp Inc,26
BYD,20917,Boyd Gaming Corporation,26
BYM,959734,BlackRock Municipal Income Quality,26
BZH,20678,Beazer Homes USA Inc,26
BZM,30680,BlackRock Maryl& MBT,26
C,241,Citigroup Inc,26
CAAP,1061608,Corporacion America Airports,26
CABO,955542,Cable One Inc,26
CACI,20565,CACI International Inc,26
CADE,1006458,Cadence Bancorp,26
CAF,959741,Morgan Stanley China A Share,26
CAG,8225,ConAgra Foods Inc,26
CAH,7874,Cardinal Health Inc,26
CAI,20614,Cai International Inc,26
CAJ,8324,Canon Inc ADR,26
CAL,20734,Caleres Inc,26
CALX,21194,Calix Inc,26
CANF,949575,Can Fite Biopharma Ltd ADR,26
CANG,1084216,Cango Inc,26
CAPL,958121,Crossamerica Partners LP,26
CARR,1159534,Carrier Global Corp,26
CARS,1011772,Cars.com Inc,26
CAT,247,Caterpillar Inc,26
CATO,21152,Cato Corporation,26
CB,8175,Chubb Ltd,26
CBB,20735,Cincinnati Bell Inc,26
CBD,29606,Companhia Brasileira de Distribuicao,26
CBOE,39325,Cboe Global Markets Inc,26
CBRE,7980,CBRE Group Inc Class A,26
CBT,21153,Cabot Corporation,26
CBU,20432,Community Bank System Inc,26
CBZ,21222,CBIZ Inc,26
CC,955543,Chemours Co,26
CCAC,1165418,CITIC Capital Acquisition Corp,26
CCC,20803,Clarivate Analytics PLC,26
CCEP,8271,Coca-Cola European Partners PLC,26
CCF,24440,Chase Corporation,26
CCI,32337,Crown Castle International Corp,26
CCIV,1166456,Churchill Capital IV Corp,26
CCJ,7920,Cameco Corp,26
CCK,39255,Crown Holdings Inc,26
CCL,22696,Carnival Corporation,26
CCM,20148,Concord Medical Services Holdings,26
CCO,20175,Clear Channel Outdoor Holdings Inc,26
CCR,958125,CONSOL Coal Resources LP,26
CCS,103928,Century Communities Inc,26
CCU,20253,Compania Cervecerias Unidas SA,26
CCX,1163673,Churchill Capital Corp II,26
CCZ,1163724,Comcast Holdings Corp,26
CDAY,1073206,Ceridian HCM Holding Inc,26
CDE,20522,Coeur Mining Inc,26
CDOR,17236,Condor Hospitality Trust Inc,26
CDR,32328,Cedar Realty Trust Inc,26
CE,39184,Celanese Corporation,26
CEA,20223,China Eastern Airlines Ltd,26
CEE,941641,Central Europe Russia & Turkey Fund,26
CEI,30823,Camber Energy Inc,26
CEIX,1055312,Consol Energy Inc,26
CEL,20804,Cellcom Israel Ltd,26
CELP,958122,Cypress Energy Partners LP,26
CEM,959750,Clearbridge Energy MLP,26
CEN,959751,Center Coast MLP and Infrastructure,26
CEO,21196,CNOOC Ltd ADR,26
CEPU,1061660,Central Puerto,26
CEQP,958123,Crestwood Equity Partners LP,26
CET,30686,Central Securities Corporation,26
CEV,30687,Eaton Vance California MIT,26
CF,8102,CF Industries Holdings Inc,26
CFCV,1167118,Clearbridge Focus Value ETF,26
CFG,941642,Citizens Financial Group Inc,26
CFR,20479,Cullen/Frost Bankers Inc,26
CFX,39133,Colfax Corporation,26
CFXA,1163793,Colfax Corp,26
CGA,13069,China Green Agriculture Inc,26
CHA,20567,China Telecom Corp Ltd,26
CHAQ,1164076,Chardan Healthcare Acquisition 2,26
CHCT,953806,Community Healthcare Trust Inc,26
CHD,39264,Church & Dwight Company Inc,26
CHE,21102,Chemed Corp,26
CHGG,48369,Chegg Inc,26
CHH,20224,Choice Hotels International Inc,26
CHL,21974,China mobile limited ADR,26
CHMI,48370,Cherry Hill Mortgage Investment Corp,26
CHN,8085,China Fund Inc,26
CHRA,1077003,Charah Solutions Inc,26
CHS,20984,Chicos FAS Inc,26
CHT,20523,Chunghwa Telecom Co Ltd,26
CHU,20313,China Unicom Hong Kong Ltd,26
CHWY,1136841,Chewy Inc,26
CHX,1076636,ChampionX Corp,26
CI,7889,Cigna Corp,26
CIA,21057,Citizens Inc,26
CIB,32347,BanColombia SA,26
CIEN,6446,Ciena Corp,26
CIF,959757,MFS Intermediate High ,26
CIG,32315,CEMIG - Companhia Energetica Minas Gerais ADR,26
CII,959758,BlackRock Enhanced Capital and ,26
CIK,30692,Credit Suisse Asset Management IF,26
CIM,13934,Chimera Investment Corporation,26
CINR,958166,Ciner Resources LP,26
CIO,101853,City Office,26
CIR,20483,CIRCOR International Inc,26
CIT,20737,CIT Group Inc,26
CIX,24437,CompX International Inc,26
CIXX,1167566,CI Financial Corp,26
CKH,20738,SEACOR Holdings Inc,26
CKX,949576,CKX Lands Inc,26
CL,7938,Colgate-Palmolive Company,26
CLB,20679,Core Laboratories NV,26
CLDR,1008758,Cloudera Inc,26
CLDT,20314,Chatham Lodging Trust REIT,26
CLF,7972,Cleveland-Cliffs Inc,26
CLGX,39185,Corelogic Inc,26
CLH,20853,Clean Harbors Inc,26
CLI,20619,Mack-Cali Realty Corporation,26
CLM,30694,Cornerstone Strategic Value Fund Inc,26
CLNC,1062592,Colony Northstar Credit Real Estate Inc,26
CLNY,103927,Colony Capital Inc Class A,26
CLPR,995922,Clipper Realty Inc,26
CLR,20436,Continental Resources Inc,26
CLW,20620,Clearwater Paper Corporation,26
CLX,7933,Clorox Co,26
CMA,8313,Comerica Inc,26
CMC,20568,Commercial Metals Company,26
CMCL,50961,Caledonia Mining Corporation Plc,26
CMCM,101854,Cheetah Mobile Inc,26
CMD,20739,Cantel Medical Corp,26
CMG,13837,Chipotle Mexican Grill Inc,26
CMI,8218,Cummins Inc,26
CMO,20569,Capstead Mortgage Corporation,26
CMP,20437,Compass Minerals International Inc,26
CMRE,21015,Costamare Inc,26
CMSA,1163779,CMS Energy Corp,26
CMSC,1163778,CMS Energy Corp,26
CMSD,1163777,CMS Energy Corp,26
CMT,30696,Core Molding Technologies Inc,26
CMU,959768,MFS High Yield Municipal,26
CNA,20805,CNA Financial Corporation,26
CNC,32525,Centene Corp,26
CNF,1097644,CNFinance Holdings Ltd,26
CNHI,41180,CNH Industrial NV,26
CNI,39132,Canadian National Railway Co,26
CNK,39268,Cinemark Holdings Inc,26
CNMD,15761,CONMED Corporation,26
CNNE,1055123,Cannae Holdings Inc,26
CNO,20525,CNO Financial Group Inc,26
CNP,7946,CenterPoint Energy Inc,26
CNR,20506,Cornerstone Building Brands Inc,26
CNS,13935,Cohen & Steers Inc,26
CNX,7975,CNX Resources Corp,26
CO,20623,China Cord Blood Corporation,26
CODI,24289,Compass Diversified Holdings,26
COE,985129,China Online Education Group ADR,26
COF,8250,Capital One Financial Corporation,26
COG,13835,Cabot Oil & Gas Corporation,26
COHN,30804,Cohen & Company Inc,26
COLD,1058014,Americold Realty Trust,26
COO,20624,Cooper Companies Inc,26
COP,7937,ConocoPhillips,26
COR,20681,CoreSite Realty Corporation,26
CORR,41203,Corenergy Infras,26
COTY,41258,Coty Inc,26
CP,39227,Canadian Pacific Railway Ltd,26
CPA,20918,Copa Holdings SA,26
CPAC,29641,Cementos Pacasmayo SAA,26
CPB,7964,Campbell Soup Company,26
CPE,20625,Callon Petroleum Company,26
CPF,21245,CPB Inc,26
CPHI,30701,China Pharma Holdings Inc,26
CPK,20438,Chesapeake Utilities Corporation,26
CPLG,1080117,CorePoint Lodging Inc,26
CPRI,32321,Capri Holdings Ltd,26
CPS,48378,Cooper Stnd,26
CPSR,1165650,Capstar Special Purpose Acquisition Corp,26
CPT,39171,Camden Property Trust,26
CQP,958126,Cheniere Energy Partners LP,26
CR,21155,Crane Company,26
CRC,942635,California Resources Corp,26
CRDA,20854,Crawford & Co,26
CRDB,20855,Crawford & Comp D,26
CRF,30703,Cornerstone Strategic Return Fund,26
CRH,21246,CRH PLC ADR,26
CRHC,1167565,Cohn Robbins Holdings Corp,26
CRHM,51113,CRH Medical Corp,26
CRI,9254,Carter Inc,26
CRK,20570,Comstock Resources Inc,26
CRL,20164,Charles River Laboratories,26
CRM,8294,Salesforce.com Inc,26
CRMD,30704,CorMedix Inc,26
CRS,20439,Carpenter Technology Corporation,26
CRT,958127,Cross Timbers Royalty Trust,26
CRY,21061,CryoLife Inc,26
CS,20740,Credit Suisse Group,26
CSL,20571,Carlisle Companies Incorporated,26
CSLT,101858,Castlight Health Inc,26
CSPR,1156639,Casper Sleep Inc,26
CSTM,41181,Constellium Nv,26
CSU,20393,Capital Senior Living Corporation,26
CSV,20627,Carriage Services Inc,26
CTAA,989647,Qwest Corp 7% Notes Exp 2056,26
CTB,20440,Cooper Tire & Rubber Company,26
CTBB,986288,Qwest Corp ELKS,26
CTDD,1088677,Qwest Corp 6 75 Notes Expiry 2057,26
CTEK,52621,Auxilio Inc,26
CTK,1096113,CooTek Cayman Inc,26
CTLT,940817,Catalent Inc,26
CTO,24394,CTO Realty Growth Inc,26
CTR,959777,ClearBridge Energy MLP Total Return Fund Inc,26
CTRA,1031181,Contura Energy Inc,26
CTS,21226,CTS Corporation,26
CTT,48379,Catchmark Timber,26
CTVA,1135949,Corteva Inc,26
CTY,989644,Qwest Corp 6.125% Notes Exp 01 Jun 2053,26
CUB,21156,Cubic Corporation,26
CUBB,1163725,Customers Bancorp Inc,26
CUBE,21198,CubeSmart,26
CUBI,40982,Customers Bancorp Inc,26
CUK,20919,Carnival Plc ADS,26
CULP,21224,Culp Inc,26
CURO,1055906,Curo Group Holdings Corp,26
CUZ,20572,Cousins Properties Incorporated,26
CVA,39273,Covanta Holding Corp,26
CVEO,103929,Civeo Corp,26
CVI,20985,CVR Energy Inc,26
CVM,30710,CEL-SCI Corp,26
CVNA,1008759,Carvana Co,26
CVR,30711,Chicago Rivet & Machine Co,26
CVS,8201,CVS Health Corp,26
CVU,30712,CPI Aerostructures Inc,26
CVX,240,Chevron Corp,26
CW,20743,Curtiss-Wright Corporation,26
CWEN,953811,Clearway Energy Inc Class C,26
CWH,991166,Camping World Holdings Inc,26
CWK,1089332,Cushman & Wakefield plc,26
CWT,20139,California Water Service Group,26
CX,8943,Cemex SAB de CV ADR,26
CXE,959783,MFS High Income Municipal,26
CXH,959784,MFS Investment Grade Municipal Trust,26
CXO,20683,Concho Resources Inc,26
CXP,48366,Columbia Pr,26
CXW,39253,CoreCivic Inc,26
CYD,20257,China Yuchai International Limited,26
CYH,39249,Community Health Systems Inc,26
CZZ,21199,Cosan Ltd,26
D,7887,Dominion Energy Inc,26
DAC,21105,Danaos Corporation,26
DAL,8944,Delta Air Lines Inc,26
DAN,39287,Dana Inc,26
DAO,1153248,Youdao Inc,26
DAR,39164,Darling Ingredients Inc,26
DAVA,1089233,Endava Ltd,26
DB,22318,Deutsche Bank AG NA O.N.,26
DBD,21106,Diebold Nixdorf Inc,26
DBI,21247,Designer Brands Inc,26
DBL,949552,Doubleline Opportunistic Credit,26
DCI,20809,Donaldson Company Inc,26
DCO,21062,Ducommun Incorporated,26
DCP,941152,DCP Midstream LP,26
DCUE,1163738,Dominion Energy Inc,26
DD,7981,DuPont Inc,26
DDD,13938,3D Systems Corporation,26
DDF,959790,Delaware Investments Dividend and ,26
DDS,8930,Dillards Inc,26
DDT,959793,Dillards Capital Trust I,26
DE,261,Deere & Company,26
DEA,945634,Easterly Government Properties,26
DECK,32381,Deckers Outdoor Corporation,26
DEH,1166458,D8 Holdings Corp,26
DEI,39177,Douglas Emmett Inc,26
DELL,257,Dell Technologies Inc,26
DEN,9222,Denbury Resources Inc,26
DEO,21158,Diageo PLC ADR,26
DESP,1050113,Despegar.com Corp,26
DEX,959794,Delaware Enhanced Global Dividend and ,26
DFIN,989650,Donnelley Financial Solutions Inc,26
DFNS,1163633,LGL Systems Acquisition Corp,26
DFP,959795,Flaherty and Crumrine Dynamic Preferred and ,26
DFS,8188,Discover Financial Services,26
DG,20744,Dollar General Corporation,26
DGNR,1166754,Dragoneer Growth Opportunities Corp,26
DGX,8198,Quest Diagnostics Incorporated,26
DHF,959799,Dreyfus High Yield Strategies,26
DHI,7876,DR Horton Inc,26
DHR,8931,Danaher Corporation,26
DHT,20921,DHT Holdings Inc,26
DHX,20860,DHI Group Inc,26
DHY,30716,Credit Suisse High Yield Bond Fund,26
DIAX,943123,Nuveen Dow 30Sm,26
DIN,20987,Dine Brands Global Inc,26
DIS,258,Walt Disney Company,26
DIT,30717,AMCON Distributing Company,26
DK,20628,Delek US Energy Inc,26
DKL,103932,Delek Logistics Partners LP,26
DKS,32506,Dick Sporting Goods Inc,26
DL,20150,China Distance Education Holdings,26
DLA,24413,Delta Apparel Inc,26
DLB,20812,Dolby Laboratories,26
DLNG,48398,Dynagas LNG Partners LP,26
DLR,20486,Digital Realty Trust Inc,26
DLX,21107,Deluxe Corporation,26
DMB,959808,Dreyfus Municipal Bond Infrastructure,26
DMF,30718,Dreyfus Municipal Income Inc,26
DMO,959809,Western Asset Mortgage Defined Opportunities,26
DMS,1163888,Digital Media Solutions Inc,26
DMYD,1166753,dMY Technology Group II Inc,26
DMYT,1163689,dMY Technology Group Inc,26
DNB,1163041,Dun And Bradstreet Holding Inc,26
DNK,1156362,Phoenix Tree Holdings Ltd,26
DNN,33982,Denison Mines Corp,26
DNOW,103922,Now Inc,26
DNP,959811,DNP Select ,26
DOC,41228,Physicians Realty Trust,26
DOOR,945652,Masonite International Corp,26
DOV,7858,Dover Corporation,26
DOW,259,Dow Inc,26
DPG,959812,Duff and Phelps Global Utility ,26
DPW,30719,DPW Holdings Inc,26
DPZ,20861,Domino Pizza Inc,26
DQ,20685,Daqo New Energy Corp ADR,26
DRD,15934,DRDGOLD Ltd ADR,26
DRE,20923,Duke Realty Corporation,26
DRH,20318,Diamondrock Hospitality Company,26
DRI,7916,Darden Restaurants Inc,26
DRQ,21017,Dril-Quip Inc,26
DRUA,985946,Dominion Energy Pref A,26
DS,994715,Drive Shack Inc,26
DSE,959815,Duff and Phelps Select Energy MLP,26
DSL,959816,DoubleLine Income Solutions Fund,26
DSM,959817,Dreyfus Strategic Municipal Bond,26
DSS,30720,Document Security Systems Inc,26
DSSI,1128806,Diamond S Shipping Inc,26
DSU,959818,BlackRock Debt Strategies,26
DSX,20814,Diana Shipping inc,26
DT,1142207,Dynatrace Holdings LLC,26
DTE,7868,DTE Energy Company,26
DTF,959820,DTF Tax Free ,26
DTJ,1163760,DTE Energy Co Pref Series B,26
DTP,1163785,DTE Energy Co,26
DTW,1163759,DTE Energy Co Pref Series E,26
DTY,1163758,DTE Energy Co Pref Series F,26
DUC,959823,Duff & Phelps Utility and Corporate Bond,26
DUK,8104,Duke Energy Corporation,26
DUKB,1163772,Duke Energy Corp,26
DUKH,1055983,Duke Energy Corp Debenture,26
DVA,13838,DaVita HealthCare Partners Inc,26
DVD,20286,Dover Motorsports Inc,26
DVN,8224,Devon Energy Corporation,26
DXC,8054,DXC Technology Co,26
DXF,29749,Dunxin Financial Holdings Ltd,26
DXR,30721,Daxor Corporation,26
DY,20687,Dycom Industries Inc,26
E,21248,ENI SpA ADR,26
EAD,30722,Wells Fargo Income Opportunities Fund,26
EAF,1073228,GrafTech International Ltd,26
EAI,1141771,Entergy Arkansas LLC Deb 2066,26
EARN,945653,Ellington Residential Mortgage,26
EAT,20442,Brinker International Inc,26
EB,1096055,Eventbrite Inc Class A,26
EBF,21200,Ennis Inc,26
EBR,20259,Centrais Electricas Brasileiras SA,26
EBS,20443,Emergent Biosolutions Inc,26
EC,32338,Ecopetrol SA ADR,26
ECC,942354,Eagle Point Cred,26
ECCB,992753,Eagle Point Credit Company Inc,26
ECCX,1163599,Eagle Point Credit Company Inc,26
ECCY,1163600,Eagle Point Credit Company Inc,26
ECF,30723,Ellsworth Convertible Growth & IF,26
ECL,8339,Ecolab Inc,26
ECOM,41259,Channeladvsr Co,26
ED,8297,Consolidated Edison Inc,26
EDD,959832,Morgan Stanley Emerging Markets Domestic Debt,26
EDF,959833,Stone Harbor Emerging Markets Income Fund,26
EDI,959834,Stone Harbor Emerging Markets Total ,26
EDN,21201,Edenor SA ADR,26
EDU,20261,New Oriental Education & Technology,26
EEA,959835,European Equity,26
EEX,1008760,Emerald Expositions Events Inc,26
EFC,945638,Ellington Financial LLC,26
EFF,959836,Eaton Vance Floating Rate Income Plus,26
EFR,959837,Eaton Vance Senior Floating Rate,26
EFT,959838,Eaton Vance Floating Rate ,26
EFX,8007,Equifax Inc,26
EGF,959839,BlackRock Enhanced Government,26
EGHT,15986,8x8 Inc,26
EGO,20816,Eldorado Gold Corp,26
EGP,20487,EastGroup Properties Inc,26
EGY,20863,Vaalco Energy Inc,26
EHC,20932,Encompass Health Corp,26
EHI,959841,Western Asset Global High ,26
EIG,20575,Employers Holdings Inc,26
EIM,30728,Eaton Vance MBF,26
EIX,7998,Edison International,26
EL,7929,Estee Lauder Companies Inc,26
ELA,949581,Envela Corp,26
ELAN,1096067,Elanco Animal Health,26
ELAT,1163668,Elanco Animal Health Inc,26
ELC,1095925,Entergy Louisiana LLC Pref,26
ELF,989523,ELF Beauty Inc,26
ELJ,1163727,Entergy Louisiana LLC,26
ELLO,30732,Ellomay Capital Ltd,26
ELMD,949582,Electromed Inc,26
ELP,29602,Companhia Paranaense de Energia COPEL,26
ELS,20227,Equity Lifestyle Properties Inc,26
ELU,959843,EL Investment Company LLC Pref,26
ELVT,1006165,Elevate Credit Inc,26
ELY,20817,Callaway Golf Company,26
EMAN,24432,eMagin Corporation,26
EMD,959844,Western Asset Emerging Markets Debt,26
EME,20958,EMCOR Group Inc,26
EMF,959845,Templeton Emerging Markets,26
EMN,8126,Eastman Chemical Company,26
EMO,959846,ClearBridge Energy MLP Opportunity,26
EMP,1163700,Entergy Mississippi LLC,26
EMPW,1167569,Empower Ltd,26
EMR,7931,Emerson Electric Company,26
EMX,34397,EMX Royalty Corp,26
ENB,39124,Enbridge Inc,26
ENBA,1151139,Enbridge 6.375 Fixed,26
ENBL,958134,Enable Midstream Partners LP,26
ENIA,32339,Enel Americas SA ADR,26
ENIC,977669,Enel Chile SA,26
ENJ,959849,Entergy New Orleans Inc Pref,26
ENLC,101859,EnLink Midstream LLC,26
ENO,1095923,Entergy New Orleans LLC Pref,26
ENPC,1167567,Executive Network Partnering Corp,26
ENR,39267,Energizer Holdings Inc,26
ENS,21249,Enersys,26
ENSV,102077,Enservco Co,26
ENV,21019,Envestnet Inc,26
ENVA,942638,Enova International Inc,26
ENX,30737,Eaton Vance New York MBF,26
ENZ,20925,Enzo Biochem Inc,26
EOD,959852,Wells Fargo Global Dividend Opportunity Fund,26
EOG,8342,EOG Resources Inc,26
EOI,959853,Eaton Vance Enhanced Equity ,26
EOS,959854,Eaton Vance Enhanced Equity Income II,26
EOT,959855,Eaton Vance National Municipal Opportunities,26
EPAC,8296,Enerpac Tool Group Corp,26
EPAM,32341,EPAM Systems Inc,26
EPC,955546,Edgewell Personal Care Co,26
EPD,44406,Enterprise Products Partners LP,26
EPM,24387,Evolution Petroleum Corporation Inc,26
EPR,20262,EPR Properties,26
EPRT,1081673,Essential Properties Realty Trust Inc,26
EQC,20858,Equity Commonwealth,26
EQD,1167568,Equity Distribution Acquisition Corp,26
EQH,1075224,Axa Equitable Holdings Inc,26
EQNR,21145,Equinor ASA ADR,26
EQR,8260,Equity Residential,26
EQS,959862,Equus Total Return,26
EQT,13841,EQT Corporation,26
ERH,30740,Wells Fargo Utilities and High Income Fund,26
ERJ,21112,Embraer SA ADR,26
ES,13856,Eversource Energy,26
ESE,20631,ESCO Technologies Inc,26
ESGC,28172,Eros STX Global Corp,26
ESI,101886,Element Solutions Inc,26
ESNT,48363,Essent Group Ltd,26
ESP,30742,Espey Mfg & Electronics Corp,26
ESRT,41260,Empire State Realty Trust Inc,26
ESS,20488,Essex Property Trust Inc,26
ESTC,1096127,Elastic NV,26
ESTE,30743,Earthstone Energy Inc,26
ET,39318,Energy Transfer Equity LP,26
ETB,959865,Eaton Vance Tax Managed Buy Write ,26
ETG,959866,Eaton Vance Tax Advantaged Global Dividend ,26
ETH,20444,Ethan Allen Interiors Inc,26
ETJ,959867,Eaton Vance Risk Managed Diversified Equity ,26
ETM,20321,Entercom Communications,26
ETN,8291,Eaton Corporation PLC,26
ETO,959868,Eaton Vance Tax Advantaged Global Dividend Opportunities,26
ETR,8015,Entergy Corporation,26
ETRN,1097893,Equitrans Midstream Corp,26
ETV,959869,Eaton Vance Tax Managed Buy Write Opportunities,26
ETW,959870,Eaton Vance Tax Managed Global Buy Write Opportunities,26
ETX,959871,Eaton Vance Municipal Income Term,26
ETY,959872,Eaton Vance Tax Managed Diversified Equity ,26
EURN,945662,Euronav,26
EV,39178,Eaton Vance Corp,26
EVA,958137,Enviva Partners LP,26
EVBN,949583,Evans Bancorp Inc,26
EVC,20228,Entravision Communications,26
EVF,959874,Eaton Vance Senior ,26
EVG,959875,Eaton Vance Short Duration Diversified ,26
EVH,953808,Evolent Health Inc,26
EVI,30748,EVI Industries Inc,26
EVM,30751,Eaton Vance California MBF,26
EVN,954871,Eaton Vance Municipal ,26
EVR,20632,Evercore Partners Inc,26
EVRG,29737,Evergy Inc,26
EVRI,20231,Everi Holdings Inc,26
EVT,959876,Eaton Vance Tax Advantaged Dividend ,26
EVTC,41209,Evertec Inc,26
EVV,30754,Eaton Vance Limited Duration IF,26
EVY,30755,Eaton Vance New York MIT,26
EW,13794,Edwards Lifesciences Corp,26
EXD,959877,Eaton Vance Tax Advantaged Bond And Option Strategies,26
EXG,959878,Eaton Vance Tax-Managed Global Diversified Equity ,26
EXK,20634,Endeavour Silver Corp.,26
EXP,20749,Eagle Materials Inc,26
EXPR,21113,Express Inc,26
EXR,39166,Extra Space Storage Inc,26
EXTN,959879,Exterran Corp,26
F,255,Ford Motor Company,26
FAF,39274,First American Corporation,26
FAII,1166755,Fortress Value Acquisition Corp II,26
FAM,959881,First Trust/Aberdeen Global Opportunity ,26
FAX,30757,Aberdeen Asia-Pacific IF Inc,26
FBC,20689,Flagstar Bancorp Inc,26
FBHS,39295,Fortune Brands Home & Security Inc,26
FBK,989524,FB Financial Corp,26
FBM,995923,Foundation Building Materials Inc,26
FBP,21021,First Bancorp,26
FC,32332,Franklin Covey Company,26
FCAU,941888,Fiat Chrysler Automobiles NV,26
FCF,20188,First Commonwealth Financial,26
FCN,20819,FTI Consulting Inc,26
FCO,30758,Aberdeen Global IF Inc,26
FCPT,959886,Four Corners Property Trust Inc,26
FCRW,1163788,First Eagle Alternative Capital Preffered,26
FCT,959887,First Trust Senior Floating Rate Income Fund II,26
FCX,8281,Freeport-McMoran Copper & Gold Inc,26
FDEU,959888,First Trust Dynamic Europe Equity Income Fund,26
FDG,1163118,American Century Focused Dynamic Growth ETF,26
FDP,20359,Fresh Del Monte Produce Inc,26
FDS,20322,FactSet Research Systems Inc,26
FDX,262,FedEx Corporation,26
FE,8231,FirstEnergy Corporation,26
FEAC,1163385,Flying Eagle Acquisition Corp,26
FEDU,1054794,Four Seasons Education Cayman,26
FEI,959890,First Trust MLP & ,26
FEN,30759,First Trust Energy Income & Growth,26
FENG,20636,Phoenix New Media Limited,26
FEO,959891,First Trust/Aberdeen Emerging Opportunity,26
FET,39300,Forum Energy Technologies Inc,26
FF,20960,FutureFuel Corp,26
FFA,959892,First Trust Enhanced Equity ,26
FFC,959893,Flaherty & Crumrine Preferred Securities Income Fd,26
FFG,20528,FBL Financial Group Inc,26
FGB,959894,First Trust Specialty Finance and Financial Opportunities,26
FHI,8308,Federated Investors Inc B,26
FHN,8266,First Horizon National Corporation,26
FI,41182,Frank International N.V.,26
FICO,20529,Fair Isaac Corporation,26
FIF,959897,First Trust Energy Infrastructure,26
FINV,1054797,FinVolution Group,26
FIS,8042,Fidelity National Information Services Inc,26
FIT,954868,Fitbit Inc,26
FIX,20530,Comfort Systems USA Inc,26
FL,32358,Foot Locker Inc,26
FLC,959898,Flaherty & Crumrine Total Return Fund Inc,26
FLNG,1163795,FLEX LNG Ltd,26
FLO,39288,Flowers Foods Inc,26
FLOW,958814,SPX FLOW Inc,26
FLR,7866,Fluor Corporation,26
FLS,13844,Flowserve Corporation,26
FLT,39260,Fleetcor Technologies Inc,26
FLV,1167123,American Century Focused Large Cap Value ETF,26
FLY,20961,Fly Leasing Limited,26
FMAC,1167571,FirstMark Horizon Acquisition Corp,26
FMC,13842,FMC Corporation,26
FMN,959900,Federated Premier Municipal ,26
FMO,959901,Fiduciary/Claymore MLP Opportunity,26
FMS,20360,Fresenius Medical Care Corporation,26
FMX,39310,Fomento Economico Mexicano,26
FMY,959902,First Trust Mortgage Income Fund,26
FN,21228,Fabrinet,26
FNB,21229,FNB Corporation,26
FND,1008761,Floor & Decor Holdings Inc,26
FNF,39241,Fidelity National Financial Inc,26
FOE,39121,Ferro Corporation,26
FOF,959905,Cohen & Steers Closed End Opportunity,26
FOR,20820,Forestar Group Inc,26
FOUR,1161537,Shift4 Payments Inc,26
FPF,959906,First Trust Intermediate Duration Preferred and ,26
FPH,1010525,Five Point Holdings LLC,26
FPI,949584,Farmland Partners Inc,26
FPL,945639,First Trust New Opp. MLP & Energy,26
FR,20189,First Industrial Realty Trust Inc,26
FRA,959909,BlackRock Floating Rate Income Strategies,26
FRC,20751,First Republic Bank,26
FRD,30764,Friedman Industries Inc,26
FRO,21022,Frontline Ltd,26
FRT,20230,Federal Realty Investment Trust,26
FSD,959916,First Trust High Income Long Short,26
FSI,30766,Flexible Solutions International Inc,26
FSK,101863,FS KKR Capital Corp,26
FSKR,1163714,FS KKR Capital Corp II,26
FSLY,1130931,Fastly Inc,26
FSM,20490,Fortuna Silver Mines Inc,26
FSP,24385,Franklin Street Properties Corp,26
FSR,48679,Fisker Inc,26
FSS,20752,Federal Signal Corporation,26
FT,959917,Franklin Universal,26
FTAI,953043,Fortress Transportation and Infrastructure Investors LLC,26
FTCH,1096058,Farfetch Ltd Class A,26
FTF,30767,Franklin Templeton Limited Duration,26
FTI,13843,TechnipFMC PLC,26
FTK,20637,Flotek Industries Inc,26
FTSI,1061436,FTS International Inc,26
FTV,985775,Fortive Corp,26
FUBO,1166732,Fubotv Inc,26
FUL,20991,H B Fuller Company,26
FUN,943119,Cedar Fair LP,26
FUNL,1167114,CornerCap Fundametrics Large-Cap ETF FUNL,26
FURY,1052908,Fury Gold Mines Ltd,26
FUSE,1165428,Fusion Acquisition Corp,26
FVRR,1136840,Fiverr International Ltd,26
G,21114,Genpact Limited,26
GAB,959918,Gabelli Equity Trust,26
GAM,959922,General American Investors,26
GATO,1167037,Sunshine Silver Mines And Refining,26
GATX,21205,GATX Corporation,26
GAU,34416,Galiano Gold Inc,26
GB,1081661,Global Blue Group Holding Ltd,26
GBAB,959924,Guggenheim Taxable Municipal Managed Duration Trust,26
GBL,20753,Gamco Investors Inc,26
GBR,30769,New Concept Energy Inc,26
GBX,20446,Greenbrier Companies Inc,26
GCI,22586,Gannett Co Inc,26
GCO,21115,Genesco Inc,26
GCP,963703,GCP Applied Technologies Inc,26
GCV,959926,Gabelli Convertible and Income Securities Mutual Fund,26
GD,7867,General Dynamics Corporation,26
GDDY,948325,Godaddy Inc,26
GDL,959929,GDL,26
GDO,959931,Western Asset Global Corporate Defined Opportunity,26
GDOT,20993,Green Dot Corporation,26
GDP,20532,Goodrich Petroleum Corporation,26
GDV,959934,Gabelli Dividend & ,26
GE,8193,General Electric Company,26
GEF,20964,Greif Bros Corporation,26
GEL,958141,Genesis Energy LP,26
GEN,20343,Genesis Healthcare Inc,26
GEO,20994,Geo Group Inc,26
GER,945640,Goldman Sachs MLP & Energy,26
GES,32362,Guess? Inc,26
GF,959938,New Germany,26
GFF,21067,Griffon Corporation,26
GFI,8008,Gold Fields Ltd ADR,26
GFL,1153688,Gfl Environmental Holdings Inc,26
GFLU,1163707,GFL Environmental Inc,26
GGB,32354,Gerdau SA ADR,26
GGG,21203,Graco Inc,26
GGM,959941,Guggenheim Credit Allocation,26
GGN,30770,GAMCO Global,26
GGT,959944,Gabelli MultiMedia Mutual Fund,26
GGZ,959946,Gabelli Global Small and Mid Cap Value,26
GHC,8154,Graham Holdings Co,26
GHG,1072317,GreenTree Hospitality Group Ltd,26
GHL,21204,Greenhill & Co Inc,26
GHLD,1166977,Guild Holdings Co,26
GHM,24433,Graham Corporation,26
GHY,959948,Prudential Global Short Duration Hi Yield Fd,26
GIB,21024,CGI Inc,26
GIK,1163889,Gigcapital3 Inc,26
GIM,959949,Templeton Global Income Fund,26
GIS,263,General Mills Inc,26
GIX,1163780,GigCapital2 Inc,26
GJH,959950,Strats Trust US Cellular GIC,26
GJO,959951,Strats SM Trust for Wal Mart Stores Inc Securities Series 2005-4 GIC,26
GJP,959952,STRATS SM Trust for Dominion Resources Inc Securities Series 2005-6 IC,26
GJR,959953,Strats SM Trust for Procter & Gamble Securities Series 2006-1 GIC,26
GJS,959954,STRATSSM Certificates series supplement 2006-2 Trust IC,26
GJT,959955,STRATS SM Trust for Allstate Corp Securities Series 2006-3 IC,26
GKOS,955547,Glaukos Corp,26
GL,8234,Globe Life Inc,26
GLDG,52573,GoldMining Inc,26
GLEO,1163690,Galileo Acquisition Corp,26
GLO,30773,Clough Global Opportunities Fund,26
GLOB,945654,Globant SA,26
GLOG,29651,GasLog Ltd,26
GLOP,958142,GasLog Partners LP,26
GLP,958143,Global Partners LP,26
GLQ,30775,Clough Global EF,26
GLT,21162,Glatfelter,26
GLU,30776,Gabelli Global Utility & Income Tr,26
GLV,30777,Clough Global Allocation Fund,26
GLW,264,Corning Incorporated,26
GM,239,General Motors Company,26
GME,13845,GameStop Corp,26
GMED,41261,Globus Medical,26
GMRE,985716,Global Medical REIT Inc,26
GMS,977731,GMS Inc,26
GMTA,1163800,GATX Corp,26
GNE,21069,Genie Energy Ltd,26
GNK,20323,Genco Shipping & Trading Ltd,26
GNL,953810,Global Net Lease Inc,26
GNRC,39269,Generac Holdlings Inc,26
GNT,959960,GAMCO Natural Resources Gold and ,26
GNW,8143,Genworth Financial Inc,26
GOAC,1166463,GO Acquisition Corp,26
GOED,1163502,1847 Goedeker,26
GOF,959961,Guggenheim Strategic Opportunities,26
GOL,32320,Gol Linhas Aereas Inteligentes SA ADR,26
GOLD,13928,Barrick Gold Corp,26
GOLF,992755,Acushnet Holdings Corp,26
GOOS,997799,Canada Goose Holdings Inc,26
GORO,24409,Gold Resource Corporation,26
GPC,7979,Genuine Parts Co,26
GPI,20578,Group 1 Automotive Inc,26
GPJA,1052741,Georgia Power Co,26
GPK,20263,Graphic Packaging Holding Company,26
GPL,34405,Great Panther Silver Ltd,26
GPM,959963,Guggenheim Enhanced Equity ,26
GPMT,1013389,Granite Point Mortgage Trust Inc,26
GPN,39277,Global Payments Inc,26
GPRK,101864,GeoPark Ltd,26
GPS,7925,Gap Inc,26
GPX,20823,GP Strategies Corporation,26
GRA,39292,WR Grace & Co,26
GRC,24415,Gorman-Rupp Company,26
GRF,30779,Eagle Capital Growth Fund Inc,26
GRUB,101865,Grubhub Inc,26
GRX,959967,Gabelli Healthcare & WellnessRx Trust,26
GS,266,Goldman Sachs Group Inc,26
GSAH,1166462,GS Acquisition Holdings Corp II,26
GSAT,102079,Globalstar Inc,26
GSBD,959977,Goldman Sachs BDC,26
GSK,22459,GlaxoSmithKline PLC ADR,26
GSL,20644,Global Ship Lease Inc,26
GSS,32442,Golden Star Resources Ltd,26
GSV,34404,Gold Standard Ventures Corp,26
GSX,1136128,GSX Techedu Inc Class A,26
GTE,34040,Gran Tierra Energy Inc,26
GTES,1061418,Gates Industrial Corporation plc,26
GTIP,1096616,Goldman Sachs Access Inflation Protected USD Bond ETF,26
GTN,20755,Gray Television Inc,26
GTS,20491,Triple-S Management Corporation,26
GTT,48644,GTT Communications Inc,26
GTY,20869,Getty Realty Corporation,26
GUT,959981,Gabelli Utility,26
GV,30787,Goldfield Corporation,26
GVA,20492,Granite Construction Incorporated,26
GWB,942478,Great Western Bancorp Inc,26
GWRE,29655,Guidewire Software Inc,26
GWW,8030,WW Grainger Inc,26
GYC,959987,Corporate Asset Backed Corp GC GIC,26
H,20870,Hyatt Hotels Corporation,26
HAE,20930,Haemonetics Corporation,26
HAL,7921,Halliburton Company,26
HASI,41214,Hannon Armstrong Sustainable Infrastructure Capital,26
HBB,1052094,Hamilton Beach Brands Holding Co Class A,26
HBI,39179,Hanesbrands Inc,26
HCA,20931,HCA Holdings Inc,26
HCC,1008723,Warrior Met Coal Inc,26
HCDI,1163109,Harbor Custom Development Inc,26
HCFT,41210,Hunt Companies Finance Trust Inc,26
HCHC,52760,HC2 Holdings Inc,26
HCI,16248,HCI Group Inc,26
HCXY,1163740,Hercules Capital Inc,26
HCXZ,1163739,Hercules Capital Inc,26
HD,8064,Home Depot Inc,26
HDB,8165,HDFC Bank Limited ADR,26
HE,20204,Hawaiian Electric Industries Inc,26
HEI,21164,Heico Corporation,26
HEIA,21070,Heico Corp A,26
HEP,958145,Holly Energy Partners LP,26
HEQ,959991,John Hancock Hedged Equity & Income Fund,26
HES,8326,Hess Corporation,26
HESM,1006166,Hess Midstream Partners LP,26
HFC,39282,HollyFrontier Corporation,26
HFRO,1156353,Highland Floating Rate Opport Fund,26
HGH,1097922,Hartford Financial Services Group 7.875% Fixed To Floating Rate Junior Subordinated Debentures Due 2,26
HGV,994769,Hilton Grand Vacations Inc,26
HHC,20757,Howard Hughes Corporation,26
HI,20968,Hillenbrand Inc,26
HIE,959993,Miller/Howard High Income Equity Fund,26
HIG,8050,Hartford Financial Services Group,26
HII,20191,Huntington Ingalls Industries Inc,26
HIL,20579,Hill International Inc,26
HIO,959994,Western Asset High Income Opportunity,26
HIW,39265,Highwoods Properties Inc,26
HIX,959995,Western Asset High Income II,26
HKIB,1142211,AMTD International Inc,26
HL,20872,Hecla Mining Company,26
HLF,32366,Herbalife Nutrition Ltd,26
HLI,958147,Houlihan Lokey Inc,26
HLT,44408,Hilton Worldwide Holdings Inc,26
HLX,20205,Helix Energy Solutions Group Inc,26
HMC,8019,Honda Motor Co Ltd ADR,26
HMG,949587,HMG Courtland Properties,26
HMI,1061947,Huami Corp,26
HMLP,958148,Hoegh LNG Partners LP,26
HMN,20404,Horace Mann Educators Corporation,26
HMY,7969,Harmony Gold Mining Company Limited,26
HNGR,20362,Hanger Inc,26
HNI,20826,HNI Corp,26
HNP,20827,Huaneng Power International Inc,26
HNW,30793,Pioneer Diversified High IT,26
HOG,8259,Harley-Davidson Inc,26
HOME,986074,At Home Group Inc,26
HON,8272,Honeywell International Inc,26
HOV,8233,Hovnanian Enterprises Inc,26
HP,13849,Helmerich and Payne Inc,26
HPE,959998,Hewlett Packard Enterprise Co,26
HPF,959999,John Hancock Preferred Income II,26
HPI,960000,John Hancock Preferred ,26
HPP,20291,Hudson Pacific Properties Inc,26
HPQ,8270,HP Inc,26
HPR,20847,HighPoint Resources Corp,26
HPS,960002,John Hancock Preferred Income III,26
HPX,1166465,HPX Corp,26
HQH,942477,Tekla Healthcare Investors,26
HQL,942474,Tekla Life Sciences Investors,26
HR,39163,Healthcare Realty Trust Incorporated,26
HRB,8170,H&R Block Inc,26
HRC,20646,Hill-Rom Holdings Inc,26
HRI,39261,Herc Holdings Inc,26
HRL,13850,Hormel Foods Corporation,26
HRTG,103931,Heritage Insurance Holdings Inc,26
HSBC,20871,HSBC Holdings PLC ADR,26
HSC,21118,Harsco Corporation,26
HSY,8052,Hershey Company,26
HT,20494,Hersha Hospitality Trust,26
HTA,29656,Healthcare Trust of America Inc,26
HTD,960008,John Hancock Tax Advantaged Dividend ,26
HTFA,1163589,Horizon Technology Finance Corp,26
HTGC,24366,Hercules Capital Inc,26
HTH,20690,Hilltop Holdings Inc,26
HTY,960011,John Hancock Tax-Advantaged Global Shareholder Yield,26
HUBB,21027,Hubbell Inc,26
HUBS,942355,HubSpot Inc,26
HUM,8169,Humana Inc,26
HUN,39186,Huntsman Corporation,26
HUSA,24388,Houston American Energy Corporation,26
HUYA,1073376,HUYA Inc,26
HVT,20234,Haverty Furniture Companies Inc,26
HVTA,20293,Haverty Furniture Companies A,26
HWM,1161057,Howmet Aerospace Inc,26
HXL,21119,Hexcel Corporation,26
HY,41263,Hyster-Yale Materials Handling Inc,26
HYB,960015,New America High ,26
HYI,960017,Western Asset High Yield Defined Opportunity Fund,26
HYLN,1163244,Hyliion Holdings Corp,26
HYT,960018,BlackRock Corporate High Yield Fund,26
HZN,955549,Horizon Global Corp,26
HZO,21029,MarineMax Inc,26
IAA,1141618,IAA Inc,26
IACA,1167572,Ion Acquisition Corp 1 Ltd,26
IAE,960020,Voya Asia Pacific High Dividend Equity Income Fund,26
IAF,30797,Aberdeen Australia EF Inc,26
IBA,8289,Industrias Bachoco SAB de CV ADR,26
IBIO,30798,Ibio Inc,26
IBM,8082,International Business Machines,26
IBN,8214,Icici Bank Limited ADR,26
IBP,101868,Installed Building Products Inc,26
ICD,940819,Independence Contract Drilling Inc,26
ICE,7907,Intercontinental Exchange Inc,26
ICL,941644,ICL Israel Chemicals Ltd,26
IDA,21120,IDACORP Inc,26
IDE,960022,Voya Infrastructure Industrials & Materials Fund,26
IDT,21231,IDT Corporation,26
IEX,39139,IDEX Corporation,26
IFF,8026,International Flavors & Fragrances Inc,26
IFFT,1163570,International Flavors Fragrances Inc,26
IFN,960024,India,26
IFS,1141819,Intercorp Financial Services Inc,26
IGA,960025,Voya Global Advantage & Premium Opportunity Fund,26
IGC,960026,India Globalization Capital Inc,26
IGD,960027,Voya Global Equity Dividend & Premium Opportunity,26
IGI,960028,Western Asset Investment Grade Defined Opportunity,26
IGR,960029,CBRE Clarion Global Real Estate Income Fund,26
IGT,8243,International Game Technology PLC,26
IH,1166738,Ihuman Inc,26
IHC,20449,Independence Holding Company,26
IHD,960030,Voya Emerging Markets High Dividend Equity Fund,26
IHG,20294,InterContinental Hotels Group PLC ADR,26
IHT,30806,InnSuites Hospitality Trust,26
IID,960031,Voya International High Dividend Equity Income Fd,26
IIF,960032,Morgan Stanley India,26
IIM,960033,Invesco Value Municipal ,26
IIPR,993270,Innovative Industrial Properties Inc,26
IMAX,25321,Imax Corp,26
IMH,30807,Impac Mortgage Holdings Inc,26
IMO,34410,Imperial Oil Ltd,26
IMPX,1167573,AEA-Bridges Impact Corp.,26
INFO,102907,IHS Markit Ltd,26
INFU,30809,InfuSystems Holdings Inc,26
INFY,6401,Infosys Ltd ADR,26
ING,21073,ING Group NV ADR,26
INGR,39240,Ingredion Incorporated,26
INN,20364,Summit Hotel Properties Inc,26
INS,949588,Intelligent Systems,26
INSI,959776,Insight Select Income,26
INSP,1073227,Inspire Medical Systems Inc,26
INSW,993271,International Seaways Inc,26
INT,32324,World Fuel Services Corporation,26
INTT,16376,inTest Corporation,26
INUV,30812,Inuvo Inc,26
INVH,995924,Invitation Homes Inc,26
IO,20694,Ion Geophysical Corp,26
IOR,30814,Income Opportunity Realty Investors,26
IP,7930,International Paper Company,26
IPG,7877,Interpublic Group of Companies Inc,26
IPI,20760,Intrepid Potash Inc,26
IPOB,1163543,Social Capital Hedosophia Holdings II Corp,26
IPOC,1163524,Social Capital Hedosophia Holdings Corp III,26
IPV,1165433,InterPrivate Acquisition Corp,26
IQI,960041,Invesco Quality Municipal ,26
IQV,41232,Iqvia Holdings Inc,26
IR,8137,Ingersoll Rand Inc,26
IRET,16392,Investors Real Estate Trust,26
IRL,960046,New Ireland,26
IRM,13852,Iron Mountain Incorporated,26
IRR,960047,Voya Natural Resources Equity Income Fund,26
IRS,20142,IRSA Inversiones Y Representaciones,26
IRT,949589,Independence Realty Trust Inc,26
ISD,960048,Prudential Short Duration High Yield,26
ISDR,949590,Issuer Direct Corp,26
ISR,30817,IsoRay Inc,26
IT,39135,Gartner Inc,26
ITCB,32335,Itau CorpBanca ADR,26
ITGR,20992,Integer Holdings Corp,26
ITP,30898,IT Tech Packaging Inc,26
ITRG,1097891,Integra Resources Corp,26
ITT,8202,ITT Inc,26
ITUB,32307,Itau Unibanco Banco Holding SA,26
ITW,7915,Illinois Tool Works Inc,26
IVC,21030,Invacare Corporation,26
IVH,960051,Ivy High Income Opportunities Fund,26
IVR,39250,Invesco Mortgage Capital Inc,26
IVZ,13851,Invesco Plc,26
IX,7982,Orix Corp Ads,26
J,8125,Jacobs Engineering Group Inc,26
JAX,958815,J Alexanders Holdings Inc,26
JBGS,1025079,JBG SMITH Properties,26
JBK,1010676,Goldman Sachs Capital I Securities-Backed Series 2004-6 Trust,26
JBL,8181,Jabil Circuit Inc,26
JBT,20365,John Bean Technologies Corporation,26
JCE,960056,Nuveen Core Equity Alpha,26
JCI,8217,Johnson Controls International PLC,26
JDD,960057,Nuveen Diversified Dividend & ,26
JEF,8176,Jefferies Financial Group Inc,26
JELD,995093,Jeld-Wen Holding Inc,26
JEQ,960058,Aberdeen Japan Equity Fund Inc,26
JFR,960059,Nuveen Floating Rate ,26
JGH,960060,Nuveen Global High Income,26
JHG,1010884,Janus Henderson Group PLC,26
JHI,960062,John Hancock Investors,26
JHS,960064,John Hancock Income Securities,26
JHX,29531,James Hardie Industries PLC ADR,26
JIH,1155047,Juniper Industrial Holdings Inc,26
JILL,997360,J.Jill Inc,26
JKS,20366,JinkoSolar Holding Company Limited,26
JLL,20580,Jones Lang LaSalle Incorporated,26
JLS,960066,Nuveen Mortgage Opportunity Term,26
JMIA,1123970,Jumia Technologies AG,26
JMM,942645,Nuveen Multi Mrkt Income Fund,26
JMP,21031,JMP Group Inc,26
JNJ,8177,Johnson & Johnson,26
JNPR,6463,Juniper Networks Inc,26
JOB,949593,General Employment Enterprises Inc,26
JOE,21074,St Joe Company,26
JOF,960070,Japan Smaller Capitalization,26
JP,958149,Jupai Holdings Ltd,26
JPC,960071,Nuveen Preferred Income Opportunities,26
JPI,960072,Nuveen Preferred and Income Term,26
JPM,267,JPMorgan Chase & Co,26
JPS,960080,Nuveen Preferred Securites Income Fund,26
JPT,1050123,Nuveen Preferred and Income 2022 Term Fund,26
JQC,960082,Nuveen Credit Strategies ,26
JRI,960083,Nuveen Real Asset Income And Growth,26
JRO,960084,Nuveen Floating Rate Income Opportunity,26
JRS,30820,Nuveen Real Estate Fund,26
JSD,960085,Nuveen Short Duration Credit Opportunities Fund,26
JT,1054952,Jianpu Technology Inc,26
JTA,960086,Nuveen Tax-Advantaged Total Return Strategy,26
JTD,960087,Nuveen Tax-Advantaged Dividend Growth,26
JWA,20761,John Wiley & Sons,26
JWB,20762,John Wiley & Sons B,26
JWN,8340,Nordstrom Inc,26
JWS,1163890,Jaws Acquisition Corp,26
K,8334,Kellogg Company,26
KAI,21166,Kadant Inc,26
KAMN,16442,Kaman Corporation,26
KAR,20496,KAR Auction Services Inc,26
KB,20581,KB Financial Group Inc,26
KBH,7999,KB Home,26
KBR,21252,KBR Inc,26
KEN,945648,Kenon Holdings,26
KEP,20450,Korea Electric Power Corporation,26
KEX,21168,Kirby Corporation,26
KEY,8105,KeyCorp,26
KEYS,943806,Keysight Technologies Inc,26
KF,960093,Korea,26
KFS,20236,Kingsway Financial Services Inc,26
KFY,20498,Korn Ferry,26
KGC,7891,Kinross Gold Corp,26
KIM,8337,Kimco Realty Corporation,26
KIO,960100,KKR Income Opportunities Fund,26
KIQ,942592,Kelso Technologies Inc,26
KKR,41279,KKR & Co LP,26
KLR,30772,Kaleyra Inc,26
KMB,269,Kimberly-Clark Corporation,26
KMF,960101,Kayne Anderson Midstream/Energy Fund Inc,26
KMI,32518,Kinder Morgan Inc,26
KMPR,21125,Kemper Corporation,26
KMT,39182,Kennametal Inc,26
KMX,13836,CarMax Inc,26
KN,101870,Knowles Cor,26
KNL,21208,Knoll Inc,26
KNOP,958151,KNOT Offshore Partners LP,26
KNX,20451,Knight Transportation Inc,26
KO,271,Coca-Cola Company,26
KODK,48372,Eastman Kodak Co,26
KOF,8293,Coca Cola Femsa SAB De CV ADR,26
KOP,20695,Koppers Holdings Inc,26
KOS,20878,Kosmos Energy Ltd,26
KR,8062,Kroger Company,26
KRA,20237,Kraton Corp,26
KRC,39283,Kilroy Realty Corp,26
KREF,1009131,KKR Real Estate Finance Trust Inc,26
KRG,20539,Kite Realty Group Trust,26
KRO,20696,Kronos Worldwide Inc,26
KRP,995925,Kimbell Royalty Partners LP,26
KSM,960106,Deutsche Strategic Municipal Income Trust,26
KSS,8148,Kohls Corp,26
KSU,32512,Kansas City Southern,26
KT,39284,KT Corporation,26
KTF,960109,Deutsche Municipal Income Trust,26
KTH,960110,Structured Products Corp Corts Tr for Peco Energy Cap Tr III GIC,26
KTN,960111,Credit Enhanced Corts Trust For Aon Capital A GIC,26
KWR,20698,Quaker Chemical Corporation,26
KYN,960114,Kayne Anderson MLP,26
L,13083,Loews Corp,26
LAD,20879,Lithia Motors Inc,26
LADR,101871,Ladder Capital Corp Class A,26
LAIX,1096078,LAIX,26
LAZ,13943,Lazard Ltd,26
LB,8024,L Brands Inc,26
LBRT,1009132,Liberty Oilfield Services Inc,26
LC,943117,LendingClub Corp,26
LCI,101872,Lannett Company Inc,26
LCII,20745,LCI Industries,26
LCTX,24438,Lineage Cell Therapeutics,26
LDL,21170,Lydall Inc,26
LDOS,19696,Leidos Holdings Inc,26
LDP,960122,Cohen & Steers Limited Duration Preferred and ,26
LEA,39140,Lear Corporation,26
LEAF,20922,Leaf Group Ltd,26
LEAP,1167574,Ribbit LEAP Ltd,26
LEE,29657,Lee Enterprises Incorporated,26
LEG,8023,Leggett & Platt Incorporated,26
LEJU,101873,Leju Holdings Limited,26
LEN,7961,Lennar Corporation,26
LEO,960123,Dreyfus Strategic Municipals,26
LEU,942324,Centrus Energy,26
LEVI,1123436,Levi Strauss & Co Class A,26
LFC,20295,China Life Insurance Company,26
LGI,960124,Lazard Global Total Return & ,26
LGL,30824,LGL Group Inc,26
LGVW,1163891,Longview Acquisition Corp,26
LH,8113,Laboratory Corporation of America Holdings,26
LHX,13846,L3Harris Technologies Inc,26
LII,39165,Lennox International Inc,26
LIN,942017,Linde PLC,26
LINX,1156307,Linx SA,26
LITB,41220,LightInTheBox Holding Co Ltd ARD,26
LL,20238,Lumber Liquidators Holdings Inc,26
LLY,273,Eli Lilly and Company,26
LMND,1163042,Lemonade Inc,26
LMT,7880,Lockheed Martin Corporation,26
LN,985875,Line Corp ADR,26
LNC,8131,Lincoln National Corporation,26
LND,41198,Brasilagro Adr,26
LNG,39123,Cheniere Energy Inc,26
LNN,8950,Lindsay Corporation,26
LOAK,1165436,Live Oak Acquisition Corp,26
LODE,30825,Comstock Mining Inc,26
LOMA,1053087,Loma Negra Compania Industrial Argentina SA ADR,26
LOV,30826,Spark Networks SE,26
LOW,10549,Lowe Companies Inc,26
LPG,101874,Dorian LPG Ltd,26
LPI,20297,Laredo Petroleum Holdings Inc,26
LPL,39278,LG Display Co Ltd,26
LPX,39168,Louisiana-Pacific Corporation,26
LRN,21254,K12 Inc,26
LSF,1166238,Laird Superfood Inc,26
LSI,20553,Life Storage Inc,26
LTC,20830,LTC Properties Inc,26
LTHM,1096126,Livent Corp,26
LU,1167066,Lufax Holding Ltd,26
LUB,21210,Lubys Inc,26
LUMN,7965,CenturyLink Inc,26
LUV,7914,Southwest Airlines Company,26
LVS,8280,Las Vegas Sands Corp,26
LW,993236,Lamb Weston Holdings Inc,26
LXFR,41265,Luxfer Holdings PLC,26
LXP,20586,Lexington Realty Trust,26
LXU,20831,Lsb Industries Inc,26
LYB,39251,LyondellBasell Industries NV,26
LYG,20503,Lloyds Banking Group PLC ADR,26
LYV,20298,Live Nation Entertainment Inc,26
LZB,21077,La-Z-Boy Incorporated,26
M,8945,Macy Inc,26
MA,7864,Mastercard Inc,26
MAA,20151,Mid-America Apartment Communities,26
MAC,32359,Macerich Company,26
MAG,34422,MAG Silver Corp,26
MAIN,24300,Main Street Capital Corporation,26
MAN,39293,ManpowerGroup Inc,26
MANU,29965,Manchester United Ltd,26
MATX,29658,Matson Inc,26
MAV,960130,Pioneer Municipal High Income Advantage Trust,26
MAX,1167038,Mediaalpha Inc,26
MBI,8162,MBIA Inc,26
MBT,39228,Mobil nye Telesistemy PAO ADR,26
MC,101876,Moelis & Co,26
MCA,960131,BlackRock MuniYield California Quality,26
MCB,1054795,Metropolitan Bank Holding,26
MCC,24320,Medley Capital Corporation,26
MCD,272,McDonald Corporation,26
MCF,24412,Contango Oil & Gas Company,26
MCI,960132,Babson Capital Corporate Investors,26
MCK,8014,McKesson Corporation,26
MCN,960133,Madison Covered Call and Equity Strategy,26
MCO,8946,Moodys Corporation,26
MCR,960134,MFS Charter Income Trust,26
MCS,21078,Marcus Corporation,26
MCY,20700,Mercury General Corporation,26
MD,21171,Mednax Inc,26
MDC,20935,MDC Holdings Inc,26
MDLA,1141595,Medallia Inc,26
MDLQ,995926,Medley LLC ELKS,26
MDLX,987080,Medley LLC,26
MDLY,941645,Medley Management Inc,26
MDP,8197,Meredith Corporation,26
MDT,7857,Medtronic PLC,26
MDU,20882,MDU Resources Group Inc,26
MEC,1129438,Mayville Engineering Co Inc,26
MED,21079,MEDIFAST INC,26
MEG,1163356,Montrose Environmental Grp,26
MEI,20541,Methode Electronics Inc,26
MEN,960135,BlackRock MuniEnhanced,26
MET,7947,MetLife Inc,26
MFA,20143,MFA Financial Inc,26
MFAC,1096526,Megalith Financial Acquisition Corp Class A,26
MFC,39167,Manulife Financial Corp,26
MFD,960144,Macquarie/First Tr Global Infr/Util Div & ,26
MFG,8364,Mizuho Financial Group Inc ADR,26
MFGP,1043101,Micro Focus International PLC ADR,26
MFL,960145,BlackRock MuniHoldings Investment Quality,26
MFM,960146,MFS Municipal Income Trust,26
MFMS,1097825,MFAM Small-Cap Growth ETF,26
MFT,960147,BlackRock MuniYield Investment Quality,26
MFV,960148,MFS Special Value Trust,26
MG,20884,Mistras Group Inc,26
MGA,13946,Magna International Inc,26
MGF,960149,MFS Government Markets ,26
MGM,7862,MGM Resorts International,26
MGP,976448,MGM Growth Properties LLC,26
MGR,1163611,Affiliated Managers Group Inc,26
MGU,960150,Macquarie Global Infrastructure Total Return Fund,26
MGY,1025072,Magnolia Oil & Gas Corp,26
MHD,960152,BlackRock MuniHoldings,26
MHE,30836,BlackRock Massachusetts Tax-Exempt,26
MHF,960153,Western Asset Municipal High ,26
MHH,30837,Mastech Holdings Inc,26
MHI,960154,Pioneer Municipal High Income Trust,26
MHK,39172,Mohawk Industries Inc,26
MHLA,985172,Maiden Holdings Ltd,26
MHN,960155,BlackRock MuniHoldings NY Quality,26
MHNC,960157,Maiden Holdings North America Ltd ELKS,26
MHO,8029,M/I Homes Inc,26
MIC,945642,Macquarie Infrastructure Co,26
MIE,960163,Cohen and Steers MLP Income and Energy Opportunity,26
MIN,960164,MFS Intermediate Income Trust,26
MITT,20209,AG Mortgage Investment Trust Inc,26
MIXT,41222,Mix Telemats Ltd,26
MIY,960167,BlackRock MuniYield MI Quality,26
MKC,7924,McCormick & Company Incorporated,26
MKL,21127,Markel Corporation,26
MLI,20587,Mueller Industries Inc,26
MLM,20299,Martin Marietta Materials Inc,26
MLP,20266,Maui Land & Pineapple Company Inc,26
MLR,20650,Miller Industries Inc,26
MLSS,52656,Milestone Scientific,26
MMC,8328,Marsh & McLennan Companies Inc,26
MMD,960169,MainStay DefinedTerm Muncipal Opportunities Fund,26
MMI,44403,Marcus & Millichap Inc,26
MMM,277,3M Company,26
MMP,41031,Magellan Midstream Partners LP,26
MMS,21128,Maximus Inc,26
MMT,960170,MFS Multimarket Income Trust,26
MMU,960171,Western Asset Managed Municipals,26
MN,20702,Manning & Napier Inc,26
MNP,960173,Western Asset Municipal Partners Fund,26
MNR,20157,Monmouth Real Estate Investment,26
MNRL,1127927,Brigham Minerals Inc,26
MNSO,1166925,Miniso Group Holding Ltd,26
MO,8044,Altria Group,26
MOD,20455,Modine Manufacturing Company,26
MODN,41266,Model N Inc,26
MOGU,1097780,MOGU Inc,26
MOH,20651,Molina Healthcare Inc,26
MOS,8278,Mosaic Co,26
MOV,20936,Movado Group Inc,26
MP,1164702,Mp Materials Corp,26
MPA,960177,BlackRock MuniYield Pennsylvania Quality,26
MPC,13947,Marathon Petroleum Corp,26
MPLN,1163393,Churchill Capital III Corp,26
MPLX,958154,MPLX LP,26
MPV,960179,Babson Capital Participation Investors,26
MPW,20330,Medical Properties Trust Inc,26
MPX,20704,Marine Products Corporation,26
MQT,960180,BlackRock MuniYield Quality Fund II,26
MQY,960181,BlackRock MuniYield Quality,26
MRC,39144,MRC Global Inc,26
MRK,275,Merck & Company Inc,26
MRO,8099,Marathon Oil Corporation,26
MS,8056,Morgan Stanley,26
MSA,20372,MSA Safety,26
MSC,1096652,Studio City International Holdings Ltd,26
MSCI,21232,MSCI Inc,26
MSD,960188,Morgan Stanley Emerging Markets Debt,26
MSGE,1161066,Madison Square Garden Entertainment Corp,26
MSGN,958816,MSG Networks Inc,26
MSGS,16672,Madison Square Garden Sports Corp,26
MSI,276,Motorola Solutions Inc,26
MSM,20267,MSC Industrial Direct Company Inc,26
MSN,30841,Emerson Radio Corporation,26
MSP,1166976,Datto Holding Corp,26
MT,23643,ArcelorMittal SA ADR,26
MTB,8275,M&T Bank Corp,26
MTD,20210,Mettler-Toledo International Inc,26
MTDR,29662,Matador Resources Company,26
MTG,8319,MGIC Investment Corporation,26
MTH,32325,Meritage Corporation,26
MTL,20588,Mechel OAO,26
MTN,20937,Vail Resorts Inc,26
MTNB,997428,Matinas BioPharma Holdings Inc,26
MTOR,21129,Meritor Inc,26
MTR,945644,Mesa Royalty Trust,26
MTRN,21035,Materion Corporation,26
MTT,960196,Western Asset Municipal Defined Opportunity Trust,26
MTW,7996,Manitowoc Company Inc,26
MTX,20456,Minerals Technologies Inc,26
MTZ,21174,MasTec Inc,26
MUA,949539,BlackRock MuniAssets,26
MUC,960197,BlackRock MuniHoldings CA Quality,26
MUE,960198,BlackRock MuniHoldings Quality II,26
MUFG,8187,Mitsubishi UFJ Financial Group Inc ADR,26
MUH,960199,BlackRock MuniHoldings II,26
MUI,960200,BlackRock Muni Intermediate Duration,26
MUJ,960201,BlackRock MuniHoldings New Jersey Quality,26
MUR,8363,Murphy Oil Corporation,26
MUS,960202,BlackRock MuniHoldings Quality,26
MUSA,20505,Murphy USA Inc,26
MVC,24352,MVC Capital Inc,26
MVF,30842,MuniVest Fund Inc,26
MVO,958155,MV Oil Trust,26
MVT,960203,BlackRock MuniVest Fund II,26
MWA,20589,Mueller Water Products,26
MX,20332,MagnaChip Semiconductor,26
MXC,30844,Mexco Energy Corporation,26
MXE,960207,Mexico Equity and ,26
MXF,960208,Mexico,26
MXL,21036,MaxLinear Inc,26
MYC,960209,BlackRock MuniYield California Fund,26
MYD,960210,BlackRock MuniYield Fund,26
MYE,20705,Myers Industries Inc,26
MYF,960211,Blackrock Muniyield,26
MYI,960212,BlackRock MuniYield Quality III,26
MYJ,960213,BlackRock MuniYield New Jersey,26
MYN,960214,BlackRock MuniYield New York Quality,26
MYO,1014103,Myomo Inc,26
MYOV,992757,Myovant Sciences Ltd,26
MZA,30846,MuniYield Arizona Fund Inc,26
NAC,960216,Nuveen California Dividend Advantage Muni Fund,26
NAD,960217,Nuveen Dividend Advantage Municipal Fund,26
NAK,34431,Northern Dynasty Minerals Ltd,26
NAN,960218,Nuveen New York Quality Municipal Income,26
NAT,20373,Nordic American Tankers Limited,26
NAV,20374,Navistar International Corporation,26
NAVB,24365,Navidea Biopharmaceuticals Inc,26
NAZ,960220,Nuveen Arizona Quality Municipal Income,26
NBA,1167869,New Beginnings Acquisition Corp,26
NBB,960221,Nuveen Build America Bond,26
NBH,30847,Neuberger Berman IMF Inc,26
NBHC,41267,National Bank Holdings Corporation,26
NBO,30849,Neuberger Berman New York IMF Inc,26
NBR,8284,Nabors Industries Ltd,26
NBW,30850,Neuberger Berman California IMF Inc,26
NBY,30851,NovaBay Pharmaceuticals Inc,26
NC,20706,NACCO Industries Inc,26
NCA,960224,Nuveen California Municipal Value Fund Inc,26
NCB,30852,Nuveen California MVF 2,26
NCLH,40082,Norwegian Cruise Line Holdings Ltd,26
NCR,8277,NCR Corp,26
NCV,960228,AllianzGI Convertible & ,26
NCZ,960229,AllianzGI Convertible & Income II,26
NDMO,1166699,Nuveen Dynamic Municipal Opportunities Fund,26
NDP,960230,Tortoise Energy Independence,26
NEA,30855,Nuveen AMT-Free Municipal IF,26
NEE,13091,Nextera Energy Inc,26
NEM,8150,Newmont Goldcorp Corp,26
NEN,30856,New England Realty Associates LP,26
NEP,958159,Nextera Energy Partners LP,26
NES,1095924,Nuverra Environmental Solutions Inc,26
NET,1152334,Cloudflare Inc,26
NEU,21003,NewMarket Corporation,26
NEV,960233,Nuveen Enhanced Municipal Value,26
NEW,1081603,Puxin Ltd,26
NEWR,943121,New Relic Inc,26
NEX,995092,Nextier Oilfield Solutions Inc,26
NEXA,1052910,Nexa Resources SA,26
NFG,20590,National Fuel Gas Company,26
NFH,1084214,New Frontier Corp Class A,26
NFJ,960234,AllianzGI NFJ Dividend Interest & Premium Strategy,26
NGA,1167512,Northern Genesis Acquisition Corp,26
NGD,34143,New Gold Inc,26
NGG,20458,National Grid PLC ADR,26
NGL,958160,NGL Energy Partners LP,26
NGS,20268,Natural Gas Services Group Inc,26
NGVC,41224,Natural Grocers by Vitamin Cottage Inc,26
NGVT,977671,Ingevity Corp,26
NHC,24392,National HealthCare Corporation,26
NHF,44973,NexPoint Credit Strategies,26
NHI,20300,National Health Investors Inc,26
NHS,30862,Neuberger Berman High Yield Strategies,26
NI,7896,NiSource Inc,26
NID,960236,Nuveen Intermediate Duration Municipal Term Fund,26
NIE,960237,AllianzGI Equity & Convertible ,26
NIM,960238,Nuveen Select Maturities Municipal Fund,26
NINE,1058013,Nine Energy Service Inc,26
NIO,1096032,Nio Inc Class A ADR,26
NIQ,960240,Nuveen Intermediate Duration Quality Municipal,26
NJR,20507,NewJersey Resources Corporation,26
NJV,30863,Nuveen New Jersey MVF,26
NKE,8948,Nike Inc,26
NKG,30864,Nuveen Georgia Quality Municipal Income,26
NKX,30867,Nuveen California AMT Free Quality Municipal Income,26
NL,20885,NL Industries Inc,26
NLS,20768,Nautilus Group Inc,26
NLSN,20769,Nielsen Holdings PLC,26
NLY,20301,Annaly Capital Management Inc,26
NM,20333,Navios Maritime Holdings Inc,26
NMCO,1155938,Nuveen Municipal Credit Opport Fund,26
NMI,960247,Nuveen Municipal Income Fund Inc,26
NML,941537,Neuberger Berman MLP Income Fund Inc,26
NMM,49808,Navios Maritime Partners LP Unit,26
NMR,8273,Nomura Holdings Inc ADR,26
NMS,942356,Nuveen Minnesota Quality Municipal Income,26
NMT,960251,Nuveen Massachusetts Quality Municipal Income,26
NMY,960252,Nuveen Maryland Quality Municipal Income,26
NMZ,30869,Nuveen Municipal High IOF,26
NNA,945645,Navios Maritime Acquisition Corp,26
NNI,21175,Nelnet Inc,26
NNN,39257,National Retail Properties Inc,26
NNVC,949596,NanoViricides Inc,26
NNY,960256,Nuveen New York Municipal Value Fund Inc,26
NOAH,20886,Noah Holdings Ltd,26
NOC,7861,Northrop Grumman Corporation,26
NOG,24393,Northern Oil & Gas Inc,26
NOK,23176,Nokia Corp ADR,26
NOM,30871,Nuveen Missouri Quality Municipal Income,26
NOMD,949159,Nomad Foods Ltd,26
NOV,8134,National Oilwell Varco Inc,26
NOVA,1141598,Sunnova Energy International Inc,26
NOW,41239,ServiceNow Inc,26
NP,20938,Neenah Paper Inc,26
NPK,20269,National Presto Industries Inc,26
NPN,30872,Nuveen Pennsylvania MVF,26
NPO,20939,Enpro Industries,26
NPTN,20887,NeoPhotonics Corporation,26
NPV,960262,Nuveen Virginia Quality Municipal Income,26
NQP,960265,Nuveen Pennsylvania Quality Municipal Income,26
NR,20652,Newpark Resources Inc,26
NREF,1156640,Nexpoint Real Estate Finance Inc,26
NRG,13857,NRG Energy Inc,26
NRGX,1122437,PIMCO Energy & Tactical Credit Opps,26
NRK,30873,Nuveen New York AMT Free Quality Municipal Income,26
NRO,30874,Neuberger Berman RE Securities IF,26
NRP,943130,Natural Resource Partners LP,26
NRT,958161,North European Oil Royalty Trust,26
NRUC,1163515,National Rural Utilities Cooperative Finance Corp,26
NRZ,41225,New Residential Investment Corp,26
NS,13948,NuStar Energy LP,26
NSA,950998,National Storage Affiliates Trust,26
NSC,8252,Norfolk Southern Corporation,26
NSCO,1095921,Nesco Holdings Inc,26
NSL,960274,Nuveen Senior Income Fund,26
NSP,21037,Insperity Inc,26
NSPR,949597,InspireMD Inc,26
NSS,1104609,NuStar Logistics 7.625% Fixed To Floating Rate Subordinated Notes Exp 15 Jan 2043,26
NTB,989525,Bank of N.T. Butterfield & Son Ltd,26
NTCO,1156358,Natura & Co Holding SA,26
NTG,960277,Tortoise MLP,26
NTIP,942644,Network-1 Technologies Inc,26
NTN,30875,NTN Buzztime Inc,26
NTP,20544,Nam Tai Property Inc,26
NTR,1057243,Nutrien Ltd,26
NTST,1164645,Netstreit Corp,26
NTZ,21132,Natuzzi SpA,26
NUE,8128,Nucor Corp,26
NUM,960280,Nuveen Michigan Quality Municipal Income,26
NUO,960281,Nuveen Ohio Quality Municipal Income,26
NUS,20545,Nu Skin Enterprises Inc,26
NUV,960282,Nuveen Municipal Value Fund Inc,26
NUW,960283,Nuveen AMT-Free Municipal Value Fund,26
NVG,30878,Nuveen AMT Free Municipal Credit Income,26
NVGS,101881,Navigator Holdings Ltd,26
NVO,39229,Novo Nordisk A/S,26
NVR,21255,NVR Inc,26
NVRO,942650,Nevro Corp,26
NVS,21133,Novartis AG ADR,26
NVST,1152333,Envista Holdings Corp,26
NVT,1075387,nVent Electric PLC,26
NVTA,945661,InVitae Corp,26
NWG,1163892,Natwest Group PLC,26
NWHM,101882,New Home Co,26
NWN,20413,Northwest Natural Gas Co,26
NX,20304,Quanex Building Products,26
NXC,960285,Nuveen California Select Tax Free ,26
NXJ,30885,Nuveen New Jersey Quality Municipal Income,26
NXN,960286,Nuveen New York Select Tax-Free Income Portfolio,26
NXP,960287,Nuveen Select Tax-Free Income Portfolio,26
NXQ,960288,Nuveen Select Tax-Free Income Portfolio 2,26
NXR,960289,Nuveen Select Tax-Free Income Portfolio 3,26
NXRT,949598,Nexpoint Residential Trust Inc,26
NYC,1165442,New York City REIT Inc,26
NYCB,39244,New York Community Bancorp Inc,26
NYT,8130,New York Times Company,26
NYV,30890,Nuveen New York MVF 2,26
NZF,30891,Nuveen Municipal Credit Income,26
O,39285,Realty Income Corp,26
OAC,1163692,Oaktree Acquisition Corp,26
OBLG,30774,Glowpoint Inc,26
OC,39289,Owens Corning Inc,26
OCFT,1155834,Oneconnect Financial Technology Co,26
OCN,20707,Ocwen Financial Corporation,26
OCX,962503,OncoCyte Corp,26
ODC,20546,Oil-Dri Corporation Of America,26
OEC,940766,Orion Engineered Carbons SA,26
OFC,39234,Corporate Office Properties Trust,26
OFG,20334,OFG Bancorp,26
OGE,39180,OGE Energy Corporation,26
OGEN,949599,Oragenics Inc,26
OGS,101884,One Gas Inc,26
OHI,39245,Omega Healthcare Investors Inc,26
OI,13859,Owens-Illinois Inc,26
OIA,960296,Invesco Municipal Income Opportunities Class Common,26
OII,32314,Oceaneering International Inc,26
OIS,20335,Oil States International Inc,26
OKE,13858,ONEOK Inc,26
OLN,21213,Olin Corporation,26
OLP,20414,One Liberty Properties Inc,26
OMC,8129,Omnicom Group Inc,26
OMF,48391,OneMain Holdings Inc,26
OMI,20891,Owens & Minor Inc,26
ONE,20547,OneSmart International Education Group Ltd,26
ONTO,16696,Onto Innovation Inc,26
OOMA,958168,Ooma Inc,26
OPY,20508,Oppenheimer Holdings Inc,26
ORA,20591,Ormat Technologies Inc,26
ORAN,20865,Orange SA ADR,26
ORC,48652,Orchid Isla,26
ORCC,1141592,Owl Rock Capital Corp,26
ORCL,274,Oracle Corporation,26
ORI,39242,Old Republic International Corp,26
ORN,20592,Orion Group Holdings Inc,26
OSB,963702,Norbord Inc,26
OSG,13950,Overseas Shipholding Group,26
OSH,1164138,Oak Street Health Inc,26
OSK,13090,Oshkosh Corporation,26
OTIS,1159417,Otis Worldwide Corp,26
OUT,101852,Outfront Media Inc,26
OVV,32530,Ovintiv Inc,26
OXM,20654,Oxford Industries Inc,26
OXY,7954,Occidental Petroleum Corporation,26
PAA,39316,Plains All American Pipeline LP,26
PAC,20135,Grupo Aeroportuario del Pacifico SAB De CV ADR,26
PACE,1167578,Tpg Pace Tech Opportunities Corp,26
PACK,1072038,Ranpak Holdings Corp,26
PAG,20376,Penske Automotive Group Inc,26
PAGP,945655,Plains GP Holdings LP,26
PAGS,1061140,PagSeguro Digital Ltd,26
PAI,960297,Western Asset Income Fund,26
PAM,20941,Pampa Energia SA ADR,26
PANA,1166469,Panacea Acquisition Corp,26
PANW,41268,Palo Alto Networks Inc,26
PAR,20773,PAR Technology Corporation,26
PARR,51057,Par Pacific Holdings Inc,26
PAYC,101887,Paycom Soft,26
PB,20459,Prosperity Bancshares Inc,26
PBA,29622,Pembina Pipeline Corp,26
PBB,1163729,Prospect Capital Corp,26
PBC,1163730,Prospect Capital Corp,26
PBF,41226,PBF Energy Inc,26
PBFX,958169,PBF Logistics LP,26
PBH,20377,Prestige Brand Holdings Inc,26
PBI,8262,Pitney Bowes Inc,26
PBR,8028,Petroleo Brasileiro Petrobras SA ADR,26
PBT,958170,Permian Basin Royalty Trust,26
PBY,20415,Prospect Capital Corp ELKS,26
PCF,960300,Putnam High Income Securities,26
PCG,8251,Pacific Gas & Electric Co,26
PCGU,1163893,PG&E Corp,26
PCI,48386,PIMCO Dynamic Credit Income Fund,26
PCK,960309,PIMCO California Municipal Income Fund II,26
PCM,48384,Pcm Fund,26
PCN,48374,Pmco Crp&In,26
PCPL,1163554,CC Neuberger Principal Holdings I,26
PCQ,960310,PIMCO California Municipal Income Fund,26
PD,1127881,Pagerduty Inc,26
PDAC,1167575,Peridot Acquisition Corp,26
PDI,48385,PIMCO Dynamic Income Fund,26
PDM,39236,Piedmont Office Realty Trust Inc,26
PDS,20548,Precision Drilling Corporation,26
PDT,960311,John Hancock Premium Dividend Fund,26
PE,103917,Parsley Energy,26
PEAK,13847,Healthpeak Properties Inc,26
PEB,20549,Pebblebrook Hotel Trust,26
PED,949601,PEDEVCO Corp,26
PEG,7893,Public Service Enterprise Group Inc,26
PEI,20169,Pennsylvania RE Investment Trust,26
PEN,958817,Penumbra Inc,26
PEO,960316,Adams Natural Resources,26
PFD,960317,Flaherty & Crumrine Preferred Income Fund Inc,26
PFE,7989,Pfizer Inc,26
PFGC,958818,Performance Food Group Co,26
PFH,960318,Corporate Asset Backed Corp Pref,26
PFL,960320,Pimco Income Strategy,26
PFN,960321,Pimco Income Strategy II,26
PFO,960322,Flaherty & Crumrine Preferred Inc Oppty Fund Inc,26
PFS,20213,Provident Financial Services Inc,26
PFSI,41227,PennyMac Financial Services Inc,26
PG,8952,Procter & Gamble Company,26
PGP,960323,PIMCO Global StocksPLUS & Income Fund,26
PGR,7968,Progressive Corp,26
PGRE,942641,Paramount Group Inc,26
PGTI,16908,PGT Innovations Inc,26
PGZ,960324,Principal Real Estate ,26
PH,7976,Parker-Hannifin Corporation,26
PHD,960325,Pioneer Floating Rate Trust,26
PHG,39160,Koninklijke Philips NV ADR,26
PHGE,1156359,Biomx Inc,26
PHI,20152,PLDT Inc ADR,26
PHK,960326,PIMCO High Income Fund,26
PHM,8237,PulteGroup Inc,26
PHR,1141594,Phreesia Inc,26
PHT,960327,Pioneer High ,26
PHX,20593,PHX Minerals Inc,26
PIAI,1167893,Prime Impact Acquisition I,26
PIC,1163555,Pivotal Investment Corporation II,26
PII,32510,Polaris Industries Inc,26
PIM,960328,Putnam Master Intermediate Income Trust,26
PINE,1155091,Alpine Income Property Trust Inc,26
PING,1163662,Ping Identity Holding Corp,26
PINS,1127189,Pinterest Inc,26
PIPR,7890,Piper Jaffray Companies,26
PJT,958819,PJT Partners Inc,26
PK,994770,Park Hotels & Resorts Inc,26
PKE,20460,Park Electrochemical Corporation,26
PKG,39262,Packaging Corp of America,26
PKI,8279,PerkinElmer Inc,26
PKO,48382,Pimco Incm,26
PKX,21260,POSCO,26
PLAG,30649,Planet Green Holdings Corp,26
PLAN,1096130,Anaplan Inc,26
PLD,7923,Prologis Inc,26
PLG,34439,Platinum Group Metals Ltd,26
PLM,34441,Polymet Mining Corp,26
PLNT,958172,Planet Fitness Inc,26
PLOW,20713,Douglas Dynamics Inc,26
PLT,20972,Plantronics Inc,26
PLTR,1166239,Palantir Technologies Inc,26
PLX,36624,Protalix Biotherapeutics Inc,26
PLYM,1011048,Plymouth Industrial REIT Inc,26
PM,8039,Philip Morris International Inc,26
PMF,960332,PIMCO Municipal Income Fund,26
PML,960333,PIMCO Municipal Income Fund II,26
PMM,960334,Putnam Managed Municipal ,26
PMO,960335,Putnam Municipal Opportunities Trust,26
PMT,20183,PennyMac Mortgage Investment Trust,26
PMVC,1167576,PMV Consumer Acquisition Corp,26
PMX,960336,PIMCO Municipal Income Fund III,26
PNC,8057,PNC Financial Services Group Inc,26
PNF,960339,PIMCO New York Municipal Income Fund,26
PNI,960340,PIMCO New York Municipal Income Fund II,26
PNM,20242,PNM Resources Inc,26
PNR,32370,Pentair PLC,26
PNW,7943,Pinnacle West Capital Corp,26
POR,39246,Portland General Electric Co,26
POST,29665,Post Holdings Inc,26
PPG,8118,PPG Industries Inc,26
PPL,8203,PPL Corporation,26
PPR,960341,Voya Prime Rate Trust,26
PPT,960343,Putnam Premier Income Trust,26
PPX,960344,PPL Capital Funding Inc ELKS,26
PQG,1050148,PQ Group Holdings Inc,26
PRA,20893,ProAssurance Corporation,26
PRG,1167577,PROG Holdings Inc,26
PRGO,32396,Perrigo Company PLC,26
PRI,21040,Primerica Inc,26
PRK,24410,Park National Corporation,26
PRLB,39301,Proto Labs Inc,26
PRMW,16961,Primo Water Corp,26
PRO,20894,PROS Holdings Inc,26
PROS,1141820,Prosight Global Inc,26
PRPB,1166468,CC Neuberger Principal Holdings II,26
PRS,1163693,Prudential Financial Inc,26
PRSP,16966,Perspecta Inc,26
PRT,1073374,PermRock Royalty Trust,26
PRTY,949602,Party City Holdco Inc,26
PRU,8191,Prudential Financial Inc,26
PSA,8158,Public Storage,26
PSB,20656,PS Business Parks Inc,26
PSF,960364,Cohen and Steers Select Preferred and ,26
PSN,1129434,Parsons Corp,26
PSO,21135,Pearson PLC ADR,26
PSTG,960365,Pure Storage Inc,26
PSTH,1166391,Pershing Square Tontine Holdings Ltd,26
PSTL,1129485,Postal Realty Trust Inc,26
PSX,32531,Phillips 66,26
PSXP,958173,Phillips 66 Partners LP,26
PTN,30905,Palatin Technologies Inc,26
PTR,22273,PetroChina Co Ltd ADR,26
PTY,48387,PIMCO Corporate & Income Opportunity,26
PUK,20419,Prudential Public Limited Company,26
PUMP,997801,ProPetro Holding Corp,26
PVH,32533,PVH Corp,26
PVL,958157,Permianville Royalty Trust,26
PW,30906,Power REIT,26
PWR,19695,Quanta Services Inc,26
PXD,13860,Pioneer Natural Resources Co,26
PYN,960368,PIMCO New York Municipal Income Fund III,26
PYS,960369,Pplus Trust Series RRD 1 Pref,26
PYT,960370,PPLUS Trust Series GSC 2 Pref,26
PZC,960371,PIMCO California Municipal Income Fund III,26
PZG,24386,Paramount Gold Nevada Corp,26
PZN,20243,Pzena Investment Management Inc,26
QD,1052402,Qudian Inc,26
QEP,13861,QEP Resources Inc,26
QGEN,23064,Qiagen NV,26
QS,1165434,Quantumscape Corp,26
QSR,943131,Restaurant Brands International Inc,26
QTS,48380,QTS Realty Trust Inc,26
QTWO,101888,Q2 Holdings,26
QUAD,20895,Quad Graphics Inc,26
QUOT,101855,Quotient Technology Inc,26
R,8087,Ryder System Inc,26
RA,20974,Brookfield Real Assets Income,26
RACE,959205,Ferrari NV,26
RAD,21041,Rite Aid Corporation,26
RAMP,15333,Liveramp Holdings Inc,26
RBA,39233,Ritchie Bros Auctioneers,26
RBAC,1166756,RedBall Acquisition Corp,26
RBC,20896,Regal Beloit Corporation,26
RC,992963,Ready Capital Corp,26
RCG,30908,Renaissance Capital Growth & IF III,26
RCI,13086,Rogers Communications Inc,26
RCL,39254,Royal Caribbean Cruises Ltd,26
RCP,1163763,Ready Capital Corp,26
RCS,48383,PIMCO Strategic Income Fund,26
RCUS,1072221,Arcus Biosciences Inc,26
RDN,20942,Radian Group Inc,26
RDSB,20779,Royal Dutch Shell B PLC,26
RDY,8949,Dr Reddys Laboratories Ltd,26
RE,20717,Everest Re Group Ltd,26
REI,949603,Ring Energy Inc,26
RELX,20898,Relx PLC ADR,26
RENN,32349,Renren Inc,26
RES,13954,RPC Inc,26
RESI,41189,Front Yard Residential Corp,26
REV,21178,Revlon Inc,26
REVG,995701,Rev Group Inc,26
REX,20379,REX American Resources Corporation,26
REXR,41235,Rexford Inl Rty,26
REZI,1097629,Resideo Technologies Inc,26
RF,7945,Regions Financial Corporation,26
RFI,960388,Cohen Steers Total Return Realty,26
RFL,1075455,Rafael Holdings Inc Class B,26
RFP,20794,Resolute Forest Products Inc,26
RGA,20214,Reinsurance Group of America,26
RGR,20599,Sturm Ruger & Company Inc,26
RGS,21179,Regis Corporation,26
RGT,960389,Royce Global Value Trust Inc,26
RH,41270,RH,26
RHE,1052095,Regional Health Properties Inc,26
RHI,8207,Robert Half International Inc,26
RHP,20399,Ryman Hospitality Properties Inc,26
RIG,8300,Transocean Ltd,26
RIO,22794,Rio Tinto ADR,26
RIV,962504,Rivernorth Opportunities Fund Inc,26
RJF,20380,Raymond James Financial Inc,26
RKT,1164096,Rocket Companies Inc,26
RL,8022,Ralph Lauren Corp Class A,26
RLGT,30911,Radiant Logistics Inc,26
RLGY,39312,Realogy Holdings Corp,26
RLH,39275,Red Lion Hotels Corp,26
RLI,21235,RLI Corp,26
RLJ,20897,RLJ Lodging Trust,26
RM,29668,Regional Management Corp,26
RMAX,41234,Re Max Holding,26
RMD,21180,ResMed Inc,26
RMED,1096073,RA Medical Systems,26
RMG,1131054,RMG Acquisition Corp Class A,26
RMT,960393,Royce Micro Cap,26
RNG,41236,Ringcentral Inc,26
RNGR,1031182,Ranger Energy Services Inc,26
RNP,960394,Cohen & Steers REIT & Preferred Income Fund Inc,26
RNR,20420,Renaissancere Holdings Ltd,26
ROG,21136,Rogers Corporation,26
ROK,8356,Rockwell Automation Inc,26
ROL,21137,Rollins Inc,26
ROP,13863,Roper Technologies Inc,26
RPAI,29670,Retail Properties of America Inc,26
RPLA,1131052,Replay Acquisition Corp,26
RPM,39271,RPM International Inc,26
RPT,20195,RPT Realty,26
RQI,960399,Cohen & Steers Quality Income Realty Fund Inc,26
RRC,8229,Range Resources Corp,26
RRD,13868,RR Donnelley & Sons Co,26
RS,9235,Reliance Steel & Aluminum Co,26
RSG,13862,Republic Services Inc,26
RTX,8235,Raytheon Technologies Corp,26
RVI,1086972,Retail Value Inc,26
RVLV,1096139,Revolve Group LLC,26
RVP,30915,Retractable Technologies Inc,26
RVT,960403,Royce Value,26
RWT,20899,Redwood Trust Inc,26
RXN,29671,Rexnord Corporation,26
RY,39175,Royal Bank of Canada,26
RYAM,103918,Rayonier Advanced Materials,26
RYB,1050150,RYB Education Inc,26
RYI,940814,Ryerson Holding Corp,26
RYN,39290,Rayonier Inc,26
RZA,1163574,Reinsurance Group of America Inc,26
RZB,1163575,Reinsurance Group of America Inc,26
SA,29633,Seabridge Gold Inc.,26
SACH,995929,Sachem Capital Corp,26
SAF,1163695,Saratoga Investment Corp,26
SAFE,1013390,Safehold Inc,26
SAH,20722,Sonic Automotive Inc,26
SAIC,48373,Science Applications International Corp,26
SAIL,1054954,Sailpoint Technologies Holdings Inc,26
SALT,48364,Scorpio Bulkers Inc,26
SAM,20663,Boston Beer Company Inc,26
SAN,29478,Banco Santander SA ADR,26
SAND,949605,Sandstorm Gold Ltd N,26
SAP,25328,SAP AG ADR,26
SAR,942480,Saratoga Investment Corp,26
SAVE,17118,Spirit Airlines Inc,26
SB,20945,Safe Bulkers Inc,26
SBE,1163535,Switchback Energy Acquisition Corp,26
SBH,20464,Sally Beauty Holdings Inc,26
SBI,30920,Western Asset IMF Inc,26
SBOW,1050139,SilverBow Resources Inc,26
SBR,958180,Sabine Royalty Trust,26
SBS,21256,Sabesp,26
SBSW,39313,Sibanye Gold Ltd ADR,26
SC,49803,Santander Consumer USA Holdings Inc,26
SCA,1163591,Stellus Capital Investment Corp,26
SCCO,13955,Southern Copper Corporation,26
SCD,960412,LMP Capital And ,26
SCHW,6491,The Charles Schwab Corporation,26
SCI,39258,Service Corporation International,26
SCL,21139,Stepan Company,26
SCM,945646,Stellus Capital Investment,26
SCPE,1163787,SC Health Corp,26
SCS,21043,Steelcase Inc,26
SCU,942647,Sculptor Capital Management Inc,26
SCVX,1163801,SCVX Corp,26
SCX,20903,LS Starrett Company,26
SD,13956,SandRidge Energy Inc,26
SDPI,949606,Superior Drilling Products Inc,26
SE,1052403,Sea Ltd,26
SEAH,1167580,Sports Entertainment Acquisition Corp.,26
SEAS,41238,SeaWorld Entertainment Inc,26
SEB,24426,Seaboard Corporation,26
SEE,8076,Sealed Air Corporation,26
SEM,20340,Select Medical Holdings,26
SENS,962482,Senseonics Holdings Inc,26
SF,20664,Stifel Financial Corporation,26
SFE,20465,Safeguard Scientifics Inc,26
SFL,20273,SFL Corporation Ltd,26
SFTW,1163534,Osprey Technology Acquisition Corp,26
SFUN,20781,Fang Holdings Ltd,26
SGU,958184,Star Gas Partners LP,26
SHAK,945066,Shake Shack Inc,26
SHG,20274,Shinhan Financial Group Co Ltd,26
SHI,100809,Sinopec Shanghai Petrochemical Co Ltd ADR,26
SHLX,942483,Shell Midstream Partners LP,26
SHO,20342,Sunstone Hotel Investors Inc,26
SHOP,953524,Shopify Inc,26
SHW,7986,Sherwin-Williams Co,26
SI,1153690,Silvergate Capital Corp,26
SID,20782,National Steel Company,26
SIF,30924,SIFCO Industries Inc,26
SIG,39114,Signet Jewelers Ltd,26
SILV,1095980,SilverCrest Metals Inc,26
SIM,35697,Grupo Simec SAB de CV ADR,26
SITC,8053,Site Centers Corp,26
SITE,977672,Siteone Landscape Supply Inc,26
SIX,39237,Six Flags Entertainment New,26
SJI,20381,South Jersey Industries Inc,26
SJIJ,1163649,South Jersey Industries Inc,26
SJIU,1163623,South Jersey Industries Inc,26
SJM,8071,JM Smucker Company,26
SJR,20551,Shaw Communications Inc Class B,26
SJT,958185,San Juan Basin Royalty Trust,26
SJW,21236,SJW Corporation,26
SKM,39281,SK Telecom Co Ltd ADR,26
SKT,39235,Tanger Factory Outlet Centers Inc,26
SKX,20947,Skechers USA Inc,26
SKY,21089,Skyline Corporation,26
SLB,8354,Schlumberger NV,26
SLCA,29673,US Silica Holdings Inc,26
SLG,32515,SL Green Realty Corp,26
SLQT,1161147,Selectquote Inc,26
SM,32356,SM Energy Co,26
SMAR,1073207,Smartsheet Inc,26
SMFG,20171,Sumitomo Mitsui Financial Group Inc,26
SMG,20511,Scotts Miracle-Gro Company,26
SMHI,1011773,SEACOR Marine Holdings Inc,26
SMLP,958186,Summit Midstream Partners LP,26
SMM,960427,Salient Midstream & MLP,26
SMP,20382,Standard Motor Products Inc,26
SMTS,52667,Sierra Metals Inc.,26
SNA,8001,Snap-On Inc,26
SNAP,996528,Snap Inc,26
SNDR,1006167,Schneider National Inc,26
SNE,8086,Sony Corp ADR,26
SNMP,30685,Sanchez Midstream Partners LP,26
SNN,20512,Smith & Nephew SNATS Inc,26
SNOW,1166012,Snowflake Inc,26
SNP,100297,China Petroleum & Chemical Corp ADR,26
SNPR,1167579,Tortoise Acquisition II Corp,26
SNR,942634,New Senior Investment Group,26
SNV,8107,Synovus Financial Corp,26
SNX,21140,Synnex Corporation,26
SO,7956,Southern Company,26
SOAC,1163585,Sustainable Opportunities Acquisition Corp,26
SOGO,1054796,SOGOU Inc,26
SOI,1010526,Solaris Oilfield Infrastructure Inc,26
SOJB,991223,Southern Co,26
SOJC,1163798,Southern Co,26
SOJD,1163797,Southern Co,26
SOL,21090,ReneSola Ltd,26
SOLN,1163794,Southern Co,26
SON,20726,Sonoco Products Company,26
SOR,960430,Source Capital,26
SOS,1008762,Sos Ltd,26
SPB,20344,Spectrum Brands Holdings Inc,26
SPCE,1052758,Virgin Galactic Holdings Inc,26
SPE,960432,Special Opportunities,26
SPG,8210,Simon Property Group Inc,26
SPGI,8119,S&P Global Inc,26
SPH,958187,Suburban Propane Partners LP,26
SPLP,958188,Steel Partners Holdings LP,26
SPOT,1072316,Spotify Technology SA,26
SPR,20246,Spirit Aerosystems Holdings Inc,26
SPXC,21237,SPX Corp,26
SPXX,960434,Nuveen S&P 500 Dynamic Overwrite Fund,26
SQ,961620,Square Inc,26
SQM,32345,Sociedad Quimica y Minera SA,26
SQNS,20467,Sequans Communications SA,26
SQZ,1167138,Sqz Biotechnologies Co,26
SR,20880,Spire Inc,26
SRC,41242,Spirit Realty Capital Inc,26
SRE,8222,Sempra Energy,26
SREA,1163791,Sempra Energy,26
SRG,955845,Seritage Growth Properties,26
SRI,21006,Stoneridge Inc,26
SRL,8292,Scully Royalty Ltd,26
SRLP,958190,Sprague Resources LP,26
SRT,21142,StarTek Inc,26
SRV,960436,Cushing MLP Total Return,26
SSD,20275,Simpson Manufacturing Company Inc,26
SSL,21216,Sasol Ltd,26
SSTK,41272,Shutterstock,26
SSY,30929,SunLink Health Systems Inc,26
ST,39302,Sensata Technologies Holding NV,26
STAG,20787,STAG Industrial Inc,26
STAR,20780,istar Inc,26
STC,8046,Stewart Information Services Corp,26
STE,21143,STERIS plc,26
STG,1072315,Sunlands Online Education Group,26
STK,960450,Columbia Seligman Premium Technology Growth,26
STL,20949,Sterling Bancorp,26
STM,20666,STMicroelectronics NV ADR,26
STNG,20788,Scorpio Tankers Inc,26
STON,958191,StoneMor Partners LP,26
STOR,942640,Store Capital Corp,26
STT,7967,State Street Corp,26
STWD,20383,Starwood Property Trust Inc,26
STXS,17278,Stereotaxis Inc,26
STZ,8034,Constellation Brands Inc Class A,26
STZB,20603,Constellation Brands B,26
SU,32519,Suncor Energy Inc,26
SUI,20790,Sun Communities Inc,26
SUM,948327,Summit Materials Inc,26
SUN,17286,Sunoco LP,26
SUP,20155,Superior Industries International,26
SUPV,989526,Grupo Supervielle SA,26
SUZ,1054521,Suzano Papel e Celulose SA ADR,26
SVT,30932,Servotronics Inc,26
SWCH,1050735,Switch Inc,26
SWI,1096498,SolarWinds Corp,26
SWK,8160,Stanley Black & Decker Inc,26
SWM,20161,Schweitzer-Mauduit International,26
SWN,9240,Southwestern Energy Company,26
SWT,1163670,Stanley Black Decker Inc,26
SWX,20840,Southwest Gas Holdings Inc,26
SWZ,960456,Swiss Helvetia,26
SXC,20841,SunCoke Energy Inc,26
SXI,20422,Standex International Corporation,26
SXT,20423,Sensient Technologies Corporation,26
SYF,940815,Synchrony Financial,26
SYK,8186,Stryker Corporation,26
SYN,30933,Synthetic Biologics Inc,26
SYX,21093,Systemax Inc,26
SYY,8285,Sysco Corporation,26
SZC,960458,Cushing Renaissance Fund,26
T,244,AT&T Inc,26
TAC,21008,TransAlta Corp,26
TAK,942220,Takeda Pharmaceutical Co Ltd ADR,26
TAL,29752,TAL Education Group,26
TALO,1076696,Talos Energy,26
TAP,8063,Molson Coors Brewing Co Class B,26
TARO,29676,Taro Pharmaceutical Industries Ltd,26
TAT,32441,Trans Atlantic Petroleum Ltd,26
TBB,1163803,AT&T Inc,26
TBC,1129470,AT&T Inc ELKS,26
TBI,21094,TrueBlue Inc,26
TCI,20156,Transcontinental Realty Investors,26
TCO,20792,Taubman Centers Inc,26
TCP,942482,TC PipeLines LP,26
TCS,48368,Container Store Group Inc,26
TDC,8106,Teradata Corp,26
TDF,960466,Templeton Dragon,26
TDG,20793,Transdigm Group Incorporated,26
TDJ,1151138,Telephone And Data Systems 7% Senior Notes Due 2060,26
TDOC,955846,Teladoc Inc,26
TDS,20277,Telephone and Data Systems Inc,26
TDW,29677,Tidewater Inc,26
TDY,24297,Teledyne Technologies Incorporated,26
TEAF,1164103,Tortoise Essential Assets Income Term Fund,26
TECK,7978,Teck Resources Ltd Class B,26
TEF,29474,Telefonica SA ADR,26
TEI,960467,Templeton Emerging Markets ,26
TEL,19701,TE Connectivity Ltd,26
TEN,24309,Tenneco Inc,26
TEO,32334,Telecom Argentina SA ADR,26
TEVA,6356,Teva Pharma Industries Ltd ADR,26
TEX,7926,Terex Corporation,26
TFC,7918,Truist Financial Corp,26
TFX,29680,Teleflex Incorporated,26
TG,24347,Tredegar Corporation,26
TGB,34461,Taseko Mines Ltd,26
TGC,30939,Tengasco Inc,26
TGH,39296,Textainer Group Holdings Ltd,26
TGI,24332,Triumph Group Inc,26
TGNA,955553,Tegna Inc,26
TGP,958196,Teekay LNG Partners LP,26
TGS,29589,Transportadora de Gas del Sur SA ADR,26
TGT,8180,Target Corporation,26
THC,8286,Tenet Healthcare Corporation,26
THG,29682,The Hanover Insurance Group Inc,26
THM,34413,International Tower Hill Mines Ltd,26
THO,29683,Thor Industries Inc,26
THQ,958197,Tekla Healthcare Opportunities,26
THR,24293,Thermon Group Holdings Inc,26
THS,24323,Treehouse Foods Inc,26
THW,960470,Tekla World Healthcare Fund,26
TIF,8315,Tiffany & Co,26
TIMB,29608,TIM Participacoes SA,26
TISI,17355,Team Inc,26
TJX,8227,TJX Companies Inc,26
TK,29685,Teekay Corporation,26
TKAT,1095981,Takung Art Co Ltd,26
TKC,39299,Turkcell Iletisim Hizmetleri AS,26
TKR,39303,Timken Company,26
TLK,29687,PT Telekomunikasi Indonesia TBK ADR Rep 100 B,26
TLYS,29688,Tillys Inc,26
TM,8321,Toyota Motor Corporation ADR,26
TMBR,959720,Timber Pharmaceuticals Inc,26
TME,1096239,Tencent Music Entertainment Group,26
TMHC,41245,Taylor Morn Home,26
TMO,8147,Thermo Fisher Scientific Inc,26
TMP,24396,Tompkins Financial Corporation,26
TMQ,34433,Trilogy Metals Inc,26
TMST,103919,Timkensteel Corp,26
TMX,103913,Terminix Global Holdings Inc,26
TNC,24353,Tennant Company,26
TNET,101895,Trinet Grou,26
TNK,24326,Teekay Tankers Ltd,26
TNP,29689,Tsakos Energy Navigation Ltd,26
TOL,32520,Toll Brothers Inc,26
TOT,29466,Total SA ADR,26
TPB,977673,Turning Point Brands Inc,26
TPC,24333,Tutor Perini Corporation,26
TPGY,1167583,TPG Pace Beneficial Finance Corp.,26
TPH,41243,TRI Pointe Homes Inc,26
TPHS,962327,Trinity Place Holdings Inc,26
TPL,945647,Texas Pacific Land Trust,26
TPR,7959,Tapestry Inc,26
TPRE,41187,Third Point Rens,26
TPVG,101896,Triplepoint Venture Growth BDC Corp,26
TPVY,1163520,Triplepoint Venture Growth BDC Corp,26
TPX,29691,Tempur Sealy International Inc,26
TPZ,960477,Tortoise Power and Energy Infrastructure,26
TR,24290,Tootsie Roll Industries Inc,26
TRC,24343,Tejon Ranch Co,26
TREB,1165453,Trebia Acquisition Corp,26
TREC,15454,Trecora Resources,26
TREX,24350,Trex Company Inc,26
TRGP,24321,Targa Resources Inc,26
TRN,39145,Trinity Industries Inc,26
TRNE,1131055,Trine Acquisition Corp Class A,26
TRNO,24322,Terreno Realty Corporation,26
TROX,41188,Tronox Holdings PLC,26
TRT,30946,Trio-Tech International,26
TRTN,20384,Triton International Group Inc,26
TRTX,1024877,TPG RE Finance Trust Inc,26
TRU,955554,TransUnion,26
TRV,8159,The Travelers Companies Inc,26
TRX,34460,Tanzanian Royalty Exploration Corp,26
TRXC,949610,Transenterix Inc,26
TS,29527,Tenaris SA ADR,26
TSE,103921,Trinseo SA,26
TSI,960480,TCW Strategic ,26
TSLX,101897,Sixth Street Specialty Lending Inc,26
TSM,32306,Taiwan Semiconductor Manufacturing,26
TSN,8179,Tyson Foods Inc,26
TSQ,940763,Townsquare Media LLC,26
TT,1158864,Trane Technologies plc,26
TTC,29694,Toro Co,26
TTI,24310,Tetra Technologies Inc,26
TTM,8156,Tata Motors Limited ADR,26
TTP,960483,Tortoise Pipeline And Energy,26
TU,29623,Telus Corp,26
TUFN,1127882,Tufin Software Technologies Ltd,26
TUP,13066,Tupperware Brands Corporation,26
TV,8037,Grupo Televisa SAB ADR,26
TVC,960484,Tennessee Valley Authority Pref,26
TVE,1010681,Tennessee Valley Authority,26
TWI,13958,Titan International Inc,26
TWLO,985558,Twilio Inc,26
TWN,960485,Taiwan,26
TWND,1167582,Tailwind Acquisition Corp,26
TWO,39297,Two Harbors Investments Corp,26
TWTR,44334,Twitter Inc,26
TX,32357,Ternium SA ADR,26
TXT,8305,Textron Inc,26
TY,960486,Tri Continental,26
TYG,960488,Tortoise Energy Infrastructure,26
TYL,24312,Tyler Technologies Inc,26
U,1166014,Unity Software Inc,26
UA,976067,Under Armour Inc C,26
UAA,13959,Under Armour Inc A,26
UAMY,30950,United States Antimony Corporation,26
UAN,945649,CVR Partners LP,26
UAVS,959850,Ageagle Aerial Systems Inc,26
UBA,24285,Urstadt Biddle Properties Inc,26
UBER,1115848,Uber Technologies Inc,26
UBP,41274,Urstadt Biddle,26
UBS,8132,UBS Group AG,26
UDR,32535,United Dominion Realty Trust Inc,26
UE,945068,Urban Edge Properties,26
UEC,24407,Uranium Energy Corp,26
UFAB,955847,Unique Fabricating Inc,26
UFI,24358,Unifi Inc,26
UGI,39146,UGI Corporation,26
UGP,32309,Ultrapar Participacoes SA ADR,26
UHS,39147,Universal Health Services Inc,26
UHT,24284,Universal Health Realty Income Trust,26
UI,17424,Ubiquiti Networks Inc,26
UIS,8307,Unisys Corporation,26
UL,29520,Unilever PLC ADR,26
UMC,29702,United Microelectronics,26
UMH,24411,UMH Properties Inc,26
UNF,24348,Unifirst Corporation,26
UNFI,17450,United Natural Foods Inc,26
UNH,8359,UnitedHealth Group Incorporated,26
UNM,8174,Unum Group,26
UNMA,1163799,Unum Group,26
UNP,8083,Union Pacific Corporation,26
UNVR,954872,Univar Inc,26
UPS,8199,United Parcel Service Inc,26
URG,24427,Ur Energy Inc,26
URI,32516,United Rentals Inc,26
USA,960498,Liberty All Star Equity,26
USAC,958206,USA Compression Partners LP,26
USAS,51139,Americas Silver Corp,26
USB,8310,US Bancorp,26
USDP,958207,USD Partners LP,26
USFD,979017,US Foods Holding Corp,26
USM,29706,United States Cellular Corporation,26
USNA,24298,USANA Health Sciences Inc,26
USPH,17467,US Physicalrapy Inc,26
USX,1076698,US Xpress Enterprises Inc,26
UTF,960504,Cohen and Steers Infrastructure,26
UTG,30953,Reaves Utility IF,26
UTI,24280,Universal Technical Institute Inc,26
UTL,24354,UNITIL Corporation,26
UTZ,1096424,Utz Brands Inc,26
UUU,30954,Universal Security Instruments Inc,26
UUUU,949612,Energy Fuels Inc,26
UVE,24384,Universal Insurance Holdings Inc,26
UVV,24344,Universal Corporation,26
UZA,1129476,United States Cellular Corp Senior Note,26
UZC,962505,United States Cellular Corp Pref,26
V,8318,Visa Inc Class A,26
VAC,29707,Marriot Vacations Worldwide,26
VALE,13059,Vale SA ADR,26
VAPO,1097394,Vapotherm Inc,26
VAR,8153,Varian Medical Systems Inc,26
VBF,960506,Invesco Van Kampen Bond Fund,26
VCF,30956,Delaware Investments Colorado MIF,26
VCRA,29711,Vocera Communications Inc,26
VCV,960507,Invesco California Value Muni Inc Tr,26
VEC,942325,Vectrus Inc,26
VEDL,41237,Vedanta Ltd,26
VEEV,48371,Veeva Systems Inc Class A,26
VEL,1156304,Velocity Financial Llc,26
VER,15442,Vereit Inc,26
VFC,7870,VF Corporation,26
VFL,30957,Delaware Investments Florida MIF,26
VGAC,1167585,VG Acquisition Corp,26
VGI,960509,Virtus Global Multi Sector ,26
VGM,960510,Invesco Trust For Inv Grade Munis,26
VGR,24337,Vector Group Ltd,26
VGZ,24420,Vista Gold Corporation,26
VHC,24401,VirnetX Holding Corp,26
VHI,29712,Valhi Inc,26
VIAO,1166407,Via Optronics Ag,26
VICI,1061925,VICI Properties Inc,26
VIPS,29715,Vipshop Holdings Limited,26
VIST,1142213,Vista Oil Gas ADR,26
VIV,960511,Telefonica Brasil SA ADR,26
VKI,30959,Invesco Advantage MIT II,26
VKQ,960512,Invesco Municipal Trust,26
VLO,8241,Valero Energy Corporation,26
VLRS,41202,Vuela Compania de Aviacion SAB de CV,26
VLT,960513,Invesco High Income Trust II,26
VMC,7974,Vulcan Materials Company,26
VMI,29718,Valmont Industries Inc,26
VMM,30961,Delaware Investments Minnesota MIF II,26
VMO,960515,Invesco Municipal Opportunity Trust,26
VMW,8074,VMware Inc,26
VNCE,48396,Vince Holding Corp,26
VNE,1086971,Veoneer Inc,26
VNO,7863,Vornado Realty Trust,26
VNRX,945660,Volitionrx Ltd,26
VNT,1166473,Vontier Corp,26
VNTR,1031005,Venator Materials PLC,26
VOC,958209,VOC Energy Trust,26
VOLT,941153,Volt Information Sciences Inc,26
VOYA,41215,Voya Financial Inc,26
VPG,24294,Vishay Precision Group Inc,26
VPV,960521,Invesco Pennsylvania Value Municipal Income Trust,26
VRS,987082,Verso Corp,26
VRT,1089648,Vertiv Holdings Co,26
VRTV,103911,Veritiv Cor,26
VSH,29721,Vishay Intertechnology Inc,26
VST,1011774,Vistra Energy Corp,26
VSTO,945656,Vista Outdoor Inc,26
VTA,960522,Invesco Dynamic Credit Opportunities Fund,26
VTN,960523,Invesco Trust For Inv Grade NY Munis,26
VTOL,41207,Bristow Group Inc,26
VTR,13866,Ventas Inc,26
VVI,24359,Viad Corp,26
VVNT,1057276,Vivint Smart Home,26
VVR,960524,Invesco Senior Income Trust,26
VVV,989528,Valvoline Inc,26
VYGG,1167584,Vy Global Growth,26
VZ,8127,Verizon Communications Inc,26
W,942326,Wayfair Inc,26
WAB,29723,Westinghouse Air Brake Technologies Corp,26
WAL,24303,Western Alliance Bancorporation,26
WALA,985949,Western Alliance Bancorp,26
WAT,7881,Waters Corporation,26
WBAI,48393,500.Com Ltd,26
WBK,29576,Westpac Banking Corp ADR,26
WBS,24313,Webster Financial Corporation,26
WBT,968965,Welbilt Inc,26
WCC,39304,WESCO International Inc,26
WCN,29728,Waste Connections Inc,26
WD,24324,Walker & Dunlop Inc,26
WDR,39305,Waddell & Reed Financial Inc,26
WEA,960527,Western Asset Premier Bond,26
WEC,13867,WEC Energy Group Inc,26
WEI,1097775,Weidai Ltd,26
WELL,13848,Welltower Inc,26
WES,958211,Western Gas Equity Partners LP Unit,26
WEX,24325,Wex Inc,26
WF,29730,Woori Financial Group Inc,26
WFC,7992,Wells Fargo & Company,26
WGO,24304,Winnebago Industries Inc,26
WH,29731,Wyndham Hotels & Resorts Inc,26
WHD,1061934,Cactus Inc,26
WHG,24292,Westwood Holdings Group Inc,26
WHR,8228,Whirlpool Corporation,26
WIA,960538,Western Asset/Claymore Infl Linked Securities and ,26
WIT,8353,Wipro Limited ADR,26
WIW,960539,Western Asset Claymore Inflation Linked Opportunities and ,26
WK,943118,Workiva Inc,26
WLK,39306,Westlake Chemical Corporation,26
WLKP,958214,Westlake Chemical Partners LP,26
WLL,29733,Whiting Petroleum Corporation,26
WM,8058,Waste Management Inc,26
WMB,8122,Williams Companies Inc,26
WMC,29734,Western Asset Mortgage Capital,26
WMK,24340,Weis Markets Inc,26
WMS,29735,Advanced Drainage Systems Inc,26
WMT,7997,Walmart Inc,26
WNC,32346,Wabash National Corporation,26
WNS,29736,WNS Holdings Ltd,26
WOR,24295,Worthington Industries Inc,26
WORK,1127201,Slack Technologies Inc,26
WOW,1010717,WideOpenWest Inc,26
WPC,41250,W P Carey Inc,26
WPF,1163894,Foley Trasimene Acquisition Corp,26
WPG,103915,Washington Prime Group Inc,26
WPM,8111,Wheaton Precious Metals Corp,26
WPP,17566,WPP PLC ADR,26
WPX,32352,WPX Energy Inc,26
WRB,39220,W. R. Berkley Corp,26
WRE,24283,Washington Real Estate Investment,26
WRI,39104,Weingarten Realty Investors,26
WRK,955555,WestRock Co,26
WRN,34473,Western Copper and Gold Corp,26
WSM,32326,Williams-Sonoma Inc,26
WSO,24357,Watsco Inc,26
WSOB,41277,Watsco B Inc,26
WSR,24421,Whitestone REIT,26
WST,24282,West Pharmaceutical Services Inc,26
WTI,24339,W&T Offshore Inc,26
WTM,29742,White Mountains Insurance Group Ltd,26
WTRG,13961,Aqua America Inc,26
WTRU,1163687,Essential Utilities Inc,26
WTS,24288,Watts Water Technologies Inc,26
WTT,30968,Wireless Telecom Group Inc,26
WTTR,1008646,Select Energy Services Inc,26
WU,8323,Western Union Company,26
WWE,39142,World Wrestling Entertainment Inc,26
WWW,24305,Wolverine World Wide Inc,26
WY,8953,Weyerhaeuser Company,26
WYND,8239,Wyndham Destinations Inc,26
WYY,50657,Widepoint C,26
X,8185,United States Steel Corporation,26
XAN,20662,Exantas Capital Corp,26
XEC,32521,Cimarex Energy Co,26
XFLT,1161071,XAI Octagon Floating Rate & Alternative Income Term Trust,26
XHR,945633,Xenia Hotels & Resorts Inc,26
XIN,29747,Xinyuan Real Estate Co Ltd,26
XOM,7888,Exxon Mobil Corp,26
XPEV,1165509,Xpeng Inc,26
XPL,30970,Solitario Exploration & Royalty Corp,26
XPO,29751,XPO Logistics Inc,26
XRX,8003,Xerox Corp,26
XTNT,24428,Xtant Medical Holdings Inc,26
XXII,102083,22nd Century Group Inc,26
XYF,1096057,X Financial Class A,26
XYL,32532,Xylem Inc,26
Y,29754,Alleghany Corporation,26
YAC,1166474,Yucaipa Acquisition Corp,26
YALA,1166432,Yalla Group Ltd,26
YCBD,1055951,cbdMD Inc,26
YELP,32534,Yelp Inc,26
YETI,1096134,YETI Holdings Inc,26
YEXT,1006460,Yext Inc,26
YPF,29590,YPF Sociedad Anonima,26
YRD,962324,Yirendai Ltd,26
YSG,1167333,Yatsen Holding,26
YUM,8327,Yum! Brands Inc,26
YUMC,992964,Yum China Holdings Inc,26
ZBH,7902,Zimmer Biomet Holdings Inc,26
ZDGE,985130,Zedge Inc,26
ZEN,101892,Zendesk Inc,26
ZNH,29759,China Southern Airlines Co Ltd ADR,26
ZOM,1095922,Zomedica Pharmaceuticals Corp,26
ZTO,992761,ZTO Express (Cayman) Inc,26
ZTR,960551,Virtus Global Dividend and Income Fund Inc,26
ZTS,41176,Zoetis Inc,26
ZUO,1073204,Zuora Inc,26
ZYME,1008763,Zymeworks Inc,26
AI,1167748,C3 Ai Inc,26
DASH,1167745,Doordash Inc,26
ID,1055952,Parts Id Inc,26
ACB,1055316,Aurora Cannabis Inc,26
AGI,41253,Alamos Gold Inc,26
ALC,1128804,Alcon AG,26
AQN,52828,Algonquin Power & Utilities Corp,26
AT,20729,Atlantic Power Corp,26
BCE,21242,BCE Inc,26
BIPC,1159387,Brookfield Infrastructure Corp,26
BMO,20914,Bank of Montreal,26
BNS,20675,Bank of Nova Scotia,26
CAE,21243,CAE Inc,26
CLS,21014,Celestica Inc,26
CM,20176,Canadian Imperial Bank Of Commerce,26
CNQ,20255,Canadian Natural Resources Ltd,26
CPG,101856,Crescent Point Energy Corp.,26
CVE,20807,Cenovus Energy Inc,26
EQX,1156940,Equinox Gold Corp,26
ERF,29618,Enerplus Corporation,26
FNV,20962,Franco-Nevada Corporation,26
FTS,992754,Fortis Inc,26
GIL,20639,Gildan Activewear Inc,26
HBM,20756,HudBay Minerals Inc,26
HEXO,1057393,Hexo Corp,26
IAG,21071,IAMGold Corporation,26
JE,29620,Just Energy Group Inc,26
KL,24571,Kirkland Lake Gold Ltd,26
LAC,52431,Lithium Americas Corp,26
LSPD,1166466,Lightspeed POS Inc,26
MAXR,1095979,Maxar Technologies Inc,26
MMX,1155600,Maverix Metals Inc,26
MUX,24336,McEwen Mining Inc,26
NOA,20181,North American Construction Group Ltd,26
NXE,52433,NexGen Energy Ltd.,26
OR,985777,Osisko Gold Ro,26
PVG,20658,Pretium Resources Inc,26
SII,1163383,Sprott Inc,26
SLF,20602,Sun Life Financial Inc,26
STN,21144,Stantec Inc,26
SVM,20667,Silvercorp Metals Inc,26
TD,20605,Toronto Dominion Bank,26
TFII,1156760,TFI International Inc,26
TRI,29626,Thomson Reuters Corp,26
TRP,29627,TC Energy Corp,26
TRQ,20875,Turquoise Hill Resources Ltd.,26
UFS,29699,Domtar Corporation,26
VET,41275,Vermilion Energy Inc,26
KCACU,1165654,Kensington Capital Acquisition Corp,26
DJI,169,Dow Jones Industrial Average,26
US2000,170,US Small Cap 2000,26
US500,166,S&P500,26
IXIC,14958,NASDAQ Composite,26
DOW30,8873,DowJones 30 Futures,26
SP500,8839,S&P500 Futures,26
VIX-FUTURE,8884,S&P500 VIX Futures,26
NASDAQ100,8874,Nasdaq 100 Futures,26
E-MINI SP500,1131597,E-mini SP500 Futures,26
E-MINI NASDAQ100,1131598,E-mini Nasdaq100 Futures,26
NSX,20,Nasdaq Index,26
SMALLCAP2000,8864,SmallCap 2000 Futures,26
VIX,44336,CBOE Volatility Index,26

#SI SGX
HST.SI,1168285,Lion-OCBC Securities Hang Seng TECH ETF,36
TCU.SI,1167772,Credit Bureau Asia Ltd,36 
MZH.SI,1167149,Nanofilm Technologies Intl,36
QZG.SI,955516,Accrelist,36
MIJ.SI,1131575,Alliance Healthcare Group,36
HKB.SI,1161311,Amtd International Inc,36
VFP.SI,955017,China Medical International Group Ltd,36
5VI.SI,1122528,Boldtek Holdings,36
QES.SI,955095,China Sunsine Chemical Holdings,36
5FH.SI,1120704,Citicode,36
C41.SI,1120705,Cortina Holdings,36
GRQ.SI,1156769,Don Agro International,36
5RC.SI,1161312,ES Group,36
8A1.SI,955190,Forise International,36
OAJ.SI,1123814,Fortress Minerals,36
508.SI,1161313,Fuji Offset Plates Manufacturing,36
JLB.SI,1120707,Grand Venture Technology,36
KUO.SI,955113,International Cement Group,36
1J7.SI,1123815,Jawala Inc,36
NHD.SI,955255,Jubilee Industries Holdings,36
XCF.SI,955296,KTMG,36
L09.SI,1120708,Lung Kee Bermuda Holdings,36
M15.SI,1161314,Matex International,36
Y3D.SI,955306,mDR,36
OTX.SI,1115819,Medinex,36
SJY.SI,1123816,MeGroup,36
SYM.SI,1158787,Memiontec Holdings,36
V3M.SI,955311,Metech International,36
5QY.SI,1161315,Net Pacific Financial Holdings,36
543.SI,1120709,Noel Gifts International,36
YYN.SI,991289,Plato Capital,36
K6S.SI,1120710,Prudential PLC,36
NEX.SI,1123817,Reclaims Global,36
QSD.SI,1156526,Resources Global Development,36
RCU.SI,955248,Revez Corporation,36
URR.SI,1123348,Sim Leisure Group,36
FRQ.SI,1163362,Singapore Paincare Holdings,36
5WG.SI,1122530,Singapore Kitchen Equipment,36
QNS.SI,1162806,Southern Alliance Mining,36
DRX.SI,1138470,ST Group Food Industries Holdings,36
V2Y.SI,1120711,Synagie Corporation,36
CYW.SI,1137429,TrickleStar,36
KUH.SI,955491,Tsh Corporation,36
WPC.SI,955511,Vallianz Holdings,36
8YY.SI,1117816,Biolidics Ltd,36
LIW.SI,1131248,Eagle Hospitality Trust,36
BN4.SI,8955,Keppel Corporation Limited,36
H78.SI,8956,Hong Kong Land Holdings Limited,36
C07.SI,8957,Jardine Cycle & Carriage Ltd,36
J37.SI,8958,Jardine Strategic Holdings Ltd,36
C09.SI,8959,City Developments Limited,36
U96.SI,8960,Sembcorp Industries Ltd,36
C6L.SI,8961,Singapore Airlines Ltd,36
F34.SI,8962,Wilmar International Limited,36
C52.SI,8963,Comfortdelgro Corporation Ltd,36
F99.SI,8964,Fraser And Neave,36
CGP.SI,8965,Noble Group Ltd,36
J36.SI,8967,Jardine Matheson Holdings Ltd,36
C38U.SI,8968,Capitaland Mall Trust,36
D05.SI,8969,DBS Group Holdings Ltd,36
S51.SI,8971,Sembcorp Marine Ltd,36
S68.SI,8972,Singapore Exchange Ltd,36
O32.SI,8974,Olam International Limited,36
S59.SI,8975,SIA Engineering Co Ltd,36
F83.SI,8976,COSCO Corporation Ltd,36
Z25.SI,8977,Yanlord Land Group Limited,36
S63.SI,8979,Singapore Tech Engineering Ltd,36
C31.SI,9050,Capitaland Limited,36
E5H.SI,9093,Golden Agri-Resources Ltd,36
G13.SI,9098,Genting Singapore Ltd,36
T39.SI,9177,Singapore Press Hldgs Ltd,36
CC3.SI,9178,Starhub Ltd,36
Z74.SI,9179,Singapore Telecommunications Ltd,36
Y92.SI,9184,Thai Beverage Public Co Ltd,36
U11.SI,9196,United Overseas Bank Ltd,36
BS6.SI,9207,Yangzijiang Shipbldg Hldgs Ltd,36
BRE.SI,13824,Linc Energy Ltd,36
NS8U.SI,41357,Hutchison Port Holdings Trust,36
AFC.SI,941678,YuuZoo Corporation Ltd,36
UQ4.SI,942441,Emas Offshore Construction Pte Ltd,36
566.SI,942442,SHS Holdings Ltd,36
40T.SI,942525,ISEC Healthcare Ltd,36
40R.SI,942526,Serrano Ltd,36
40U.SI,942527,MS Holdings Ltd,36
A17U.SI,942528,Ascendas Real Estate Inv,36
C61U.SI,942529,Capitaland Commercial Trust,36
U14.SI,942530,UOL Group Ltd,36
40W.SI,942741,Zicom Holdings Pvt Ltd,36
AGS.SI,942742,Hour Glass Ltd,36
5MM.SI,942743,Resources Prima Group Ltd,36
1B0.SI,943421,MM2 Asia Ltd,36
41B.SI,943422,Huationg Global Ltd,36
K22.SI,943423,Raffles United Holdings Ltd,36
AIY.SI,943424,iFAST Corporation Ltd,36
42N.SI,945135,IPS Securex Holdings Ltd,36
AOF.SI,945703,Amplefield Ltd,36
41F.SI,945704,Gss Energy Ltd,36
BRS.SI,945922,USP Group Ltd,36
41H.SI,945923,Blackgold Natural Resources Ltd,36
5JS.SI,949817,Indofood Agri Resources Ltd,36
41O.SI,949818,LHN Ltd,36
41S.SI,949819,Magnus Energy Group Ltd,36
5RF.SI,949820,Mercurius Capital Investment,36
BRR.SI,949821,Stratech Group Ltd,36
AUE.SI,949822,Golden Energy and Resources Ltd,36
AWG.SI,953085,AEI Corporation Ltd,36
BTJ.SI,953086,A-Sonic Aerospace Ltd,36
5ET.SI,953087,Attilan Group Ltd,36
AVM.SI,953088,Boustead Projects Ltd,36
AWV.SI,953089,Captii Ltd,36
AVV.SI,953090,CEI Ltd,36
CIN.SI,953091,Courage Investment Group Ltd,36
D01.SI,953093,Dairy Farm International Holdings Ltd,36
AWK.SI,953094,Fuxing China Group Ltd,36
41T.SI,953095,GCCP Resources Ltd,36
AWS.SI,953097,Global Yellow Pages Ltd,36
AVX.SI,953098,Hl Global Enterprises Ltd,36
AWC.SI,953099,Brook Crompton Holdings Ltd,36
AWZ.SI,953100,Multi-Chem Ltd,36
AWO.SI,953101,Mirach Energy Ltd,36
AWM.SI,953102,Shanghai Turbo Enterprises Ltd,36
AWE.SI,953103,SP Corporation Ltd,36
AWI.SI,953104,Thakral Corporation Ltd,36
AYV.SI,953875,Acma Ltd,36
LUY.SI,953878,Raffles Infrastructure Holdings Ltd,36
AYN.SI,953880,Global Testing Corp Ltd,36
AZA.SI,953881,IPC Corporation Ltd,36
A7RU.SI,953882,Keppel Infra REIT,36
AYB.SI,953883,Lafe Corporation Ltd,36
AYD.SI,953885,Plastoform Holdings Ltd,36
1D8.SI,953886,Singapore O&G Ltd,36
CHJ.SI,953887,Uni-Asia Holdings Ltd,36
AXB.SI,953888,Yongnam Holdings Ltd,36
AZZ.SI,954926,China Gaoxian Fibre Fabric Holdings Ltd,36
AZW.SI,954927,China Taisan Technology Group Holdings Ltd,36
AZG.SI,954928,8Telecom International Holdings Co Ltd,36
AZT.SI,954929,NutryFarm International Ltd,36
BHU.SI,954930,Sutl Enterprise,36
AZR.SI,954931,United Food Holdings Ltd,36
5GZ.SI,955016,AA Group Holdings Ltd,36
L5I.SI,955018,Abterra Ltd,36
5TY.SI,955020,Advanced Systems Automation Ltd,36
BLZ.SI,955021,Advanced Holdings Ltd,36
5EF.SI,955022,Adventus Holdings Ltd,36
A55.SI,955023,Asia Enterprises Holding Ltd,36
AWX.SI,955024,Aem Holdings Ltd,36
40F.SI,955026,Alliance Mineral Assets Ltd,36
A13.SI,955027,Allied Technologies Ltd,36
5TS.SI,955028,Alpha Energy Holdings Ltd,36
A34.SI,955030,Amara Holdings Ltd,36
5AL.SI,955031,Annica Holdings Ltd,36
BTX.SI,955032,Anchun International Holdings Ltd,36
5AU.SI,955033,AP Oil International Ltd,36
5RA.SI,955034,China Real Estate Grp Ltd,36
5EK.SI,955036,SinoCloud Group Ltd,36
5NK.SI,955037,Artivision Technologies Ltd,36
BQI.SI,955038,Asia Fashion Holdings Ltd,36
505.SI,955039,AsiaMedic Ltd,36
5WV.SI,955040,AsiaPhos Ltd,36
A04.SI,955041,ASL Marine Holdings Ltd,36
A30.SI,955042,Aspial Corporation Ltd,36
5CR.SI,955043,Asiatic Group Holdings Ltd,36
575.SI,955044,ASTI Holdings Ltd,36
5AM.SI,955045,Asiatravel.com Holdings Ltd,36
5GJ.SI,955047,AusGroup Ltd,36
A31.SI,955048,Addvalue Technologies Ltd,36
O2I.SI,955049,Avic International Maritime Holdings Ltd,36
BKY.SI,955050,Avi Tech Electronics Ltd,36
BBW.SI,955051,Azeus Systems Holdings Ltd,36
B26.SI,955052,Ban Leong Technologies Ltd,36
B58.SI,955053,Banyan Tree Holdings Ltd,36
BTP.SI,955054,Baker Technology Ltd,36
KJ5.SI,955055,BBR Holdings S Ltd,36
BTE.SI,955056,Bund Center Investment Ltd,36
BEZ.SI,955057,Beng Kuang Marine Ltd,36
CGN.SI,955058,Best World International Ltd,36
BQN.SI,955059,BH Global Corp Ltd,36
A33.SI,955061,Blumont Group Ltd,36
BEC.SI,955062,BRC Asia Ltd,36
CTN.SI,955063,BreadTalk Group Ltd,36
B69.SI,955064,Broadway Industrial Group Ltd,36
B61.SI,955065,Bukit Sembawang Estates Ltd,36
F9D.SI,955066,Boustead Singapore Ltd,36
P8Z.SI,955067,Bumitama Agri Ltd,36
B28.SI,955068,Bonvests Holdings Ltd,36
D2U.SI,955069,Cacola Furniture International Ltd,36
C04.SI,955071,Casa Holdings Ltd,36
STP.SI,955072,Silkroad Nickel Ltd,36
BXE.SI,955073,CDW Holding Ltd,36
Y35.SI,955074,AnAn International Ltd,36
RS1.SI,955075,China Environmental Resources Group Ltd,36
C29.SI,955076,Chip Eng Seng Corporation Ltd,36
U9E.SI,955077,China Everbright Water Ltd,36
D79.SI,955078,C&G Environmental Protection Holdings Ltd,36
5QT.SI,955079,Charisma Energy Services Ltd,36
5TW.SI,955080,ChasWood Resources Holdings Ltd,36
C05.SI,955082,Chemical Industries Far East Ltd,36
5OU.SI,955083,China Environment Ltd,36
5CJ.SI,955086,Chinese Global Investors Group Ltd,36
C92.SI,955087,China Haida Ltd,36
5NV.SI,955088,Chasen Holdings Ltd,36
C33.SI,955089,Chuan Hup Holdings Ltd,36
BEH.SI,955092,China International Holdings Ltd,36
C13.SI,955093,CH Offshore Ltd,36
C50.SI,955096,Cheung Woh Technologies Ltd,36
539.SI,955098,CPH Ltd,36
P9D.SI,955099,Civmec Ltd,36
J18.SI,955100,China Jishan Holdings Ltd,36
P74.SI,955101,China Kangda Food Co Ltd,36
GU5.SI,955102,China Kunda Technology Holdings Ltd,36
BHD.SI,955104,China Mining International Ltd,36
G92.SI,955105,China Aviation Oil Singapore Corp Ltd,36
OU8.SI,955106,Centurion Corporation Ltd,36
B0Z.SI,955107,China Fishery Group Ltd,36
5GC.SI,955108,CNA Group Ltd,36
5TP.SI,955109,CNMC Goldmine Holdings Ltd,36
567.SI,955112,Colex Holdings Ltd,36
P8A.SI,955114,Cordlife Group Ltd,36
B9S.SI,955115,CosmoSteel Holdings Ltd,36
RE2.SI,955116,Courts Asia Ltd,36
541.SI,955117,Abundance International Ltd,36
C76.SI,955118,Creative Technology Ltd,36
C06.SI,955119,CSC Holdings Ltd,36
544.SI,955120,CSE Global Ltd,36
FQ8.SI,955121,China Sports International Ltd,36
C70.SI,955122,City Developments Ltd,36
BCD.SI,955124,China Yuanbang Property Holdings Ltd,36
BKW.SI,955126,Datapulse Technology Ltd,36
MU7.SI,955127,DBS Bank Ltd,36
BKV.SI,955128,Dukang Distillers Holdings Ltd,36
5UZ.SI,955129,DeClout Ltd,36
D11.SI,955130,Design Studio Group Ltd,36
BMT.SI,955131,New Silkroutes Lts,36
NO4.SI,955132,Dyna Mac Holdings Ltd,36
D03.SI,955133,Del Monte Pacific Ltd,36
BTF.SI,955134,Debao Property Development Ltd,36
MT1.SI,955135,Dragon Group International Ltd,36
BLR.SI,955136,Darco Water Technologies Ltd,36
CZ4.SI,955137,Dutech Holdings Ltd,36
5SO.SI,955138,Duty Free International Ltd,36
42S.SI,955139,Astaka Holdings Ltd,36
5CT.SI,955140,Ecowise Holdings Ltd,36
5HG.SI,955141,Edition Ltd,36
E16.SI,955142,Elec & Eltek International Company Ltd,36
BJW.SI,955143,Shinvest Holding Ltd,36
L23.SI,955144,Enviro Hub Holdings Ltd,36
BIX.SI,955145,Ellipsiz Ltd,36
YYB.SI,955146,Arion Entertainment Singapore Ltd,36
42O.SI,955147,EMS Energy Ltd,36
S44.SI,955148,Engro Corporation Ltd,36
532.SI,955149,DISA Ltd,36
BQD.SI,955152,Envictus International Holdings Ltd,36
E27.SI,955153,Place Holdings Ltd,36
5G1.SI,955154,EuroSports Global Ltd,36
BDF.SI,955155,Excelpoint Technology Ltd,36
5ME.SI,955157,Ezion Holdings Ltd,36
5DN.SI,955158,Ezra Holdings Ltd,36
5TJ.SI,955159,Far East Group Ltd,36
Q5T.SI,955160,Far East Hospitality Trust,36
O10.SI,955161,Far East Orchard Ltd,36
BDU.SI,955162,Federal International 2000 Ltd,36
5FL.SI,955163,Falcon Energy Group Ltd,36
F03.SI,955164,Food Empire Holdings Ltd,36
B0I.SI,955165,Foreland Fabrictech Holdings Ltd,36
5F4.SI,955166,Figtree Holdings Ltd,36
F10.SI,955168,F J Benjamin Holdings Ltd,36
F31.SI,955169,Fragrance Group Ltd,36
TQ5.SI,955170,Frasers Property Ltd,36
E28.SI,955171,Frencken Group Ltd,36
ACV.SI,955172,Frasers Hospitality Trust,36
EB5.SI,955173,First Resources Ltd,36
ADN.SI,955174,First Sponsor Group Ltd,36
F13.SI,955175,Fu Yu Corporation Ltd,36
G50.SI,955176,Grand Banks Yachts Ltd,36
G07.SI,955177,Great Eastern Holdings Ltd,36
RE4.SI,955179,Geo Energy Resources Ltd,36
595.SI,955180,GKE Corporation Ltd,36
G41.SI,955181,G. K. Goh Holdings Ltd,36
5PC.SI,955182,Goodland Group Ltd,36
B73.SI,955183,Global Investments Ltd,36
QS9.SI,955184,Global Invacom Group Ltd,36
5IG.SI,955185,Gallant Venture Ltd,36
G20.SI,955187,GP Industries Ltd,36
Y06.SI,955189,Green Build Technology Ltd,36
BLU.SI,955191,GRP Ltd,36
BDX.SI,955192,GSH Corporation Ltd,36
G11.SI,955193,Guoan International Ltd,36
B16.SI,955194,GL Ltd,36
F17.SI,955195,GuocoLand Ltd,36
KI3.SI,955196,Hu An Cable Holdings Ltd,36
5VJ.SI,955197,HALCYON Agri Corp Ltd,36
DM0.SI,955198,Hanwell Holdings Ltd,36
H13.SI,955199,Ho Bee Land Ltd,36
5NG.SI,955200,Healthway Medical Corp Ltd,36
5VS.SI,955201,Hafary Holdings Ltd,36
H18.SI,955202,Hotel Grand Central Ltd,36
BTG.SI,955203,HG Metal Manufacturing Ltd,36
5JK.SI,955204,Hiap Hoe Ltd,36
H17.SI,955205,Hi P International Ltd,36
BBP.SI,955206,Hor Kew Corporation Ltd,36
H22.SI,955207,Hong Leong Asia Ltd,36
H20.SI,955208,Hoe Leong Corporation Ltd,36
CTO.SI,955209,HLH Group Ltd,36
S41.SI,955210,Hong Leong Finance Ltd,36
J2T.SI,955211,Hock Lian Seng Holdings Ltd,36
588.SI,955212,Health Management International Ltd,36
H30.SI,955214,Hong Fok Corporation Ltd,36
BLS.SI,955215,Hotung Investment Holdings Ltd,36
H02.SI,955216,Haw Par Corporation Ltd,36
H15.SI,955217,Hotel Properties Ltd,36
510.SI,955218,Hiap Seng Engineering Ltd,36
5EV.SI,955219,Hosen Group Ltd,36
5PO.SI,955220,Hiap Tong Corporation Ltd,36
H12.SI,955222,Hotel Royal Ltd,36
H16.SI,955223,Huan Hsin Holdings Ltd,36
BMH.SI,955224,HupSteel Ltd,36
H19.SI,955225,Hwa Hong Corporation Ltd,36
600.SI,955226,Hyflux Ltd,36
N2H.SI,955227,Hyflux Ltd Pref,36
5I4.SI,955228,ICP Ltd,36
5TN.SI,955229,IEV Holdings Ltd,36
I49.SI,955230,IFS Capital Ltd,36
Q0F.SI,955231,IHH Healthcare Bhd,36
5G4.SI,955232,Rich Capital Holdings Ltd,36
BOU.SI,955233,Informatics Education Ltd,36
I26.SI,955235,Innopac Holdings Ltd,36
5WA.SI,955236,Oue Lippo Healthcare Ltd,36
M14.SI,955237,InnoTek Ltd,36
5GI.SI,955238,Interra Resources Ltd,36
I11.SI,955239,IPCO International Ltd,36
571.SI,955240,International Press Softcom Ltd,36
I07.SI,955241,ISDN Holdings Ltd,36
I15.SI,955242,Isetan Singapore Ltd,36
5WF.SI,955243,ISOteam Ltd,36
5EC.SI,955244,ISR Capital Ltd,36
581.SI,955245,Sunrise Shares Holdings Ltd,36
I06.SI,955246,Intraco Ltd,36
J17.SI,955247,Jackspeed Corporation Ltd,36
UD2.SI,955249,Japfa Ltd,36
FQ7.SI,955250,Jasper Investments Ltd,36
BEW.SI,955252,JB Foods Ltd,36
1J4.SI,955253,JEP Holdings Ltd,36
E9L.SI,955254,Joyas International Holdings Ltd,36
5PF.SI,955256,Jason Marine Group Ltd,36
5OI.SI,955257,Japan Foods Holding Ltd,36
C8R.SI,955258,Jiutian Chemical Group Ltd,36
K29.SI,955259,Karin Technology Holdings Ltd,36
5HV.SI,955260,Koh Brothers Eco Engineering Ltd,36
K75.SI,955261,Koh Brothers Group Ltd,36
BNE.SI,955262,Kencana Agri Ltd,36
K14.SI,955263,Kingboard Copper Foil Holdings Ltd,36
5TI.SI,955264,Kitchen Culture Holdings Ltd,36
5TT.SI,955265,Keong Hong Holdings Ltd,36
K03.SI,955266,Khong Guan Flour Milling Ltd,36
5G2.SI,955267,Kim Heng Offshore & Marine Holdings Ltd,36
554.SI,955268,King Wan Corporation Ltd,36
504.SI,955269,KLW Holdings Ltd,36
5MZ.SI,955271,Kingsmen Creatives Ltd,36
BJZ.SI,955272,Koda Ltd,36
5I1.SI,955273,KOP Ltd,36
5VC.SI,955274,KORI Holdings Ltd,36
5OC.SI,955275,Koyo International Ltd,36
SK3.SI,955276,KrisEnergy Ltd,36
ER0.SI,955277,KSH Holdings Ltd,36
578.SI,955278,KS Energy Ltd,36
K11.SI,955279,Keppel Telecommunications & Transportation Ltd,36
EB7.SI,955280,KTL Global Ltd,36
L38.SI,955281,AF Global Ltd,36
LS9.SI,955283,Leader Environmental Technologies Ltd,36
Q0X.SI,955284,Ley Choon Group Holdings Ltd,36
1C5.SI,955285,Pacific Star Development Ltd,36
BEI.SI,955286,LHT Holdings Ltd,36
BAZ.SI,955287,Lion Asiapac Ltd,36
L03.SI,955288,Lian Beng Group Ltd,36
1D3.SI,955289,Lifebrandz Ltd,36
5TR.SI,955290,Libra Group Ltd,36
A78.SI,955291,LionGold Corp Ltd,36
F1E.SI,955292,Low Keng Huat Singapore Ltd,36
BJL.SI,955294,Longcheer Holdings Ltd,36
594.SI,955295,Loyz Energy Ltd,36
5IE.SI,955297,Lorenzo International Ltd,36
L19.SI,955298,Lum Chang Holdings Ltd,36
L46.SI,955299,Luzhou Bio Chem Technology Ltd,36
L02.SI,955301,Manhattan Resources Ltd,36
5LY.SI,955302,Marco Polo Marine Ltd,36
5OX.SI,955303,Mary Chia Holdings Ltd,36
5UF.SI,955304,Maxi Cash Financial Services Corporation Ltd,36
5NF.SI,955305,Mencast Holdings Ltd,36
5DS.SI,955307,MegaChem Ltd,36
BOL.SI,955309,Memtech International Ltd,36
5DX.SI,955310,Metal Component Engineering Ltd,36
MV4.SI,955312,Mewah International Inc,36
5WJ.SI,955313,Moneymax Financial Services Ltd,36
5EN.SI,955314,Midas Holdings Ltd,36
M11.SI,955316,Manufacturing Integration Technology Ltd,36
M03.SI,955317,Miyoshi Ltd,36
5DD.SI,955318,Micro Mechanics Holdings Ltd,36
DU4.SI,955319,Mermaid Maritime PCL,36
M04.SI,955320,Mandarin Oriental International Ltd,36
B2F.SI,955321,M1 Ltd,36
5WE.SI,955322,Moya Holdings Asia Ltd,36
EE6.SI,955323,Mercator Lines Singapore Ltd,36
MF6.SI,955324,Mun Siong Engineering Ltd,36
546.SI,955325,Medtecs International Corporation Ltd,36
M01.SI,955326,Metro Holdings Ltd,36
M05.SI,955327,MTQ Corporation Ltd,36
F86.SI,955328,MYP Ltd,36
N02.SI,955329,NSL Ltd,36
5IF.SI,955331,Natural Cool Holdings Ltd,36
5UJ.SI,955332,Neo Group Ltd,36
N01.SI,955333,Nera Telecommunications Ltd,36
5FX.SI,955334,New Wave Holdings Ltd,36
B07.SI,955335,Next Generation Satellite Communications Ltd,36
N32.SI,955336,Nippecraft Ltd,36
G0I.SI,955337,Nam Lee Pressed Metal Industries Ltd,36
N4E.SI,955338,Nam Cheong Ltd,36
MR7.SI,955339,Nordic Group Ltd,36
5HC.SI,955340,Ntegrator International Ltd,36
N08.SI,955341,New Toyo International Holdings Ltd,36
MR8.SI,955342,Yorkshine Holdings Ltd,36
579.SI,955345,Oceanus Group Ltd,36
5ML.SI,955346,Old Chang Kee Ltd,36
584.SI,955347,OEL Holdings Ltd,36
S3N.SI,955348,OKH Global Ltd,36
5CF.SI,955349,OKP Holdings Ltd,36
ADJ.SI,955350,Pine Capital Group Ltd,36
5FI.SI,955351,Oriental Group Ltd,36
O08.SI,955353,Ossia International Ltd,36
AJ2.SI,955355,Ouhua Energy Holdings Ltd,36
SK7.SI,955356,OUE Hospitality Trust,36
RQ1.SI,955357,Overseas Education Ltd,36
LJ3.SI,955358,OUE Ltd,36
5UX.SI,955359,Oxley Holdings Ltd,36
U6C.SI,955360,PACC Offshore Services Holdings Ltd,36
P11.SI,955361,Pacific Andes Resources Development Ltd,36
T8V.SI,955362,Pacific Radiance Ltd,36
P52.SI,955364,Pan United Corporation Ltd,36
P15.SI,955365,Pacific Century Regional Developments Ltd,36
P19.SI,955366,PCI Ltd,36
IX2.SI,955367,PEC Ltd,36
P34.SI,955368,Delfi Ltd,36
40S.SI,955369,Perennial Real Estate Holdings Ltd,36
BTM.SI,955370,Penguin International Ltd,36
BFK.SI,955371,Pharmesis International Ltd,36
BCY.SI,955373,Powermatic Data Systems Ltd,36
BDA.SI,955374,PNE Industries Ltd,36
P36.SI,955375,Pan Hong Group Holdings Ltd,36
5BS.SI,955376,Sen Yue Holdings Ltd,36
583.SI,955377,Progen Holdings Ltd,36
5BI.SI,955378,Polaris Ltd,36
O9E.SI,955379,Parkson Retail Asia Ltd,36
5WD.SI,955380,PS Group Holdings Ltd,36
Q01.SI,955384,QAF Ltd,36
KT9.SI,955385,Qingmei Group Holdings Ltd,36
BCV.SI,955386,Qian Hu Corporation Ltd,36
QC7.SI,955387,Q & M Dental Group Singapore Ltd,36
5I0.SI,955388,QT Vascular Ltd,36
BSL.SI,955389,Raffles Medical Group Ltd,36
R14.SI,955390,Ramba Energy Ltd,36
5DW.SI,955391,Renewable Energy Asia Group Ltd,36
UV1.SI,955392,Regal International Group Ltd,36
5WH.SI,955393,Rex International Holding Ltd,36
T13.SI,955394,RH Petrogas Ltd,36
NR7.SI,955395,Raffles Education Corporation Ltd,36
A50.SI,955397,Thomson Medical Group Ltd,36
AP4.SI,955398,Riverstone Holdings Ltd,36
E8Z.SI,955399,Roxy Pacific Holdings LTD,36
5DO.SI,955400,Sakae Holdings Ltd,36
E6R.SI,955401,Samko Timber Ltd,36
S56.SI,955402,Samudera Shipping Line Ltd,36
S46.SI,955403,San Teh Ltd,36
BRD.SI,955404,Sapphire Corporation Ltd,36
U77.SI,955405,Sarine Technologies Ltd,36
S58.SI,955406,SATS Ltd,36
S23.SI,955407,Singapura Finance Ltd,36
5PL.SI,955408,SBI Offshore Ltd,36
S61.SI,955409,SBS Transit Ltd,36
528.SI,955410,Second Chance Properties Ltd,36
S69.SI,955412,Serial System Ltd,36
IW5.SI,955413,Seroja Investments Ltd,36
H07.SI,955414,Stamford Land Corporation Ltd,36
B7K.SI,955415,Sin Ghee Huat Corp Ltd,36
1H4.SI,955416,Memories Group Ltd,36
5IC.SI,955417,Sing Holdings Ltd,36
OV8.SI,955418,Sheng Siong Group Ltd,36
F3V.SI,955419,MMP Resources Ltd,36
5H0.SI,955420,SingHaiyi Group Ltd,36
BKA.SI,955421,Sin Heng Heavy Machinery Ltd,36
BHK.SI,955422,SIIC Environment Holdings Ltd,36
A26.SI,955424,Sinarmas Land Ltd,36
5UN.SI,955425,Sincap Group Ltd,36
40V.SI,955426,Singapore eDevelopment Ltd,36
5HH.SI,955427,Sinjia Land Ltd,36
S35.SI,955428,Sing Investments & Finance Ltd,36
5CN.SI,955429,Sinwa Ltd,36
5CP.SI,955431,Silverlake Axis Ltd,36
AAJ.SI,955432,SunMoon Food Company Ltd,36
5RE.SI,955433,Asia Vets Holdings Ltd,36
5OT.SI,955434,Singapore Medical Group Ltd,36
40B.SI,955435,SMJ International Holdings Ltd,36
564.SI,955436,Spindex Industries Ltd,36
5MD.SI,955437,Soon Lian Holdings Ltd,36
S71.SI,955438,Sunright Ltd,36
C9Q.SI,955439,Sinostar PEC Holdings Ltd,36
T4B.SI,955440,Sino Grandness Food Industry Group Ltd,36
S7P.SI,955441,Soilbuild Construction Group Ltd,36
40E.SI,955442,Spackman Entertainment Group Ltd,36
BAI.SI,955445,Sevak Ltd,36
S08.SI,955446,Singapore Post Ltd,36
S49.SI,955447,Singapore Reinsurance Corporation Ltd,36
5KI.SI,955448,Soup Restaurant Group Ltd,36
AYL.SI,955449,STAR Pharmaceutical Ltd,36
NC2.SI,955450,Sri Trang Agro Industry PCL F,36
S19.SI,955451,Singapore Shipping Corporation Ltd,36
40D.SI,955452,Starburst Holdings Ltd,36
S29.SI,955453,Stamford Tyres Corporation Ltd,36
S20.SI,955454,Straits Trading Company Ltd,36
5UA.SI,955455,Starland Holdings Ltd,36
S85.SI,955456,Straco Corporation Ltd,36
5AI.SI,955458,P5 Capital Holdings Ltd,36
5TG.SI,955459,800 Super Holdings Ltd,36
BHQ.SI,955460,Sunningdale Tech Ltd,36
5GD.SI,955461,Sunpower Group Ltd,36
A7S.SI,955462,Sunvic Chemical Holdings Ltd,36
BGK.SI,955463,Swiber Holdings Ltd,36
ADP.SI,955464,Swissco Holdings Ltd,36
Y45.SI,955465,Singapore Myanmar Investco Ltd,36
BEV.SI,955466,Swing Media Technology Group Ltd,36
5UO.SI,955467,Sysma Holdings Ltd,36
500.SI,955469,Tai Sin Electric Ltd,36
5G3.SI,955470,Talkmed Group Ltd,36
T12.SI,955471,Tat Seng Packaging Group Ltd,36
T15.SI,955473,Tan Chong International Ltd,36
T41.SI,955474,Telechoice International Ltd,36
5CQ.SI,955475,Technics Oil & Gas Ltd,36
M1Z.SI,955476,TEE International Ltd,36
S9B.SI,955477,TEE Land Ltd,36
5OQ.SI,955478,Teho International Inc Ltd,36
1D5.SI,955479,Capital World Ltd,36
540.SI,955480,Tung Lok Restaurants 2000 Ltd,36
T14.SI,955481,Tianjin Zhongxin Pharmaceutical Group Corp Ltd,36
T55.SI,955482,TIH Ltd,36
T09.SI,955483,TT International Ltd,36
BQM.SI,955484,Tiong Woon Corporation Holding Ltd,36
BFI.SI,955485,Tiong Seng Holdings Ltd,36
570.SI,955486,Transit Mixed Concrete Ltd,36
BHO.SI,955487,Top Global Ltd,36
T18.SI,955488,TPV Technology Ltd,36
RC5.SI,955489,Triyards Holdings Ltd,36
5AB.SI,955490,Trek 2000 International Ltd,36
T24.SI,955492,Tuan Sing Holdings Ltd,36
5G9.SI,955493,Tritech Group Ltd,36
K1Q.SI,955494,T T J Holdings Ltd,36
BFU.SI,955495,Tye Soon Ltd,36
41A.SI,955496,UG Healthcare Corporation Ltd,36
U06.SI,955497,United Industrial Corporation Ltd,36
558.SI,955498,UMS Holdings Ltd,36
BLA.SI,955499,Union Steel Holdings Ltd,36
CEE.SI,955500,CITIC Envirotech Ltd,36
EH5.SI,955501,United Overseas Australia Ltd,36
U10.SI,955502,UOB Kay Hian Holdings Ltd,36
U09.SI,955503,UPP Holdings Ltd,36
U04.SI,955504,United Engineers Ltd,36
T6I.SI,955505,Valuemax Group Ltd,36
MS7.SI,955506,Vard Holdings Ltd,36
V03.SI,955508,Venture Corporation Ltd,36
40N.SI,955509,Versalink Holdings Ltd,36
PH0.SI,955510,Hatten Land Ltd,36
BIP.SI,955512,Vibrant Group Ltd,36
557.SI,955513,Viking Offshore and Marine Ltd,36
BN2.SI,955515,Valuetronics Holdings Ltd,36
E3B.SI,955518,Wee Hur Holdings Ltd,36
5F7.SI,955519,Wilton Resources Corporation Ltd,36
BDR.SI,955520,Willas Array Electronics Holdings Ltd,36
B49.SI,955521,World Precision Machinery Ltd,36
W05.SI,955523,Wing Tai Holdings Ltd,36
BQF.SI,955525,XMH Holdings Ltd,36
BQC.SI,955526,A-Smart Holdings Ltd,36
BJV.SI,955528,Yamada Green Resources Ltd,36
BPF.SI,955529,YHI International Ltd,36
Y03.SI,955530,Yeo Hiap Seng Ltd,36
5DM.SI,955531,Ying Li International Real Estate Ltd,36
BKX.SI,955532,Yongmao Holdings Ltd,36
Z59.SI,955533,Yoma Strategic Holdings Ltd,36
5SR.SI,955535,Zhongmin Baihui Retail Group Ltd,36
5EG.SI,955536,Zhongxin Fruit and Juice Ltd,36
I9T.SI,955537,Ziwo Holdings Ltd,36
5HT.SI,955688,Imperium Crown,36
42E.SI,958295,Choo Chiang Holdings Ltd,36
42F.SI,958296,Yinda Infocomm Ltd,36
42C.SI,958297,IX Biopharma Ltd,36
42D.SI,958298,NauticAWT Pte Ltd,36
BDN.SI,958299,Ryobi Kiso Holdings Ltd,36
BCZ.SI,958300,Travelite Holdings Ltd,36
BAC.SI,959021,Camsing Healthcare Ltd,36
42G.SI,959022,Soo Kee Group Ltd,36
42L.SI,959023,TLV Holdings Ltd,36
BGO.SI,959024,Universal Resource and Services Ltd,36
5FW.SI,960733,Acesian Partners Ltd,36
BFT.SI,960734,Fabchem China Ltd,36
BJD.SI,960735,Vibropower Corporation Ltd,36
BLH.SI,961675,Hai Leck Holdings Ltd,36
42R.SI,961676,JUMBO Group Ltd,36
BKK.SI,961677,Luxking Group Holdings Ltd,36
BLL.SI,961678,PSL Holdings Ltd,36
BKZ.SI,961679,Suntar Eco-City Ltd,36
BLW.SI,961972,Global Palm Resources Holdings Ltd,36
42T.SI,961973,Trendlines Group Ltd,36
42Z.SI,962541,Eindec Corp Ltd,36
43A.SI,962542,GS Holdings Ltd,36
43E.SI,969025,Anchor Resources Ltd,36
S7OU.SI,969026,Asian Pay Television Trust,36
BQO.SI,969027,Delong Holdings Ltd,36
43B.SI,969028,Secura Group Ltd,36
BQP.SI,976094,Southern Packaging Group Ltd,36
43F.SI,976478,ACROMEC Ltd,36
1F4.SI,978755,Vashion Group Ltd,36
BTY.SI,980208,Full Apex Holdings Ltd,36
BTOU.SI,980209,Manulife US Real Estate Investment Trust,36
42W.SI,985142,China Star Food Group Ltd,36
BUOU.SI,985814,Frasers Logistics and Industrial Trust,36
BVA.SI,985815,Top Glove Corporation Bhd,36
43Q.SI,985898,Advancer Global Ltd,36
43P.SI,985899,United Global Ltd,36
1A0.SI,985997,Katrina Group Ltd,36
BVQ.SI,985998,Procurri Corporation Ltd,36
BWM.SI,986104,China Jinjiang Environment Holding Co Ltd,36
BWCU.SI,986105,EC World REIT,36
1A1.SI,986106,Wong Fong Industries Ltd,36
1A4.SI,986629,AGV Group Ltd,36
O5RU.SI,989619,AIMS AMP Capital Industrial REIT,36
D5IU.SI,989620,Lippo Malls Indonesia Retail Trust,36
A52.SI,991245,Annaik Ltd,36
533.SI,991246,ABR Holdings Ltd,36
ADQU.SI,991247,Accordia Golf Trust,36
A75.SI,991248,Ace Achieve Infocom Ltd,36
CY6U.SI,991249,Ascendas India Trust,36
S91.SI,991250,Alibaba Pictures Group Ltd,36
A68U.SI,991251,Ascott Residence Trust,36
5UL.SI,991252,Atlantic Navigation Holdings (Singapore) Ltd,36
A05.SI,991253,Avjennings Ltd,36
42U.SI,991254,Axcelasia Inc,36
BMGU.SI,991255,BHG Retail REIT,36
B10.SI,991256,Boardroom Ltd,36
J85.SI,991257,CDL Hospitality Trusts,36
1C0.SI,991258,Emerging Towns & Cities Singapore Ltd,36
573.SI,991259,Challenger Technologies Ltd,36
5SY.SI,991260,Chew’s Group Ltd,36
D50.SI,991261,China Great Land Holdings Ltd,36
J91U.SI,991262,Cambridge Industrial Trust,36
5HJ.SI,991263,Cityneon Holdings Ltd,36
AU8U.SI,991264,CapitaLand Retail China Trust,36
D6U.SI,991266,Dynamic Colours Ltd,36
J69U.SI,991267,Frasers Centrepoint Trust,36
F25U.SI,991268,Fortune Real Estate Investment Trust,36
ND8U.SI,991269,Frasers Commercial Trust,36
AW9U.SI,991270,First Real Estate Investment Trust,36
D8DU.SI,991271,First Ship Lease Trust,36
RF7.SI,991272,Gaylin Holdings Ltd,36
5VP.SI,991273,GDS Global Ltd,36
5DP.SI,991274,Heeton Holdings Ltd,36
5PD.SI,991275,Hengyang Petrochemical Logistics Ltd,36
5OR.SI,991276,Heatec Jietong Holdings Ltd,36
UD1U.SI,991277,IREIT Global,36
J03.SI,991278,Jadason Enterprises Ltd,36
K71U.SI,991279,Keppel REIT,36
AJBU.SI,991280,Keppel DC REIT,36
L17.SI,991281,LTC Corporation Ltd,36
N2IU.SI,991282,Mapletree Commercial Trust,36
ME8U.SI,991283,Mapletree Industrial Trust,36
M44U.SI,991284,Mapletree Logistics Trust,36
N14.SI,991285,M Development Ltd,36
NPW.SI,991286,Malaysia Smelting Corporation Bhd,36
5GF.SI,991287,Nico Steel Holdings Ltd,36
1B6.SI,991288,Ocean Sky International Ltd,36
5AE.SI,991290,Pollux Properties Ltd,36
C2PU.SI,991291,Parkway Life Real Estate Investment Trust,36
RF1U.SI,991292,RHT Health Trust,36
M1GU.SI,991293,Sabana Shariah Compliant Industrial Real Estate Investment Trust,36
S07.SI,991294,Shangri-La Asia Ltd,36
5LE.SI,991295,Sitra Holdings (International) Ltd,36
S45U.SI,991296,Singapore Index Fund,36
Z77.SI,991297,Singapore Telecommunications Ltd,36
P40U.SI,991298,Starhill Global Real Estate Investment Trust,36
T82U.SI,991299,Suntec Real Estate Investment Trust,36
QF6.SI,991300,Swee Hong Ltd,36
PA3.SI,991302,TA Corporation Ltd,36
T19.SI,991303,Transcorp Holdings Ltd,36
561.SI,991304,Teckwah Industrial Corporation Ltd,36
586.SI,991305,TMC Education Corporation Ltd,36
U13.SI,991306,United Overseas Insurance Ltd,36
569.SI,991307,Vicplas International Ltd,36
1B1.SI,992979,HC Surgical Specialists Ltd,36
SK6U.SI,994823,SPH REIT,36
1C3.SI,995104,Samurai 2K Aerosol Ltd,36
CEDU.SI,995712,Dasin Retail Trust,36
1D0.SI,998059,Kimly Ltd,36
Q1P.SI,999072,Ascendas Hospitality Trust,36
K2LU.SI,999073,Cache Logistics Trust,36
RW0U.SI,999074,Mapletree Greater China Commercial Trust,36
TS0U.SI,999075,OUE Commercial REIT,36
596.SI,999076,Pavillon Holdings Ltd,36
SV3U.SI,999077,Soilbuild Business Space REIT,36
1D1.SI,1008661,Unusual Ltd,36
1D4.SI,1008989,Aoxin Q & M Dental Group Ltd,36
1E3.SI,1011860,Sanli Environmental Ltd,36
CHZ.SI,1031113,HRnetGroup Ltd,36
1F0.SI,1031114,shopper360 Ltd,36
1E6.SI,1031115,World Class Global Ltd,36
1F1.SI,1031116,Y Ventures Group Ltd,36
1F3.SI,1031247,Aspen Group Holdings Ltd,36
1F2.SI,1031287,Union Gas Holdings Ltd,36
CLN.SI,1052694,APAC Realty Ltd,36
CJLU.SI,1054657,NetLink NBN Trust,36
CNNU.SI,1055964,Cromwell European Real Estate Investment Trust,36
CNE.SI,1055965,MindChamps PreSchool Ltd,36
1G6.SI,1055966,No Signboard Holdings Ltd,36
1G1.SI,1055967,RE&S Holdings Ltd,36
1H3.SI,1057286,Clearbridge Health Ltd,36
1H8.SI,1062245,LY Corporation Ltd,36
CRPU.SI,1073140,Sasseur Real Estate Investment Trust,36
CMOU.SI,1073141,Keppel-KBS US REIT,36
1J5.SI,1089252,Hyphens Pharma International Ltd,36
1J3.SI,1089253,Asian Healthcare Specialists Ltd,36
1J0.SI,1089254,SLB Development Ltd,36
1I5.SI,1089649,Ayondo Ltd,36
KUX.SI,1095120,DLF Holdings Ltd,36
VL6.SI,1095121,Koufu Group Ltd,36
OYY.SI,1095122,PropNex Ltd,36
JYEU.SI,1153025,Lendlease Global Commercial Reit,36
O39.SI,8966,Oversea-Chinese Banking Corp,36
OMK.SI,1120712,Vividthree Holdings Ltd ,36
502.SI,1165863,3Cnergy Ltd,36
WJP.SI,955507,Vicom Ltd,36
CHINA-A50.SI,44486,China A50 Futures,36
MSCI-TAIWAN.SI,104392,MSCI Taiwan Futures,36
MSCI-SGX.SI,8897,MSCI SGX Futures,36
SGX-NIFTY50.SI,101810,SGX Nifty 50 Futures,36

#NS INDIA
3IINFOTECH.NS,17977,3i Infotech Ltd,25
63MOONS.NS,18127,63 Moons Technologies Ltd,25
A2ZINFRA.NS,39849,A2z Infra Engineering Ltd,25
ABAN.NS,17982,Aban Offshore Ltd.,25
ABB.NS,17979,ABB India Ltd,25
ABGSHIP.NS,17983,ABG Shipyard Ltd.,25
ADANIENT.NS,17984,Adani Enterprises Ltd,25
ADSL.NS,17994,Allied Digital Services Ltd,25
AIONJSW.NS,18285,Monnet Ispat and Energy Ltd,25
ALOKTEXT.NS,17995,Alok Industries Ltd.,25
AMTEKAUTO.NS,17999,Amtek Auto Ltd,25
ANANTRAJ.NS,18001,Anant Raj Ltd,25
ANSALAPI.NS,18003,Ansal Properties and Infrastructure Ltd,25
APTECHT.NS,18006,Aptech Ltd.,25
ARSHIYA.NS,39848,Arshiya Ltd,25
ARSSINFRA.NS,18007,ARSS Infrastructure Projects Ltd,25
ARVIND.NS,18008,Arvind Ltd.,25
ATFL.NS,17988,Agro Tech Foods Ltd,25
AUTOAXLES.NS,18015,Automotive Axles Ltd,25
BAJAJHIND.NS,18025,Bajaj Hindustan Ltd.,25
BALAJITELE.NS,18026,Balaji Telefilms Ltd,25
BALLARPUR.NS,18027,Ballarpur Industries Ltd.,25
BANARISUG.NS,18032,Bannari Amman Sugars Ltd,25
BANCOINDIA.NS,18030,Banco Products India Ltd,25
BEPL.NS,18038,Bhansali Engineering Polymers Ltd,25
BFUTILITIE.NS,18037,BF Utilities Ltd.,25
BGRENERGY.NS,18018,BGR Energy Systems Ltd,25
BHARATFIN.NS,18391,Bharat Financial Inclusion Ltd,25
BINDALAGRO.NS,18323,Oswal Greentech Ltd,25
BRFL.NS,18051,Bombay Rayon Fashions Ltd,25
CAPF.NS,18134,Capital First Ltd,25
CASTEXTECH.NS,18000,Castex Technologies Ltd,25
CENTENKA.NS,18063,Century Enka Ltd.,25
CENTURYTEX.NS,18065,Century Textiles & Industries Ltd.,25
CLNINDIA.NS,18073,Clariant Chemicals India Ltd,25
CMC.NS,18074,CMC Ltd,25
DBREALTY.NS,18085,D B Realty Ltd,25
DCW.NS,18088,DCW Ltd.,25
DEN.NS,18486,Den Networks Ltd,25
DENABANK.NS,18092,Dena Bank,25
DHAMPURSUG.NS,18095,Dhampur Sugar Mills Ltd,25
DHANBANK.NS,18096,Dhanlaxmi Bank Ltd,25
DREDGECORP.NS,18102,Dredging Corporation of India Ltd.,25
DRSTAN.NS,30177,Standard Chartered PLC DRC,25
DYNAMATECH.NS,18103,Dynamatic Technologies Ltd,25
EDUCOMP.NS,18107,Educomp Solutions Ltd,25
EKC.NS,18121,Everest Kanto Cylinder Ltd,25
ELECON.NS,39858,Elecon Engineering Co.Ltd,25
ELECTCAST.NS,18111,Electrosteel Castings Ltd.,25
ENIL.NS,18115,Entertainment Network India Ltd,25
EROSMEDIA.NS,39860,Eros International Media Ltd,25
ESABINDIA.NS,18117,ESAB India Ltd,25
ESSDEE.NS,39861,ESS DEE Aluminum Ltd,25
FEL.NS,18327,Future Enterprises Ltd A,25
FLUOROCHEM.NS,18162,Gujarat Fluorochemicals Ltd.,25
GAEL.NS,18167,Gujarat Ambuja Exports Ltd,25
GAMMNINFRA.NS,18139,Gammon Infrastructure Projects Ltd,25
GAMMONIND.NS,18138,Gammon India Ltd,25
GARDENSILK.NS,18140,Garden Silk Mills Ltd,25
GBGLOBAL.NS,39885,GB Global Ltd,25
GEOJITFSL.NS,18142,Geojit BNP Paribas Financial Services Ltd,25
GEOMETRIC.NS,18143,Geometric Ltd,25
GIPCL.NS,18163,Gujarat Industries Power Company Ltd,25
GITANJALI.NS,18146,Gitanjali Gems Ltd,25
GOCLCORP.NS,39864,GOCL Corp Ltd,25
GRAVITA.NS,39866,Gravita India Ltd,25
GRUH.NS,39867,GRUH Finance Ltd,25
GSKCONS.NS,18148,GlaxoSmithKline Consumer Healthcare Ltd,25
GTL.NS,18160,GTL Ltd,25
GTLINFRA.NS,18159,GTL Infrastructure Ltd,25
GUJNRECOKE.NS,18166,Gujarat NRE Coke Ltd.,25
GVKPIL.NS,18172,GVK Power & Infrastructure Ltd,25
HCC.NS,18183,Hindustan Construction Co. Ltd.,25
HCL-INSYS.NS,18175,HCL Infosystems Ltd,25
HDIL.NS,18192,Housing Development and Infrastructure Ltd,25
HINDOILEXP.NS,18188,Hindustan Oil Exploration Company Ltd,25
HLVLTD.NS,18190,Hotel Leela Venture Ltd.,25
HMT.NS,39869,HMT Ltd,25
HSIL.NS,18193,HSIL Ltd,25
HTMEDIA.NS,18194,HT Media Ltd,25
HUBTOWN.NS,17976,Hubtown Ltd,25
IL&FSENGG.NS,18201,IL&FS Engineering and Construction Co Ltd,25
IL&FSTRANS.NS,39871,IL&FS Transportation Networks Ltd,25
INDIAGLYCO.NS,18205,India Glycols Ltd,25
INDORAMA.NS,18212,Indo Rama Synthetics (India) Ltd,25
INDRAMEDCO.NS,18214,Indraprastha Medical Corporation Ltd,25
INDSWFTLAB.NS,18202,IND Swift Laboratories Ltd,25
INGERRAND.NS,18220,Ingersoll-Rand Ltd,25
IPAPPM.NS,39846,International Paper APPM Ltd,25
IVRCLINFRA.NS,18225,IVRCL LTD,25
JAIBALAJI.NS,18228,Jai Balaji Industries Ltd,25
JAYSREETEA.NS,18235,Jay Shree Tea & Industries Ltd.,25
JBFIND.NS,39873,JBF Industries Ltd.,25
JINDALPOLY.NS,18238,Jindal Poly Films Ltd.,25
JPINFRATEC.NS,18234,Jaypee Infratech Ltd,25
JPPOWER.NS,18232,Jaiprakash Power Ventures Ltd,25
JSWHL.NS,18239,Jindal South West Holdings Ltd,25
JSWISPAT.NS,18245,JSW Ispat Steel Ltd,25
JTEKTINDIA.NS,18393,JTEKT India Ltd,25
JYOTISTRUC.NS,18248,Jyoti Structures Ltd.,25
KCP.NS,18249,KCP Ltd,25
KESORAMIND.NS,18259,Kesoram Industries Ltd,25
KGL.NS,18255,Karuturi Global Ltd,25
KSB.NS,18262,KSB Ltd,25
KSK.NS,18263,KSK Energy Ventures Ltd,25
LAKSHMIEFL.NS,18265,Lakshmi Energy And Foods Ltd,25
LITL.NS,18267,Lanco Infratech Ltd,25
LOVABLE.NS,39881,Lovable Lingerie Ltd,25
MAHLIFE.NS,18274,Mahindra Lifespace Developers Ltd.,25
MASTEK.NS,18278,Mastek Ltd,25
MCLEODRUSS.NS,18280,McLeod Russel India Ltd,25
MERCATOR.NS,18281,Mercator Ltd,25
MIRCELECTR.NS,18284,MIRC Electronics Ltd,25
MONSANTO.NS,18286,Monsanto India Ltd.,25
MOSERBAER.NS,18287,Moser Baer India Ltd,25
MTNL.NS,18293,Mahanagar Telephone Nigam Ltd.,25
MVL.NS,18295,MVL Ltd,25
MYSOREBANK.NS,39902,State Bank of Mysore,25
NAVNETEDUL.NS,18301,Navneet Education Ltd,25
NDTV.NS,18305,New Delhi Television Ltd,25
NELCO.NS,18303,Nelco Ltd,25
NIITLTD.NS,18296,NIIT Ltd.,25
NITINFIRE.NS,39892,Nitin Fire Protection Industries Ltd,25
NOIDATOLL.NS,18310,Noida Toll Bridge Company Ltd,25
NTL.NS,18404,Neueon Towers Ltd,25
ONMOBILE.NS,39895,OnMobile Global Ltd.,25
OPTOCIRCUI.NS,18315,Opto Circuits Ltd,25
ORCHIDPHAR.NS,18318,Orchid Pharma Ltd,25
ORIENTHOT.NS,18319,Oriental Hotels Ltd,25
ORIENTPPR.NS,18320,Orient Paper and Industries Ltd,25
ORISSAMINE.NS,18322,Orissa Minerals Development Company Ltd,25
PAISALO.NS,39903,SE Investments Ltd,25
PANACEABIO.NS,18326,Panacea Biotec Ltd,25
PAPERPROD.NS,18328,Huhtamaki PPL Ltd,25
PARSVNATH.NS,18329,Parsvnath Developers Ltd.,25
PATELENG.NS,18330,Patel Engineering Ltd,25
PENINLAND.NS,18332,Peninsula Land Ltd,25
PFOCUS.NS,18488,Prime Focus Ltd,25
POLYPLEX.NS,39897,Polyplex Corporation Ltd,25
PRAKASH.NS,39898,Prakash Industries Ltd.,25
PROVOGE.NS,18347,Provogue India Ltd,25
PSB.NS,39899,Punjab & Sind Bank,25
PSL.NS,18324,PSL Ltd,25
PUNJLLOYD.NS,18349,Punj LLoyd Ltd,25
PURVA.NS,18351,Puravankara Projects Ltd,25
RAMCOIND.NS,18355,Ramco Industries Ltd,25
RELIGARE.NS,18368,Religare Enterprises Ltd,25
RIIL.NS,18363,Reliance Industrial Infrastructure Ltd,25
RNAVAL.NS,18338,Reliance Naval and Engineering Ltd,25
ROLTA.NS,18369,Rolta India Ltd.,25
RTNPOWER.NS,18208,RattanIndia Power Ltd,25
RUCHISOYA.NS,18370,Ruchi Soya Industries Ltd,25
SBBJ.NS,18372,State Bank of Bikaner and Jaipur,25
SBT.NS,18373,State Bank of Travancore,25
SCHNEIDER.NS,30070,Schneider Electric Infrastructure Ltd,25
SHANTIGEAR.NS,18378,Shanthi Gears Ltd,25
SIMPLEXINF.NS,18388,Simplex Infrastructures Ltd,25
SINTEX.NS,18389,Sintex Industries Ltd,25
SITINET.NS,39907,Siti Networks Ltd,25
SKUMARSYNF.NS,18374,S Kumars Nationwide Ltd,25
STCINDIA.NS,18398,State Trading Corporation of India Ltd,25
STERLINBIO.NS,18400,Sterling Biotech Ltd,25
SUPPETRO.NS,18411,Supreme Petrochem Ltd,25
SURYAROSNI.NS,18412,Surya Roshni Ltd,25
SWARAJENG.NS,18414,Swaraj Engines Ltd.,25
TAJGVK.NS,18416,TAJ GVK Hotels and Resorts Ltd,25
TATACHEM.NS,18417,Tata Chemicals Ltd,25
TATACOMM.NS,18419,Tata Communications Limited,25
TATAMETALI.NS,18424,Tata Metaliks Ltd,25
TATASTLBSL.NS,18044,Tata Steel BSL Ltd,25
TATASTLLP.NS,18427,Tata Sponge Iron Ltd,25
TEXRAIL.NS,39913,Texmaco Rail & Engineering Ltd,25
THOMASCOOK.NS,18431,Thomas Cook India Ltd,25
TINPLATE.NS,18432,Tinplate Company of India Ltd,25
TREEHOUSE.NS,39914,Tree House Education and Accessories Ltd,25
TWL.NS,39917,Titagarh Wagons Ltd,25
UNICHEMLAB.NS,18446,Unichem Laboratories Ltd.,25
UNITECH.NS,18448,Unitech Ltd.,25
UNITY.NS,18452,Unity Infraprojects Ltd,25
USHAMART.NS,18453,Usha Martin Ltd.,25
UTTAMSTL.NS,18454,Uttam Galva Steels Ltd.,25
VARUNSHIP.NS,18456,Varun Shipping Company Ltd,25
VESUVIUS.NS,18458,Vesuvius India Ltd,25
VIDEOIND.NS,18459,Videocon Industries Ltd.,25
VIJAYABANK.NS,18460,Vijaya Bank,25
WSTCSTPAPR.NS,18465,West Coast Paper Mills Ltd,25
ZODIACLOTH.NS,18473,Zodiac Clothing Company Ltd,25
ZUARIGLOB.NS,18474,Zuari Global Ltd,25
IDEA.NS,18200,Vodafone Idea Ltd,25
YESBANK.NS,18470,Yes Bank Ltd,25
FEDERALBNK.NS,18125,Federal Bank Ltd.,25
IDFCFIRSTB.NS,960765,IDFC First Bank Ltd,25
SBIN.NS,18376,State Bank Of India,25
INFRATEL.NS,39852,Bharti Infratel Ltd,25
BANKBARODA.NS,18047,Bank of Baroda Ltd,25
NBCC.NS,100271,NBCC India Ltd,25
RELINFRA.NS,18364,Reliance Infrastructure Ltd,25
RELCAPITAL.NS,18361,Reliance Capital Ltd,25
ZEEL.NS,18471,Zee Entertainment Enterprises Ltd.,25
PNB.NS,18350,Punjab National Bank,25
BHARTIARTL.NS,18041,Bharti Airtel Ltd.,25
TATAMOTORS.NS,18425,Tata Motors Ltd,25
IBULHSGFIN.NS,100254,Indiabulls Housing Finance Ltd,25
IOC.NS,18197,Indian Oil Corporation Ltd,25
DISHTV.NS,18097,Dish TV India Ltd,25
JINDALSTEL.NS,18241,Jindal Steel & Power Ltd,25
L&TFH.NS,39882,L&T Finance Holdings Ltd,25
ASHOKLEY.NS,18010,Ashok Leyland Ltd.,25
RELIANCE.NS,18367,Reliance Industries Ltd,25
NTPC.NS,18297,NTPC Ltd,25
RBLBANK.NS,987147,RBL Bank Ltd,25
SAIL.NS,18399,Steel Authority of India Ltd.,25
ICICIBANK.NS,18198,ICICI Bank Ltd,25
GAIL.NS,18137,GAIL Ltd,25
KOTAKBANK.NS,18260,Kotak Mahindra Bank Ltd.,25
TATASTEEL.NS,18428,Tata Steel Ltd,25
PFC.NS,18341,Power Finance Corporation Ltd,25
BHEL.NS,18042,Bharat Heavy Electricals Ltd.,25
MOTHERSUMI.NS,18288,Motherson Sumi Systems Ltd.,25
NMDC.NS,18309,NMDC Ltd,25
GMRINFRA.NS,18150,GMR Infrastructure Ltd,25
AXISBANK.NS,18017,AXIS Bank Ltd,25
HDFCBANK.NS,18177,HDFC Bank Ltd,25
COALINDIA.NS,18075,Coal India Ltd,25
TATAGLOBAL.NS,18422,Tata Global Beverages Ltd,25
INDUSINDBK.NS,18215,IndusInd Bank Ltd.,25
CANBK.NS,18057,Canara Bank Ltd,25
POWERGRID.NS,18342,Power Grid Corporation of India Ltd,25
ITC.NS,18224,ITC Ltd,25
HINDALCO.NS,18187,Hindalco Industries Ltd.,25
VEDL.NS,18377,Vedanta Ltd,25
RPOWER.NS,18366,Reliance Power Ltd,25
NHPC.NS,18307,NHPC Ltd,25
ADANIPOWER.NS,17985,Adani Power Ltd,25
ONGC.NS,18311,Oil And Natural Gas Corporation Ltd,25
BEL.NS,18043,Bharat Electronics Ltd,25
LICHSGFIN.NS,18269,Lic Housing Finance Ltd.,25
INFY.NS,18217,Infosys Ltd,25
NATIONALUM.NS,18299,National Aluminum Co. Ltd.,25
HCLTECH.NS,18176,HCL Technologies Ltd,25
JSWSTEEL.NS,18226,JSW Steel Ltd,25
TATAPOWER.NS,18426,Tata Power Co. Ltd,25
UPL.NS,18450,UPL Ltd,25
TATAMTRDVR.NS,947268,Tata Motors DV Ltd,25
UNIONBANK.NS,18447,Union Bank of India Ltd,25
BPCL.NS,18040,Bharat Petroleum Corp. Ltd.,25
DLF.NS,18100,DLF Ltd,25
HAVELLS.NS,18174,Havells India Ltd,25
STRTECH.NS,18402,Sterlite Technologies Ltd,25
MGL.NS,985843,Mahanagar Gas Ltd,25
CASTROLIND.NS,18061,Castrol India Ltd,25
INDIANB.NS,18209,Indian Bank,25
TCS.NS,18420,Tata Consultancy Services Ltd.,25
IGL.NS,18213,Indraprastha Gas Ltd,25
APOLLOTYRE.NS,18005,Apollo Tyres Ltd,25
HDFC.NS,18191,Housing Development Finance Corporation Ltd,25
AUROPHARMA.NS,18014,Aurobindo Pharma Ltd.,25
MANAPPURAM.NS,39888,Manappuram Finance Ltd,25
DHFL.NS,18094,Dewan Housing Finance Corp. Ltd.,25
RVNL.NS,1123975,Rail Vikas Nigam Ltd,25
GRASIM.NS,18156,Grasim Industries Ltd,25
ADANIPORTS.NS,18294,Adani Port and Special Economic Zone Ltd,25
LUPIN.NS,18270,Lupin Ltd,25
IDBI.NS,18199,IDBI Bank Ltd,25
WIPRO.NS,18467,Wipro Ltd,25
ICICIGI.NS,1050153,ICICI Lombard General Insurance Company Ltd,25
RECLTD.NS,18371,REC Ltd,25
PRESTIGE.NS,18344,Prestige Estates Projects Ltd,25
OIL.NS,18313,Oil India Ltd,25
MARICO.NS,18276,Marico Ltd,25
INDIGO.NS,961701,Interglobe Aviation Ltd,25
HDFCLIFE.NS,1054973,HDFC Life Insurance Company Ltd,25
SJVN.NS,39908,SJVN Ltd,25
ASIANPAINT.NS,18011,Asian Paints Ltd.,25
HINDPETRO.NS,18184,Hindustan Petroleum Corporation Ltd,25
M&M.NS,18273,Mahindra & Mahindra Ltd.,25
ABCAPITAL.NS,7310,Aditya Birla Capital Ltd,25
ESCORTS.NS,18118,Escorts Ltd,25
BANKINDIA.NS,18031,Bank of India Ltd,25
AMARAJABAT.NS,17997,Amara Raja Batteries Ltd,25
JUBILANT.NS,18246,Jubilant Life Sciences Ltd,25
SUNTV.NS,18406,Sun TV Network Ltd,25
SUNPHARMA.NS,18405,Sun Pharmaceutical Industries Ltd.,25
BANDHANBNK.NS,1072999,Bandhan Bank Ltd,25
GLENMARK.NS,18149,Glenmark Pharmaceuticals Ltd,25
BIOCON.NS,18045,Biocon Ltd.,25
MFSL.NS,18279,Max Financial Services Ltd,25
ISEC.NS,1073007,ICICI Securities Ltd,25
ADANIGAS.NS,1111710,Adani Gas Ltd,25
TITAN.NS,18433,Titan Company Ltd,25
GRAPHITE.NS,18155,Graphite India Ltd.,25
SRTRANSFIN.NS,18386,Shriram Transport Finance Co. Ltd.,25
BAJFINANCE.NS,18022,Bajaj Finance Ltd,25
MCX.NS,39886,Multi Commodity Exchange of India Ltd,25
LT.NS,18268,Larsen & Toubro Ltd,25
DABUR.NS,18086,Dabur India Ltd.,25
HUDCO.NS,1010531,Housing and Urban Development Corporation Ltd,25
TORNTPOWER.NS,18436,Torrent Power Ltd,25
HINDZINC.NS,18186,Hindustan Zinc Ltd.,25
MRPL.NS,18292,Mangalore Refinery and Petrochemicals Ltd,25
IIFL.NS,18206,IIFL Fiinance Ltd Class B,25
PEL.NS,18339,Piramal Enterprises Ltd,25
AMBUJACEM.NS,17998,Ambuja Cements Ltd.,25
PETRONET.NS,18334,Petronet LNG Ltd,25
FCONSUMER.NS,18135,Future Consumer Ltd,25
HINDUNILVR.NS,18185,Hindustan Unilever Ltd.,25
M&MFIN.NS,18271,Mahindra and Mahindra Financial Services Ltd,25
ICICIPRULI.NS,991131,ICICI Prudential Life Insurance Company Ltd,25
RNAM.NS,1053096,Reliance Nippon Life Asset Management Ltd,25
BHARATFORG.NS,18039,Bharat Forge Ltd,25
NAUKRI.NS,18216,Info Edge India Ltd,25
HEROMOTOCO.NS,18179,Hero MotoCorp Ltd,25
TVSMOTOR.NS,18442,TVS Motor Company Ltd.,25
CADILAHC.NS,18055,Cadila Healthcare Ltd.,25
SPARC.NS,39910,Sun Pharma Advanced Research Company Ltd,25
MINDTREE.NS,18283,MindTree Ltd,25
PNBHOUSING.NS,993203,PNB Housing Finance Ltd,25
DRREDDY.NS,18101,Dr. Reddy’s Laboratories Ltd,25
EXIDEIND.NS,18122,Exide Industries Ltd.,25
JUBLFOOD.NS,18247,Jubilant Foodworks Ltd,25
HDFCAMC.NS,1089258,HDFC Asset Management Company Ltd,25
EMAMILTD.NS,18113,Emami Ltd,25
EDELWEISS.NS,18106,Edelweiss Financial Services Ltd.,25
MCDOWELL-N.NS,18451,United Spirits Ltd,25
CHOLAFIN.NS,18070,Cholamandalam Investment and Finance Company Ltd,25
BERGEPAINT.NS,18036,Berger Paints India Ltd,25
CIPLA.NS,18071,Cipla Ltd.,25
TECHM.NS,18429,Tech Mahindra Ltd,25
APOLLOHOSP.NS,18004,Apollo Hospitals Enterprises Ltd.,25
POLYCAB.NS,1127928,Polycab India Ltd,25
TORNTPHARM.NS,18435,Torrent Pharmaceuticals Ltd.,25
DMART.NS,997883,Avenue Supermarts Ltd,25
GODREJCP.NS,18152,Godrej Consumer Products Ltd.,25
MUTHOOTFIN.NS,39890,Muthoot Finance Ltd,25
ENGINERSIN.NS,18114,Engineers India Ltd.,25
JSWENERGY.NS,18244,JSW Energy Ltd,25
ACC.NS,17980,ACC Ltd,25
MARUTI.NS,18277,Maruti Suzuki India Ltd.,25
GUJGASLTD.NS,18171,Gujarat Gas Ltd,25
PIDILITIND.NS,18337,Pidilite Industries Ltd.,25
CUMMINSIND.NS,18084,Cummins India Ltd,25
HEG.NS,18178,HEG Ltd.,25
IBVENTURES.NS,18203,Indiabulls Ventures Ltd,25
MIDHANI.NS,1073003,Mishra Dhatu Nigam Ltd,25
BATAINDIA.NS,18034,Bata India Ltd,25
SUNDARMFIN.NS,18407,Sundaram Finance Ltd,25
BALKRISIND.NS,39853,Balkrishna Industries Ltd.,25
SIEMENS.NS,18387,Siemens Ltd,25
VOLTAS.NS,18462,Voltas Ltd.,25
ULTRACEMCO.NS,18445,UltraTech Cement Ltd,25
NLCINDIA.NS,18306,NLC India Ltd,25
COLPAL.NS,18076,Colgate-Palmolive (India) Ltd.,25
AJANTPHARM.NS,947273,Ajanta Pharma Ltd,25
AFFLE.NS,1142212,Affle India Ltd,25
CONCOR.NS,18077,Container Corporation of India Ltd,25
NIACL.NS,1054813,New India Assurance Company Ltd,25
COROMANDEL.NS,18080,Coromandel International Ltd,25
BAJAJFINSV.NS,18023,Bajaj Finserv Ltd,25
CENTRALBK.NS,18062,Central Bank of India Ltd,25
DBL.NS,986320,Dilip Buildcon Ltd,25
RESPONIND.NS,946851,Responsive Industries Ltd,25
ALKEM.NS,962425,Alkem Laboratories Ltd,25
GICRE.NS,1052418,General Insurance Corporation of India,25
DIVISLAB.NS,18099,Divis Laboratories Ltd.,25
GSPL.NS,18170,Gujarat State Petronet Ltd.,25
RAJESHEXPO.NS,18353,Rajesh Exports Ltd.,25
SBILIFE.NS,1050746,SBI Life Insurance Company Ltd,25
SRF.NS,18397,SRF Ltd,25
FRETAIL.NS,986634,Future Retail Ltd,25
JMFINANCIL.NS,18243,JM Financial Ltd,25
AUBANK.NS,1014099,AU Small Finance Bank Ltd,25
RELAXO.NS,947130,Relaxo Footwears Ltd,25
BAJAJ-AUTO.NS,18020,Bajaj Auto Ltd,25
BRITANNIA.NS,18054,Britannia Industries Ltd,25
ABFRL.NS,946826,Aditya Birla Fashion and Retail Ltd,25
INDHOTEL.NS,18210,Indian Hotels Co. Ltd,25
RAMCOCEM.NS,18272,The Ramco Cements Ltd,25
LTI.NS,986039,Larsen & Toubro Infotech Ltd,25
HEXAWARE.NS,18180,Hexaware Technologies Ltd.,25
SPANDANA.NS,1142512,Spandana Sphoorty Financial Ltd,25
KANSAINER.NS,18253,Kansai Nerolac Paints Ltd,25
UBL.NS,18449,United Breweries Ltd.,25
APLLTD.NS,946738,Alembic Pharmaceuticals Ltd,25
TRENT.NS,18437,Trent Ltd,25
SYNGENE.NS,958336,Syngene International Ltd,25
VBL.NS,993204,Varun Beverages Ltd,25
KPITTECH.NS,1130904,KPIT Technologies Ltd,25
NESTLEIND.NS,30059,Nestle India Ltd,25
VGUARD.NS,39926,V Guard Industries Ltd,25
EICHERMOT.NS,18108,Eicher Motors Ltd.,25
NATCOPHARM.NS,39891,Natco Pharma Ltd.,25
CROMPTON.NS,978762,Crompton Greaves Consumer Electricals Ltd,25
CUB.NS,18072,City Union Bank Ltd,25
BSOFT.NS,18261,Birlasoft Ltd,25
GODREJPROP.NS,18154,Godrej Properties Ltd,25
ADANITRANS.NS,958331,Adani Transmission Ltd,25
AARTIIND.NS,17981,Aarti Industries Ltd,25
MOTILALOFS.NS,18289,Motilal Oswal Financial Services Ltd,25
MPHASIS.NS,18290,Mphasis Ltd,25
BBTC.NS,100245,Bombay Burmah Trading Corporation Ltd,25
AIAENG.NS,17989,AIA Engineering Ltd,25
QUESS.NS,985922,Quess Corp Ltd,25
LTTS.NS,991132,L&T Technology Services Ltd,25
OBEROIRLTY.NS,18312,Oberoi Realty Ltd,25
GODREJAGRO.NS,1052259,Godrej Agrovet Ltd,25
ASTRAL.NS,946934,Astral Poly Technik Ltd,25
PAGEIND.NS,18325,Page Industries Ltd.,25
SUPREMEIND.NS,18410,Supreme Industries Ltd.,25
VARROC.NS,1084839,Varroc Engineering Ltd,25
EIHOTEL.NS,18104,EIH Ltd,25
DALBHARAT.NS,947396,Dalmia Bharat Ltd B,25
ERIS.NS,1013402,Eris Lifesciences Ltd,25
KRBL.NS,947442,KRBL Ltd,25
AMBER.NS,1061909,Amber Enterprises India Ltd,25
GLAXO.NS,18147,GlaxoSmithkline Pharmaceuticals Ltd,25
PIIND.NS,100258,PI Industries Ltd,25
GODREJIND.NS,18153,Godrej Industries Ltd.,25
CGCL.NS,946883,Capri Global Capital Ltd,25
SUNDRMFAST.NS,18408,Sundram Fasteners Ltd,25
WHIRLPOOL.NS,18466,Whirlpool of India Ltd,25
THERMAX.NS,18430,Thermax Ltd.,25
FINCABLES.NS,18128,Finolex Cables Ltd.,25
FMGOETZE.NS,18126,Federal Mogul Goetze Ltd,25
CRISIL.NS,18082,CRISIL Ltd.,25
BOSCHLTD.NS,18052,Bosch Ltd,25
IPCALAB.NS,18222,Ipca Laboratories Ltd.,25
ATUL.NS,18013,Atul Ltd,25
CHOLAHLDNG.NS,18438,Cholamandalam Financial Holdings Ltd,25
JCHAC.NS,946714,Johnson Controls-Hitachi Air Conditioning India Ltd,25
ASAHIINDIA.NS,18009,Asahi India Glass Ltd,25
HATSUN.NS,946942,Hatsun Agro Product Ltd,25
SHREECEM.NS,18383,Shree Cements Ltd.,25
SYMPHONY.NS,947411,Symphony Ltd,25
ARVINDFASN.NS,1123866,Arvind Fashions Ltd,25
HAL.NS,1072997,Hindustan Aeronautics Ltd,25
TECHNOE.NS,39912,Techno Electric & Engineering Company Ltd,25
PHOENIXLTD.NS,18336,The Phoenix Mills Ltd.,25
MRF.NS,18291,M.R.F. Ltd.,25
BAJAJHLDNG.NS,18024,Bajaj Holdings and Investment Ltd,25
RATNAMANI.NS,946718,Ratnamani Metals Tubes Ltd,25
VAIBHAVGBL.NS,100272,Vaibhav Global Ltd,25
OFSS.NS,18316,Oracle Financial Services Software Ltd,25
BLUEDART.NS,18048,Blue Dart Express Ltd.,25
BAYERCROP.NS,39851,Bayer Cropscience Ltd,25
532189.NS,950696,India Tourism Development Corp Ltd,25
ENDURANCE.NS,992809,Endurance Technologies Cn Ltd,25
TCIEXP.NS,994425,TCI Express Ltd,25
PFIZER.NS,18335,Pfizer Ltd.,25
GILLETTE.NS,18145,Gillette India Ltd.,25
GARFIBRES.NS,947005,Garware Wall Ropes Ltd,25
ABBOTINDIA.NS,39845,Abbott India Ltd,25
METROPOLIS.NS,1123976,Metropolis Healthcare Ltd,25
MAHINDCIE.NS,946746,Mahindra CIE Automotive Ltd,25
SANOFI.NS,18016,Sanofi India Ltd,25
SKFINDIA.NS,18390,SKF India Ltd,25
HONAUT.NS,18189,Honeywell Automation India Ltd.,25
SHRIRAMCIT.NS,39904,Shriram-City Union Finance Ltd.,25
SOLARINDS.NS,39909,Solar Industries India Ltd,25
3MINDIA.NS,17978,3M India Ltd.,25
PGHH.NS,18346,Procter & Gamble Hygiene and Health Care Ltd,25
WABCOINDIA.NS,39927,WABCO India Ltd,25
ORIENTREF.NS,946953,Orient Refractories Ltd,25
RCOM.NS,18362,Reliance Communications Ltd,25
IRB.NS,18223,IRB Infrastructure Developers Ltd,25
ADANIGREEN.NS,1088095,Adani Green Energy Ltd,25
JUSTDIAL.NS,100244,Just Dial Ltd,25
NCC.NS,18302,NCC Ltd,25
MAHABANK.NS,39854,Bank of Maharashtra Ltd,25
SUZLON.NS,18413,Suzlon Energy Ltd,25
GRANULES.NS,947234,Granules India Ltd,25
PCJEWELLER.NS,39896,PC Jeweller Ltd,25
HFCL.NS,18182,HFCL Ltd,25
SREINFRA.NS,18396,SREI Infrastructure Finance Ltd,25
SOUTHBANK.NS,18395,South Indian Bank Ltd.,25
AVANTIFEED.NS,950031,Avanti Feeds Ltd,25
CANFINHOME.NS,18058,Can Fin Homes Ltd,25
TV18BRDCST.NS,18441,TV18 Broadcast Ltd.,25
RALLIS.NS,18354,Rallis India Ltd,25
TRIDENT.NS,100252,Trident Ltd,25
ITI.NS,947452,ITI Ltd,25
KEI.NS,947237,KEI Industries Ltd,25
JPASSOCIAT.NS,18231,Jaiprakash Associates Ltd,25
IFCI.NS,18195,IFCI Ltd.,25
JAICORPLTD.NS,18229,Jai Corp Ltd,25
EQUITAS.NS,976491,Equitas Holdings Ltd,25
BIRLACORPN.NS,18046,Birla Corporation Ltd,25
DCAL.NS,1052348,Dishman Carbogen Amcis Ltd,25
ORIENTBANK.NS,18321,Oriental Bank Of Commerce Ltd,25
BOMDYEING.NS,18050,Bombay Dyeing & Mfg. Co. Ltd.,25
IBREALEST.NS,39872,Indiabulls Real Estate Ltd,25
INFIBEAM.NS,976203,Infibeam Avenues Ltd,25
VAKRANGEE.NS,39923,Vakrangee Softwares Ltd.,25
SPTL.NS,1031715,Sintex Plastics Technology Ltd,25
RAIN.NS,39900,Rain Industries Ltd,25
INDIACEM.NS,18204,India Cements Ltd.,25
WOCKPHARMA.NS,18468,Wockhardt Ltd,25
MMTC.NS,39887,MMTC Ltd,25
UJJIVAN.NS,978766,Ujjivan Financial Services Ltd,25
PRAJIND.NS,18343,Praj Industries Ltd.,25
ASHOKA.NS,947158,Ashoka Buildcon Ltd,25
HSCL.NS,946680,Himadri Speciality Chemical Ltd,25
RCF.NS,18357,Rashtriya Chemicals and Fertilizers Ltd,25
TATACOFFEE.NS,18418,Tata Coffee Ltd,25
CORPBANK.NS,18079,Corporation Bank Ltd,25
JKTYRE.NS,18242,JK Tyre & Industries Ltd.,25
UCOBANK.NS,18443,UCO Bank,25
JINDALSAW.NS,39874,Jindal Saw Ltd.,25
IOB.NS,18211,Indian Overseas Bank,25
JKPAPER.NS,947404,JK Paper Ltd,25
PHILIPCARB.NS,946848,Phillips Carbon Black Ltd,25
ALBK.NS,17992,Allahabad Bank,25
HATHWAY.NS,18173,Hathway Cable & Datacom Ltd,25
FSL.NS,18131,Firstsource Solutions Ltd.,25
SYNDIBANK.NS,18415,Syndicate Bank Ltd,25
CGPOWER.NS,18083,CG Power and Industrial Solutions Ltd,25
SCI.NS,18380,Shipping Corporation Of India Ltd,25
IDFC.NS,18219,IDFC Ltd,25
JISLJALEQS.NS,18230,Jain Irrigation Systems Ltd.,25
JSL.NS,18240,Jindal Stainless Ltd,25
HINDCOPPER.NS,39868,Hindustan Copper Ltd,25
ANDHRABANK.NS,18002,Andhra Bank,25
DELTACORP.NS,18091,Delta Corp Ltd,25
CDSL.NS,1013401,Central Depository Services India Ltd,25
BALRAMCHIN.NS,18029,Balrampur Chini Mills Ltd.,25
CHENNPETRO.NS,18069,Chennai Petroleum Corporation Ltd,25
COX&KINGS.NS,18081,Cox & Kings Ltd,25
WELCORP.NS,18464,Welspun Corp Ltd,25
GHCL.NS,18136,GHCL Ltd.,25
NIITTECH.NS,39893,NIIT Technologies Ltd,25
J&KBANK.NS,18233,Jammu and Kashmir Bank Ltd.,25
PTC.NS,18348,PTC India Ltd,25
GSFC.NS,18168,Gujarat State Fertilizers and Chemicals Ltd,25
WABAG.NS,39925,Va Tech Wabag Ltd,25
RHFL.NS,1050728,Reliance Home Finance Ltd,25
GNFC.NS,18165,Gujarat Narmada Valley Fert.Co.Ltd,25
DEEPAKFERT.NS,18090,Deepak Fertilisers and Petrochemicals Corp Ltd,25
MOIL.NS,39889,MOIL Ltd,25
WELSPUNIND.NS,100273,Welspun India Ltd,25
JAMNAAUTO.NS,946845,Jamna Auto Industries Ltd,25
CARERATING.NS,39856,CARE Ratings Ltd,25
PVR.NS,100260,PVR Ltd,25
LAKSHVILAS.NS,18264,Lakshmi Vilas Bank Ltd,25
BEML.NS,18035,BEML Ltd,25
INOXWIND.NS,950032,Inox Wind Ltd,25
LEMONTREE.NS,1073145,Lemon Tree Hotels,25
IBULISL.NS,946654,Indiabulls Integrated Services Ltd,25
RITES.NS,1088133,RITES Ltd,25
RADICO.NS,18352,Radico Khaitan Ltd.,25
KEC.NS,18257,KEC International Ltd.,25
KTKBANK.NS,18254,Karnataka Bank Ltd.,25
RENUKA.NS,18384,Shree Renuka Sugars Ltd.,25
RAYMOND.NS,18358,Raymond Ltd,25
GMDCLTD.NS,18164,Gujarat Mineral Development Corporation Ltd,25
TAKE.NS,947259,Take Solutions Ltd,25
COFFEEDAY.NS,960764,Coffee Day Enterprises Ltd,25
REDINGTON.NS,18359,Redington India Ltd,25
GPPL.NS,18169,Gujarat Pipavav Port Ltd,25
JAGRAN.NS,18227,Jagran Prakashan Ltd,25
NFL.NS,18298,National Fertilizers Ltd,25
SADBHAV.NS,18375,Sadbhav Engineering Ltd,25
TATAELXSI.NS,18421,Tata Elxsi Ltd,25
TIMETECHNO.NS,39915,Time Technoplast Ltd,25
CENTURYPLY.NS,18064,Century Plyboards Ltd,25
CHAMBLFERT.NS,18067,Chambal Fertilisers & Chemicals Ltd,25
COCHINSHIP.NS,1031007,Cochin Shipyard Ltd,25
INDOCO.NS,947178,Indoco Remedies Ltd,25
PNCINFRA.NS,953899,PNC Infratech Ltd,25
VENKEYS.NS,18457,Venkys India Ltd,25
DCBBANK.NS,18093,Development Credit Bank Ltd.,25
FORTIS.NS,18132,Fortis Healthcare Ltd,25
PARAGMILK.NS,978763,Parag Milk Foods Ltd,25
VIPIND.NS,18461,V I P Industries Ltd,25
SONATSOFTW.NS,18394,Sonata Software Ltd,25
HIMATSEIDE.NS,18181,Himatsingka Seide Ltd,25
DEEPAKNTR.NS,947225,Deepak Nitrite Ltd,25
GAYAPROJ.NS,947105,Gayatri Projects Ltd,25
CESC.NS,18066,CESC Ltd,25
SWANENERGY.NS,39911,Swan Energy Ltd,25
NETWORK18.NS,18304,Network 18 Media & Investments Ltd,25
NH.NS,962571,Narayana Hrudayalaya Ltd,25
CAPLIPOINT.NS,946662,Caplin Point Laboratories Ltd,25
IRCON.NS,1096083,Ircon International Ltd,25
STARCEMENT.NS,1031107,Star Cement Ltd,25
BSE.NS,996056,BSE Ltd,25
KSCL.NS,39880,Kaveri Seed Company Ltd,25
HEIDELBERG.NS,30102,HeidelbergCement India Ltd,25
MINDACORP.NS,947423,Minda Corporation Ltd,25
ITDC.NS,994740,India Tourism Development Corp Ltd,25
INOXLEISUR.NS,18221,Inox Leisure Ltd,25
SUDARSCHEM.NS,946656,Sudarshan Chemical Industries Ltd,25
SOBHA.NS,18392,Sobha Developers Ltd.,25
KARURVYSYA.NS,18256,Karur Vysya Bank Ltd,25
BAJAJELEC.NS,18021,Bajaj Electricals Ltd.,25
STAR.NS,18403,Strides Pharma Science Ltd,25
INTELLECT.NS,943638,Intellect Design Arena Ltd,25
RUPA.NS,947270,Rupa Company Ltd,25
KNRCON.NS,947060,KNR Constructions Ltd,25
INDOSTAR.NS,1075519,IndoStar Capital Finance Ltd,25
ITDCEM.NS,946844,ITD Cementation India Ltd,25
JSLHISAR.NS,963742,Jindal Stainless Hisar Ltd,25
GDL.NS,18141,Gateway Distriparks Ltd,25
UFLEX.NS,18444,Uflex Ltd,25
ALLCARGO.NS,17993,Allcargo Logistics Ltd,25
KALPATPOWR.NS,18252,Kalpataru Power Transmission Ltd.,25
JBCHEPHARM.NS,18236,J B Chemicals and Pharmaceuticals Ltd,25
JYOTHYLAB.NS,39877,Jyothy Laboratories Ltd,25
DBCORP.NS,18487,D.B.Corp Ltd,25
FLFL.NS,946664,Future Lifestyle Fashions Ltd,25
IEX.NS,1052419,Indian Energy Exchange Ltd,25
GODFRYPHLP.NS,18151,Godfrey Phillips India Ltd.,25
BAJAJCON.NS,39850,Bajaj Corp Ltd,25
ASTERDM.NS,1064345,Aster DM Healthcare Ltd,25
ECLERX.NS,18105,eClerx Services Ltd,25
NBVENTURES.NS,18300,Nava Bharat Ventures Ltd,25
DCMSHRIRAM.NS,18087,DCM Shriram Consolidated,25
EIDPARRY.NS,18109,E.I.D-Parry Ltd,25
PERSISTENT.NS,18333,Persistent Systems Ltd,25
VINATIORGA.NS,947206,Vinati Organics Ltd,25
CYIENT.NS,18218,Cyient Ltd-B,25
ORIENTELEC.NS,1081587,Orient Electric Ltd,25
NESCO.NS,39894,Nesco Ltd,25
BALMLAWRIE.NS,18028,Balmer Lawrie & Co. Ltd.,25
ADVENZYMES.NS,986127,Advanced Enzyme Technologies Ltd,25
CEATLTD.NS,947439,CEAT Ltd,25
CREDITACC.NS,1090471,CreditAccess Grameen Ltd,25
ORIENTCEM.NS,947293,Orient Cement Ltd,25
SHANKARA.NS,1006193,Shankara Building Products Ltd,25
MAGMA.NS,39883,Magma Fincorp Ltd,25
KAJARIACER.NS,18251,Kajaria Ceramics Ltd,25
KOLTEPATIL.NS,100264,Kolte Patil Developers Ltd,25
BLISSGVS.NS,947100,Bliss GVS Pharma Ltd,25
GREAVESCOT.NS,18158,Greaves Cotton Ltd.,25
LINDEINDIA.NS,18019,Linde India Ltd,25
PRSMJOHNSN.NS,18345,Prism Johnson Ltd,25
MINDAIND.NS,947119,Minda Industries Ltd,25
GET&D.NS,39847,Ge T&D India Ltd,25
JKLAKSHMI.NS,39876,JK Lakshmi Cement Ltd,25
NAVINFLUOR.NS,946691,Navin Fluorine International Ltd,25
ESSELPACK.NS,18120,Essel Propack ltd.,25
BDL.NS,1073001,Bharat Dynamics Ltd,25
MAHSCOOTER.NS,100265,Maharashtra Scooters Ltd,25
CCL.NS,946995,CCL Products India Ltd,25
AEGISCHEM.NS,947157,Aegis Logistics Ltd,25
JKCEMENT.NS,39875,J.K. Cement Ltd,25
TRITURBINE.NS,39918,Triveni Turbine Ltd,25
VTL.NS,39924,Vardhman Textiles Ltd,25
GRINDWELL.NS,947108,Grindwell Norton Ltd,25
ZENSARTECH.NS,18472,Zensar Technologies Ltd,25
MAHLOG.NS,1054814,Mahindra Logistics Ltd,25
DIXON.NS,1046345,Dixon Technologies India Pvt Ltd,25
THYROCARE.NS,978765,Thyrocare Technologies Ltd,25
FINEORG.NS,1088134,Fine Organic Industries Ltd,25
SUNTECK.NS,18409,Sunteck Realty Ltd,25
REPCOHOME.NS,947017,Repco Home Finance Ltd,25
LALPATHLAB.NS,962426,Dr Lal PathLabs Ltd,25
GEPIL.NS,17996,GE Power India Ltd,25
BRIGADE.NS,18053,Brigade Enterprises Ltd,25
VMART.NS,947307,V Mart Retail Ltd,25
TNPL.NS,18434,Tamil Nadu Newsprint And Papers Ltd,25
SUPRAJIT.NS,946907,Suprajit Engineering Ltd,25
NILKAMAL.NS,18308,Nilkamal Ltd,25
SHK.NS,961703,S H Kelkar And Company Ltd,25
JETAIRWAYS.NS,18237,Jet Airways Ltd,25
GUJALKALI.NS,18161,Gujarat Alkalis & Chemicals Ltd.,25
RKFORGE.NS,946961,Ramkrishna Forgings Ltd,25
APLAPOLLO.NS,947096,APL Apollo Tubes Ltd,25
MAHSEAMLES.NS,18275,Maharashtra Seamless Ltd.,25
MASFIN.NS,1052417,MAS Financial Services Ltd,25
BASF.NS,18033,BASF India Ltd,25
BLUESTARCO.NS,18049,Blue Star Ltd,25
LAURUSLABS.NS,994422,Laurus Labs Ltd,25
OMAXE.NS,18314,Omaxe Ltd,25
KIRLOSENG.NS,39879,Kirloskar Oil Engines Ltd,25
MAXINDIA.NS,985921,Max India Ltd,25
SHARDACROP.NS,947197,Sharda Cropchem Ltd,25
GESHIP.NS,18144,Great Eastern Shipping Co. Ltd.,25
AAVAS.NS,1096512,Aavas Financiers Ltd,25
LUXIND.NS,961990,Lux Industries Ltd,25
FDC.NS,18123,FDC Ltd.,25
SHOPERSTOP.NS,18381,Shoppers Stop Ltd,25
PGHL.NS,18282,Procter & Gamble Health Ltd,25
TIINDIA.NS,1055947,Tube Investments of India Ltd,25
ASTRAZEN.NS,18012,AstraZeneca Pharma India Ltd.,25
FINPIPE.NS,18129,Finolex Industries Ltd.,25
IFBIND.NS,947235,IFB Industries Ltd,25
KPRMILL.NS,947406,KPR Mill Ltd,25
ELGIEQUIP.NS,18112,ELGI Equipments Ltd,25
MHRIL.NS,39884,Mahindra Holidays and Resorts India Ltd,25
GALAXYSURF.NS,1061939,Galaxy Surfactants Limited,25
CARBORUNIV.NS,18059,Carborundum Universal Ltd,25
ZYDUSWELL.NS,18475,Zydus Wellness Ltd,25
SFL.NS,994424,Sheela Foam Ltd,25
VSTIND.NS,18463,VST Industries Ltd.,25
VRLLOG.NS,953119,VRL Logistics Ltd,25
SIS.NS,1031006,Security and Intelligence Services Ltd,25
HERITGFOOD.NS,100253,Heritage Foods Ltd,25
TATAINVEST.NS,18423,Tata Investment Corporation Ltd.,25
CHALET.NS,1122225,Chalet Hotels Ltd,25
SCHAEFFLER.NS,18124,Schaeffler India Ltd,25
SUNCLAYLTD.NS,947135,Sundaram Clayton Ltd,25
TTKPRESTIG.NS,39919,TTK Prestige Ltd.,25
TCNSBRANDS.NS,1088705,TCNS Clothing Co Ltd,25
CERA.NS,947048,Cera Sanitaryware Ltd,25
TEAMLEASE.NS,963738,Teamlease Services Ltd,25
LAXMIMACH.NS,18266,Lakshmi Machine Works Ltd.,25
TVTODAY.NS,18440,T.V.Today Network Ltd,25
AKZOINDIA.NS,17990,Akzo Nobel India Ltd,25
TIMKEN.NS,39916,Timken India Ltd,25
SHILPAMED.NS,947199,Shilpa Medicare Ltd,25
ICRA.NS,39870,ICRA Ltd,25
GULFOILLUB.NS,946666,Gulf Oil Lubricants India Ltd,25
SUVEN.NS,946968,Suven Life Sciences Ltd,25
MICR.NS,947372,20 Microns Ltd,25
3RDR.NS,946927,3rd Rock Multimedia Ltd,25
PAIS.NS,1055944,5Paisa Capital Ltd,25
8KMS.NS,946634,8K Miles Software Services Ltd,25
ADRG.NS,947347,Aarti Drugs Ltd,25
AADM.NS,946817,Aarvee Denims Exports Ltd,25
ABSH.NS,1024888,Abhishek Corp Ltd,25
ABMN.NS,985836,Abm International Ltd,25
ACFL.NS,947156,Accel Frontline Ltd,25
AKSL.NS,50505,Accelya Kale Solutions Ltd,25
ACCO.NS,1031102,Accord Synergy Ltd,25
ACEN.NS,1031149,Ace Integrated Solutions Ltd,25
ACRP.NS,946779,Acropetal Technologies Ltd,25
ACEL.NS,946653,Action Construction Equipment Ltd,25
AMRN.NS,947388,ADF Foods Ltd,25
ADNK.NS,985837,Adhunik Industries Ltd,25
ADME.NS,947094,Adhunik Metaliks Ltd,25
ABML.NS,946988,Aditya Birla Money Ltd,25
ABRL.NS,17986,Aditya Birla Nuvo Ltd,25
ADLA.NS,950030,Adlabs Entertainment Ltd,25
ADOR.NS,947316,Ador Welding Ltd,25
ADHO.NS,946723,Advani Hotels and Resorts India Ltd,25
ADVI.NS,17987,Advanta Ltd,25
AFTK.NS,947433,Aftek Ltd,25
AGWL.NS,946917,Agarwal Industrial Corporation Ltd,25
AGCN.NS,947315,AGC Networks Ltd,25
AGTL.NS,947150,Agri Tech India Ltd,25
AGDI.NS,946835,Agro Dutch Industries Ltd,25
AHIN.NS,960763,Ahimsa Industries Ltd,25
AHLU.NS,946820,Ahluwalia Contracts,25
AICI.NS,946736,Ai Champdany Industries Ltd,25
AJME.NS,946814,Ajmera Realty & Infra India Ltd,25
AKSO.NS,947216,Aksh Optifibre Ltd,25
AKSH.NS,999081,Aksharchem India Ltd,25
ALAK.NS,955704,Alankit Ltd,25
ALBD.NS,985282,Albert David Ltd,25
ALCL.NS,947387,Alchemist Ltd,25
ALMC.NS,947413,Alembic Ltd,25
ALIO.NS,947095,Alicon Castalloy Ltd,25
ALML.NS,947274,Alkali Metals Ltd,25
ALKY.NS,946781,Alkyl Amines Chemicals Ltd,25
ALLS.NS,946929,Allsec Technologies Ltd,25
ALSL.NS,946660,Almondz Global Securities Ltd,25
ALPA.NS,947039,Alpa Laboratories Ltd,25
ALPI.NS,947210,Alphageo India Ltd,25
ALPS.NS,947160,Alps Industries Ltd,25
AMBK.NS,946930,Ambika Cotton Mills Ltd,25
AMDM.NS,947217,AMD Industries Ltd,25
AMSP.NS,987143,Amit Spinning Industries Ltd,25
AJAN.NS,946780,Amrutanjan Health Care Ltd,25
BALX.NS,961993,Anandam Rubber Company Ltd,25
ANDC.NS,947343,Andhra Cements Ltd,25
ANDS.NS,947365,Andhra Sugars Ltd,25
ANGI.NS,947218,ANG Industries Ltd,25
ANII.NS,1055934,ANI Integrated Services Ltd,25
ANIK.NS,947161,Anik Industries Ltd,25
ANCM.NS,1008672,Anjani Portland Cement Ltd,25
AMPL.NS,946976,Ankit Metal Power Ltd,25
ANSL.NS,946762,Ansal Housing and Construction Ltd,25
ANTC.NS,947367,Antarctica Ltd,25
APAR.NS,947162,Apar Industries Ltd,25
APCI.NS,946989,Apcotex Industries Ltd,25
APEX.NS,1031739,Apex Frozen Foods Ltd,25
APOS.NS,945713,Apollo Sindoori Hotels Ltd,25
ARCY.NS,946879,Archidply Industries Ltd,25
ARGG.NS,947414,Archies Ltd,25
ARCO.NS,947402,Arcotech Ltd,25
ARAI.NS,947368,Aries Agro Ltd,25
ARFL.NS,946724,Arihant Foundations & Housing Ltd,25
ARIS.NS,999082,Arihant Superstructures Ltd,25
ARLF.NS,985283,Arman Financial Services Ltd,25
AROG.NS,946782,Aro Granite Industries Ltd,25
ARRO.NS,953897,Arrow Greentech Ltd,25
AROW.NS,947219,Arrow Textiles Ltd,25
ARTN.NS,992806,Art Nirman Ltd,25
ARTM.NS,1031151,Artemis Global Life Sciences Ltd,25
ARRE.NS,947163,Arvind Remedies Ltd,25
ARVD.NS,959091,Arvind Smartspaces Ltd,25
ASSC.NS,946627,Asahi Songwon Colors Lucky Laminates Ltd,25
ASHP.NS,961988,Ashapura Intimates Fashion Ltd,25
ASHM.NS,947044,Ashapura Minechem Ltd,25
AHFN.NS,947159,Ashiana Housing Ltd,25
ASHL.NS,947424,Ashima Ltd,25
ASGI.NS,946932,Asian Granito India Ltd,25
ASHE.NS,947045,Asian Hotels East Ltd,25
ASHT.NS,946990,Asian Hotels North Ltd,25
ASHW.NS,947033,Asian Hotels West Ltd,25
ASLI.NS,1008736,ASL Industries Ltd,25
ASPI.NS,985284,Aspinwall & Co Ltd,25
ASMC.NS,946933,Assam Company India Ltd,25
ASTE.NS,946991,Astec Lifesciences Ltd,25
ASTM.NS,946661,Astra Micro Wave Products Ltd,25
ASTO.NS,1057252,Astron Paper & Board Mill Ltd,25
ASTRO.NS,1057087,Astron Paper & Board Mills Ltd,25
ATLT.NS,947415,Atlanta Ltd,25
ATCY.NS,946880,Atlas Cycles Haryana Ltd,25
ASGM.NS,947043,ATN International Ltd,25
ATUL.NS,947389,Atul Auto Ltd,25
AURA.NS,992807,Aurangabad Distillery Ltd,25
APSL.NS,946931,Aurionpro Solutions Ltd,25
AUSM.NS,947097,Ausom Enterprise Ltd,25
AUIN.NS,946935,Autoline Industries Ltd,25
AUTL.NS,947213,Autolite India Ltd,25
ASAS.NS,946624,Automotive Stampings and Assemblies Ltd,25
AVAD.NS,1031153,Avadh Sugar & Energy Ltd,25
AVSL.NS,991197,AVSL Industries Ltd,25
AVTN.NS,946881,AVT Natural Products Ltd,25
AXIT.NS,946777,AXISCADES Engineering Technologies Ltd,25
AYMS.NS,959107,AYM Syntex Ltd,25
BLKS.NS,947030,B L Kashyap Sons Ltd,25
BAGF.NS,946924,B.A.G. Films Media Ltd,25
BAFP.NS,946836,Bafna Pharmaceuticals Ltd,25
BALP.NS,947369,Bal Pharma Ltd,25
BAMN.NS,947275,Balaji Amines Ltd,25
BALK.NS,958333,Balkrishna Paper Mills Ltd,25
BANB.NS,947278,Banaras Beads Ltd,25
BANO.NS,947276,Bang Overseas Ltd,25
BASP.NS,946688,Bannari Amman Spinning Mills Ltd,25
BANL.NS,1031103,Bansal Multiflex Ltd,25
BANS.NS,947164,Banswara Syntex Ltd,25
BAVA.NS,946882,Barak Valley Cements Ltd,25
BARI.NS,947099,Bartronics India Ltd,25
BRED.NS,947385,Beardsell Ltd,25
BMIL.NS,946936,Bedmutha Industries Ltd,25
BFIN.NS,947277,BF Investment Ltd,25
BHAE.NS,969119,Bhageria Industries Ltd,25
BHIL.NS,947047,Bhagyanagar India Ltd,25
BHAY.NS,1031157,Bhagyanagar Properties Ltd,25
BHEX.NS,996055,Bhandari Hosiery Exports Ltd,25
BBJL.NS,947279,Bharat Bijlee Ltd,25
BGRS.NS,947317,Bharat Gears Ltd,25
BRSN.NS,947221,Bharat Rasayan Ltd,25
BHRN.NS,1046343,Bharat Road Network Ltd,25
BHWR.NS,977697,Bharat Wire Ropes Ltd,25
BHAR.NS,947098,Bharati Defence and Infrastructure Ltd,25
BHRT.NS,946633,Bharatiya Global Infomedia Ltd,25
BHAI.NS,946783,Bhartiya International Ltd,25
BIGB.NS,987144,Bigbloc Construction Ltd,25
BILE.NS,946992,Bil Energy Systems Ltd,25
BILP.NS,947401,Bilpower Ltd,25
BINZ.NS,947046,Binani Industries Ltd,25
BIOF.NS,1034490,Biofil Chemicals and Pharmaceuticals Ltd,25
BRLE.NS,946784,Birla Cable Ltd,25
BKMI.NS,950037,BKM Industries Ltd,25
BLB.NS,947446,BLB Ltd,25
BLSN.NS,985285,BLS International Services Ltd,25
BLBL.NS,953114,Blue Blends India Ltd,25
BLCI.NS,947154,Blue Chip India Ltd,25
BCHO.NS,976196,Blue Coast Hotels Ltd,25
BODA.NS,947165,Bodal Chemicals Ltd,25
BOHA.NS,1010629,Bohra Industries Ltd,25
BPL.NS,947447,BPL Ltd,25
BRNR.NS,947148,Brhouse Retails Ltd,25
BROI.NS,946699,Broadcast Initiatives Ltd Cn,25
BROO.NS,946937,Brooks Laboratories Ltd,25
BSLI.NS,947462,BS Ltd,25
BISL.NS,946635,BSEL Infrastructure Realty Ltd,25
BSLL.NS,947448,BSL Ltd,25
BRCL.NS,947220,Burnpur Cement Ltd,25
BUTT.NS,946648,Butterfly Gandhimathi Appliances Ltd,25
TBKH.NS,950039,Byke Hospitality Ltd,25
CCCL.NS,947034,C C Constructions Ltd,25
CMAH.NS,946998,C Mahendra Exports Ltd,25
CAIL.NS,18056,Cairn India Ltd,25
CALI.NS,946727,California Software Company Ltd,25
CATE.NS,946622,Cambridge Technology Enterprises Ltd,25
CAMF.NS,945153,Camlin Fine Sciences Ltd,25
CRIL.NS,946837,Cantabil Retail India Ltd,25
CAPE.NS,1046334,Capacite Infraprojects Ltd,25
CAPT.NS,995113,Capital Trust Ltd,25
CARP.NS,947318,Career Point Ltd,25
CELF.NS,946996,Celebrity Fashions Ltd,25
CELA.NS,947049,Celestial Biolabs Ltd,25
CENT.NS,946997,Centum Electronics Ltd,25
CNTX.NS,946999,Century Extrusions Ltd,25
CEIT.NS,946685,Cerebra Integrated Technologies Ltd,25
CALK.NS,947166,Chemfab Alkalis Ltd,25
CHRO.NS,947167,Chromatic India Ltd,25
CIGN.NS,942590,Cigniti Technologies Ltd,25
CNPL.NS,946739,CIL Nova Petrochemicals Ltd,25
CIMM.NS,947425,Cimmco Ltd,25
CIIN.NS,947222,Cineline India Ltd,25
CINE.NS,947390,Cinevista Ltd,25
CKPP.NS,1010630,CKP Products Ltd,25
CARU.NS,998080,CL Educate Ltd,25
CLSD.NS,946786,Classic Diamonds India Ltd,25
CLTH.NS,947348,Clutch Auto Ltd,25
CMI.NS,993990,CMI Ltd Class B,25
CEBB.NS,946675,Commercial Engineers & Body Builders Co Ltd,25
COMI.NS,985838,Compuage Infocom Ltd,25
CMPU.NS,947051,Compucom Software Ltd,25
CCON.NS,946628,Consolidated Construction Consortium Ltd,25
CONS.NS,946679,Consolidated Finvest & Holdings Ltd,25
CONP.NS,985839,Control Print Ltd,25
CCIL.NS,946785,Cords Cable Industries Ltd,25
CORE.NS,18078,CORE Education And Technologies Ltd,25
CSFL.NS,947349,Cosmo Films Ltd,25
COUN.NS,945156,Country Club Hospitality & Holidays Ltd,25
COCO.NS,947168,Country Condo's Ltd,25
CEYE.NS,947311,Creative Eye Ltd,25
CREA.NS,1008673,Creative Peripherals and Distribution Ltd,25
CRSV.NS,947224,Crest Ventures Ltd,25
CROW.NS,991129,Crown Lifters Ltd,25
CUBE.NS,947281,Cubex Tubings Ltd,25
CUCO.NS,989628,Cupid Ltd,25
CURA.NS,947052,CURA Technologies Ltd,25
CYBM.NS,976197,Cyber Media India Ltd,25
CTSS.NS,946715,Cybertech Systems and Software Ltd,25
DLIL.NS,947319,D Link India Ltd,25
DSKL.NS,946740,D S Kulkarni Developers Ltd,25
DALA.NS,39857,Dalmia Bharat Ltd,25
DLMI.NS,946869,Dalmia Bharat Sugar and Industries Ltd,25
DAMD.NS,985840,Damodar Industries Ltd,25
DATC.NS,946636,Datamatics Global Services Ltd,25
DBSB.NS,946629,DB International Stock Brokers Ltd,25
DCML.NS,947449,DCM Ltd,25
DENO.NS,947280,De Nora India Ltd,25
DCNC.NS,947223,Deccan Cements Ltd,25
DECE.NS,946985,Decolight Ceramics Ltd,25
DEIN.NS,947169,Deep Industries Ltd,25
DLTA.NS,947272,Delta Magnets Ltd,25
DEVN.NS,1008737,Dev Information Technology Ltd,25
DFMF.NS,994739,DFM Foods Ltd,25
DHNP.NS,947101,Dhanuka Agritech Ltd,25
DHAU.NS,992808,Dhanuka Realty Ltd,25
DHRS.NS,946862,Dharani Sugars and Chemicals Ltd,25
DHUS.NS,946877,Dhunseri Investments Ltd,25
DHUN.NS,947000,Dhunseri Petrochem Ltd,25
DHUT.NS,945154,Dhunseri Tea & Industries Ltd,25
DIAC.NS,946689,Diamond Power Infrastructure Ltd,25
DICI.NS,947391,DIC India Ltd,25
DIGJ.NS,947426,DIGJAM Ltd,25
DILG.NS,1057253,Diligent Media Corporation Ltd,25
DISH.NS,18098,Dishman Pharmaceuticals and Chemicals Ltd,25
DLLA.NS,1008992,Dollar Industries Ltd,25
DOLP.NS,946683,Dolphin Offshore Enterprises India Ltd,25
DONE.NS,947053,Donear Industries Ltd,25
DQEN.NS,946630,DQ Entertainment International Ltd,25
DRDA.NS,947170,Dr Datsons Labs Ltd,25
DUCO.NS,946838,Ducon Infratechnologies Ltd,25
DNCI.NS,946986,Duncans Industries Ltd,25
DWAR.NS,946637,Dwarikesh Sugar Industries Ltd,25
DSSL.NS,946773,Dynacons Systems and Solutions Ltd,25
DYPR.NS,1031159,Dynemic Products Ltd,25
ESIL.NS,946741,Eastern Silk Industries Ltd,25
EASU.NS,947226,Easun Reyrolle Ltd,25
ECEI.NS,947227,ECE Industries Ltd,25
EIHA.NS,946832,EIH Associated Hotels Ltd,25
EIMC.NS,947001,Eimco Elecon India Ltd,25
EAND.NS,948380,ELand Apparel Ltd,25
ELDP.NS,18110,Elder Pharmaceuticals Ltd,25
ELES.NS,39859,Electrosteel Steels Ltd,25
ELTH.NS,947002,Electrotherm India Ltd,25
ELGT.NS,947228,ELGI Rubber Co Ltd,25
EMMI.NS,946884,Emami Infrastructure Ltd,25
EMCO.NS,947440,EMCO Ltd,25
EMKS.NS,946829,Emkay Global Financial Services Ltd,25
EMKY.NS,958332,Emkay Taps And Cutting Tools Ltd,25
EMMB.NS,947102,Emmbi Industries Ltd,25
EMDI.NS,947003,Empee Distilleries Ltd,25
EDCO.NS,946638,Energy Development Company Ltd,25
ENTI.NS,947416,Entegra Ltd,25
EONE.NS,947320,EON Electric Ltd,25
KIRI.NS,947007,Equinaire Chemtech Ltd,25
ERCI.NS,18116,ERA Infra Engineering Ltd,25
ESPL.NS,941197,Essar Shipping Ltd,25
ESTR.NS,947103,Ester Industries Ltd,25
EUCE.NS,947282,Euro Ceramics Ltd,25
EURN.NS,1010631,Euro India Fresh Foods Ltd,25
EUMU.NS,947093,Euro Multivision Ltd,25
EURO.NS,946774,Eurotex Industries and Exports Ltd,25
ERDY.NS,946663,Eveready Industries India Ltd,25
EVRI.NS,947004,Everest Industries Ltd,25
EVED.NS,947054,Everonn Education Ltd,25
EXCR.NS,947171,Excel Crop Care Ltd,25
EXCI.NS,947104,Excel Industries Ltd,25
EXCE.NS,947229,Excel Infoways Ltd,25
FAIC.NS,953113,Fairchem Speciality Ltd,25
FARM.NS,947322,Farmax India Ltd,25
FCSS.NS,946787,FCS Software Solutions Ltd,25
FDEL.NS,946975,Fedders Electric & Engineering Ltd,25
FELX.NS,1057254,Felix Industries Ltd,25
FCTL.NS,946623,Fertilisers And Chemicals Travancore Ltd,25
FIIN.NS,947172,Fiem Industries Ltd,25
FLTX.NS,947284,Filatex India Ltd,25
FINE.NS,954950,Fineotex Chemical Ltd,25
FSTL.NS,18130,First Leasing Company of India Ltd,25
FIST.NS,946742,First Winner Industries Ltd,25
FLEI.NS,100246,Flexituff International Ltd,25
FOCS.NS,1008674,Focus Lighting and Fixtures Ltd,25
FRTN.NS,1031161,Fortune Financial Services India Ltd,25
FSCO.NS,947321,Foseco India Ltd,25
FOUT.NS,962570,Fourth Dimension Solutions Ltd,25
FURDV.NS,947283,Future Enterprises Ltd R,25
FMNL.NS,946788,Future Market Networks Ltd,25
FUTE.NS,1056487,Future Supply Chain Solutions Ltd,25
GMBR.NS,947285,G M Breweries Ltd,25
GABR.NS,100247,Gabriel India Ltd,25
GLIL.NS,947232,Gallantt Ispat Ltd,25
GALM.NS,947230,Gallantt Metal Ltd,25
GHFC.NS,946938,Ganesh Housing Corp Ltd,25
GANS.NS,946574,Ganesha Ecosphere Ltd,25
GNGE.NS,1031163,Ganges Securities Ltd,25
GANG.NS,947037,Gangotri Textiles Ltd,25
GATI.NS,100248,Gati Ltd,25
GECE.NS,947173,GeeCee Ventures Ltd,25
GEEK.NS,1043252,Geekay Wires Ltd,25
GEII.NS,946789,Gei Industrial Systems Ltd,25
GEMC.NS,946885,Gemini Communication Ltd,25
GENS.NS,946778,Genesys International Corporation Ltd,25
GEUS.NS,945715,Genus Paper & Boards Ltd,25
GEOE.NS,946731,Genus Power Infrastructures Ltd,25
GEIS.NS,39863,Geodesic Ltd,25
GDTB.NS,947031,Ghi Special Tubes Ltd,25
GIEN.NS,946696,GI Engineering Solutions Ltd,25
GICH.NS,946939,GIC Housing Finance Ltd,25
GIAR.NS,946867,Gillers Arbuthnot Co Ltd,25
GNNI.NS,947174,Ginni Filaments Ltd,25
GIRN.NS,962427,GIR Natureview Resorts Ltd,25
GKWL.NS,947450,GKW Ltd,25
GLOL.NS,997450,Global Education Ltd,25
GLSH.NS,946700,Global Offshore Services Ltd,25
GLVE.NS,946790,Global Vectra Helicorp Ltd,25
GLOR.NS,992810,Globe International Carriers Ltd,25
GLOX.NS,1031104,Globe Textiles India Ltd,25
GLOS.NS,947233,Globus Spirits Ltd,25
GLDY.NS,39865,Glodyne Technoserve Ltd,25
GNAA.NS,991130,GNA Axles Ltd,25
GOAC.NS,947370,Goa Carbon Ltd,25
GDPI.NS,946864,Godawari Power Ispat Ltd,25
GOEN.NS,946769,Goenka Diamond Jewels Ltd,25
GOKL.NS,947107,Gokaldas Exports Ltd,25
GOKG.NS,976199,Gokul Agro Resources Ltd,25
GOKU.NS,946770,Gokul Refoils Solvent Ltd,25
GOFS.NS,18157,GOL Offshore Ltd,25
GLDN.NS,947231,Golden Tobacco Ltd,25
GOLI.NS,946839,Goldiam International Ltd,25
GODT.NS,946940,Goldstone Infratech Ltd,25
GOLD.NS,946791,Goldstone Technologies Ltd,25
GLST.NS,976198,Good Luck Steel Tubes Ltd,25
GPPE.NS,947252,GP Petroleums Ltd,25
GPTI.NS,985920,GPT Infraprojects Ltd,25
GREE.NS,946728,Green Fire Agri Commodities Ltd,25
ACPL.NS,946673,Greenearth Resources and Projects Ltd,25
GEEN.NS,945932,Greenlam Industries Ltd,25
GRPL.NS,946941,Greenply Industries Ltd,25
GREX.NS,992811,Gretex Industries Ltd,25
THEG.NS,985923,Grob Tea Co Ltd,25
GRPI.NS,945714,GRP Ltd,25
GSSI.NS,947323,GSS Infotech Ltd,25
GTN.NS,947214,GTN Industries Ltd,25
GTNT.NS,947324,GTN Textiles Ltd,25
GTPH.NS,1013403,GTPL Hathway Ltd,25
GUFI.NS,947055,Gufic Biosciences Ltd,25
GJAI.NS,946665,Gujarat Apollo Industries Ltd,25
GLSE.NS,946737,Gujarat Lease Financing Ltd,25
GJNDV.NS,947106,Gujarat NRE Coke Ltd,25
GSCL.NS,946840,Gujarat Sidhee Cement Ltd,25
GULS.NS,945155,Gulshan Polyols Ltd,25
GYSC.NS,947215,Gyscoal Alloys Ltd,25
HATT.NS,946865,Hanung Toys Textiles Ltd,25
HASS.NS,946792,Harita Seating Systems Ltd,25
HRMA.NS,946943,Harrisons Malayalam Ltd,25
HBSH.NS,947109,HB Stockholdings Ltd,25
HBLS.NS,947056,HBL Power Systems Ltd,25
HEAC.NS,976200,Healthcare Global Enterprises Ltd,25
HECF.NS,976201,HEC Infra Projects Ltd,25
HELI.NS,946811,Helios and Matheson Information Technology Ltd,25
HERC.NS,947175,Hercules Hoists Ltd,25
HEST.NS,948381,Hester Biosciences Ltd,25
HEXA.NS,947350,Hexa Tradex Ltd,25
HITC.NS,963740,Hi-Tech Pipes Ltd,25
HGEL.NS,993991,High Ground Enterprise Ltd,25
HIKA.NS,945930,Hikal Ltd,25
HLLT.NS,947451,HIL Ltd,25
HILT.NS,946886,Hilton Metal Forging Ltd,25
HRCT.NS,947176,Hind Rectifiers Ltd,25
HSYN.NS,947351,Hind Syntex Ltd,25
HNDF.NS,947057,Hinduja Foundries Ltd,25
HGSL.NS,946701,Hinduja Global Solutions Ltd,25
HNDJ.NS,947111,Hinduja Ventures Ltd,25
HFRD.NS,946887,Hindustan Composites Ltd,25
HDRR.NS,946841,Hindustan Dorr Oliver Ltd,25
HINS.NS,946702,Hindustan Media Ventures Ltd,25
HMTR.NS,947110,Hindustan Motors Ltd,25
HNGI.NS,946721,Hindusthan National Glass And Industries Ltd,25
HISR.NS,994833,Hisar Metal Industries Ltd,25
HITE.NS,947325,Hitech Plast Ltd,25
HOND.NS,946667,Honda Siel Power Products Ltd,25
HOTR.NS,947345,Hotel Rugby Ltd,25
HOVS.NS,947326,HOV Services Ltd,25
HPLE.NS,991198,HPL Electric & Power Pvt Ltd,25
HUSY.NS,976202,Husys Consulting Ltd,25
IGPT.NS,947006,I G Petrochemicals Ltd,25
ICEM.NS,1057255,Ice Make Refrigeration Ltd,25
ICSA.NS,947366,ICSA India Ltd,25
IFBA.NS,946944,IFB Agro Industries Ltd,25
IFGL.NS,1055942,IFGL Refractories Ltd,25
IFRF.NS,947058,IFGL Refractories Ltd,25
IGAM.NS,946843,Igarashi Motors India Ltd,25
ILFS.NS,946824,IL & FS Investment Managers Ltd,25
IMPP.NS,947371,IMP Powers Ltd,25
IMFT.NS,947112,Impex Ferro Tech Ltd,25
INSW.NS,947393,Ind Swift Ltd,25
IMBS.NS,946859,Indbank Merchant Banking Services Ltd,25
IGTR.NS,1010661,India Grid Trust,25
IMPA.NS,946776,India Motor Parts & Accessories Ltd,25
INEL.NS,946704,India Nippon Electricals Ltd,25
DPSC.NS,947087,India Power Corp Ltd,25
ICRD.NS,946690,Indian Card Clothing Company Ltd,25
IHME.NS,946703,Indian Hume Pipe Company Ltd,25
IMFA.NS,100255,Indian Metals and Ferro Alloys Ltd,25
ITFL.NS,946743,Indian Terrain Fashions Ltd,25
ICNT.NS,946842,Indo Count Industries Ltd,25
INNL.NS,947287,Indo National Ltd,25
INTT.NS,946795,Indo Tech Transformers Ltd,25
ITSL.NS,946888,Indo Thai Securities Ltd,25
INDL.NS,947392,Indosolar Ltd,25
INWI.NS,947179,Indowind Energy Ltd,25
INDI.NS,946733,Industrial Investment Trust Ltd,25
INEO.NS,946822,INEOS Styrolution India Ltd,25
INFI.NS,100257,Infinite Computer Solutions India Ltd,25
IFOB.NS,1009363,InfoBeans Technologies Ltd,25
INFO.NS,947177,Infomedia Press Ltd,25
VYSA.NS,18196,ING Vysya Bank Ltd,25
INTB.NS,1057256,Innovana Thinklabs Ltd,25
INNV.NS,946793,Innoventive Industries Ltd,25
ISIL.NS,946979,Insecticides India Ltd,25
INGA.NS,946813,Integra Garments and Textiles Ltd,25
INSO.NS,946794,Intrasoft Technologies Ltd,25
IGSL.NS,946725,Inventure Growth & Securities Ltd,25
IOLC.NS,946652,IOL Chemicals and Pharmaceuticals Ltd,25
IRBN.NS,1009125,IRB InvIT Fund,25
ISMT.NS,947441,ISMT Ltd,25
IVPL.NS,947453,IVP Ltd,25
IZMO.NS,947443,Izmo Ltd,25
JKIP.NS,100262,J Kumar Infraprojects Ltd,25
JGSN.NS,946639,Jagson Pal Pharmaceuticals Ltd,25
JHNP.NS,947113,Jaihind Projects Ltd,25
JAIRDV.NS,946744,Jain Irrigation Systems Ltd,25
JSTD.NS,947312,Jain Studios Ltd,25
JYBM.NS,947059,Jay Bharat Maruti Ltd,25
JAAO.NS,946889,Jayant Agro Organics Ltd,25
JAYN.NS,946705,Jayaswal Neco Industries Ltd,25
JBMA.NS,947403,JBM Auto Ltd,25
JCTE.NS,947180,JCT Electronics Ltd,25
JENN.NS,946767,Jenson Nicholson India Ltd,25
JETR.NS,994051,Jet Freight Logistics Ltd,25
JETK.NS,992628,Jet Knitwears Ltd,25
JHSS.NS,976204,JHS Svendgaard Laboratories Ltd,25
JIKI.NS,976205,Jik Industries Ltd,25
JICL.NS,947327,Jindal Cotex Ltd,25
JNDR.NS,946763,Jindal Drilling and Industries Ltd,25
JINP.NS,947328,Jindal Photo Ltd,25
JINL.NS,44468,Jindal Poly Investment and Finance Company Ltd,25
JINW.NS,947114,Jindal Worldwide Ltd,25
JITF.NS,997130,JITF Infralogistics Ltd,25
JMCP.NS,946980,JMC Projects India Ltd,25
JMTA.NS,947405,JMT Auto Ltd,25
JOCI.NS,947434,Jocil Ltd,25
JSTL_PA.NS,976206,JSW Steel Ltd,25
JUBL.NS,946945,Jubilant Industries Ltd,25
JULL.NS,948382,Jullundur Motor Agency Delhi Ltd,25
JVLA.NS,946946,JVL Agro Industries Ltd,25
KMSU.NS,947181,K M Sugar Mills Ltd,25
KSOI.NS,18250,K S Oils Ltd,25
KBRE.NS,946745,Kabra Extrusion Technik Ltd,25
KKTY.NS,946823,Kakatiya Cement Sugar and Industries Ltd,25
KALI.NS,946631,Kalindee Rail Nirman Engineers Ltd,25
KALF.NS,947288,Kalyani Forge Ltd,25
KALA.NS,946640,Kalyani Investment Company Ltd,25
KLSL.NS,947239,Kalyani Steels Ltd,25
KAMT.NS,946981,Kamat Hotels India Ltd,25
KAMI.NS,947236,Kamdhenu Ltd,25
KANN.NS,947040,Kanani Industries Ltd,25
KNRC.NS,946677,Kanoria Chemicals and Industries Ltd,25
KRME.NS,947329,Karma Energy Ltd,25
KAUS.NS,946674,Kaushalya Infrastructure Development Corp Ltd,25
KATL.NS,946706,Kavveri Telecom Products Ltd,25
KAYA.NS,959092,Kaya Ltd,25
KCPS.NS,946815,KCP Sugar and Industries Corp Ltd,25
KDDL.NS,969120,KDDL Ltd,25
KEET.NS,1031166,Keerti Knowledge and Skills Ltd,25
KELL.NS,969121,Kellton Tech Solutions Ltd,25
KEMR.NS,18258,Kemrock Industries and Exports Ltd,25
KMIL.NS,946821,Kernex Microsystems India Ltd,25
KSRE.NS,947061,Kesar Enterprises Ltd,25
KESR.NS,946647,Kesar Terminals & Infrastructure Ltd,25
KKCL.NS,100263,Kewal Kiran Clothing Ltd,25
KEYC.NS,987145,Keynote Corporate Services Ltd,25
KHAD.NS,1054974,Khadim India Ltd,25
KHEL.NS,946947,Khaitan Electricals Ltd,25
KHAI.NS,947271,Khaitan India Ltd,25
KHSE.NS,976207,Khandwala Securities Ltd,25
KIDI.NS,946948,Kilitch Drugs India Ltd,25
KINA.NS,993254,Kingfa Science and Technology,25
KING.NS,39878,Kingfisher Airlines Ltd,25
KBIL.NS,946632,Kirloskar Brothers Investments Ltd,25
KRBR.NS,947008,Kirloskar Brothers Ltd,25
KREL.NS,946641,Kirloskar Electric Company Ltd,25
KIRL.NS,946890,Kirloskar Industries Ltd,25
KITE.NS,947238,Kitex Garments Ltd,25
KKVA.NS,986038,KKV Agro Powers Ltd,25
KOFO.NS,947240,Kohinoor Foods Ltd,25
KOCL.NS,947289,Kokuyo Camlin Ltd,25
KPRN.NS,947427,Kopran Ltd,25
KPOC.NS,946796,Kothari Petrochemicals Ltd,25
KPRO.NS,947115,Kothari Products Ltd,25
KTSG.NS,946863,Kothari Sugars and Chemicals Ltd,25
KREB.NS,1034491,Krebs Biochemicals and Industries Ltd,25
KRID.NS,961989,Kridhan Infra Ltd,25
KRPH.NS,997131,Krishana Phoschem Ltd,25
KSSL.NS,947454,KSS Ltd,25
KIOC.NS,993992,Kudremukh Iron Ore Co,25
KDAI.NS,947417,Kwality Ltd,25
LCCI.NS,947241,L C C Infotech Ltd,25
LAOP.NS,947330,La Opala R G Ltd,25
LFIC.NS,950033,Lakshmi Finance and Industrial Corp Ltd,25
LXPR.NS,946697,Lakshmi Precision Screws Ltd,25
LAMB.NS,945157,Lambodhara Textiles Ltd,25
LASA.NS,1052433,Lasa Supergenerics Ltd,25
LAXM.NS,1009364,Laxmi Cotspin Ltd,25
LEEL.NS,946716,LEEL Electricals Ltd,25
LEXU.NS,1043254,Lexus Granito India Ltd,25
LGB.NS,946875,LG Balakrishnan Bros Ltd,25
LGBL.NS,947394,LGB Forge Ltd,25
LIBA.NS,994834,Libas Designs Ltd,25
LIBS.NS,947290,Liberty Shoes Ltd,25
LINC.NS,946573,Linc Pen & Plastics Ltd,25
LINP.NS,962428,Lincoln Pharmaceuticals Ltd,25
LSIL.NS,986040,Lloyds Steels Industries Ltd,25
LAND.NS,946768,Landmark Property Development Co Ltd,25
LMLL.NS,947455,LML Ltd,25
LOMA.NS,947182,Lokesh Machines Ltd,25
LOTS.NS,946678,Lotus Eye Hospital and Institute Ltd,25
LTOL.NS,947407,LT Foods Ltd,25
LUAS.NS,946707,Lumax Automotive Systems Ltd,25
LUAT.NS,946797,Lumax AutoTechnologies Ltd,25
LUMA.NS,947116,Lumax Industries Ltd,25
LYCO.NS,953115,Lycos Internet Ltd,25
LYKA.NS,947395,Lyka Labs Ltd,25
LYPS.NS,42686,Lypsa Gems & Jewellery Ltd,25
MKPR.NS,1008738,M K Proteins Ltd,25
MANA.NS,947243,Maan Aluminium Ltd,25
MADC.NS,996057,Madhav Copper Ltd,25
MDVM.NS,946922,Madhav Marbles and Granites Ltd,25
MAPR.NS,947062,Madhucon Projects Ltd,25
MADA.NS,1052434,Madhya Pradesh Today Media Ltd,25
MDFT.NS,947010,Madras Fertilizers Ltd,25
MGAD.NS,1031168,Magadh Sugar & Energy Ltd,25
MGNM.NS,947186,Magnum Ventures Ltd,25
MAHA.NS,985841,Mahamaya Steel Industries Ltd,25
MAHW.NS,995114,Maheshwari Logistics Ltd,25
MHUG.NS,100266,Mahindra Ugine Steel Company Ltd,25
MAIT.NS,947242,Maithan Alloys Ltd,25
MAJC.NS,959093,Majesco Ltd,25
MALP.NS,947117,Malu Paper Mills Ltd,25
MLWA.NS,946726,Malwa Cotton Spinning Mills Ltd,25
MIND.NS,100267,Man Industries India Ltd,25
MANI.NS,100268,Man Infraconstruction Ltd,25
MANL.NS,950035,Manaksia Aluminium Co Ltd,25
MANC.NS,950034,Manaksia Coated Metals Ltd,25
MANK.NS,947408,Manaksia Ltd,25
MANM.NS,950036,Manaksia Steels Ltd,25
MNLI.NS,946846,Manali Petrochemicals Ltd,25
MNVI.NS,1052437,Manav Infra Projects Ltd,25
TEMA.NS,994426,Mandhana Retail Ventures Ltd,25
MGLC.NS,947185,Mangalam Cement Ltd,25
MADR.NS,946921,Mangalam Drugs and Organics Ltd,25
MGLT.NS,946708,Mangalam Timber Products Ltd,25
MNGL.NS,100269,Mangalore Chemicals and Fertilisers Ltd,25
MANB.NS,955944,Manpasand Beverages Ltd,25
MNUG.NS,947187,Manugraph India Ltd,25
MARL.NS,947244,Maral Overseas Ltd,25
MANE.NS,991133,Marathon Nextgen Realty Ltd,25
MRCK.NS,946747,Marico Kaya Enterprises Ltd,25
MARK.NS,947183,Marksans Pharma Ltd,25
MASK.NS,992812,Mask Investments Ltd,25
MATI.NS,1046336,Matrimony.Com Ltd,25
MAWS.NS,947291,Mawana Sugars Ltd,25
MAXV.NS,985842,Max Ventures and Industries Ltd,25
MAYU.NS,947118,Mayur Uniquoters Ltd,25
MAZD.NS,993003,Mazda Ltd,25
MBLI.NS,946949,MBL Infrastructures Ltd,25
MCDH.NS,947063,McDowell Holdings Ltd,25
MCNL.NS,946798,McNally Bharat Engg Co Ltd,25
MSFT.NS,947409,Megasoft Ltd,25
MEGH.NS,947064,Meghmani Organics Ltd,25
MELS.NS,946876,Melstar Information Technologies Ltd,25
MENO.NS,946575,Menon Bearings Ltd,25
MPIN.NS,953116,MEP Infrastructure Development Ltd,25
MTAL.NS,946928,Metalyst Forgings Ltd,25
METK.NS,946825,Metkore Alloys & Industries Ltd,25
MELC.NS,947184,MIC Electronics Ltd,25
MIGM.NS,960766,MIG Media Neurons Ltd,25
MDTK.NS,986128,Mindteck India Ltd,25
MIRZ.NS,946950,Mirza International Ltd,25
MITC.NS,946720,MITCON Consultancy & Engineering Services Ltd,25
MMFO.NS,947352,MM Forgings Ltd,25
MOHT.NS,947120,Mohit Industries Ltd,25
MOHO.NS,946868,Mohota Industries Ltd,25
MOLT.NS,945929,Mold Tek Packaging Ltd,25
MOLD.NS,985844,Mold-Tek Technologies Ltd,25
MOMA.NS,942591,Momai Apparels Ltd,25
MOCF.NS,943637,Monte Carlo Fashions Ltd,25
MORT.NS,947065,Morarjee Textiles Ltd,25
MORL.NS,946891,Morepen Laboratories Ltd,25
MGF.NS,946771,Motor General Finance Ltd,25
MPSL.NS,947456,MPS Ltd,25
MROT.NS,947418,MRO TEK Ltd,25
MSPO.NS,947151,MSP Steel Power Ltd,25
MTED.NS,100270,MT Educare Ltd,25
MUKE.NS,947269,Muk Engineers Ltd,25
MUKA.NS,947445,Muk Ltd,25
MUKR.NS,947373,Mukta Arts Ltd,25
MUAU.NS,946799,Munjal Auto Industries Ltd,25
MNJL.NS,947331,Munjal Showa Ltd,25
MURL.NS,947121,Murli Industries Ltd,25
MURD.NS,946892,Murudeshwar Ceramics Ltd,25
MUSI.NS,997884,Music Broadcast Pvt Ltd,25
MUTH.NS,959094,Muthoot Capital Services Ltd,25
NKIN.NS,987146,N K Industries Ltd,25
NRAI.NS,1006192,N R Agarwal Industries Ltd,25
NACL.NS,1008675,NACL Industries Ltd,25
NAGD.NS,986635,Naga Dhunseri Group Ltd,25
NGFR.NS,985286,Nagarjuna Fertilizers and Chemicals Ltd,25
NORL.NS,946801,Nagarjuna Oil Refinery Ltd,25
NCIL.NS,946626,Nagreeka Capital & Infrastructure Ltd,25
NAGR.NS,947122,Nagreeka Exports Ltd,25
NAHA.NS,946761,Nahar Capital and Financial Services Ltd,25
NHIE.NS,946692,Nahar Industrial Enterprises Ltd,25
NAHR.NS,947123,Nahar Poly Films Ltd,25
NHRS.NS,946893,Nahar Spinning Mills Ltd,25
NAKO.NS,947428,Nakoda Ltd,25
NALS.NS,946800,Nalwa Sons Investments Ltd,25
NANE.NS,947383,Nan Denim Ltd,25
NANA.NS,992629,Nandani Creation Ltd,25
NATB.NS,946874,Nath Bio Genes India Ltd,25
NTST.NS,946919,National Steel and Agro Industries Ltd,25
NAVR.NS,959095,Navkar Corporation Ltd,25
NBII.NS,994423,NBI Industrial Finance Company Ltd,25
NCLI.NS,947245,Ncl Industries Ltd,25
NECT.NS,946951,Nectar Lifesciences Ltd,25
NLCA.NS,947419,Nelcast Ltd,25
NEPC.NS,947374,NEPC India Ltd,25
NETF.NS,947346,Net 4 India Ltd,25
NEUL.NS,947032,Neul Laboratories Ltd,25
NEXM.NS,947188,Next Mediaworks Ltd,25
NICC.NS,947375,Nicco Corp Ltd,25
NHI.NS,953898,Nila Infrastructures Ltd,25
NSSN.NS,947292,Nissan Copper Ltd,25
NCOT.NS,947435,Nitco Ltd,25
NITE.NS,947247,Nitesh Estates Ltd,25
NISP.NS,947246,Nitin Spinners Ltd,25
NITR.NS,1010632,Nitiraj Engineers Ltd,25
NOCI.NS,947436,Nocil Ltd,25
NOES.NS,947036,Noesis Industries Ltd,25
NTE.NS,946925,Norben Tea Exports Ltd,25
NECC.NS,969122,North Eastern Carrying Corporation Ltd,25
NBEA.NS,947332,NRB Bearings Ltd,25
NIBL.NS,946748,NRB Industrial Bearings Ltd,25
NUTK.NS,947333,Nu Tek India Ltd,25
NSEL.NS,946709,Nucleus Software Exports Ltd,25
OCLI.NS,947149,OCL Iron Steel Ltd,25
OCTL.NS,946952,Oil Country Tubular Ltd,25
OMET.NS,946749,Om Metals Infraprojects Ltd,25
OMXA.NS,947376,Omax Autos Ltd,25
OMKS.NS,946642,Omkar Speciality Chemicals Ltd,25
OMIN.NS,946802,Omnitech Infosolutions Ltd,25
ONEP.NS,1057257,One Point One Solutions Ltd,25
ONEL.NS,946710,Onelife Capital Advisors Ltd,25
OTEC.NS,946954,Onward Technologies Ltd,25
OLTP.NS,946668,Opal Luxury Time Products Ltd,25
OPTI.NS,1034493,Optiemus Infracom Ltd,25
ORCP.NS,18317,Orbit Corporation Ltd,25
ORBE.NS,42687,Orbit Exports Ltd,25
OREN.NS,958334,Oricon Enterprises Ltd,25
ORNT.NS,947124,Orient Abrasives Ltd,25
ORBL.NS,947353,Orient Bell Ltd,25
ORIN.NS,946847,Orient Green Power Co Ltd,25
ORPR.NS,947334,Orient Press Ltd,25
ORCR.NS,963741,Oriental Carbon & Chemicals Ltd,25
ORTX.NS,947155,Oriental Trimex Ltd,25
ORTE.NS,948383,Ortel Communications Ltd,25
ORTN.NS,959096,Ortin Laboratories Ltd,25
OUDH.NS,947125,Oudh Sugar Mills Ltd,25
PAEL.NS,947457,Pae Ltd,25
PAAS.NS,1031170,Palash Securities Ltd,25
PALR.NS,946955,Palred Technologies Ltd,25
PNAC.NS,1008993,Panache Digilife Ltd,25
PAPT.NS,947126,Panama Petrochem Ltd,25
PANU.NS,946956,Panoramic Universal Ltd,25
PANR.NS,992813,Pansari Developers Ltd,25
PARB.NS,947189,Parabolic Drugs Ltd,25
PCML.NS,946711,Paramount Communications Ltd,25
PARM.NS,946695,Paramount Printpackaging Ltd,25
PARP.NS,947190,Paras Petrofils Ltd,25
PADG.NS,946803,Parenteral Drugs India Ltd,25
PSIL.NS,946752,Parrys Sugar Industries Ltd,25
PASH.NS,1052438,Pashupati Cotspin Ltd,25
PATL.NS,946643,Patel Integrated Logistics Ltd,25
PATS.NS,947294,Patspin India Ltd,25
PBAI.NS,947011,PBA Infrastructure Ltd,25
PDSM.NS,942589,PDS Multinational Fashions Ltd,25
PGIL.NS,946750,Pearl Global Industries Ltd,25
PRLP.NS,947249,Pearl Polymers Ltd,25
PENE.NS,959097,Pennar Engineered Building Systems Ltd,25
PENN.NS,947066,Pennar Industries Ltd,25
PERE.NS,961702,Perfect Infraengineers Ltd,25
PERI.NS,959098,Peria Karamalai Tea & Produce Company Ltd,25
PEEC.NS,946686,Petron Engineering Construction Ltd,25
PGEL.NS,947191,PG Electroplast Ltd,25
PHON.NS,947295,Phoenix Lamps Ltd,25
PILI.NS,947012,Pil Italica Lifestyle Ltd,25
PILN.NS,961991,Pilani Investment And Industries Corporation Ltd,25
PINS.NS,985287,Pincon Spirit Ltd,25
PION.NS,946895,Pioneer Distilleries Ltd,25
PIOE.NS,946894,Pioneer Embroideries Ltd,25
PPTL.NS,947068,Piramal Phytocare Ltd,25
PITL.NS,947067,Pitti Laminations Ltd,25
PLST.NS,947013,Plastiblends India Ltd,25
PLPH.NS,946712,Plethico Pharmaceuticals Ltd,25
PNBG.NS,947397,PNB Gilts Ltd,25
PNEU.NS,959099,Pneumatic Holdings Ltd,25
POCH.NS,946896,Pochiraju Industries Ltd,25
PODD.NS,1008676,Poddar Housing and Development Ltd,25
PODR.NS,993299,Poddar Pigments Ltd,25
POKR.NS,985845,Pokarna Ltd,25
POLA.NS,18340,Polaris Financial Technology Ltd,25
PLMD.NS,945158,Poly Medicure Ltd,25
PONS.NS,946982,Ponni Sugars Erode Ltd,25
POMP.NS,959100,Power Mech Projects Ltd,25
PPAP.NS,947192,PPAP Automotive Ltd,25
PRDA.NS,959101,Prabhat Dairy Ltd,25
PRAD.NS,947193,Pradip Overseas Ltd,25
PRJE.NS,946644,Prajay Engineers Syndicate Ltd,25
PKCO.NS,946957,Prakash Constrowell Ltd,25
PRAA.NS,947127,Prakash Steelage Ltd,25
PRAT.NS,1050747,Prataap Snacks Ltd,25
PRTI.NS,946958,Pratibha Industries Ltd,25
PRCM.NS,963737,Precision Camshafts Ltd,25
PRWR.NS,946849,Precision Wires India Ltd,25
PREC.NS,947194,Precot Meridian Ltd,25
PRMR.NS,985846,Premier Explosives Ltd,25
PRMI.NS,947420,Premier Ltd,25
PRPF.NS,947091,Premier Polyfilm Ltd,25
PRES.NS,946897,Pressman Advertising Ltd,25
PRCO.NS,947429,Pricol Ltd,25
PRME.NS,947128,Prime Securities Ltd,25
PISL.NS,946655,Prithvi Information Solutions Ltd,25
PNCL.NS,946818,Pritish Nandy Communications Ltd,25
PROI.NS,994835,Prolife Industries Ltd,25
PROZ.NS,946751,Prozone Intu Properties Ltd,25
PSPP.NS,1010662,Psp Projects Ltd,25
PTCN.NS,100259,PTC India Financial Services Ltd,25
PTLE.NS,947195,PTL Enterprises Ltd,25
PUDU.NS,946959,Pudumjee Industries Ltd,25
PUDJ.NS,976208,Pudumjee Paper Products Ltd,25
PUDM.NS,946816,Pudumjee Pulp and Paper Mills Ltd,25
PULZ.NS,1055945,Pulz Electronics Ltd,25
PCHM.NS,946676,Punjab Chemicals and Crop Protection Ltd,25
PUSP.NS,1031105,Pushpanjali Realms and Infratech Ltd,25
PVPV.NS,947335,PVP Ventures Ltd,25
QUIC.NS,963739,Quick Heal Technologies Ltd,25
RSSI.NS,946983,R S Software India Ltd,25
RSYS.NS,946754,R Systems International Ltd,25
RMIL.NS,946698,Radaan Media Works India Ltd,25
RMCP.NS,947071,Radha Madhav Corp Ltd,25
RNBP.NS,947251,Rainbow Papers Ltd,25
RAJS.NS,947296,Raj Oil Mills Ltd,25
RRAY.NS,946900,Raj Rayon Industries Ltd,25
RATV.NS,100261,Raj Television Network Ltd,25
RJSG.NS,946827,Rajshree Sugars & Chemicals Ltd,25
RAJV.NS,947069,Rajvir Industries Ltd,25
RAMA.NS,959102,Rama Steel Tubes Ltd,25
RMCS.NS,947299,Ramco Systems Ltd,25
RAMK.NS,946899,Ramky Infrastructure Ltd,25
RASW.NS,946960,Ramsarup Industries Ltd,25
RNSG.NS,947355,Rana Sugars Ltd,25
RANB.NS,18356,Ranbaxy Laboratories Ltd,25
RABL.NS,947014,Rane Brake Linings Ltd,25
RAEV.NS,947015,Rane Engine Valves Ltd,25
RANE.NS,947297,Rane Holdings Ltd,25
RAMD.NS,947344,Rane Madras Ltd,25
RSPR.NS,100256,Rasoya Proteins Ltd,25
RTNI.NS,942787,RattanIndia Infrastructure Ltd,25
RAVK.NS,946753,Ravi Kumar Distilleries Ltd,25
REFE.NS,947129,Refex Industries Ltd,25
REGC.NS,947092,Regency Ceramics Ltd,25
REAG.NS,18360,Rei Agro Ltd,25
REIS.NS,947016,REI Six Ten Retail Ltd,25
REIN.NS,946987,Remsons Industries Ltd,25
RENA.NS,946850,Renaissance Jewellery Ltd,25
RPRO.NS,947354,Repro India Ltd,25
RESU.NS,946860,Resurgere Mines & Minerals India Ltd,25
REVA.NS,947070,Revathi Equipment Ltd,25
RAUT.NS,946898,Rico Auto Industries Ltd,25
RMDR.NS,1056379,RM Drip & Sprinklers Systems Ltd,25
ROHT.NS,947131,Rohit Ferro Tech Ltd,25
RLTN.NS,993300,Rollatainers Ltd,25
ROSS.NS,947298,Rossell India Ltd,25
ROYL.NS,946962,Royal Orchid Hotels Ltd,25
RPGL.NS,947072,Rpg Life Sciences Ltd,25
RPPI.NS,947018,RPP Infra Projects Ltd,25
RSWM.NS,947444,RSWM Ltd,25
RUBY.NS,947377,Ruby Mills Ltd,25
RUCH.NS,946878,Ruchi Infrastructure Ltd,25
RCHR.NS,947250,Ruchira Papers Ltd,25
RUSH.NS,947336,Rushil Decor Ltd,25
SALS.NS,947356,S A L Steel Ltd,25
SCHA.NS,1008771,S Chand and Company Ltd,25
SPAP.NS,986321,S. P. Apparels Ltd,25
SABV.NS,989490,Sab Events & Governance Now Media Ltd,25
SACV.NS,18382,Shree Ashtavinayak Cine Vision Ltd,25
SADB.NS,959103,Sadbhav Infrastructure Projects Ltd,25
SGRC.NS,947300,Sagar Cements Ltd,25
SAGP.NS,978764,Sagardeep Alloys Ltd,25
SAKA.NS,992814,Sakar Healthcare Ltd,25
SAKS.NS,947421,Saksoft Ltd,25
SKSG.NS,947304,Sakthi Sugars Ltd,25
SAKE.NS,947253,Sakuma Exports Ltd,25
SALA.NS,1024889,Salasar Techno Engineering Ltd,25
SALO.NS,985847,Salona Cotspin Ltd,25
SALI.NS,946904,Salora International Ltd,25
SALZ.NS,961992,Salzer Electronics Ltd,25
SMBH.NS,947212,Sambhaav Media Ltd,25
SMTL.NS,947337,Samtel Color Ltd,25
SANR.NS,947132,Sanco Industries Ltd,25
SANG.NS,947310,Sangam India Ltd,25
SNGI.NS,947075,Sanghi Industries Ltd,25
SANH.NS,946719,Sanghvi Forging and Engineering Ltd,25
SNGM.NS,947255,Sanghvi Movers Ltd,25
SNGN.NS,997885,Sanginita Chemicals Ltd,25
SNWR.NS,947023,Sanwaria Agro Oils Ltd,25
SAEM.NS,946828,Sarda Energy Minerals Ltd,25
SARE.NS,947254,Saregama India Ltd,25
SARL.NS,946713,Sarla Performance Fibers Ltd,25
SKCT.NS,946830,Sasken Technologies Ltd,25
SAST.NS,946734,Sastasundar Ventures Ltd,25
SATV.NS,947073,Sathavahana Ispat Ltd,25
SATR.NS,959105,Satin Creditcare Network Ltd,25
SAOL.NS,946755,Savita Oil Technologies Ltd,25
SEPW.NS,947410,SE Power Ltd,25
SEAM.NS,947430,Seamec Ltd,25
SECC.NS,1055946,SecUR Credentials Ltd,25
SEZA.NS,947357,Sejal Glass Ltd,25
SELM.NS,946902,Sel Manufacturing Co Ltd,25
SELA.NS,946693,Selan Exploration Technology Ltd,25
SEQU.NS,969123,SeQuent Scientific Ltd,25
SLPL.NS,947022,Servalakshmi Paper Ltd,25
SERO.NS,1043255,Servotech Power Systems Ltd,25
SNDH.NS,947438,Sesh Ltd,25
SSHA.NS,946871,Seshasayee Paper and Boards Ltd,25
SETC.NS,985848,Setco Automotive Ltd,25
SHAA.NS,947358,Shah Alloys Ltd,25
SAIV.NS,959104,Shaival Reality Ltd,25
SHPU.NS,947019,Shakti Pumps India Ltd,25
SHAY.NS,1056488,Shalby Ltd,25
SHLP.NS,947198,Shalimar Paints Ltd,25
SNTI.NS,1031174,Shanti Overseas India Ltd,25
SHAD.NS,959106,Sharda Motor Industries Ltd,25
SHBM.NS,946963,Sharon Bio Medicine Ltd,25
SHEK.NS,946903,Shekhawati Poly Yarn Ltd,25
SHEM.NS,942341,Shemaroo Entertainment Ltd,25
SHIC.NS,946669,Shilpi Cable Technologies Ltd,25
SHGR.NS,946853,Shirpur Gold Refinery Ltd,25
SHTE.NS,947302,Shiva Texyarn Ltd,25
SHAU.NS,947196,Shivam Autotech Ltd,25
SHDH.NS,1057258,Shradha Infraprojects Nagpur Ltd,25
SGFR.NS,946852,Shree Ganesh Forgings Ltd,25
SHRG.NS,39905,Shree Ganesh Jewellery House I Ltd,25
SPCH.NS,976209,Shree Pushkar Chemicals & Fertilisers Ltd,25
SHRM.NS,946854,Shree Rama Multi Tech Ltd,25
SRNP.NS,946905,Shree Rama Newsprint Ltd,25
SHRK.NS,1031173,Shrenik Ltd,25
SHRE.NS,18385,Shrenuj & Co. Ltd,25
SHRY.NS,946926,Shreyans Industries Ltd,25
SRSH.NS,946764,Shreyas Shipping and Logistics Ltd,25
SASL.NS,946901,Shri Aster Silicates Ltd,25
SHLK.NS,946964,Shri Lakshmi Cotsyn Ltd,25
SRSW.NS,1031106,Shri Ram Switchgears Ltd,25
SHRI.NS,947359,Shriram EPC Ltd,25
SHIE.NS,985849,Shriram Pistons & Rings Ltd,25
SHYC.NS,958335,Shyam Century Ferrous Ltd,25
SHMT.NS,947301,Shyam Telecom Ltd,25
SICI.NS,947303,Sicagen India Ltd,25
SICA.NS,947200,Sical Logistics Ltd,25
SIGN.NS,947074,Signet Industries Ltd,25
SIKK.NS,1008739,Sikko Industries Limited,25
SILI.NS,947201,Sil Investments Ltd,25
SILT.NS,1057259,Silver Touch Technologies Ltd,25
SIMB.NS,947133,Simbhaoli Sugars Ltd,25
SPLX.NS,947134,Simplex Projects Ltd,25
SIRP.NS,947020,Sirpur Paper Mills Ltd,25
SITA.NS,946756,Sitashree Food Products Ltd,25
SIYR.NS,947021,Siyaram Silk Mills Ltd,25
SKIL.NS,946965,SKIL Infrastructure Ltd,25
SKIP.NS,953900,Skipper Ltd,25
SKME.NS,946657,SKM Egg Products Export India Ltd,25
SMAT.NS,946670,Smartlink Network Systems Ltd,25
SMLI.NS,947398,SML Isuzu Ltd,25
SMSL.NS,1043257,SMS Lifesciences India Ltd,25
SMSP.NS,946966,SMS Pharmaceuticals Ltd,25
SMVD.NS,1057260,SMVD Poly Pack Ltd,25
SNOW.NS,941683,Snowman Logistics Ltd,25
SDB.NS,946717,SOM Distilleries and Breweries Ltd,25
SOMA.NS,946681,Soma Textiles Industries Ltd,25
SOCE.NS,947202,Somany Ceramics Ltd,25
SOMI.NS,986041,Somi Conveyor Beltings Ltd,25
SORI.NS,946807,Soril Infra Resources Ltd,25
SPIC.NS,946621,Southern Petrochemical Industries Corporation Ltd,25
SACE.NS,44469,Spacenet Enterprises India Ltd,25
SPRE.NS,946805,Speciality Restaurants Ltd,25
SPTI.NS,947024,Spentex Industries Ltd,25
SPHE.NS,960767,Sphere Global Services Ltd,25
SPIE.NS,947256,Spice Mobility Ltd,25
SPND.NS,947257,SPL Industries Ltd,25
SPML.NS,947378,SPML Infra Ltd,25
SQSI.NS,942342,Sqs India BFSI Ltd,25
SRHL.NS,946684,Sree Rayalaseema Hi Strength Hypo Ltd,25
SREE.NS,947313,Sreeleathers Ltd,25
SBTV.NS,946682,Sri Adhikari Brothers Television Network Ltd,25
SRII.NS,1052443,Sri Krishna Metcom Ltd,25
SRIK.NS,946967,Srikalahasthi Pipes Ltd,25
SRSL.NS,947458,SRS Ltd,25
STAM.NS,986042,Stampede Capital Ltd,25
STRF.NS,946977,Star Ferro Cement Ltd,25
STPM.NS,947136,Star Paper Mills Ltd,25
STDI.NS,947088,Stard Industries Ltd,25
SCYS.NS,997132,Steel City Securities Ltd,25
STEI.NS,1031175,Steel Exchange India Ltd,25
STWH.NS,946969,Steel Strips Wheels Ltd,25
STEL.NS,947305,STEL Holdings Ltd,25
STTL.NS,947258,Sterling Tools Ltd,25
SFTG.NS,946812,Software Technology Group,25
STIB.NS,976210,STI India Ltd,25
STLG.NS,976211,STL Global Ltd,25
SUBX.NS,947437,Subex Ltd,25
SUBR.NS,947431,Subros Ltd,25
SUDR.NS,947137,Sudar Industries Ltd,25
SPLE.NS,946855,Splendid Metal Products Ltd,25
SJIN.NS,946735,Sujana Universal Industries Ltd,25
SUIN.NS,947076,Sumeet Industries Ltd,25
SUMM.NS,947077,Summit Securities Ltd,25
SBKL.NS,946804,Sundaram Brake Linings Ltd,25
SUMP.NS,947025,Sundaram Multi Pap Ltd,25
SFLG.NS,946772,Sunflag Iron Steel Co Ltd,25
SUHT.NS,946806,Sunil Hitech Engineers Ltd,25
SPRH.NS,947360,Super House Ltd,25
SSPM.NS,946906,Super Spinning Mills Ltd,25
SUPM.NS,950038,Supreme India Impex Ltd,25
SIIL.NS,100249,Supreme Infrastructure India Ltd,25
SUPY.NS,947138,Supreme Tex Mart Ltd,25
SURA.NS,947342,Surana Corp Ltd,25
SRIN.NS,947038,Surana Industries Ltd,25
SURN.NS,942785,Surana Solar Ltd,25
SURT.NS,942786,Surana Telecom and Power Ltd,25
SLCM.NS,946645,Surya Lakshmi Cotton Mills Ltd,25
SURP.NS,946908,Surya Pharmaceutical Ltd,25
SYJY.NS,946671,Suryajyoti Spinning Mills Ltd,25
SUTI.NS,946765,Sutlej Textiles and Industries Ltd,25
SVOG.NS,39906,SVOGL Oil Gas and Energy Ltd,25
SWEL.NS,946808,Swelect Energy Systems Ltd,25
SYNH.NS,947078,Syncom Healthcare Ltd,25
TTL.NS,947460,T T Ltd,25
TAIN.NS,946760,Tainwala Chemicals and Plastics India Ltd,25
TALB.NS,946658,Talbros Automotive Components Ltd,25
TALW.NS,946649,Talwalkars Better Value Fitness Ltd,25
TPL.NS,946758,Tamilnadu Petroproducts Ltd,25
TAMT.NS,946729,Tamilnadu Telecommunication Ltd,25
TNSL.NS,943829,Tanla Solutions Ltd,25
TANC.NS,946909,Tantia Constructions Ltd,25
TARJ.NS,947361,Tara Jewels Ltd,25
TARA.NS,946910,Tarapur Transformers Ltd,25
TARM.NS,947432,Tarmat Ltd,25
TTML.NS,39920,Tata Teleservices Ltd,25
TCID.NS,947261,TCI Developers Ltd,25
TCII.NS,947362,TCI Finance Ltd,25
TDPS.NS,100250,TD Power Systems Ltd,25
TENI.NS,947139,Techindia Nirman Ltd,25
TEIN.NS,946694,Technocraft Industries India Ltd,25
TECN.NS,946856,Technofab Engineering Ltd,25
TPSL.NS,947262,Tecpro Systems Ltd,25
TEJS.NS,1013404,Tejas Networks Ltd,25
TERA.NS,994741,Tera Software Ltd,25
TEXM.NS,946722,Texmaco Infrastructure & Holdings Ltd,25
TEXO.NS,946866,Texmo Pipes Products Ltd,25
TGBB.NS,946872,TGB Banquets Hotels Ltd,25
THNG.NS,946809,Thanga Mayil Jewellery Ltd,25
HTGR.NS,947286,The Hi-Tech Gears Ltd,25
THEJ.NS,947079,Thejo Engineering Ltd,25
THEM.NS,947203,Themis Medicare Ltd,25
THIR.NS,946911,Thiru Arooran Sugars Ltd,25
THRM.NS,946912,Thirumalai Chemicals Ltd,25
TSIL.NS,946978,Thomas Scott India Ltd,25
TIDE.NS,946757,Tide Water Oil India Co Ltd,25
TIJA.NS,947041,Tijaria Polypipes Ltd,25
TILL.NS,947459,TIL Ltd,25
TILK.NS,946857,Tilaknagar Industries Ltd,25
THLI.NS,947363,Timbor Home Ltd,25
TGFL.NS,947260,Times Guaranty Ltd,25
TIPS.NS,947204,Tips Industries Ltd,25
TWPL.NS,946646,Todays Writing Instruments Ltd,25
TPLI.NS,946672,Tokyo Plast International Ltd,25
TOTA.NS,1031176,Total Transport Systems Ltd,25
TOUC.NS,1057261,Touchwood Entertainment Ltd,25
TFCI.NS,946650,Tourism Finance Corporation of India Ltd,25
TPLP.NS,953901,TPL Plastech Ltd,25
TRNF.NS,946920,Transformers and Rectifiers India Ltd,25
TCIL.NS,946918,Transport Corporation of India Ltd,25
TRFI.NS,946833,Transwarranty Finance Ltd,25
TRAW.NS,1031108,Transwind Infrastructures Ltd,25
TTRO.NS,947461,TRF Ltd,25
TBZL.NS,100251,Tribhovandas Bhimji Zaveri Ltd,25
TRIC.NS,947314,Tricom India Ltd,25
TRIG.NS,946970,Trigyn Technologies Ltd,25
TREI.NS,946870,Triveni Engineering and Industries Ltd,25
TTKH.NS,961994,TTK Healthcare Ltd,25
TULP.NS,18439,Tulip Telecom Ltd,25
TULE.NS,947140,Tulsi Extrusions Ltd,25
TVVI.NS,989491,TV Vision Ltd,25
TVEL.NS,947205,TVS Electronics Ltd,25
TVSC.NS,947306,TVS Srichakra Ltd,25
UBE.NS,947263,UB Engineering Ltd,25
UBOI.NS,39922,United Bank of India,25
UCAF.NS,947080,UCAL Fuel Systems Ltd,25
UFOM.NS,953118,UFO Moviez India Ltd,25
UGSW.NS,947141,Ugar Sugar Works Ltd,25
UJAA.NS,947338,Ujaas Energy Ltd,25
UMDA.NS,961995,Umang Dairies Ltd,25
UNPH.NS,946971,Uniphos Enterprises Ltd,25
UNIN.NS,947081,Uniply Industries Ltd,25
UBHL.NS,39921,United Breweries Holdings Ltd,25
UNIL.NS,946651,United Nilgiri Tea Estates Company Ltd,25
UNTD.NS,985169,United Polyfab Gujarat Ltd,25
UIVA.NS,1031177,Univastu India Ltd,25
UNVR.NS,947142,Universal Cables Ltd,25
UPLL_PA.NS,993301,UPL Ltd Pref 2,25
UPLL_P.NS,993255,UPL Ltd Pref,25
UGSI.NS,946923,Upper Ganges Sugar and Industries Ltd,25
URJA.NS,999083,Urja Global Ltd,25
USME.NS,946625,Usha Martin Education And Solutions Ltd,25
USAG.NS,947379,Usher Agro Ltd,25
UTSM.NS,947082,Uttam Sugar Mills Ltd,25
UTTV.NS,947026,Uttam Value Steels Ltd,25
VLSF.NS,947308,V L S Finance Ltd,25
VREL.NS,947399,V2 Retail Ltd,25
VDLI.NS,947028,Vadilal Industries Ltd,25
VADV.NS,1031109,Vadivarhe Speciality Chemicals Ltd,25
VAIH.NS,1043260,Vaishali Pharma Ltd,25
VALE.NS,946972,Valecha Engineering Ltd,25
VLUE.NS,947145,Value Industries Ltd,25
VARD.NS,947083,Vardhman Acrylics Ltd,25
VRDM.NS,947085,Vardhman Holdings Ltd,25
VARP.NS,947143,Vardhman Polytex Ltd,25
VARM.NS,946759,Vardhman Special Steels Ltd,25
VARU.NS,947089,Varun Industries Ltd,25
VASC.NS,947144,Vascon Engineers Ltd,25
VASW.NS,947027,Vaswani Industries Ltd,25
VDAN_P.NS,1043261,Vedanta Ltd Pref,25
VENR.NS,947264,Venus Remedies Ltd,25
VERZ.NS,1055837,Vertoz Advertising Ltd,25
VETO.NS,946861,VETO Switch Gears And Cables Ltd,25
VICE.NS,947265,Viceroy Hotels Ltd,25
VIDH.NS,969124,Vidhi Dyestuffs Manufacturing Ltd,25
VIJS.NS,946810,Vijay Shanthi Builders Ltd,25
VIJI.NS,985924,Viji Finance Ltd,25
VIEC.NS,947208,Vikas Ecotech Ltd,25
VIMO.NS,947152,Vimal Oil Foods Ltd,25
VIML.NS,947380,Vimta Labs Ltd,25
VNDY.NS,947042,Vindhya Telelinks Ltd,25
VNYL.NS,946858,Vinyl Chemicals India Ltd,25
VIPC.NS,947009,VIP Clothing Ltd,25
VIPL.NS,951029,Vipul Ltd,25
VISA.NS,947381,Visa Steel Ltd,25
VIPO.NS,947207,Visagar Polytex Ltd,25
VSKI.NS,947084,Visaka Industries Ltd,25
VIFY.NS,947029,Visesh Infotecnics Ltd,25
VICH.NS,945931,Vishnu Chemicals Ltd,25
VISU.NS,976212,Visu International Ltd,25
VVMD.NS,947340,Vivimed Labs Ltd,25
VKSP.NS,947339,VKS Projects Ltd,25
VOTL.NS,946913,Voltamp Transformers Ltd,25
VST.NS,946914,VST Tillers Tractors Ltd,25
WSIN.NS,946834,W.S. Industries India Ltd,25
WALC.NS,946819,Walchnagar Industries Ltd,25
WANB.NS,947422,Wanbury Ltd,25
WEAL.NS,976213,Wealth First Portfolio Managers Ltd,25
WESL.NS,946915,Websol Energy System Ltd,25
WEIM.NS,947266,Weizmann Forex Ltd,25
WEIZ.NS,947412,Weizmann Ltd,25
WELS.NS,947146,Welspun Enterprises Ltd,25
WEEL.NS,946973,Welspun Enterprises Ltd,25
WICL.NS,946775,Welspun Investments and Commercials Ltd,25
WNDT.NS,947364,Wendt India Ltd,25
WEIP.NS,1008740,Western India Plywoods Ltd,25
WHEL.NS,947341,Wheels India Ltd,25
WILM.NS,946873,Williamson Magor Co Ltd,25
WIND.NS,947147,Windsor Machines Ltd,25
WINY.NS,947309,Winsome Yarns Ltd,25
WOHL.NS,947086,Wonderla Holidays Ltd,25
WORP.NS,1052444,Worth Peripherals Ltd,25
XCHA.NS,946974,Xchanging Solutions Ltd,25
XLEL.NS,947386,XL Energy Ltd,25
XPRO.NS,947382,Xpro India Ltd,25
ZEE_P.NS,976214,Zee Entertainment Enterprises Ltd,25
ZEEE.NS,947400,Zee Learn Ltd,25
ZEEN.NS,947209,Zee Media Corp Ltd,25
ZETE.NS,950040,Zen Technologies Ltd,25
ZNTH.NS,946984,Zenith Birla India Ltd,25
ZENX.NS,947211,Zenith Exports Ltd,25
ZICO.NS,946620,Zicom Electronic Security Systems Ltd,25
ZODA.NS,1057262,Zodiac Energy Ltd,25
ZODC.NS,947267,Zodiac JRD MKJ Ltd,25
ZNDU.NS,947384,Zu Realty Ltd,25
ZUAR.NS,946916,Zuari Agro Chemicals Ltd,25
ZYSY.NS,39928,Zylog Systems Ltd,25
NSE.NS,17940,Nifty 50,25
NSEBANK.NS,17950,Nifty Bank,25

#HK HONGKONG
3067.HK,1166402,iShares Hang Seng TECH ETF,11
2319.HK,13888,China Mengniu Dairy Co,11
2269.HK,1167625,WuXi Biologics,11
0780.HK,1097872,Tongcheng-Elong Holdings Ltd,11
0909.HK,1166249,Ming Yuan Cloud Group Holdings Ltd,11
1797.HK,1123794,Koolearn Technology Holding Limited,11
1810.HK,1075487,Xiaomi Corp,11
2013.HK,1116332,Weimob Inc,11
2400.HK,1155794,Xd Inc,11
00763.HK,13879,ZTE Corp-H,11
00772.HK,1054808,China Literature Ltd,11
01478.HK,990763,Q Technology Group Co Ltd,11
01833.HK,1075240,Ping An Healthcare and Technology Company Ltd,11
02858.HK,1054970,Yixin Group Ltd,11
06060.HK,1052239,ZhongAn Online P & C Insurance Co Ltd,11
06088.HK,1031139,Foxconn Interconnect Technology Ltd,11
1896.HK,1118184,Maoyan Entertainment,11
3690.HK,1096030,Meituan Dianping,11
6618.HK,1167535,Jd Health International Inc,11
9618.HK,1162164,Jd Com Inc,11
9988.HK,1155537,Alibaba Group Holding Ltd,11
9990.HK,1163134,Archosaur Games Inc,11
9999.HK,1161541,NetEase Inc,11
6690.HK,1168688,Haier Smart Home Co Ltd,11
1211.HK,13884,BYD Co Ltd-H,11
9988.HK,1155537,Alibaba Group Holding Ltd,11 
HSI.HK,179,Hang Seng Index,11
HK50.HK,8984,Hang Seng Futures,11
1106.HK,961683,Sino Haijing Holdings Ltd,11
3988.HK,101147,Bank of China Ltd,11
1398.HK,8577,ICBC,11
0939.HK,8572,China Construction Bank Corp,11
1288.HK,32488,Agricultural Bank Of China,11
8147.HK,960739,Millennium Pacific Group Holdings Ltd,11
3323.HK,13894,China National Building Material Co Ltd,11
0857.HK,8569,PetroChina Co Ltd Class H,11
0728.HK,32501,China Telecom,11
0386.HK,8563,China Petroleum & Chemical Corp Class H,11
0555.HK,100036,REXLot Holdings Ltd,11
3800.HK,50021,GCL-Poly Energy Holdings Ltd,11
1177.HK,49999,Sino Biopharmaceutical Ltd,11
1165.HK,943477,Shunfeng International Clean Energy Ltd,11
0883.HK,8570,CNOOC Ltd,11
0175.HK,49968,Geely Automobile Holdings Ltd,11
2380.HK,100134,China Power International Development Ltd,11
0998.HK,49993,China Citic Bank Corp Ltd,11
1339.HK,50004,People’s Insurance Group of China Co Ltd,11
0992.HK,32500,Lenovo Group,11
2799.HK,969087,China Huarong Asset Management Co Ltd,11
1060.HK,946383,Alibaba Pictures Group Ltd,11
2007.HK,50008,Country Garden Holdings Company Ltd,11
1313.HK,50001,China Resources Cement Holdings Ltd,11
1363.HK,943488,CT Environmental Group Ltd,11
0323.HK,100024,Maanshan Iron & Steel Co Ltd,11
1093.HK,100083,CSPC Pharmaceutical Group Ltd,11
1076.HK,946362,Imperial Pacific International Holdings Ltd,11
1317.HK,987126,China Maple Leaf Educational Systems Ltd,11
0033.HK,990032,Asia Investment Finance Group Ltd,11
1380.HK,987134,China Kingstone Mining Holdings Ltd,11
8179.HK,943583,Food Idea Holdings Ltd,11
2008.HK,100121,Phoenix Media Investment Holdings Ltd,11
8228.HK,943593,National Arts Entertainment and Culture Group Ltd,11
1041.HK,986311,Lamtex Holdings Ltd,11
3998.HK,50075,Bosideng International Holdings Ltd,11
0136.HK,961682,HengTen Networks Group Ltd,11
0288.HK,943436,WH Group Ltd,11
1359.HK,943487,China Cinda Asset Management Co Ltd,11
0493.HK,13877,GOME,11
0904.HK,942339,China Green Holdings Ltd,11
1966.HK,943511,China SCE Property Holdings Ltd,11
0817.HK,49987,China Jinmao Holdings Group Ltd,11
0273.HK,969056,Mason Financial Holdings Ltd,11
0996.HK,943470,Carnival Group International Holdings Ltd,11
0868.HK,49989,Xinyi Glass Holdings Ltd,11
0241.HK,946376,Alibaba Health Information Technology Ltd,11
1114.HK,49997,Brilliance China Automotive Holdings Ltd,11
0914.HK,32497,Anhui Conch Cement,11
1918.HK,100117,Sunac China Holdings Ltd,11
0338.HK,100025,Sinopec Shanghai Petrochemical Co Ltd Class H,11
3339.HK,50071,Lonking Holdings Ltd,11
0228.HK,990161,China Energy Development Holdings Ltd,11
0902.HK,32486,Huaneng Power International,11
2318.HK,8579,Ping An Insurance,11
0347.HK,13872,Angang Steel,11
0981.HK,50051,Semiconductor Manufacturing International Corp,11
1299.HK,32502,AIA Group Ltd,11
0729.HK,100047,FDG Electric Vehicles Ltd,11
0884.HK,100063,CIFI Holdings Group Co Ltd,11
0607.HK,959034,Fullshare Holdings Ltd,11
6837.HK,50026,Haitong Securities Co Ltd,11
0419.HK,959033,Huayi Tencent Entertainment Co Ltd,11
2628.HK,8581,China Life Insurance Co Ltd,11
0762.HK,8568,China Unicom Hong Kong Ltd,11
1063.HK,959042,Suncorp Technologies Ltd,11
6881.HK,943537,China Galaxy Securities Co Ltd,11
8109.HK,985727,Kirin Group Holdings Ltd,11
2333.HK,50012,Great Wall Motor Co Ltd,11
0535.HK,943446,Gemdale Properties and Investment Corp Ltd,11
0688.HK,8567,China Overseas,11
1999.HK,100119,Man Wah Holdings Ltd,11
6030.HK,50024,CITIC Securities Co Ltd,11
0570.HK,943448,China Traditional Chinese Medicine Co Ltd,11
0494.HK,8565,Li & Fung,11
0787.HK,943461,Global Brands Group Holding Ltd,11
1088.HK,101040,China Shenhua Energy Co Ltd H,11
2899.HK,13893,Zijin Mining Group Co Ltd-H,11
0188.HK,990135,Sunwah Kingsway Capital Holdings Ltd,11
1055.HK,100079,China Southern Airlines Co Ltd,11
3333.HK,50017,Evergrande Real Estate Group Ltd,11
3337.HK,943528,Anton Oilfield Services Group,11
1030.HK,100076,Future Land Development Holdings Ltd,11
0030.HK,990029,Ban Loong Holdings Ltd,11
0371.HK,100027,Beijing Enterprises Water Group Ltd,11
0670.HK,50041,China Eastern Airlines Corp Ltd,11
0700.HK,102047,Tencent Holdings Ltd,11
3328.HK,8582,Bank of Communications Co Ltd,11
3311.HK,50070,China State Construction International Holdings Ltd,11
2600.HK,9216,Aluminum Corp of China Ltd,11
0128.HK,990101,ENM Holdings Ltd,11
0751.HK,50043,Skyworth Digital Holdings Ltd,11
2238.HK,50010,Guangzhou Automobile Group Co Ltd,11
0439.HK,946393,Kuangchi Science Ltd,11
2328.HK,13889,PICC Property & Casualty-H,11
0390.HK,13875,China Railway,11
0274.HK,990191,China Billion Resources Ltd,11
2331.HK,50066,Li Ning Co Ltd,11
0968.HK,943468,Xinyi Solar Holdings Ltd,11
1378.HK,943491,China Hongqiao Group Ltd,11
1816.HK,946400,CGN Power Co Ltd,11
0123.HK,49966,Yuexiu Property Co Ltd,11
1071.HK,943473,Huadian Power International Corp Ltd,11
0151.HK,32490,Want Want China,11
0166.HK,990123,New Times Energy Corporation Ltd,11
0552.HK,100035,China Communications Services Corp Ltd,11
8272.HK,951573,Chinese Food and Beverage Group Ltd,11
2009.HK,100122,BBMG Corp,11
2186.HK,943514,Luye Pharma Group Ltd,11
0753.HK,49985,Air China Ltd,11
1766.HK,50057,CRRC Corp Ltd,11
0268.HK,100019,Kingdee International Software Group Co Ltd,11
0260.HK,990183,Avic Joy Holdings HK Ltd,11
2689.HK,13890,Nine Dragons Paper Holdings,11
0451.HK,946382,GCL New Energy Holdings Ltd,11
2338.HK,50013,Weichai Power Co Ltd,11
3993.HK,100147,China Molybdenum Luoyang Co Ltd,11
0836.HK,9215,China Resources Power Holding,11
1066.HK,49994,Shandong Weigao Group Medical Polymer Co Ltd,11
0008.HK,8547,PCCW,11
0941.HK,8573,China Mobile Ltd,11
2018.HK,50009,AAC Technologies Holdings Inc,11
3968.HK,32495,China Merchants Bank,11
8083.HK,943563,China Innovationpay Group Ltd,11
0368.HK,943439,Sinotrans Shipping Ltd,11
1788.HK,100108,Guotai Junan International Holdings Ltd,11
2357.HK,100132,AviChina Industry & Technology Co Ltd,11
2866.HK,13892,Cosco Shipping Development Co Ltd,11
2777.HK,13891,Guangzhou R&F Properties-H,11
1128.HK,100089,Wynn Macau Ltd,11
0665.HK,943454,Haitong International Securities Group Ltd,11
0005.HK,8545,HSBC Holdings PLC,11
1109.HK,32494,China Resources Land Ltd,11
1186.HK,13883,China Railway Construction-H,11
2342.HK,100129,Comba Telecom Systems Holdings Ltd,11
0017.HK,8552,New World Dev,11
1988.HK,32493,China Minsheng Banking,11
0916.HK,49990,China Longyuan Power Group Corp Ltd,11
8137.HK,50076,Honbridge Holdings Ltd,11
0966.HK,49992,China Taiping Insurance Holdings Co Ltd,11
8132.HK,943573,China Oil Gangran Energy Group Holdings Ltd,11
2601.HK,32492,China Pacific Insurance,11
0813.HK,49986,Shimao Property Holdings Ltd,11
0135.HK,38047,Kunlun Energy,11
1302.HK,946390,LifeTech Scientific Corp,11
2005.HK,100120,SSY Group Ltd,11
6886.HK,959057,Huatai Securities Co Ltd,11
2985.HK,990195,Freeman FinTech Corporation Ltd,11
2038.HK,8578,FIH Mobile Ltd,11
1171.HK,32496,Yanzhou Coal Mining,11
0372.HK,990245,PT International Development Corporation Ltd,11
0586.HK,943822,China Conch Venture Holdings Ltd,11
3377.HK,50019,Sino-Ocean Group Holding Ltd,11
3888.HK,100143,Kingsoft Corp Ltd,11
0270.HK,49970,Guangdong Investment Ltd,11
0521.HK,985900,CWT International Ltd,11
2382.HK,943521,Sunny Optical Technology Group Co Ltd,11
8078.HK,962388,HMV Digital China Group Ltd,11
1659.HK,943596,Haitian Energy International Ltd,11
1101.HK,100085,China Huarong Energy Co Ltd,11
0257.HK,13871,China Everbright International Ltd,11
0697.HK,100044,Shougang Concord International Enterprises Co Ltd,11
1336.HK,50003,New China Life Insurance,11
1293.HK,100099,Grand Baoxin Auto Group Ltd,11
0027.HK,49962,Galaxy Entertainment Group Ltd,11
8090.HK,943566,China Assurance Finance Group Ltd,11
0433.HK,100028,North Mining Shares Co Ltd,11
8057.HK,985724,Madison Holdings Group Ltd,11
0809.HK,100055,Global Bio-chem Technology Group Co Ltd,11
6878.HK,969099,Differ Group Holding Co Ltd,11
0880.HK,100061,SJM Holdings Ltd,11
0991.HK,13880,Datang Intl Power Gen Co-H,11
1898.HK,32498,China Coal Energy,11
1813.HK,50059,KWG Property Holding Ltd,11
2388.HK,8580,BOC Hong Kong,11
2326.HK,987130,BEP International Holdings Ltd,11
2869.HK,985911,Greentown Service Group Co Ltd,11
0285.HK,100021,BYD Electronic International Co Ltd,11
6823.HK,102050,HKT Trust,11
8156.HK,945137,China Vanguard You Champion Holdings Ltd,11
1958.HK,946396,BAIC Motor Corp Ltd,11
1638.HK,100103,Kaisa Group Holdings Ltd,11
0076.HK,990063,South Sea Petroleum Holdings Ltd,11
3618.HK,100142,Chongqing Rural Commercial Bank Co Ltd,11
1347.HK,946385,Hua Hong Semiconductor Ltd,11
0732.HK,100048,Truly International Holdings Ltd,11
0354.HK,959032,ChinaSoft International Ltd,11
1393.HK,50056,Hidili Industry International Development Ltd,11
2202.HK,943516,China Vanke Co Ltd,11
0958.HK,943466,Huaneng Renewables Corp Ltd,11
0291.HK,8560,China Resources Beer Holdings Co Ltd,11
0867.HK,100060,China Medical System Holdings Ltd,11
8088.HK,948366,AID Partners Technology Holdings Ltd,11
0016.HK,8551,Sun Hung Kai Properties Ltd,11
0083.HK,8556,Sino Land,11
2233.HK,100126,West China Cement Ltd,11
0024.HK,990024,Burwill Holdings Ltd,11
1051.HK,100077,G-Resources Group Ltd,11
3908.HK,961686,China International Capital Corp Ltd,11
0698.HK,946388,Tongda Group Holdings Ltd,11
0100.HK,990080,Clear Media Ltd,11
0081.HK,100005,China Overseas Grand Oceans Group Ltd,11
1668.HK,100104,China South City Holdings Ltd,11
1628.HK,943503,Yuzhou Properties Co Ltd,11
0144.HK,8558,China Merchants Port Holdings Co Ltd,11
0240.HK,990171,Build King Holdings Ltd,11
0232.HK,969053,AVIC International Holding HK Ltd,11
0286.HK,990199,Common Splendor International Health Industry Group Ltd,11
2883.HK,50015,China Oilfield Services Ltd,11
3808.HK,50073,Sinotruk Hong Kong Ltd,11
0003.HK,8543,HK & China Gas,11
0845.HK,50047,Glorious Property Holdings Ltd,11
0775.HK,943459,CK Life Sciences Intl Holdings Inc,11
0261.HK,990184,CCT Land Holdings Ltd,11
3799.HK,969093,Dali Foods Group Co Ltd,11
3383.HK,50020,Agile Group Holdings Ltd,11
6818.HK,943535,China Everbright Bank Co Ltd,11
1776.HK,949918,GF Securities Co Ltd,11
0267.HK,8559,Citic Pacific,11
3883.HK,969096,China Aoyuan Property Group Ltd,11
0193.HK,990137,Capital Estate Ltd,11
0887.HK,100065,Emperor Watch & Jewellery Ltd,11
8385.HK,985729,Prosperous Printing Co Ltd,11
0001.HK,8541,CK Hutchison Holdings Ltd,11
3900.HK,50023,Greentown China Holdings Ltd,11
0960.HK,49991,Longfor Properties Co Ltd,11
0686.HK,959035,Panda Green Energy Group Ltd,11
1919.HK,13887,COSCO Shipping Holdings Co Ltd Class H,11
0489.HK,13876,Dongfeng Group,11
3818.HK,50022,China Dongxiang Group Co Ltd,11
0119.HK,49965,Poly Property Group Co Ltd,11
1029.HK,100075,IRC Ltd,11
1208.HK,100093,MMG Ltd,11
2128.HK,50062,China Lesso Group Holdings Ltd,11
0189.HK,100012,Dongyue Group Ltd,11
3813.HK,969094,Pou Sheng International Holdings Ltd,11
0139.HK,949913,Ch Soft Power,11
1530.HK,959048,3SBio Inc,11
2607.HK,100135,Shanghai Pharmaceuticals Holding Co Ltd,11
1685.HK,943508,Boer Power Holdings Ltd,11
0829.HK,50046,Shenguan Holdings Group Ltd,11
0308.HK,100022,China Travel International Investment Hong Kong Ltd,11
2282.HK,100127,MGM China Holdings Ltd,11
0177.HK,100010,Jiangsu Expressway Co Ltd,11
2020.HK,100123,ANTA Sports Products Ltd,11
1460.HK,961687,ICO Group Ltd,11
0547.HK,969062,Digital Domain Holdings Ltd,11
0576.HK,50036,Zhejiang Expressway Co Ltd,11
2343.HK,100130,Pacific Basin Shipping Ltd,11
0220.HK,49969,Uni-President China Holdings Ltd,11
0297.HK,49973,Sinofert Holdings Ltd,11
0384.HK,13874,China Gas Hold,11
0460.HK,50034,Sihuan Pharmaceutical Holdings Group Ltd,11
0353.HK,990231,Energy International Investments Holdings Ltd,11
2196.HK,943515,Shanghai Fosun Pharmaceutical Group Co Ltd,11
8373.HK,961979,Indigo Star Holdings Ltd,11
0358.HK,13873,Jiangxi Copper,11
0853.HK,100059,MicroPort Scientific Corp,11
1777.HK,100107,Fantasia Holdings Group Co Ltd,11
0149.HK,949919,China Agri Products Exchange Ltd,11
0200.HK,100015,Melco International Development Ltd,11
0716.HK,100046,Singamas Container Holdings Ltd,11
1387.HK,50005,Renhe Commercial Holdings Co Ltd,11
1928.HK,38075,Sands China Ltd,11
3983.HK,100146,China BlueChemical Ltd,11
0563.HK,100037,Shanghai Industrial Urban Development Group Ltd,11
0656.HK,49983,Fosun International Ltd,11
2329.HK,946392,Guorui Properties Ltd,11
0934.HK,100071,Sinopec Kantons Holdings Ltd,11
2314.HK,50065,Lee & Man Paper Manufacturing Ltd,11
2727.HK,50067,Shanghai Electric Group Co Ltd,11
0575.HK,985827,Regent Pacific Group Ltd,11
0342.HK,943438,Newocean Energy Holdings Ltd,11
1622.HK,943501,Redco Properties Group Ltd,11
0699.HK,943456,CAR Inc,11
0272.HK,49971,Shui On Land Ltd,11
1113.HK,954932,CK Asset Holdings Ltd,11
0256.HK,969055,Citychamp Watch & Jewellery Group Ltd,11
2768.HK,987132,Jiayuan International Group Ltd,11
0101.HK,8557,Hang Lung Ppt,11
0631.HK,50038,Sany Heavy Equipment International Holdings Co Ltd,11
0715.HK,943457,China Oceanwide Holdings Ltd,11
0680.HK,969064,Nan Hai Corporation Ltd,11
0806.HK,100054,Value Partners Group Ltd,11
0031.HK,990030,China Aerospace International Holdings Ltd,11
1169.HK,49998,Haier Electronics Group Co Ltd,11
0604.HK,100041,Shenzhen Investment Ltd,11
0726.HK,969067,China Minsheng Drawin Technology Group Ltd,11
1315.HK,987125,Vision Fame International Holding Ltd,11
0874.HK,945136,Guangzhou Baiyunshan Pharma,11
0985.HK,100072,CST Group Ltd,11
0346.HK,100026,Yanchang Petroleum International Ltd,11
0243.HK,990172,QPL International Holdings Ltd,11
1728.HK,100105,China ZhengTong Auto Services Holdings Ltd,11
0095.HK,942338,LVGEM China Real Estate Investment Co Ltd,11
0012.HK,8549,Henderson Land,11
1117.HK,100088,China Modern Dairy Holdings Ltd,11
0142.HK,50028,First Pacific Co Ltd,11
0178.HK,100011,Sa Sa International Holdings Ltd,11
2098.HK,100125,Zall Group Ltd,11
0855.HK,959036,China Water Affairs Group Ltd,11
0065.HK,990057,Grand Ocean Advanced Resources Co Ltd,11
1618.HK,100102,Metallurgical Corporation of China Ltd,11
0410.HK,49979,Soho China Ltd,11
0380.HK,990252,Softpower Intl Ltd,11
1138.HK,13882,COSCO Shipping Energy Transportation Co Ltd,11
8202.HK,943588,Inno-Tech Holdings Ltd,11
0388.HK,8564,Hong Kong Exchange and Clearing Ltd,11
1818.HK,100109,Zhaojin Mining Industry Co Ltd,11
0802.HK,28426,China e-Wallet Payment Group Ltd,11
3389.HK,50072,Hengdeli Holdings Ltd,11
0167.HK,990124,IDT International Ltd,11
1099.HK,49996,Sinopharm Group Co Ltd,11
1661.HK,943504,Wisdom Sports Group,11
0860.HK,949915,O Luxe Holdings Ltd,11
8167.HK,943579,Neo Telemedia Ltd,11
8085.HK,943564,Hong Kong Life Sciences and Technologies Group Ltd,11
0207.HK,959029,Joy City Property Ltd,11
0082.HK,943428,V1 Group Ltd,11
1068.HK,49995,China Yurun Food Group Ltd,11
0818.HK,943463,Hi Sun Technology China Ltd,11
0004.HK,8544,Wharf Holdings,11
2014.HK,943512,Ozner Water International Holding Ltd,11
0799.HK,943538,IGG Inc,11
0235.HK,990166,China Strategic Holdings Ltd,11
1888.HK,50060,Kingboard Laminates Holdings Ltd,11
6808.HK,50025,Sun Art Retail Group Ltd,11
1448.HK,943496,Fu Shou Yuan International Group Ltd,11
1224.HK,100095,C C Land Holdings Ltd,11
2389.HK,969084,Beijing Enterprises Medical and Health Industry Group Ltd,11
0606.HK,49981,China Agri-Industries Holdings Ltd,11
0694.HK,100043,Beijing Capital International Airport Co Ltd,11
3380.HK,943529,Logan Property Holdings Co Ltd,11
0378.HK,969057,FDG Kinetic Ltd,11
3958.HK,985912,Orient Securities Co Ltd H,11
0769.HK,100053,China Rare Earth Holdings Ltd,11
1333.HK,50002,China Zhongwang Holdings Ltd,11
6178.HK,986314,Everbright Securities Co Ltd,11
0823.HK,49988,Link Reit,11
0002.HK,8542,CLP Holdings,11
0120.HK,990094,Cosmopolitan International Holdings Ltd,11
0598.HK,943452,Sinotrans Ltd,11
3969.HK,961978,China Railway Signal & Communication Corp Ltd,11
0950.HK,946373,Lee’s Pharmaceutical Holdings Ltd,11
0336.HK,49976,Huabao International Holdings Ltd,11
1212.HK,100094,Lifestyle International Holdings Ltd,11
1579.HK,985905,Yihai International Holding Ltd,11
0303.HK,50031,VTech Holdings Ltd,11
0582.HK,943450,Landing International Development Ltd,11
0202.HK,990142,Everchina International Holdings Co Ltd,11
1157.HK,32491,Zoomlion Heavy Industry,11
0351.HK,990229,Asia Energy Logistics Group Ltd,11
0376.HK,990249,Reorient Group Ltd,11
1508.HK,969078,China Reinsurance Group Corp,11
2666.HK,969085,Universal Medical Financial & Technical Advisory Services Co Ltd,11
2208.HK,943517,Xinjiang Goldwind Science & Technology Co Ltd,11
1495.HK,960737,Jiyi Household International Holdings Ltd,11
0011.HK,8548,Hang Seng Bank,11
0551.HK,8566,Yue Yuen Ind,11
2688.HK,50014,ENN Energy Holdings Ltd,11
0669.HK,50040,Techtronic Industries Co Ltd,11
0906.HK,100069,CPMC Holdings Ltd,11
1997.HK,100118,Wharf Real Estate Investment Co Ltd,11
0171.HK,990126,Silver Grant International Industries Ltd,11
0327.HK,946387,PAX Global Technology Ltd,11
0148.HK,32483,Kingboard Chem,11
0322.HK,32484,Tingyi,11
6196.HK,969098,Bank of Zhengzhou Co Ltd,11
1375.HK,943490,Central China Securities Holdings Co Ltd,11
0196.HK,100014,Honghua Group Ltd,11
1361.HK,50054,361 Degrees International Ltd,11
2039.HK,100124,China International Marine Containers Group Co Ltd,11
0195.HK,990138,Greentech Technology International Ltd,11
1929.HK,50007,Chow Tai Fook Jewellery Group Ltd,11
2313.HK,50011,Shenzhou International Group Holdings Ltd,11
1044.HK,13830,Hengan Intl Group Ltd-H,11
0639.HK,49982,Shougang Fushan Resources Group Ltd,11
0337.HK,943437,Greenland Hong Kong Holdings Ltd,11
2669.HK,969086,China Overseas Property Holdings Ltd,11
1004.HK,946368,China Smarter Energy Group Holdings Ltd,11
0163.HK,100008,Emperor International Holdings Ltd,11
0708.HK,969065,Evergrande Health Industry Group Ltd,11
0881.HK,50049,Zhongsheng Group Holdings Ltd,11
8158.HK,943577,China Regenerative Medicine International Ltd,11
1368.HK,50055,Xtep International Holdings Ltd,11
1432.HK,943495,China Shengmu Organic Milk Ltd,11
0405.HK,943441,Yuexiu Reit,11
2386.HK,943523,SINOPEC Engineering Group Co Ltd,11
1086.HK,987121,Goodbaby International Holdings Ltd,11
1883.HK,100113,CITIC Telecom International Holdings Ltd,11
3898.HK,100144,Zhuzhou CRRC Times Electric Co Ltd,11
0808.HK,102052,Prosperity REIT,11
3360.HK,100140,Far East Horizon Ltd,11
3301.HK,987135,Ronshine China Holdings Co Ltd,11
0330.HK,8562,Esprit Holdings,11
1316.HK,959045,Nexteer Automotive Group Ltd,11
0143.HK,990109,Guoan International Ltd,11
0326.HK,990218,China Star Entertainment Ltd,11
1199.HK,8576,COSCO Pacific Ltd,11
1461.HK,969076,Luzheng Futures Co Ltd,11
8300.HK,986263,Royal Catering Group Holdings Co Ltd,11
1539.HK,962389,Synergy Group Holdings International Ltd,11
0683.HK,49984,Kerry Properties Ltd,11
0215.HK,100017,Hutchison Telecommunications Hong Kong Holdings Ltd,11
0223.HK,990156,Elife Holdings Ltd,11
1382.HK,100100,Pacific Textiles Holdings Ltd,11
1736.HK,989626,China Parenting Network Holdings Ltd,11
3933.HK,50074,United Laboratories International Holdings Ltd,11
1033.HK,959041,Sinopec Oilfield Service Corp,11
1193.HK,50000,China Resources Gas Group Ltd,11
2778.HK,50068,Champion Reit,11
0182.HK,946386,Concord New Energy Group Ltd,11
3996.HK,969097,China Energy Engineering Corp Ltd,11
1143.HK,976483,China Healthcare Enterprise Group Ltd,11
0091.HK,990072,International Standard Resources Holdings Ltd,11
1240.HK,941679,CNQC International Holdings Ltd,11
0696.HK,943455,TravelSky Technology Ltd,11
2006.HK,987128,Shanghai Jin Jiang International Hotels Group Co Ltd,11
3899.HK,100145,CIMC Enric Holdings Ltd,11
0383.HK,990254,China Medical & HealthCare Group Ltd,11
0006.HK,8546,Power Assets,11
0066.HK,8555,MTR Corp Ltd,11
1194.HK,100092,Munsun Capital Group Ltd,11
0086.HK,943429,Sun Hung Kai & Co Ltd,11
1233.HK,943480,Times Property Holdings Ltd,11
0019.HK,8553,Swire Pacific A,11
8001.HK,948364,Orient Securities International Holdings Ltd,11
0205.HK,990144,SEEC Media Group Ltd,11
0275.HK,990192,Master Glory Group Ltd,11
87001.HK,943606,Hui Xian Reit,11
1885.HK,948367,China Wood Optimization Holding Ltd,11
0345.HK,987116,Vitasoy International Holdings Ltd,11
0210.HK,50030,Daphne International Holdings Ltd,11
6866.HK,959056,Zuoli Kechuang Micro-finance Co Ltd,11
0321.HK,50032,Texwinca Holdings Ltd,11
3382.HK,100141,Tianjin Port Development Holdings Ltd,11
1083.HK,100082,Towngas China Co Ltd,11
1371.HK,946375,China LotSynergy Holdings Ltd,11
0293.HK,8561,Cathay Pacific Airways Limited,11
0179.HK,50029,Johnson Electric Holdings Ltd,11
1980.HK,946366,Tian Ge Interactive Holdings Ltd,11
1600.HK,943499,China Tian Lun Gas Holdings Ltd,11
2638.HK,978756,HK Electric Investments Ltd,11
0242.HK,100018,Shun Tak Holdings Ltd,11
0819.HK,100056,Tianneng Power International Ltd,11
0522.HK,100031,ASM Pacific Technology Ltd,11
1251.HK,943481,SPT Energy Group Inc,11
0010.HK,969051,Hang Lung Group Ltd,11
1205.HK,50052,CITIC Resources Holdings Ltd,11
0903.HK,100068,TPV Technology Ltd,11
0153.HK,990113,China Saite Group Co Ltd,11
1881.HK,102049,Regal REIT,11
0165.HK,49967,China Everbright Ltd,11
3836.HK,943532,China Harmony New Energy Auto Holding Ltd,11
0315.HK,100023,SmarTone Telecommunications Holdings Ltd,11
2255.HK,943519,Haichang Holdings Ltd,11
0211.HK,990147,Styland Holdings Ltd,11
0102.HK,943431,Summit Ascent Holdings Ltd,11
0709.HK,100045,Giordano International Ltd,11
0525.HK,100032,Guangshen Railway Co Ltd,11
0392.HK,49978,Beijing Enterprises Holdings Ltd,11
1314.HK,943484,Tsui Wah Holdings Ltd,11
0682.HK,945139,Chaoda Modern Agriculture Holdings Ltd,11
1899.HK,100116,Xingda International Holdings Ltd,11
0107.HK,943432,Sichuan Expressway Co Ltd,11
0069.HK,49964,Shangri-La Asia Ltd,11
1515.HK,943498,China Resources Phoenix Healthcare Holdings Co Ltd,11
1681.HK,943507,Consun Pharmaceutical Group Ltd,11
0085.HK,959026,China Electronics Corporation Holdings Co Ltd,11
0816.HK,943462,Huadian Fuxin Energy Corp Ltd,11
0885.HK,987119,Rentian Technology Hldg Ltd,11
1038.HK,8574,CK Infrastructure Holdings Ltd,11
1112.HK,100086,Health and Happiness (H&H) International Holdings Ltd,11
0520.HK,946381,Xiabuxiabu Catering Management China Holdings Co Ltd,11
2588.HK,987131,Boc Aviation Ltd,11
8279.HK,943601,AGTech Holdings Ltd,11
0778.HK,102053,Fortune Real Estate Investment Trust,11
8220.HK,943592,Bingo Group Holdings Ltd,11
0087.HK,943430,Swire Pacific Ltd,11
1282.HK,969072,China Goldjoy Group Ltd,11
1623.HK,943502,Hilong Holding Ltd,11
0152.HK,100007,Shenzhen International Holdings Ltd,11
0691.HK,50042,China Shanshui Cement Group Ltd,11
2868.HK,969088,Beijing Capital Land Ltd,11
1559.HK,986312,Kwan On Holdings Ltd,11
0306.HK,990209,Kwoon Chung Bus Holdings Ltd,11
0777.HK,943460,NetDragon Websoft Inc,11
0659.HK,100042,NWS Holdings Ltd,11
0145.HK,990110,Hong Kong Building and Loan Agency Ltd,11
2280.HK,946394,HC International Inc,11
1666.HK,943505,Tong Ren Tang Technologies Co Ltd,11
1308.HK,943483,SITC International Holdings Co Ltd,11
1070.HK,100080,TCL Multimedia Technology Holdings Ltd,11
0045.HK,990041,Hongkong and Shanghai Hotels Ltd,11
1555.HK,100101,MIE Holdings Corp,11
1972.HK,32487,Swire Properties Close Only,11
1312.HK,987124,Tongfang Kontafarma Holdings Ltd,11
8198.HK,943587,Loto Interactive Ltd,11
1310.HK,959044,HKBN Ltd,11
1963.HK,943510,Bank of Chongqing Co Ltd,11
8153.HK,948368,Code Agriculture Holdings Ltd,11
0168.HK,32499,Tsingtao Brew,11
1052.HK,100078,Yuexiu Transport Infrastructure Ltd,11
1778.HK,946364,Colour Life Services Group Co Ltd,11
8056.HK,948365,Differ Group Holding Co Ltd,11
3600.HK,969089,Modern Dental Group Ltd,11
1528.HK,959047,Red Star Macalline Group Corp Ltd,11
1196.HK,987122,Realord Group Holdings Ltd,11
3613.HK,943574,Beijing Tong Ren Tang Chinese Medicine Co Ltd,11
0925.HK,946367,Beijing Properties Holdings Ltd,11
0636.HK,943453,Kerry Logistics Network Ltd,11
0363.HK,49977,Shanghai Industrial Holdings Ltd,11
0444.HK,969061,Sincere Watch Hong Kong Ltd,11
0269.HK,100020,China Resources and Transportation Group Ltd,11
0108.HK,990085,GR Properties Ltd,11
0724.HK,985901,Ruixin International Holdings Ltd,11
1381.HK,946370,Canvest Environmental Protection Group Co Ltd,11
0546.HK,100034,Fufeng Group Ltd,11
1636.HK,969081,China Metal Resources Utilization Ltd,11
1513.HK,943497,Livzon Pharmaceutical Group Inc,11
0218.HK,990152,Shenwan Hongyuan HK Ltd,11
1072.HK,100081,Dongfang Electric Corp Ltd,11
0658.HK,50039,China High Speed Transmission Equipment Group Co Ltd,11
0993.HK,959038,Huarong International Financial Holdings Ltd,11
3368.HK,50018,PARKSON Retail Group Ltd,11
0425.HK,50033,Minth Group Ltd,11
0343.HK,990228,Culturecom Holdings Ltd,11
0530.HK,943445,Goldin Financial Holdings Ltd,11
0043.HK,990039,C.P. Pokphand Co Ltd,11
0035.HK,946372,Far East Consortium International Ltd,11
0435.HK,943442,Sunlight Reit,11
0014.HK,49961,Hysan Development Co Ltd,11
0173.HK,100009,K Wah International Holdings Ltd,11
0548.HK,969063,Shenzhen Expressway Co Ltd,11
0362.HK,990238,China Zenith Chemical Group Ltd,11
0978.HK,943469,China Merchants Land Ltd,11
0999.HK,100073,I.T. Limited,11
3606.HK,949921,Fuyao Glass Industry Group,11
8280.HK,985832,China Digital Video Holdings Ltd,11
0161.HK,990120,AVIC International Holdings Ltd,11
0197.HK,990139,Heng Tai Consumables Group Ltd,11
1882.HK,100112,Haitian International Holdings Ltd,11
0951.HK,969068,Chaowei Power Holdings Ltd,11
2789.HK,100138,Yuanda China Holdings Ltd,11
3336.HK,943527,Ju Teng International Holdings Ltd,11
0579.HK,943449,Beijing Jingneng Clean Energy Co Ltd,11
1585.HK,987127,Yadea Group Holdings Ltd,11
8130.HK,985728,Zhi Cheng Holdings Ltd,11
1415.HK,949917,Cowell E Holdings Inc,11
8206.HK,943590,Shentong Robot Education Group Co Ltd,11
3893.HK,989483,CROSSTEC Group Holdings Ltd,11
2877.HK,50069,China Shineway Pharmaceutical Group Ltd,11
0499.HK,955896,Qingdao Holdings International Ltd,11
2222.HK,50064,NVC Lighting Holding Ltd,11
1829.HK,100111,China Machinery Engineering Corp,11
8232.HK,985914,Classified Group Holdings Ltd,11
0727.HK,987118,Crown International Corp Ltd,11
1238.HK,100098,Powerlong Real Estate Holdings Ltd,11
1428.HK,969074,Bright Smart Securities & Commodities Group Ltd,11
0506.HK,50035,China Foods Ltd,11
0245.HK,969054,China Minsheng Financial Holding Corp Ltd,11
0020.HK,100001,Wheelock and Co Ltd,11
8018.HK,943545,Finsoft Financial Investment Holdings Ltd,11
0331.HK,990221,Fse Engineering Holdings Ltd,11
0468.HK,943443,Greatview Aseptic Packaging Co Ltd,11
8395.HK,943591,Tree Holdings Ltd,11
0891.HK,100066,Trinity Ltd,11
0825.HK,50045,New World Department Store China Ltd,11
8071.HK,943558,China Netcom Technology Holdings Ltd,11
0848.HK,100058,Maoye International Holdings Ltd,11
0117.HK,990092,Tianli Holdings Group Ltd,11
1297.HK,969073,Sinosoft Technology Group Ltd,11
3678.HK,969090,Holly Futures Co Ltd,11
0743.HK,100051,Asia Cement China Holdings Corp,11
3396.HK,959054,Legend Holdings Corp,11
0259.HK,990182,Yeebo International Holdings Ltd,11
1200.HK,943478,Midland Holdings Ltd,11
0023.HK,8554,Bank Of E Asia,11
1396.HK,943492,Hydoo International Holding Ltd,11
1115.HK,100087,Tibet Water Resources Ltd,11
1848.HK,959050,China Aircraft Leasing Group Holdings Ltd,11
1913.HK,941680,Prada SpA,11
0737.HK,100050,Hopewell Highway Infrastructure Ltd,11
1345.HK,943485,China Pioneer Pharma Holdings Ltd,11
0400.HK,946401,Cogobuy Group,11
8250.HK,943595,Silk Road Energy Services Group Ltd,11
8186.HK,986002,Ir Resources Ltd,11
0064.HK,990056,Get Nice Holdings Ltd,11
1426.HK,943493,Spring Reit,11
6877.HK,943561,KVB Kunlun Financial Group Ltd,11
8400.HK,960740,Asia Pioneer Entertainment Holdings Ltd,11
2686.HK,959053,AAG Energy Holdings Ltd,11
0735.HK,100049,China Power Clean Energy Development Co Ltd,11
2211.HK,943518,Universal Health International Group Holding Ltd,11
1811.HK,946369,CGN New Energy Holdings Co Ltd,11
8046.HK,943550,Heng Xin China Holdings Ltd,11
0054.HK,49963,Hopewell Holdings Ltd,11
0298.HK,990205,Chuang’s China Investments Ltd,11
0832.HK,943464,Central China Real Estate Ltd,11
8047.HK,943551,China Ocean Fishing Holdings Ltd,11
1045.HK,943472,APT Satellite Holdings Ltd,11
0517.HK,100030,COSCO SHIPPING International HONG KONG Co Ltd,11
1028.HK,980210,C.banner International Holdings Ltd,11
2633.HK,989622,Jacobson Pharma Corporation Ltd,11
0227.HK,990160,First Shanghai Investments Ltd,11
0154.HK,990114,Beijing Enterprises Environment Group Ltd,11
0861.HK,50048,Digital China Holdings Ltd,11
1686.HK,943543,SUNeVision Holdings Ltd,11
0047.HK,990043,Hop Hing Group Holdings Ltd,11
0356.HK,990233,DT Capital Ltd,11
0097.HK,990077,Henderson Investment Ltd,11
1573.HK,985904,China Unienergy Group Ltd,11
0590.HK,100039,Luk Fook Holdings International Ltd,11
1188.HK,969070,Hybrid Kinetic Group Ltd,11
1828.HK,100110,Dah Chong Hong Holdings Ltd,11
0603.HK,100040,China Oil and Gas Group Ltd,11
0187.HK,990134,Beijing Jingcheng Machinery Electric Co Ltd,11
1023.HK,959039,Sitoy Group Holdings Ltd,11
0367.HK,990242,Chuang’s Consortium International Ltd,11
2199.HK,969083,Regina Miracle International Holdings Ltd,11
0007.HK,990018,Hoifu Energy Group Ltd,11
0162.HK,990121,Century Ginwa Retail Holdings Ltd,11
0176.HK,990129,Superactive Group Co Ltd,11
1234.HK,100097,China Lilang Ltd,11
8021.HK,954933,WLS Holdings Ltd,11
0295.HK,959030,Kong Sun Holdings Ltd,11
0021.HK,990022,Great China Properties Holdings Ltd,11
1680.HK,943506,Macau Legend Development Ltd,11
0271.HK,990190,Dan Form Holdings Co Ltd,11
2888.HK,960738,Standard Chartered PLC,11
0434.HK,102051,Boyaa Interactive International Ltd,11
6166.HK,959055,China VAST Industrial Urban Development Co Ltd,11
0121.HK,990095,CP Lotus Corp,11
0754.HK,50044,Hopson Development Holdings Ltd,11
0341.HK,959031,Cafe De Coral Holdings Ltd,11
0039.HK,990036,China Beidahuang Industry Group Holdings Ltd,11
0369.HK,990243,Wing Tai Properties Ltd,11
0127.HK,990100,Chinese Estates Holdings Ltd,11
0183.HK,949914,Winfull Group Holdings Ltd,11
0334.HK,990224,China Display Optoelectronics Technology Holdings Ltd,11
0194.HK,943434,Liu Chong Hing Investment Ltd,11
8271.HK,943600,Global Digital Creations Holdings Ltd,11
0305.HK,990208,Wuling Motors Holdings Ltd,11
1035.HK,948363,BBI Life Sciences Corp,11
0138.HK,990108,CCT Fortis Holdings Ltd,11
8009.HK,943544,Chinese Energy Holdings Ltd,11
8171.HK,969100,China Trends Holdings Ltd,11
0112.HK,990088,LT Commercial Real Estate Ltd,11
0116.HK,100006,Chow Sang Sang Holdings International Ltd,11
2678.HK,943524,Texhong Textile Group Ltd,11
0317.HK,946378,CSSC Offshore & Marine Engineering Group Co Ltd,11
0309.HK,990210,Xinhua News Media Holdings Ltd,11
0263.HK,990186,GT Group Holdings Ltd,11
8029.HK,943548,Sun International Group Ltd,11
8325.HK,943602,China Smartpay Group Holdings Ltd,11
0038.HK,990035,First Tractor Co Ltd,11
0156.HK,990115,Lippo China Resources Ltd,11
0311.HK,990212,Luen Thai Holdings Ltd,11
0976.HK,969069,Chiho-Tiande Group Ltd,11
0015.HK,990020,Vantage International Holdings Ltd,11
1358.HK,943486,PW Medtech Group Ltd,11
8128.HK,943571,China Ground Source Energy Industry Group Ltd,11
0110.HK,990086,China Fortune Holdings Ltd,11
0357.HK,990234,HNA Infrastructure Co Ltd,11
2236.HK,946365,Wison Engineering Services Co Ltd,11
0037.HK,990034,Far East Hotels and Entertainment Ltd,11
3308.HK,50016,Golden Eagle Retail Group Ltd,11
1733.HK,100106,E -Commodities Holdings Ltd,11
0886.HK,100064,Silver Base Group Holdings Ltd,11
1719.HK,989624,CIG Yangtze Ports PLC,11
0103.HK,990081,Shougang Concord Century Holdings Ltd,11
8123.HK,943570,Sinofortune Financial Holdings Ltd,11
1098.HK,100084,Road King Infrastructure Ltd,11
0028.HK,990027,Tian An China Investments Co Ltd,11
2880.HK,943525,Dalian Port PDA Co Ltd,11
0034.HK,100002,Kowloon Development Co Ltd,11
0199.HK,990140,ITC Properties Group Ltd,11
8086.HK,943565,DX.com Holdings Ltd,11
2111.HK,987129,Best Pacific International Holdings Ltd,11
0564.HK,943447,Zhengzhou Coal Mining Machinery Group Co Ltd,11
0230.HK,990163,Minmetals Land Ltd,11
2393.HK,959052,Yestar Healthcare Holdings Company,11
1431.HK,943494,YuanShengTai Dairy Farm Ltd,11
2383.HK,943522,TOM Group Ltd,11
0093.HK,990074,Termbray Industries International Holdings Ltd,11
0088.HK,990069,Tai Cheung Holdings Ltd,11
8032.HK,943549,Viva China Holdings Ltd,11
0391.HK,969058,Mei Ah Entertainment Group Ltd,11
1246.HK,985828,Boill Healthcare Holdings Ltd,11
0018.HK,990021,Oriental Press Group Ltd,11
0221.HK,990154,Easy One Financial Group Ltd,11
0250.HK,990176,Sino-I Technology Ltd,11
0290.HK,990202,China Fortune Financial Group Ltd,11
0313.HK,990214,Richly Field China Development Ltd,11
0365.HK,990240,Unisplendour Technology Ltd,11
0133.HK,990106,China Merchants China Direct Investments Ltd,11
1456.HK,969075,Guolian Securities Co Ltd,11
0036.HK,990033,Far East Holdings International Ltd,11
0124.HK,990097,Guangdong Land Holdings Ltd,11
3788.HK,969092,China Hanking Holdings Ltd,11
6136.HK,946363,Kangda International Environmental Co Ltd,11
0882.HK,100062,Tianjin Development Holdings Ltd,11
0511.HK,49980,Television Broadcasts Ltd,11
8172.HK,943580,Lajin Entertainment Network Group Ltd,11
1523.HK,985902,Plover Bay Technologies Ltd,11
0113.HK,990089,Dickson Concepts International Ltd,11
2356.HK,100131,Dah Sing Banking Group Ltd,11
2178.HK,943513,Petro-king Oilfield Services Ltd,11
8260.HK,962392,Yin He Holdings Ltd,11
8265.HK,962393,China Trustful Group Ltd,11
0009.HK,990019,Nine Express Ltd,11
0129.HK,990102,Asia Standard International Group Ltd,11
8246.HK,959063,Northern New Energy Hldg Ltd,11
0236.HK,990167,San Miguel Brewery Hong Kong Ltd,11
8030.HK,954934,Flying Financial Service Holdings Ltd,11
8229.HK,985913,Future Data Group Ltd,11
0115.HK,990091,Grand Field Group Holdings Ltd,11
0186.HK,990133,Nimble Holdings Co Ltd,11
0041.HK,50027,Great Eagle Holdings Ltd,11
3709.HK,969091,Koradior Holdings Ltd,11
8170.HK,989623,KSL Holdings Ltd,11
0746.HK,100052,Lee & Man Chemical Co Ltd,11
2031.HK,989482,AUSupreme International Holdings Ltd,11
0355.HK,990232,Century City International Holdings Ltd,11
0126.HK,990099,Carrianna Group Holdings Co Ltd,11
1046.HK,949916,Universe International Holdings Ltd,11
0538.HK,100033,Ajisen China Holdings Ltd,11
0185.HK,990132,ZH International Holdings Ltd,11
0262.HK,990185,Deson Development International Holdings Ltd,11
2298.HK,943520,Cosmo Lady China Holdings Co Ltd,11
0208.HK,100016,Polytec Asset Holdings Ltd,11
8059.HK,985725,Glory Flame Holdings Ltd,11
0072.HK,990061,Modern Media Holdings Ltd,11
0276.HK,49972,Mongolia Energy Corp Ltd,11
0052.HK,959025,Fairwood Holdings Ltd,11
1321.HK,959046,China New City Commercial Development Ltd,11
0440.HK,100029,Dah Sing Financial Holdings Ltd,11
0217.HK,969052,China Chengtong Development Group Ltd,11
2738.HK,976484,Huajin International Holdings Ltd,11
8251.HK,976485,APlus Group Holdings Ltd,11
8133.HK,985918,Jete Power Holdings Ltd,11
0299.HK,990206,New Sports Group Ltd,11
0051.HK,102048,Harbour Centre Development Ltd,11
1009.HK,943471,International Entertainment Corp,11
0251.HK,990177,S E A Holdings Ltd,11
1970.HK,969082,IMAX China Holding Inc,11
2348.HK,946379,Dawnrays Pharmaceutical Holdings Ltd,11
3393.HK,946389,Wasion Group Holdings Ltd,11
1148.HK,943476,Xinchen China Power Holdings Ltd,11
0296.HK,990204,Emperor Entertainment Hotel Ltd,11
0078.HK,990065,Regal Hotels International Holdings Ltd,11
0258.HK,990181,Tomson Group Ltd,11
3315.HK,943526,Goldpac Group Ltd,11
8003.HK,943539,Great World Company Holdings Ltd,11
1253.HK,969071,China Greenland Broad Greenstate Group Co Ltd,11
6138.HK,943534,Harbin Bank Co Ltd,11
1509.HK,969079,Harmonicare Medical Holdings Ltd,11
0255.HK,990180,Lung Kee Bermuda Holdings Ltd,11
0352.HK,990230,Fortune Sun China Holdings Ltd,11
3698.HK,943531,Huishang Bank Corp Ltd,11
1556.HK,961684,Chinney Kin Wing Holdings Ltd,11
0062.HK,990054,Transport International Holdings Ltd,11
0703.HK,948362,Future Bright Holdings Ltd,11
0180.HK,990130,Kader Holdings Co Ltd,11
0320.HK,990217,Computime Group Ltd,11
0442.HK,960736,Hifood Group Holdings Co Ltd,11
0084.HK,990068,STELUX Holdings International Ltd,11
1122.HK,941189,Qingling Motors Group Co Ltd,11
8375.HK,962395,Vertical International,11
0721.HK,969066,China Financial International Investments Ltd,11
0042.HK,990038,Northeast Electric Development Co Ltd,11
0070.HK,990059,Neptune Group Ltd,11
1207.HK,987123,Sre Group Ltd,11
2066.HK,946391,Shengjing Bank Co Ltd,11
0071.HK,990060,Miramar Hotel and Investment Co Ltd,11
0543.HK,946397,Pacific Online Ltd,11
8333.HK,985917,Astrum Financial Holdings Ltd,11
0239.HK,990170,Pak Fah Yeow International Ltd,11
0032.HK,990031,Cross-Harbour Holdings Ltd,11
1111.HK,943475,Chong Hing Bank Ltd,11
8192.HK,943585,Global Energy Resources International Group Ltd,11
0190.HK,100013,HKC Holdings Ltd,11
8006.HK,943541,Sino Splendid Holdings Ltd,11
8117.HK,943569,China Primary Energy Holdings Ltd,11
8150.HK,943576,Seamless Green China Holdings Ltd,11
8337.HK,948371,Directel Holdings Ltd,11
2016.HK,985144,China Zheshang Bank Co Ltd,11
8027.HK,986316,KPM Holding Ltd,11
0089.HK,990070,Tai Sang Land Development Ltd,11
0137.HK,990107,Jinhui Holdings Co Ltd,11
0379.HK,990251,China Ever Grand Financial Leasing Group Co Ltd,11
0044.HK,990040,Hong Kong Aircraft Engineering Co Ltd,11
2299.HK,100128,Billion Industrial Holdings Ltd,11
8019.HK,943546,Hao Wen Holdings Ltd,11
3331.HK,100139,Vinda International Holdings Ltd,11
0050.HK,990045,Hong Kong Ferry Holdings Co Ltd,11
0348.HK,946374,China Healthwise Holdings Ltd,11
0416.HK,969060,Bank of Jinzhou Co Ltd,11
0412.HK,987117,China Innovative Finance Group Ltd,11
0025.HK,990025,Chevalier International Holdings Ltd,11
0201.HK,990141,Magnificent Hotel Investments Ltd,11
0229.HK,990162,Raymond Industrial Ltd,11
1036.HK,100159,Vanke Property Overseas Ltd,11
0077.HK,990064,AMS Public Transport Holdings Ltd,11
0360.HK,990236,New Focus Auto Tech Holdings Ltd,11
0484.HK,943444,Forgame Holdings Ltd,11
3699.HK,946377,Everbright Grand China Assets Ltd,11
0057.HK,990049,Chen Hsong Holdings Ltd,11
0125.HK,990098,Sun Hing Vision Group Holdings Ltd,11
1700.HK,943509,Springland International Holdings Ltd,11
1180.HK,946384,Paradise Entertainment Ltd,11
2289.HK,985910,Chuangmei Pharmaceutical Co Ltd,11
1583.HK,985906,Qinqin Foodstuffs Group Cayman Co Ltd,11
4332.HK,30149,Amgen Inc,11
2133.HK,32489,China Polymetaliic Mining,11
0316.HK,49975,Orient Overseas International Ltd,11
0933.HK,50050,Brightoil Petroleum Holdings Ltd,11
1338.HK,50053,BaWang International Group Holding Ltd,11
0067.HK,100003,China Lumena New Materials Corp,11
0846.HK,100057,Mingfa Group International Co Ltd,11
0893.HK,100067,China Vanadium Titano-Magnetite Mining Co Ltd,11
1149.HK,100091,Anxin-China Holdings Ltd,11
1230.HK,100096,Yashili International Holdings Ltd,11
1886.HK,100114,China Huiyuan Juice Group Ltd,11
2369.HK,100133,Coolpad Group Ltd,11
2848.HK,942443,db x-trackers MSCI Korea TRN,11
8108.HK,942532,Grand Peace Group Holdings Ltd,11
0169.HK,943433,Wanda Hotel Development Co Ltd,11
0587.HK,943451,Hua Han Health Industry Holdings Ltd,11
0750.HK,943458,China Singyes Solar Technologies Holdings Ltd,11
0940.HK,943465,China Animal Healthcare Ltd,11
1219.HK,943479,Tenwow International Holdings Ltd,11
1275.HK,943482,New Cent Reit,11
1369.HK,943489,Wuzhou International Holdings Ltd,11
1619.HK,943500,Tianhe Chemicals Group Ltd,11
3639.HK,943530,Yida China Holdings Ltd,11
3903.HK,943533,Hanhua Financial Holding Co Ltd,11
6863.HK,943536,China Huishan Dairy Holdings Company Ltd,11
8005.HK,943540,Yuxing InfoTech Investment Holdings Ltd,11
8007.HK,943542,Global Strategic Group Ltd,11
8020.HK,943547,Unitas Holdings Ltd,11
8049.HK,943552,Jilin Province Huinan Changlong Bio-pharmacy Co Ltd,11
8050.HK,943553,Quantum Thinking Ltd,11
8055.HK,943554,China E-Learning Group Ltd,11
8066.HK,943556,Phoenitron Holdings Ltd,11
0436.HK,943557,New Universe International Group Ltd,11
8075.HK,943560,Media Asia Group Holdings Ltd,11
8081.HK,943562,Interactive Entertainment China Cultural Technology Investments Ltd,11
8100.HK,943567,GET Holdings Ltd,11
8116.HK,943568,China Fortune Investments Holding Ltd,11
8129.HK,943572,Cloud Investment Holdings Ltd,11
8143.HK,943575,Hua Xia Healthcare Holdings Ltd,11
8166.HK,943578,China Eco-Farming Ltd,11
8175.HK,943581,China Digital Culture Group Ltd,11
8178.HK,943582,China Information Technology Development Ltd,11
8193.HK,943586,GreaterChina Professional Services Ltd,11
8239.HK,943594,Capital Finance Holdings Ltd,11
8269.HK,943598,Wealth Glory Holdings Ltd,11
8270.HK,943599,China CBM Group Co Ltd,11
8351.HK,943603,Larry Jewelry International Co Ltd,11
8356.HK,943604,CNC Holdings Ltd,11
3886.HK,946371,Town Health International Medical Group Ltd,11
3823.HK,946380,Tech Pro Technology Development Ltd,11
1366.HK,946398,Jiangnan Group Ltd,11
0967.HK,946399,Sound Global Ltd,11
8201.HK,948369,PPS International Holdings Ltd,11
8311.HK,948370,Perfect Optronics Ltd,11
3313.HK,949920,Artgo Holdings Ltd,11
6880.HK,949923,Tempus Holdings Ltd,11
8079.HK,949924,Easy Repay Finance & Investment Ltd,11
8041.HK,954935,Luxey International Holdings Ltd,11
8095.HK,954936,Beijing Beida Jade Bird Universal Sci-Tech Co Ltd,11
3997.HK,954937,Telecom Service One Holdings Ltd,11
0109.HK,959027,Good Resources Holdings Ltd,11
1236.HK,959043,National Agricultural Holdings Ltd,11
1819.HK,959049,Fuguiniao Co Ltd,11
2200.HK,959051,Hosa International Ltd,11
8011.HK,959058,Polyard Petroleum International Group Ltd,11
8125.HK,959059,Kate China Holdings Ltd,11
8155.HK,959060,South China Assets Holdings Ltd,11
8189.HK,959061,Tianjin TEDA Biomedical Engineering Co Ltd,11
8237.HK,959062,Link Holdings Ltd,11
8326.HK,959065,Tonking New Energy Group Holdings Ltd,11
8182.HK,961688,China Candy Holdings Ltd,11
3638.HK,962387,Huabang Financial Holdings Ltd,11
8218.HK,962391,Echo International Holdings Group Ltd,11
8267.HK,962394,Linekong Interactive Group Co Ltd,11
0184.HK,962544,Keck Seng Investments Hong Kong Ltd,11
0404.HK,969059,Hsin Chong Group Holdings Ltd,11
1476.HK,969077,Hengtai Securities Co Ltd,11
1543.HK,969080,Guangdong Join-Share Guarantee Investment Co Ltd,11
3866.HK,969095,Bank of Qingdao Co Ltd,11
8215.HK,969101,First Credit Finance Group Ltd,11
8295.HK,969102,ZZ Capital International Ltd,11
1578.HK,985143,Bank of Tianjin Co Ltd,11
0804.HK,985726,Pinestone Capital Ltd,11
1869.HK,985831,LI Bao Ge Group Ltd,11
1560.HK,985903,Star Properties Group (Cayman Islands) Ltd,11
1586.HK,985907,China Leon Inspection Holding Ltd,11
1606.HK,985908,China Development Bank Financial Leasing Co Ltd,11
1612.HK,985909,Vincent Medical Holdings Ltd,11
8281.HK,985915,China Golden Classic Group Ltd,11
8328.HK,985916,Xinyi Automobile Glass Hong Kong Enterprises Ltd,11
1225.HK,986313,Lerado Financial Group Co Ltd,11
1019.HK,987120,Convoy Global Holdings Ltd,11
8310.HK,989625,Dafeng Port Heshun Technology Co Ltd,11
0022.HK,990023,Mexan Ltd,11
0026.HK,990026,China Motor Bus Co Ltd,11
0029.HK,990028,Dynamic Holdings Ltd,11
0040.HK,990037,Gold Peak Industries Holdings Ltd,11
0046.HK,990042,Computer and Technologies Holdings Ltd,11
0048.HK,990044,China Automotive Interior Decoration Holdings Ltd,11
0055.HK,990047,Neway Group Holdings Ltd,11
0056.HK,990048,Allied Properties HK Ltd,11
2983.HK,990051,Skyfame Realty Holdings Ltd,11
0060.HK,990052,Hong Kong Food Investment Holdings Ltd,11
0063.HK,990055,China Graphene Group Ltd,11
0068.HK,990058,Lee Hing Development Ltd,11
0075.HK,990062,YT Realty Group Ltd,11
0079.HK,990066,Century Legend Holdings Ltd,11
0080.HK,990067,China New Economy Fund Ltd,11
0090.HK,990071,Amber Energy Ltd,11
0094.HK,990075,Greenheart Group Ltd,11
0096.HK,990076,Yusei Holdings Ltd,11
0098.HK,990078,Xingfa Aluminium Holdings Ltd,11
0099.HK,990079,Wong’s International Holdings Ltd,11
0105.HK,990083,Associated International Hotels Ltd,11
0106.HK,990084,Landsea Green Group Co Ltd,11
0111.HK,990087,Cinda International Holdings Ltd,11
0114.HK,990090,Herald Holdings Ltd,11
0118.HK,990093,Cosmos Machinery Enterprises Ltd,11
0122.HK,990096,Crocodile Garments Ltd,11
0130.HK,990103,Moiselle International Holdings Ltd,11
0131.HK,990104,Cheuk Nang Holdings Ltd,11
0132.HK,990105,China Investments Holdings Ltd,11
0146.HK,990111,Tai Ping Carpets International Ltd,11
0147.HK,990112,International Business Settlement Holdings Ltd,11
0157.HK,990116,Natural Beauty Bio-Technology Ltd,11
0158.HK,990117,Melbourne Enterprises Ltd,11
0159.HK,990118,Brockman Mining Ltd,11
0160.HK,990119,Hon Kwok Land Investment Co Ltd,11
0172.HK,990127,Goldbond Group Holdings Ltd,11
0174.HK,990128,Gemini Investments Holdings Ltd,11
0181.HK,990131,Fujian Holdings Ltd,11
0191.HK,990136,Lai Sun Garment International Ltd,11
0204.HK,990143,China Investment Development Ltd,11
0206.HK,990145,TSC Group Holdings Ltd,11
0209.HK,990146,Winshine Science Co Ltd,11
0212.HK,990148,Nanyang Holdings Ltd,11
0213.HK,990149,National Electronics Holdings Ltd,11
0214.HK,990150,Asia Orient Holdings Ltd,11
0216.HK,990151,Chinney Investments Ltd,11
0219.HK,990153,Shun Ho Property Investments Ltd,11
0222.HK,990155,Min Xin Holdings Ltd,11
0224.HK,990157,Pioneer Global Group Ltd,11
0225.HK,990158,Pokfulam Development Co Ltd,11
0226.HK,990159,Lippo Ltd,11
0234.HK,990165,New Century Group Hong Kong Ltd,11
0237.HK,990168,Safety Godown Co Ltd,11
0238.HK,990169,Evergreen Intl Holdings Ltd,11
0244.HK,990173,Sincere Co Ltd,11
0247.HK,990174,Tsim Sha Tsui Properties Ltd,11
0248.HK,990175,HKC International Holdings Ltd,11
0252.HK,990178,Southeast Asia Properties & Finance Ltd,11
0253.HK,990179,Shun Ho Holdings Ltd,11
0264.HK,990187,Ascent International Holdings Ltd,11
0265.HK,990188,Orient Victory China Holdings Ltd,11
0266.HK,990189,Tian Teck Land Ltd,11
0277.HK,990193,Tern Properties Co Ltd,11
0278.HK,990194,Wah Ha Realty Co Ltd,11
0280.HK,990196,King Fook Holdings Ltd,11
0281.HK,990197,Rivera Holdings Ltd,11
0282.HK,990198,Next Digital Ltd,11
0287.HK,990200,Winfair Investment Co Ltd,11
0289.HK,990201,Wing On Co International Ltd,11
0294.HK,990203,Yangtzekiang Garment Ltd,11
0310.HK,990211,Prosperity Investment Holdings Ltd,11
0312.HK,990213,Shirble Department Store Holdings China Ltd,11
0318.HK,990215,Vongroup Ltd,11
0328.HK,990219,Alco Holdings Ltd,11
0329.HK,990220,OCI International Holdings Ltd,11
0332.HK,990222,Yuan Heng Gas Holdings Ltd,11
0333.HK,990223,Top Form International Ltd,11
0335.HK,990225,Upbest Group Ltd,11
0339.HK,990226,Earnest Investments Holdings Ltd,11
0359.HK,990235,China Haisheng Juice Holdings Co Ltd,11
0361.HK,990237,Sino Golf Holdings Ltd,11
0366.HK,990241,Luks Group Vietnam Holdings Co Ltd,11
2982.HK,990244,China Best Group Holding Ltd,11
0373.HK,990246,Allied Group Ltd,11
0374.HK,990247,Four Seas Mercantile Holdings Ltd,11
0375.HK,990248,YGM Trading Ltd,11
0377.HK,990250,Huajun Holdings Ltd,11
0381.HK,990253,Kiu Hung International Holdings Ltd,11
0385.HK,990255,Chinney Alliance Group Ltd,11
3033.HK,1165606,CSOP Hang Seng TECH Index ETF,11

#SS SHANGHAI
601319.SS,1152811,People's Insurance of China,34
600086.SS,100337,Eastern Gold Jade Co Ltd,34
600157.SS,102952,Wintime Energy Co Ltd,34
603501.SS,1009371,Will Semiconductor Co Ltd,34
603966.SS,996095,Eurocrane China Co Ltd,34
SSEC.SS,40820,Shanghai Composite,34
600000.SS,100276,Shanghai Pudong Development Bank Co Ltd,34
600004.SS,100277,Guangzhou Baiyun International Airport Co Ltd,34
600006.SS,100279,Dongfeng Automobile Co Ltd,34
600007.SS,100280,China World Trade Center Co Ltd,34
600008.SS,100281,Beijing Capital Co Ltd,34
600009.SS,100282,Shanghai International Airport Co Ltd,34
600010.SS,100283,Inner Mongolia BaoTou Steel Union Co Ltd,34
600011.SS,100284,Huaneng Power International Inc,34
600012.SS,100285,Anhui Expressway Co Ltd,34
600015.SS,100286,Hua Xia Bank Co Ltd,34
600016.SS,100287,China Minsheng Banking Corp Ltd,34
600018.SS,100289,Shanghai International Port Group Co Ltd,34
600019.SS,100290,Baoshan Iron &amp; Steel Co Ltd,34
600020.SS,100291,Henan Zhongyuan Expressway Co Ltd,34
600021.SS,100292,Shanghai Electric Power Co Ltd,34
600023.SS,100294,Zhejiang Zheneng Electric Power Co Ltd,34
600026.SS,100295,COSCO Shipping Energy Transportation Co Ltd,34
600027.SS,100296,Huadian Power International Corp Ltd Class A,34
600028.SS,20245,China Petroleum &amp; Chemical Corp Class A,34
600029.SS,100298,China Southern Airlines Co Ltd Class A,34
600030.SS,100299,CITIC Securities Co Ltd,34
600031.SS,100300,Sany Heavy Industry Co Ltd,34
600036.SS,100303,China Merchants Bank Co Ltd,34
600038.SS,100305,Avicopter PLC,34
600039.SS,100306,Sichuan Road &amp; Bridge Group Co Ltd,34
600048.SS,100320,Poly Real Estate Group Co Ltd,34
600050.SS,100310,China Unicom Hong Kong Ltd,34
600053.SS,100323,Kunwu Jiuding Investment Holdings Co Ltd,34
600054.SS,100324,Huangshan Tourism Development Co Ltd A,34
600056.SS,100325,China Meheco Co Ltd,34
600060.SS,100311,Hisense Electric Co Ltd,34
600061.SS,100312,SDIC Essence Holdings Co Ltd,34
600062.SS,102084,China Resources Double-Crane Pharmaceutical Co Ltd,34
600066.SS,102948,Zhengzhou Yutong Bus Co Ltd,34
600068.SS,100319,China Gezhouba Group Co Ltd,34
600072.SS,100315,CSSC Steel Structure Engineering Co Ltd,34
600073.SS,100309,Shanghai Maling Aquarius Co Ltd,34
600075.SS,102085,Xinjiang Tianye Co Ltd,34
600079.SS,100330,Humanwell Healthcare Group Co Ltd,34
600085.SS,100336,Beijing Tongrentang Co Ltd,34
600089.SS,100343,Tbea Co Ltd,34
600093.SS,100340,Sichuan Hejia Co Ltd,34
600094.SS,100342,Greattown Holdings Ltd A,34
600100.SS,100363,Tsinghuatongfang Co Ltd,34
600104.SS,100350,SAIC Motor Corp Ltd,34
600105.SS,100354,Jiangsu Etern Co Ltd,34
600109.SS,100360,Sinolink Securities Co Ltd,34
600111.SS,100366,China Northern Rare Earth Group High-Tech Co Ltd,34
600114.SS,100351,NBTM New Materials Group Co Ltd,34
600115.SS,100362,China Eastern Airlines Corp Ltd,34
600116.SS,100352,Chongqing Three Gorges Water Conservancy and Electric Power Co Ltd,34
600118.SS,100367,China Spacesat Co Ltd,34
600122.SS,100371,Jiangsu Hongtu High Technology Co Ltd,34
600123.SS,100372,Shanxi Lanhua Sci-Tech Venture Co Ltd,34
600125.SS,100373,China Railway Tielong Container Logistics Co Ltd,34
600138.SS,100384,China CYTS Tours Holding Co Ltd,34
600141.SS,100386,Hubei Xingfa Chemicals Group Co Ltd,34
600143.SS,100387,Kingfa Sci&amp;Tech Co Ltd,34
600153.SS,102087,Xiamen C&amp;D Inc,34
600155.SS,100391,Hebei Baoshuo Co Ltd,34
600158.SS,100393,China Sports Industry Group Co Ltd,34
600161.SS,100395,Beijing Tiantan Biological Products Corp Ltd,34
600162.SS,100396,Shenzhen Heungkong Holding Co Ltd,34
600166.SS,100399,Beiqi Foton Motor Co Ltd,34
600167.SS,100400,Luenmei Quantum Co Ltd,34
600171.SS,100404,Sh Belling,34
600172.SS,100405,Henan Huanghe Whirlwind Co Ltd,34
600175.SS,100407,MeiDu Energy Corp,34
600176.SS,100408,China Jushi Co Ltd,34
600177.SS,100409,Youngor Group Co Ltd,34
600180.SS,100412,CCS Supply Chain Management Co Ltd,34
600183.SS,100418,Shengyi Technology Co Ltd,34
600185.SS,100420,Gree Real Estate Co Ltd,34
600188.SS,100423,Yanzhou Coal Mining Co Ltd,34
600196.SS,100430,Shanghai Fosun Pharmaceutical Group Co Ltd,34
600197.SS,100431,Xinjiang Yilite Industry Co Ltd,34
600200.SS,100434,Jiangsu Wuzhong Industrial Co Ltd,34
600201.SS,100435,Jinyu Bio-Technology Co Ltd,34
600206.SS,100437,Grinm Advanced Materials Co Ltd,34
600208.SS,100439,Xinhu Zhongbao Co Ltd,34
600210.SS,100441,Shanghai Zijiang Enterprise Group Co Ltd,34
600216.SS,100446,Zhejiang Medicine Co Ltd,34
600219.SS,100447,Shandong Nanshan Aluminium Co Ltd,34
600230.SS,100474,Cangzhou Dahua Co Ltd,34
600231.SS,100462,Lingyuan Iron &amp; Steel Co Ltd,34
600233.SS,100464,YTO Express Group Co Ltd,34
600236.SS,100459,Guangxi Guiguan Electric Power Co Ltd,34
600239.SS,100460,Yunnan Metropolitan Real Estate Development Co Ltd,34
600240.SS,100461,Beijing Huaye Capital Holdings Co Ltd,34
600252.SS,100472,Guangxi Wuzhou Zhongheng Group Co Ltd,34
600255.SS,100477,Xinke Material,34
600258.SS,100479,BTG Hotels Group Co Ltd,34
600260.SS,100481,Hubei Kaile Science and Technology Co Ltd,34
600261.SS,100482,Zhejiang Yankon Group Co Ltd,34
600266.SS,100484,Beijing Urban Construction Investment &amp; Development Co Ltd,34
600269.SS,100487,Jiangxi Ganyue Expressway Co Ltd,34
600270.SS,100488,Sinotrans Air Transportation Development Co Ltd,34
600271.SS,100489,Aisino Corp,34
600273.SS,100491,Zhejiang Jiahua Energy Chemical Industry Co Ltd,34
600276.SS,100493,Jiangsu Hengrui Medicine Co Ltd,34
600277.SS,100494,Elion Energy Co Ltd,34
600280.SS,100497,Nanjing Central Emporium Group Stocks Co Ltd,34
600284.SS,100501,Shanghai Pudong Road &amp; Bridge Construction Co Ltd,34
600285.SS,100502,Henan Lingrui Pharmaceutical Co Ltd,34
600291.SS,100507,Xishui Strong Year Co Ltd Inner Mongolia,34
600295.SS,100510,Inner Mongolia Eerduosi Resources Co Ltd A,34
600297.SS,100511,China Grand Automotive Services Co Ltd,34
600298.SS,100512,Angel Yeast Co Ltd,34
600299.SS,100513,Bluestar Adisseo Co,34
600305.SS,100519,Jiangsu Hengshun Vinegar-Industry Co Ltd,34
600309.SS,100522,Wanhua Chemical Group Co Ltd,34
600310.SS,100523,Guangxi Guidong Eletric Power Co Ltd,34
600312.SS,100525,Henan Pinggao Electric Co Ltd,34
600315.SS,100518,Shanghai Jahwa United Co Ltd,34
600323.SS,100534,Grandblue Environment Co Ltd,34
600325.SS,100535,Huafa Industrial Co Ltd Zhuhai,34
600326.SS,100536,Tibet Tianlu Co Ltd,34
600329.SS,100539,Tianjin Zhongxin Pharmaceutical Group Corp Ltd,34
600332.SS,100542,Guangzhou Baiyunshan Pharmaceutical Holdings Co Ltd,34
600335.SS,100544,Sinomach Automobile Co Ltd,34
600337.SS,100546,Markor International Home Furnishings Co Ltd,34
600338.SS,100547,Tibet Summit Resources Co Ltd,34
600340.SS,100549,China Fortune Land Development Co Ltd,34
600343.SS,100550,Shaanxi Aerospace Power Hi-Tech Co Ltd,34
600345.SS,100551,Wuhan Yangtze Communication Industry Group Co Ltd,34
600346.SS,942797,Dalian Rubber,34
600348.SS,100552,Yangquan Coal Industry Group Co Ltd,34
600350.SS,100553,Shandong Hi-speed Co Ltd,34
600352.SS,100555,Zhejiang Longsheng Group Co Ltd,34
600362.SS,100563,Jiangxi Copper Co Ltd Class A,34
600363.SS,100564,Jiangxi Lianchuang Opto-electronic Science &amp; Technology Co Ltd,34
600366.SS,100566,Ningbo Yunsheng Co Ltd,34
600372.SS,100572,China Avionics Systems Co Ltd,34
600373.SS,102956,Chinese Universe Publishing And Media Co Ltd,34
600377.SS,100575,Jiangsu Expressway Co Ltd,34
600380.SS,100578,Joincare Pharmaceutical Group Industry Co Ltd,34
600383.SS,100580,Gemdale Corp,34
600387.SS,100582,Zhejiang Haiyue Co Ltd,34
600388.SS,100583,Fujian Longking Co Ltd,34
600391.SS,100586,Sichuan Chengfa Aero Science and Technology Co Ltd,34
600392.SS,100587,Shenghe Resources Holding Co Ltd,34
600393.SS,100588,Guangzhou Yuetai Group Co Ltd,34
600395.SS,100589,Guizhou Panjiang Refined Coal Co Ltd,34
600398.SS,100592,Heilan Home Co Ltd,34
600400.SS,100594,Jiangsu Hongdou Industrial Co Ltd,34
600406.SS,100598,NARI Technology Co Ltd,34
600409.SS,100600,Tangshan Sanyou Chemical Industries Co Ltd,34
600410.SS,100601,Beijing Teamsun Technology Co Ltd,34
600415.SS,100602,Zhejiang China Commodities City Group Co Ltd,34
600416.SS,100603,Xiangtan Electric Manufacturing Co Ltd,34
600418.SS,942800,Anhui Jianghuai Automobile Group Corp Ltd,34
600420.SS,100605,Shanghai Shyndec Pharmaceutical Co Ltd,34
600422.SS,100607,KPC Pharmaceuticals Inc,34
600426.SS,100610,Shandong Hualu Hengsheng Chemical Co Ltd,34
600428.SS,100611,COSCO SHIPPING Specialized Carriers Co Ltd,34
600435.SS,100615,North Navigation Control Technology Co Ltd,34
600436.SS,100616,Zhangzhou Pientzehuang Pharmaceutical Co Ltd,34
600438.SS,100617,Tongwei Co Ltd,34
600439.SS,100628,Henan Rebecca Hair Products Co Ltd,34
600446.SS,100630,Shenzhen Kingdom SCI Tech Co Ltd,34
600452.SS,100621,Chongqing Fuling Electric Power Industrial Co Ltd,34
600459.SS,100624,Sino-Platinum Metals Co Ltd,34
600460.SS,100619,Hangzhou Silan Microelectronics Co Ltd,34
600466.SS,100642,Sichuan Languang Development Co Ltd,34
600477.SS,100647,Hang Xiao Steel Structure Co Ltd,34
600482.SS,100638,China Shipbuilding Industry Group Power Co Ltd,34
600483.SS,100639,Fujian Funeng Co Ltd,34
600486.SS,100641,Jiangsu Yangnong Chemical Co Ltd,34
600487.SS,100648,Hengtong Optic Electric Co Ltd,34
600489.SS,100655,Zhongjin Gold Corp Ltd,34
600490.SS,942794,Pengxin International Mining Co Ltd,34
600491.SS,100656,Long Yuan Construction Group Co Ltd,34
600495.SS,100651,Jinxi Axle Co Ltd,34
600497.SS,100653,Yunnan Chihong Zinc&amp;Germanium Co Ltd,34
600498.SS,100654,Fiberhome Telecommunication Technologies Co Ltd,34
600499.SS,100657,Keda Clean Energy Co Ltd,34
600500.SS,100658,Sinochem International Corp,34
600502.SS,100660,Anhui Water Resources Development Co Ltd,34
600503.SS,100666,Deluxe Family Co Ltd,34
600507.SS,100669,Fangda Special Steel Technology Co Ltd,34
600511.SS,100670,China National Medicines Corp Ltd,34
600516.SS,100674,FangDa Carbon New Material Co Ltd,34
600517.SS,100675,Shanghai Zhixin Electric Co Ltd,34
600518.SS,100672,Kangmei Pharmaceutical Co Ltd,34
600519.SS,100673,Kweichow Moutai Co Ltd,34
600521.SS,100682,Zhejiang Huahai Pharmaceutical Co Ltd,34
600522.SS,100683,Jiangsu Zhongtian Technology Co Ltd,34
600525.SS,100684,Changyuan Group Ltd,34
600526.SS,100677,Zhejiang Feida Environmental Science &amp; Technology Co Ltd,34
600528.SS,100685,China Railway Hi-tech Industry Corp Ltd,34
600531.SS,100687,Henan Yuguang Gold &amp; Lead Co Ltd,34
600535.SS,100689,Tasly Pharmaceutical Group Co Ltd,34
600536.SS,100681,China National Software &amp; Service Co Ltd,34
600545.SS,100695,Saurer Intelligent Technology Co Ltd Class A,34
600547.SS,100697,Shandong Gold Mining Co Ltd,34
600548.SS,100698,Shenzhen Expressway Co Ltd,34
600549.SS,100699,Xiamen Tungsten Co Ltd,34
600551.SS,100701,Time Publishing and Media Co Ltd Class A,34
600557.SS,100703,Jiangsu Kanion Pharmaceutical Co Ltd,34
600559.SS,100705,Hebei Hengshui Laobaigan Liquor Co Ltd,34
600562.SS,100708,Glarun Technology Co Ltd,34
600563.SS,100709,Xiamen Faratronic Co Ltd,34
600565.SS,100710,Chongqing Dima Industry Co Ltd,34
600566.SS,100711,Hubei Jumpcan Pharmaceutical Co Ltd,34
600567.SS,100712,Anhui Shanying Paper Industry Co Ltd,34
600568.SS,100713,Zhongzhu Medical Holdings Co Ltd,34
600570.SS,100715,Hundsun Technologies Inc,34
600572.SS,100717,Zhejiang CONBA Pharmaceutical Co Ltd,34
600577.SS,100720,Tongling Jingd,34
600578.SS,100721,Beijing Jingneng Power Co Ltd,34
600580.SS,100722,Wolong Electric Group Co Ltd,34
600582.SS,100724,Tian Di Science &amp; Technology Co Ltd,34
600583.SS,100725,Offshore Oil Engineering Co Ltd,34
600584.SS,100726,Jiangsu Changjiang Electronics Technology Co Ltd,34
600585.SS,100727,Anhui Conch Cement Co Ltd,34
600587.SS,100729,Shinva Medical Instrument Co Ltd,34
600588.SS,100731,Yonyou Network Technology Co Ltd,34
600594.SS,100735,Guizhou Yibai Pharmaceutical Co Ltd,34
600596.SS,100737,Zhejiang XinAn Chemical Industrial Group Co Ltd,34
600597.SS,100738,Bright Dairy &amp; Food Co Ltd,34
600598.SS,100739,Heilongjiang Agriculture Co Ltd,34
600600.SS,100730,Tsingtao Brewery Co Ltd,34
600606.SS,100745,Greenland Holdings Corp Ltd,34
600611.SS,100748,Dazhong Transportation Group Co Ltd A,34
600612.SS,100749,Lao Feng Xiang Co Ltd A,34
600614.SS,100751,Pengqi Technology Development Co Ltd A,34
600623.SS,100765,Double Coin A,34
600626.SS,100758,Shanghai Shenda Co Ltd,34
600633.SS,100761,Zhejiang Daily Media Group Co Ltd,34
600635.SS,100767,Shanghai DaZhong Public Utilities Group Co Ltd,34
600637.SS,100769,Shanghai Oriental Pearl Media Co Ltd,34
600641.SS,100772,Shanghai Wanye Enterprises Co Ltd,34
600642.SS,100773,Shenergy Co Ltd,34
600643.SS,100774,Shanghai AJ Group Co Ltd,34
600648.SS,100777,Shanghai Waigaoqiao Free Trade Zone Group Co Ltd A,34
600649.SS,100778,Shanghai SMI Holding Co Ltd,34
600655.SS,100783,Shanghai Yuyuan Tourist Mart Co Ltd,34
600657.SS,100788,Cinda Real Estate Co Ltd,34
600660.SS,100789,Fuyao Glass Industry Group Co Ltd Class A,34
600661.SS,100785,Shanghai Xin Nanyang Co Ltd,34
600663.SS,100790,Shanghai Lujiazui Finance &amp; Trade Zone Development Co Ltd A,34
600664.SS,100791,Harbin Pharmaceutical Group Co Ltd,34
600667.SS,100794,Wuxi Taiji Industry Co Ltd,34
600668.SS,100795,Zhejiang Jianfeng Group Co Ltd,34
600673.SS,100796,Guangdong Hec Technology Holding Co Ltd Class A,34
600674.SS,100797,Sichuan Chuantou Energy Co Ltd,34
600682.SS,942808,Nanjing Xinjiekou Department Store Co Ltd,34
600684.SS,100799,Guangzhou Pearl River Industrial Development Co Ltd,34
600685.SS,942809,CSSC Offshore &amp; Marine Engineering Group Co Ltd,34
600687.SS,100801,Gangtai Holdin,34
600688.SS,20144,Sinopec Shanghai Petrochemical Co Ltd Class A,34
600690.SS,100810,Qingdao Haier Co Ltd,34
600693.SS,102095,Fujian Dongbai Group Co Ltd,34
600694.SS,100813,Dashang Co Ltd,34
600699.SS,100817,Ningbo Joyson Electronic Corp,34
600703.SS,100820,Sanan Optoelectronics Co Ltd,34
600704.SS,100821,Wuchan Zhongda Group Co Ltd,34
600705.SS,100822,AVIC Capital Co Ltd,34
600708.SS,102960,Bright Real Estate Group Co Ltd,34
600711.SS,100828,Eagle Mining,34
600715.SS,100836,Cultural Investment Holdings Co Ltd,34
600717.SS,100832,Tianjin Port Co Ltd,34
600720.SS,100839,Gansu Qilianshan Cement Group Co Ltd,34
600729.SS,100851,Chongqing Department Store Co Ltd,34
600737.SS,100852,COFCO Tunhe Sugar Co Ltd,34
600739.SS,100853,Liaoning Cheng Da Co Ltd,34
600741.SS,100855,HUAYU Automotive Systems Co Ltd,34
600742.SS,100856,Changchun Faway Automobile Components Co Ltd,34
600743.SS,100857,Hua Yuan Property Co Ltd,34
600748.SS,100862,Shanghai Industrial Development Co Ltd,34
600750.SS,100864,Jiangzhong Pharmaceutical Co Ltd,34
600754.SS,100866,Shanghai Jin Jiang International Hotels Development Co Ltd A,34
600755.SS,100867,Xiamen ITG Group Corp Ltd,34
600756.SS,100868,Inspur Software Co Ltd,34
600757.SS,100869,Changjiang Publishing &amp; Media Co Ltd,34
600758.SS,942812,Liaoning Hongyang Energy Resource Invest Co Ltd,34
600760.SS,100871,Zhonghang Heibao Co Ltd,34
600763.SS,100873,Tc Medical Inv,34
600765.SS,100875,AVIC Heavy Machinery Co Ltd,34
600775.SS,942813,Nanjing Panda Electronics Co Ltd,34
600779.SS,100887,Sichuan Swellfun Co Ltd,34
600782.SS,102962,Xinyu Iron &amp; Steel Co Ltd,34
600787.SS,100894,CMST Development Co Ltd,34
600795.SS,100889,GD Power Development Co Ltd,34
600801.SS,100904,Huaxin Cement,34
600803.SS,100906,ENN Ecological Holdings Co Ltd,34
600804.SS,100907,Dr Peng Telecom and Media Group Co Ltd,34
600808.SS,100911,Maanshan Iron &amp; Steel Co Ltd,34
600809.SS,100890,Shanxi Xinghuacun Fen Wine Factory Co Ltd,34
600811.SS,100913,Orient Group Inc,34
600814.SS,100915,Hangzhou Jiebai Group Co Ltd,34
600816.SS,100917,Anxin Trust Co Ltd,34
600820.SS,100920,Shanghai Tunnel Engineering Co Ltd,34
600823.SS,100923,Shanghai Shimao Co Ltd,34
600826.SS,100926,Shanghai Lansheng Corp,34
600827.SS,100927,Shanghai Bailian Group Co Ltd A,34
600828.SS,100928,Maoye Commercial Co Ltd,34
600829.SS,100929,HPGC Renmintongtai Pharmaceutical Corp,34
600835.SS,100935,Shanghai Mechanical &amp; Electrical Industry Co Ltd A,34
600837.SS,100939,Haitong Securities Co Ltd,34
600838.SS,100936,Shanghai Join Buy Co Ltd,34
600846.SS,100944,Shanghai Tongji Science&amp;Technology Industrial Co Ltd,34
600850.SS,942815,Shanghai East-China Computer Co Ltd,34
600856.SS,100951,Changchun Sinoenergy Corp,34
600859.SS,100954,Wangfujing,34
600860.SS,100955,Beijing Jingcheng Machinery Electric Co Ltd,34
600862.SS,942816,Avic Aviation High Technology Co Ltd,34
600863.SS,100957,Inner Mongolia MengDian HuaNeng Thermal Power Corp Ltd,34
600867.SS,100960,Tonghua Dongbao Pharmaceutical Co Ltd,34
600872.SS,100966,Jonjee Hi-tech Industrial and Commercial Holding Co Ltd,34
600874.SS,100968,Tianjin Capital Environmental Protection Group Co Ltd,34
600875.SS,100969,Dongfang Electric Corp Ltd Class A,34
600876.SS,100970,Luoyang Glass,34
600879.SS,100972,China Aerospace Times Electronics Co Ltd,34
600881.SS,100974,Jilin Yatai Group Co Ltd,34
600884.SS,100975,Ningbo Shanshan Co Ltd,34
600885.SS,100976,Hongfa Technology Co Ltd,34
600886.SS,100977,SDIC Power Holdings Co Ltd,34
600887.SS,100978,Inner Mongolia Yili Industrial Group Co Ltd,34
600893.SS,100983,AVIC Aviation Engine Corp PLC,34
600895.SS,100985,Shanghai Zhangjiang Hi-Tech Park Development Co Ltd,34
600897.SS,100987,Xiamen International Airport Co Ltd,34
600900.SS,100989,China Yangtze Power Co Ltd,34
600917.SS,942818,Chongqing Gas Group Corp Ltd,34
600965.SS,100994,Fortune Ng Fung Food Hebei Co Ltd,34
600967.SS,100996,Baotou Beifang Chuangye Co Ltd,34
600970.SS,100998,Sinoma International Engineering Co Ltd,34
600971.SS,100999,Anhui Hengyuan Coal Industry and Electricity Power Co Ltd,34
600973.SS,101000,Baosheng,34
600975.SS,101001,Hunan New Wellful Co Ltd,34
600978.SS,101003,Yihua Lifestyle Technology Co Ltd,34
600986.SS,101014,Keda Group Co Ltd,34
600987.SS,101015,Zhejiang Hangmin Co Ltd,34
600988.SS,101016,Chifeng Jilong Gold Mining Co Ltd,34
600990.SS,101017,Anhui Sun Create Electronics Co Ltd,34
600993.SS,101004,Mayinglong Pharmaceutical Group Co Ltd,34
600998.SS,101005,Jointown Pharmaceutical Group Co Ltd,34
600999.SS,101021,China Merchants Securities Co Ltd,34
601000.SS,101006,Tangshan Port Group Co Ltd,34
601001.SS,101022,Datong Coal Industry Co Ltd,34
601002.SS,101023,Gem-Year Industrial Co Ltd,34
601003.SS,101024,Liuzhou Iron &amp; Steel Co Ltd,34
601005.SS,101025,Chongqing Iron & Steel Co Ltd Class A,34
601006.SS,101026,Daqin Railway Co Ltd,34
601009.SS,101029,Bank of Nanjing Co Ltd,34
601012.SS,101032,Xian LONGi Silicon Materials Corp,34
601015.SS,942819,Shaanxi Heimao Coking Co Ltd,34
601016.SS,942820,CECEP Wind-Power Corp,34
601018.SS,101033,Ningbo Zhoushan Port Co Ltd,34
601021.SS,945166,Spring Airlines Co Ltd,34
601038.SS,101035,First Tractor Co Ltd,34
601058.SS,101036,Sailun Jinyu Group Co Ltd,34
601069.SS,945167,Western Region Gold Co Ltd,34
601088.SS,8575,China Shenhua Energy Co Ltd H,34
601098.SS,101041,China South Publishing &amp; Media Group Co Ltd,34
601099.SS,101042,Pacific Securities Co Ltd,34
601100.SS,101043,Jiangsu Hengli Hydraulic Co Ltd,34
601107.SS,101046,Sichuan Expressway Co Ltd,34
601111.SS,101047,Air China Ltd Class A,34
601116.SS,101037,Sanjiang Shopping Club Co Ltd,34
601117.SS,101049,China National Chemical Engineering Co Ltd,34
601139.SS,101052,Shenzhen Gas Corp Ltd,34
601158.SS,101039,Chongqing Water Group Co Ltd,34
601166.SS,101060,Industrial Bank Co Ltd,34
601169.SS,101062,Bank of Beijing Co Ltd,34
601186.SS,101064,China Railway Construction Corp Ltd,34
601199.SS,101055,Jiangsu Jiangnan Water Co Ltd,34
601216.SS,101066,Inner Mongolia Junzheng Energy &amp; Chemical Group Co Ltd,34
601222.SS,101057,Jiangsu Linyang Energy Co Ltd,34
601225.SS,101058,Shaanxi Coal Industry Co Ltd,34
601231.SS,101059,Universal Scientific Industrial Shanghai Co Ltd,34
601233.SS,101067,TongKun Group Co Ltd,34
601238.SS,101068,Guangzhou Automobile Group Co Ltd Class A,34
601288.SS,101076,Agricultural Bank of China Ltd Class A,34
601311.SS,101071,Camel Group Co Ltd,34
601318.SS,101078,Ping An Insurance Group Co of China Ltd,34
601328.SS,101079,Bank of Communications Co Ltd,34
601333.SS,101080,Guangshen Railway Co Ltd,34
601336.SS,101073,New China Life Insurance Co Ltd,34
601360.SS,101072,SJEC Corp,34
601377.SS,101082,Industrial Securities Co Ltd,34
601390.SS,101083,China Railway Group Ltd Class A,34
601398.SS,101084,Industrial and Commercial Bank of China Ltd,34
601515.SS,101085,Shantou Dongfeng Printing Co Ltd,34
601555.SS,101088,Soochow Securities Co Ltd,34
601567.SS,101091,Ningbo Sanxing Medical Electric Co Ltd,34
601588.SS,101095,Beijing North Star Co Ltd Class A,34
601600.SS,101096,Aluminum Corp of China Ltd,34
601601.SS,101097,China Pacific Insurance Group Co Ltd,34
601607.SS,101092,Shanghai Pharmaceuticals Holding Co Ltd,34
601618.SS,101098,Metallurgical Corporation of China Ltd,34
601628.SS,101099,China Life Insurance Co Ltd,34
601633.SS,101100,Great Wall Motor Co Ltd,34
601636.SS,101101,Zhuzhou Kibing Group Co Ltd,34
601666.SS,101102,Pingdingshan Tianan Coal Mining Co Ltd,34
601668.SS,101103,China State Construction Engineering Corp Ltd,34
601669.SS,101104,Power Construction Corp of China Ltd,34
601678.SS,101106,Befar Group Co Ltd,34
601688.SS,101107,Huatai Securities Co Ltd,34
601717.SS,101110,Zhengzhou Coal Mining Machinery Group Co Ltd,34
601718.SS,101111,Jihua Group Corp Ltd,34
601766.SS,101113,CRRC Corp Ltd Class A,34
601788.SS,101115,Everbright Securities Co Ltd,34
601789.SS,101116,Ningbo Construction Co Ltd,34
601799.SS,101118,Changzhou Xingyu Automotive Lighting Systems Co Ltd,34
601800.SS,101119,China Communications Construction Co Ltd,34
601808.SS,101121,China Oilfield Services Ltd Class A,34
601818.SS,101122,China Everbright Bank Co Ltd,34
601857.SS,101123,PetroChina Co Ltd Class A,34
601866.SS,101124,Cosco Shipping Development Co Ltd,34
601877.SS,101129,Zhejiang Chint Electrics Co Ltd,34
601880.SS,101125,Dalian Port PDA Co Ltd,34
601888.SS,101130,China International Travel Service Corp Ltd,34
601890.SS,101131,Asian Star Anchor Chain Co Ltd Jiangsu,34
601898.SS,101132,China Coal Energy Co Ltd,34
601899.SS,101133,Zijin Mining Group Co Ltd Class A,34
601901.SS,101127,Founder Securities Co Ltd,34
601908.SS,101134,Beijing Jingyuntong Technology Co Ltd,34
601919.SS,101145,COSCO SHIPPING Holdings Co Ltd,34
601933.SS,101146,Yonghui Superstores Co Ltd,34
601939.SS,101137,China Construction Bank Corp,34
601958.SS,101138,Jinduicheng Molybdenum Co Ltd,34
601988.SS,9217,Bank of China Ltd,34
601989.SS,101140,China Shipbuilding Industry Co Ltd,34
601991.SS,101148,Datang International Power Generation Co Ltd Class A,34
601992.SS,101141,BBMG Corp Class A,34
601998.SS,101143,China Citic Bank Corp Ltd Class A,34
603000.SS,101150,People.Cn Co Ltd,34
603008.SS,101155,Xilinmen Furniture Co Ltd,34
603019.SS,942602,Dawning Information Industry Co Ltd,34
603077.SS,101156,Sichuan Hebang Biotechnology Co Ltd,34
603111.SS,942826,Nanjing Kangni Mechanical &amp; Electrical Co Ltd,34
603126.SS,942827,Sinoma Energy Conservation Ltd,34
603128.SS,101161,CTS International Logistics Corp Ltd,34
603168.SS,102966,Zhejiang Shapuaisi Pharmaceutical Co Ltd,34
603188.SS,942829,Jiangsu Yabang Dyestuff Ltd,34
603288.SS,101158,Foshan Haitian Flavouring and Food Co Ltd,34
603306.SS,942830,HMT Xiamen New Technical Materials Co Ltd,34
603328.SS,102967,Guangdong Ellington Electronics Technology Co Ltd,34
603368.SS,942831,Guangxi Liuzhou Pharmaceutical Co Ltd,34
603369.SS,942832,Jiangsu King' Luck Brewery Joint-Stock Co Ltd,34
603609.SS,942834,Liaoning Wellhope Agri-Tech Joint Stock Co Ltd,34
603766.SS,101167,Loncin Motor Co Ltd,34
603806.SS,942835,Hangzhou First PV Material Co Ltd,34
603993.SS,101168,China Molybdenum Co Ltd Class A,34
600025.SS,1057304,Huaneng Lancang River Hydropower Inc,34
600909.SS,994503,Huaan Securities Co Ltd,34
600919.SS,994504,Bank of Jiangsu Co Ltd,34
600926.SS,994505,Bank of Hangzhou Co,34
600933.SS,1056000,IKD Co Ltd,34
600958.SS,948390,Orient Securities Co,34
600977.SS,994508,China Film Co,34
600996.SS,994509,Guizhou BC&TV Information Network,34
601019.SS,1056001,Shandong Publishing & Media Co Ltd,34
601020.SS,994510,Tibet Huayu Mining Co,34
601066.SS,1082120,China Securities Co,34
601068.SS,1095973,China Aluminum International Engineering Corp,34
601108.SS,1054840,Caitong Securities Co Ltd,34
601127.SS,994511,Chongqing Sokon Industry Group Co,34
601128.SS,994512,iangsu Changshu Rural Commercial Bank Co,34
601155.SS,994513,Future Land Holdings Co,34
601168.SS,1008995,Western Mining Co,34
601198.SS,955758,Dongxing Securities Co,34
601200.SS,1006194,Shanghai Environment Group Co,34
601211.SS,955759,Guotai Junan Securities Co,34
601212.SS,996178,Baiyin Nonferrous Group Co,34
601228.SS,1031313,Guangzhou Port Co,34
601229.SS,994517,Bank of Shanghai Co,34
601326.SS,1043297,Qinhuangdao Port Co,34
601330.SS,1081677,Dynagreen Environmental Protection Group Co,34
601368.SS,954955,Guangxi Nanning Waterworks Co,34
601375.SS,996063,Central China Securities Co,34
601595.SS,994519,Shanghai Film Co,34
601611.SS,994520,China Nuclear Engineering Corp Ltd,34
601689.SS,994521,Ningbo Tuopu Group Co,34
601699.SS,101108,Shanxi LuAn Environmental Energy Development,34
601727.SS,101112,Sh Electric SS,34
601811.SS,994522,Xinhua Winshare Publishing and Media Co,34
601828.SS,1062254,Red Star Macalline Group Corp Ltd,34
601838.SS,1062255,Bank of Chengdu Co,34
601858.SS,996064,China Science Publishing & Media Ltd,34
601869.SS,1089445,Yangtze Optical Fibre and Cable Joint Stock Ltd Co,34
601878.SS,1024791,Zheshang Securities Co,34
601881.SS,996065,China Galaxy Securities Co,34
601966.SS,994525,Shandong Linglong Tyre Co,34
601985.SS,954957,China National Nuclear Power Co,34
601997.SS,994526,Bank of Guiyang Co,34
603007.SS,994527,Flower King Eco-Engineering Inc,34
603025.SS,951032,Beijing Dahao Technology Corp,34
603056.SS,1057234,DEPPON LOGISTICS Co,34
603060.SS,994540,China Building Material Test & Certification Group,34
603080.SS,1062256,Xinjiang Torch Gas Co,34
603098.SS,994544,Center International Group Co,34
603103.SS,1054841,Hengdian Entertainment Co,34
603106.SS,1052655,Cashway Technology Co,34
603108.SS,953915,Shanghai Runda Medical Technology Co,34
603113.SS,1031312,Jinneng Science & Technology Co,34
603118.SS,945935,Shenzhen Gongjin Electronics Co,34
603157.SS,1052657,Shanghai La Chapelle Fashion Co,34
603160.SS,994548,Shenzhen Goodix Technology Co,34
603165.SS,996072,Zhejiang Rongsheng Environmental Protection Paper,34
603169.SS,942597,Lanzhou LS Heavy Equipment Co,34
603180.SS,1031318,Xiamen Goldenhome Co,34
603198.SS,953916,Anhui Yingjia Distillery Co,34
603225.SS,1008742,Xinfengming Group Co,34
603228.SS,996075,Shenzhen Kinwong Electronic Co,34
603233.SS,1031219,Dashenlin Pharmaceutical Group Co,34
603239.SS,996076,Zhejiang Xiantong Rubber&Plastic Co,34
603258.SS,994552,Hangzhou Electronic Soul Network Technology,34
603260.SS,1054843,Hoshine Silicon Industry Co,34
603298.SS,994554,Hangcha Group Co,34
603300.SS,953918,hejiang Huatie Construction Safety Science and Technology,34
603305.SS,1024778,Ningbo Xusheng Auto Technology,34
603337.SS,996078,Jack Sewing Machine Co,34
603338.SS,950056,Zhejiang Dingli Machinery Co,34
603339.SS,994561,Nantong Square Cold Chain Equipment,34
603355.SS,953122,Kingclean Electric Co,34
603357.SS,1031220,Anhui Transport Consulting and Design Institute,34
603358.SS,996079,Huada Automotive Technology,34
603363.SS,1052661,Fujian Aonong Biological Technology Group,34
603387.SS,1031221,Getein Biotech Inc,34
603421.SS,994567,Qingdao Topscomm Communication Inc,34
603444.SS,996082,G-bits Network Technology Xiamen,34
603515.SS,994569,Opple Lighting Co,34
603517.SS,998090,Juewei Food Co,34
603533.SS,1052666,IReader Technology Co,34
603556.SS,994573,Hexing Electrical Co,34
603567.SS,951035,Heilongjiang ZBD Pharmaceutical,34
603568.SS,953921,Zhejiang Weiming Environment Protection,34
603569.SS,994575,Beijing Changjiu Logistics Corp,34
603579.SS,996083,Shanghai Rongtai Health Technology,34
603585.SS,994577,Suli Co Ltd,34
603588.SS,994578,Beijing Geoenviron Engineering & Technology,34
603589.SS,955764,Anhui Kouzi Distillery Co,34
603595.SS,1024780,Zhejiang Tony Electronic Co,34
603599.SS,953123,Anhui Guangxin Agrochemical Co,34
603600.SS,994579,UE Furniture Co,34
603603.SS,996558,Poten Environment Group,34
603612.SS,1031222,Sunstone Development Co,34
603618.SS,945720,Hangzhou Cable Co,34
603619.SS,1056008,ZhongMan Petroleum and Natural Gas Group,34
603626.SS,996183,Kunshan Kersen Science & Technology,34
603628.SS,996084,Clenergy Xiamen Technology Co,34
603639.SS,996087,Hailir Pesticides and Chemicals Group,34
603658.SS,994583,Autobio Diagnostics Co,34
603659.SS,1054849,Shanghai Putailai New Energy Technology,34
603660.SS,994584,Suzhou Keda Technology,34
603669.SS,953923,Lionco Pharmaceutical Group,34
603686.SS,945169,Fujian Longma Environmental Sanitation Equipment,34
603707.SS,1031224,Nanjing King-friend Biochemical Pharmaceutical,34
603711.SS,1056011,Xiangpiaopiao Food Co,34
603728.SS,1010634,Shanghai Moons Electric,34
603730.SS,1031225,Shanghai Daimay Automotive Interior,34
603737.SS,994593,Skshu Paint Co,34
603757.SS,1024779,Zhejiang Dayuan Pumps Industry,34
603776.SS,1043310,Changzhou Youon Pubilic Bicycle System,34
603798.SS,994599,Qingdao Copton Technology Co,34
603799.SS,945175,Zhejiang Huayou Cobalt Co,34
603803.SS,1008743,Raisecom Technology Co,34
603816.SS,994601,Jason Furniture Hangzhou,34
603818.SS,951039,QuMei Home Furnishings Group,34
603833.SS,999088,Oppein Home Group,34
603848.SS,1057309,Guangdong Hotata Technology Group,34
603858.SS,994607,Shandong Buchang Pharmaceuticals,34
603861.SS,994609,GuangZhou Baiyun Electric Equipment,34
603866.SS,994610,Shenyang Toly Bread Co,34
603868.SS,994611,Shanghai Flyco Electrical Appliance,34
603877.SS,996092,Ningbo Peacebird Fashion,34
603881.SS,996093,Shanghai AtHub Co,34
603883.SS,951040,Laobaixing Pharmacy Chain Joint Stock,34
603885.SS,953925,JUNEYAO Airlines Co,34
603888.SS,994615,Xinhuanet Co,34
603895.SS,1062259,Shanghai Tianyong Engineering,34
603898.SS,945719,Guangzhou Holike Creative Home,34
603899.SS,945172,Shanghai M&G Stationery Inc,34
603929.SS,996094,L&K Engineering Suzhou,34
603939.SS,945718,Yifeng Pharmacy Chain Co,34
603959.SS,994623,Hunan Baili Engineering Sci & Tech,34
603989.SS,953929,Hunan Aihua Group Co,34
603997.SS,945938,Ningbo Jifeng Auto Parts Co,34

#SZ SHENZHEN
SZI.SZ,942630,Shenzhen Composite Index,35
000001.SZ,944579,Ping An Bank Co Ltd,35
000002.SZ,944122,China Vanke Co Ltd Class A,35
000006.SZ,944767,Shenzhen Zhenye Group Co Ltd,35
000008.SZ,944031,China High-Speed Railway Technology,35
000009.SZ,945307,China Baoan Group Co Ltd,35
000011.SZ,944743,Shenzhen Properties & Resources Development Group Ltd,35
000012.SZ,944148,CSG Holding Co Ltd,35
000016.SZ,944495,Konka Group Co Ltd,35
000021.SZ,944729,Shenzhen Kaifa Technology Co Ltd,35
000022.SZ,944701,Shenzhen Chiwan Wharf Holdings Ltd,35
000025.SZ,944755,Shenzhen Tellus Holding Co Ltd,35
000027.SZ,944709,Shenzhen Energy Group Co Ltd,35
000028.SZ,944111,China National Accord Medicines Corp Ltd,35
000029.SZ,944751,ShenZhen Special Economic Zone Real Estate & Properties Group Co Ltd,35
000030.SZ,944184,FAWER Automotive Parts Ltd Co,35
000031.SZ,944143,COFCO Property Group Co Ltd,35
000034.SZ,944750,Shenzhen Shenxin Taifeng Group Co Ltd,35
000036.SZ,944121,China Union Holdings Ltd,35
000039.SZ,944108,China International Marine Containers Group Ltd,35
000040.SZ,944030,Baoan Hongji Real Estate Group Co Ltd,35
000042.SZ,944700,Shenzhen Centralcon Investment Holding Co Ltd,35
000043.SZ,944026,AVIC Real Estate Holding Co Ltd,35
000046.SZ,944573,Oceanwide Holdings Co Ltd,35
000049.SZ,944708,Shenzhen Desay Battery Technology Co Ltd,35
000050.SZ,944860,Tianma Microelectronics Co Ltd,35
000058.SZ,944747,Shenzhen SEG Co Ltd,35
000059.SZ,944568,North Huajin Chemical Industries Co Ltd,35
000060.SZ,944768,Shenzhen Zhongjin Lingnan Nonfemet Co Ltd,35
000061.SZ,944690,Shenzhen Agricultural Products Co Ltd,35
000062.SZ,944723,Shenzhen Huaqiang Industry Co Ltd,35
000063.SZ,945062,ZTE Corp,35
000065.SZ,944567,NORINCO International Cooperation Ltd,35
000066.SZ,944106,China Greatwall Computer Shenzhen Co Ltd,35
000069.SZ,944741,Shenzhen Overseas Chinese Town Co Ltd,35
000078.SZ,944738,Shenzhen Neptunus Bioengineering Co Ltd,35
000088.SZ,944765,Shenzhen Yan Tian Port Holdings Co Ltd,35
000089.SZ,944691,Shenzhen Airport Co Ltd,35
000090.SZ,944754,Shenzhen Tagen Group Co Ltd,35
000096.SZ,944717,Shenzhen Guangju Energy Co Ltd,35
000100.SZ,944845,TCL Corp,35
000150.SZ,944950,Yihua Healthcare Co Ltd,35
000155.SZ,944778,Sichuan Chemical Co Ltd,35
000156.SZ,944876,Wasu Media Holding Co Ltd,35
000157.SZ,945061,Zoomlion Heavy Industry Science and Technology Co Ltd,35
000158.SZ,944770,Shijiazhuang Changshan Textile Co Ltd,35
000166.SZ,945341,Shenwan Hongyuan Group Co Ltd,35
000301.SZ,944449,Jiangsu Wujiang China Eastern Silk Market Co Ltd,35
000333.SZ,944533,Midea Group Co Ltd,35
000338.SZ,944879,Weichai Power Co Ltd Class A,35
000400.SZ,944937,XJ Electric Co Ltd,35
000401.SZ,944843,Tangshan Jidong Cement Co Ltd,35
000402.SZ,944185,Financial Street Holdings Co Ltd,35
000407.SZ,944646,Shandong Shengli Co Ltd,35
000413.SZ,945343,Dongxu Optoelectronic Tech,35
000415.SZ,944069,Bohai Leasing Co Ltd,35
000417.SZ,944327,Hefei Department Store Group Co Ltd,35
000418.SZ,944902,Wuxi Little Swan Co Ltd,35
000423.SZ,944620,Shan Dong Dong-E E-Jiao Co Ltd,35
000425.SZ,944903,XCMG Construction Machinery Co Ltd,35
000426.SZ,951644,Inner Mongolia Xingye Mining Co Ltd,35
000429.SZ,944251,Guangdong Provincial Expressway Development Co Ltd,35
000488.SZ,944622,Shandong Chenming Paper Holdings Ltd,35
000503.SZ,944610,Searainbow Holding Corp,35
000507.SZ,945055,Zhuhai Port Co Ltd,35
000513.SZ,944511,Livzon Pharmaceutical Group Inc,35
000516.SZ,944913,Xian International Medical Investment Co Ltd,35
000517.SZ,944600,Rongan Property Co Ltd,35
000525.SZ,944543,Nanjing Red Sun Co Ltd,35
000528.SZ,944268,Guangxi Liugong Machinery Co Ltd,35
000536.SZ,944146,CPT Technology Group Co Ltd,35
000537.SZ,944852,Tianjin Guangyu Development Co Ltd,35
000538.SZ,944961,Yunnan Baiyao Group Co Ltd,35
000539.SZ,944232,Guangdong Electric Power Development Co Ltd,35
000540.SZ,945051,Zhongtian Urban Development Group Co Ltd,35
000541.SZ,944188,Foshan Electrical and Lighting Co Ltd,35
000543.SZ,944005,An Hui Wenergy Co Ltd,35
000546.SZ,944481,Jinyuan Cement Co Ltd,35
000547.SZ,944128,Chinascholars Group Co Ltd,35
000550.SZ,944413,Jiangling Motors Corp Ltd,35
000552.SZ,944206,Gansu Jingyuan Coal Industry and Electricity Power Co Ltd,35
000553.SZ,944378,Hubei Sanonda Co Ltd,35
000555.SZ,944166,Digital China Information Service Co Ltd,35
000559.SZ,944875,Wanxiang Qianchao Co Ltd,35
000560.SZ,944496,Kunming Sinobright Group Co Ltd,35
000563.SZ,944613,Shaanxi International Trust Co Ltd,35
000564.SZ,1013779,CCOOP Group Co Ltd,35
000568.SZ,944522,Luzhou Lao Jiao Co Ltd,35
000572.SZ,944300,Haima Automobile Group Co Ltd,35
000576.SZ,944414,Jiangmen Sugarcane Chemical Factory Group Co Ltd,35
000581.SZ,944880,Weifu High-Technology Group Co Ltd,35
000582.SZ,944033,Beibuwan Port Co Ltd,35
000587.SZ,944216,Goldleaf Jewelry Co Ltd,35
000591.SZ,951646,Chongqing Tong Jun Ge Co Ltd,35
000592.SZ,945046,Zhongfu Straits Pingtan Development Co Ltd,35
000596.SZ,944012,Anhui Gujing Distillery Co Ltd,35
000598.SZ,944095,Chengdu Xingrong Investment Co Ltd,35
000600.SZ,944486,Jointo Energy Investment Co Ltd Hebei,35
000601.SZ,944254,Guangdong Shaoneng Group Co Ltd,35
000603.SZ,944683,Shengda Mining Co Ltd,35
000607.SZ,944372,Huamei Holding,35
000612.SZ,945308,Jiaozuo Wanfang Aluminum,35
000615.SZ,951647,Hubei Golden Ring Co Ltd,35
000617.SZ,944474,Jinan Diesel Engine Co Ltd,35
000620.SZ,944526,Macrolink Real Estate Co Ltd,35
000623.SZ,944466,Jilin Aodong Pharmaceutical Group Co Ltd,35
000625.SZ,944129,Chongqing Changan Automobile Co Ltd,35
000627.SZ,945314,Hubei Biocause Pharmaceutical,35
000630.SZ,944869,Tongling Nonferrous Metals Group Co Ltd,35
000631.SZ,944776,Shunfa Hengye Corp,35
000636.SZ,944234,Guangdong Fenghua Advanced Technology Holding Co Ltd,35
000650.SZ,944597,Renhe Pharmacy Co Ltd,35
000651.SZ,944220,Gree Electric Appliances Inc of Zhuhai,35
000652.SZ,944850,Tianjin Economic-technological Development Area Co Ltd,35
000656.SZ,944479,Jinke Property Group Co Ltd,35
000657.SZ,944120,China Tungsten and Hightech Materials Co Ltd,35
000661.SZ,944080,Changchun High & New Technology Industries Group Inc,35
000662.SZ,944807,Softto Co Ltd,35
000665.SZ,944377,Hubei Radio and Television Information Network Co Ltd,35
000666.SZ,944477,Jingwei Textile Machinery Co Ltd,35
000667.SZ,944537,Myhome Real Estate Development Group Co Ltd,35
000669.SZ,944578,PetroChina Jinhong Energy Investment Co Ltd,35
000671.SZ,944943,Yango Group Co Ltd,35
000673.SZ,944144,Contemporary Eastern Investment Co Ltd,35
000681.SZ,944874,Visual China Group Co Ltd,35
000683.SZ,944408,Inner Mongolia Yuan Xing Energy Co Ltd,35
000685.SZ,945050,Zhongshan Public Utilities Group Co Ltd,35
000686.SZ,944571,Northeast Securities Co Ltd,35
000687.SZ,951650,Swan Fiber Co Ltd,35
000688.SZ,944465,Jianxin Mining Co Ltd,35
000690.SZ,944224,Guangdong Baolihua New Energy Stock Co LTD,35
000703.SZ,944350,Hengyi Petrochemical Co Ltd,35
000709.SZ,944325,Hebei Iron and Steel Co Ltd,35
000710.SZ,944094,Chengdu Tianxing Instrument and Meter Co Ltd,35
000712.SZ,944235,Guangdong Golden Dragon Development Inc,35
000717.SZ,944611,Sgis Songshan Co Ltd,35
000718.SZ,944819,Suning Universal Co Ltd,35
000723.SZ,944676,Shanxi Meijin Energy Co Ltd,35
000725.SZ,944068,BOE Technology Group Co Ltd,35
000726.SZ,944514,Lu Thai Textile Co Ltd,35
000727.SZ,944541,Nanjing Huadong Electronics Information & Technology Co Ltd,35
000728.SZ,944299,Guoyuan Securities Co Ltd,35
000729.SZ,944060,Beijing Yanjing Brewery Co Ltd,35
000732.SZ,944847,Thaihot Group Co Ltd,35
000733.SZ,944126,China Zhenhua Group Science & Technology Co Ltd,35
000735.SZ,944516,Luoniushan Co Ltd,35
000738.SZ,944023,AVIC Aero-Engine Controls Co Ltd,35
000739.SZ,944022,Apeloa Pharmaceutical Co Ltd,35
000750.SZ,944609,Sealand Securities Co Ltd,35
000751.SZ,944384,Huludao Zinc Industry Co Ltd,35
000756.SZ,944651,Shandong Xinhua Pharmaceutical Co Ltd,35
000758.SZ,944113,Cn Metal Eng A,35
000761.SZ,944063,Bengang Steel Plates Co Ltd,35
000762.SZ,944865,Tibet Mineral Development Co Ltd,35
000766.SZ,944868,Tonghua Golden-Horse Pharmaceutical Industry Co Ltd,35
000767.SZ,944681,Shanxi Zhangze Electric Power Co Ltd,35
000768.SZ,944024,AVIC Aircraft Co Ltd,35
000776.SZ,944210,GF Securities Co Ltd,35
000778.SZ,944933,Xinxing Ductile Iron Pipes Co Ltd,35
000783.SZ,944083,Changjiang Securities Co Ltd,35
000786.SZ,944045,Beijing New Building Materials Public Ltd Co,35
000789.SZ,944463,Jiangxi Wannianqing Cement Co Ltd,35
000792.SZ,944594,Qinghai Salt Lake Industry Co Ltd,35
000793.SZ,944370,Huawen Media Investment Corp,35
000795.SZ,944840,Taiyuan Twin Tower Aluminum Oxide Co Ltd,35
000797.SZ,944125,China Wuyi Co Ltd,35
000799.SZ,944483,Jiugui Liquor Co Ltd,35
000800.SZ,944183,Faw Car Co Ltd,35
000801.SZ,944788,Sichuan Jiuzhou Electronic Co Ltd,35
000802.SZ,944041,Beijing Jingxi Culture&Tourism Co Ltd,35
000806.SZ,944034,Beihai Yinhe Industry Investment Co Ltd,35
000807.SZ,944960,Yunnan Aluminium Co Ltd,35
000810.SZ,944806,Skyworth Digital Co Ltd,35
000815.SZ,944530,MCC Meili Paper Industry Co Ltd,35
000818.SZ,944182,Fangda Jinhua Chemical Technology Co Ltd,35
000821.SZ,944411,J.S. Corrugating Machinery Co Ltd,35
000822.SZ,944626,Shandong Haihua Co Ltd,35
000823.SZ,944236,Guangdong Goworld Co Ltd,35
000825.SZ,944678,Shanxi Taigang Stainless Steel Co Ltd,35
000826.SZ,944809,Tus-Sound Environmental Resources Co Ltd,35
000828.SZ,944170,Dongguan Development Holdings Co Ltd,35
000829.SZ,944846,Telling Telecommunication Holding Co Ltd,35
000830.SZ,944519,Luxi Chemical Group Co Ltd,35
000831.SZ,944110,China Minmetals Rare Earth Co Ltd,35
000836.SZ,944857,Tianjin Xinmao Science and Technology Co Ltd,35
000838.SZ,944298,Guoxing Rongda Real Estate Co Ltd,35
000839.SZ,944135,CITIC Guoan Information Industry Co Ltd,35
000848.SZ,944324,He Bei Cheng De LoLo Co Ltd,35
000858.SZ,944897,Wuliangye Yibin Co Ltd,35
000860.SZ,944054,Beijing Shunxin Agriculture Co Ltd,35
000861.SZ,944240,Guangdong Highsun Group Co Ltd,35
000863.SZ,944608,Sanxiang Co Ltd,35
000869.SZ,944944,Yantai Changyu Pioneer Wine Co Ltd,35
000875.SZ,944471,Jilin Power Share Co Ltd,35
000876.SZ,944554,New Hope Liuhe Co Ltd,35
000877.SZ,944928,Xinjiang Tianshan Cement Co Ltd,35
000878.SZ,944962,Yunnan Copper Co Ltd,35
000881.SZ,944104,China Dalian International Cooperation Group Holdings Ltd,35
000882.SZ,944040,Beijing Hualian Department Store Co Ltd,35
000883.SZ,954979,Hubei Energy Group Co Ltd,35
000885.SZ,944343,Henan Tongli Cement Co Ltd,35
000887.SZ,944020,Anhui Zhongding Sealing Parts Co Ltd,35
000889.SZ,944529,Maoye Logistics Corp Ltd,35
000895.SZ,944340,Henan Shuanghui Investment & Development Co Ltd,35
000898.SZ,944007,Angang Steel Co Ltd Class A,35
000900.SZ,944915,Xiandai Investment Co Ltd,35
000901.SZ,944003,Aerospace Hi-Tech Holding Group Co Ltd,35
000902.SZ,944380,Hubei Xinyangfeng Fertilizer Co Ltd,35
000903.SZ,944497,Kunming Yunnei Power Co Ltd,35
000910.SZ,944160,Dare Technology Co Ltd,35
000915.SZ,944645,Shandong Shanda Wit Science and Technology Co Ltd,35
000917.SZ,944398,Hunan TV & Broadcast Intermediary Co Ltd,35
000918.SZ,944102,China Calxon Group Co Ltd,35
000921.SZ,944351,Hisense Kelon Electrical Holdings Co Ltd,35
000926.SZ,944373,Hubei Fuxing Science and Technology Co Ltd,35
000928.SZ,944805,Sinosteel Engineering and Technology Co Ltd,35
000930.SZ,944142,Cofco Biochemical Anhui Co Ltd,35
000932.SZ,944399,Hunan Valin Steel Co Ltd,35
000933.SZ,944339,Henan Shenhuo Coal & Power Co Ltd,35
000935.SZ,944795,Sichuan Shuangma Cement Co Ltd,35
000936.SZ,944430,Jiangsu Huaxicun Co Ltd,35
000937.SZ,944485,Jizhong Energy Resources Co Ltd,35
000938.SZ,954980,Unisplendour Corp Ltd,35
000951.SZ,944139,CNHTC Jinan Truck Co. Ltd,35
000959.SZ,944052,Beijing Shougang Co Ltd,35
000960.SZ,944968,Yunnan Tin Co Ltd,35
000961.SZ,944457,Jiangsu Zhongnan Construction Group Co Ltd,35
000963.SZ,944359,Huadong Medicine Co Ltd,35
000969.SZ,944002,Advanced Technology & Materials Co Ltd,35
000970.SZ,944061,Beijing Zhong Ke San Huan High-Tech Co Ltd,35
000971.SZ,944376,Hubei Landing Holding Co Ltd,35
000975.SZ,944952,Yintai Resources Co Ltd,35
000977.SZ,946590,Inspur Electronic Info Industr,35
000980.SZ,944364,Huangshan Jinma Co Ltd,35
000981.SZ,944953,Yinyi Real Estate Co Ltd,35
000983.SZ,944680,Shanxi Xishan Coal and Electricity Power Co Ltd,35
000987.SZ,944274,Guangzhou Friendship Group Co Ltd,35
000988.SZ,944361,Huagong Tech Co Ltd,35
000989.SZ,944484,Jiuzhitang Co Ltd,35
000990.SZ,944097,Chengzhi Shareholding Co Ltd,35
000997.SZ,944198,Fujian Newland Computer Co Ltd,35
000998.SZ,944957,Yuan Longping High-tech Agriculture Co Ltd,35
000999.SZ,944117,China Resources Sanjiu Medical & Pharmaceutical Co Ltd,35
001696.SZ,944132,Chongqing Zongshen Power Machinery Co Ltd,35
001896.SZ,944345,Henan Yuneng Holdings Co Ltd,35
001965.SZ,1057041,Merchant Express Class A,35
001979.SZ,995189,China Merchants Shekou Industrial Zone Holdings,35
002001.SZ,945015,Zhejiang Nhu Co Ltd,35
002002.SZ,944356,Hongda Xingye Co Ltd,35
002004.SZ,944366,Huapont Life Sciences Co Ltd,35
002007.SZ,944363,Hualan Biological EngineeringInc,35
002008.SZ,944319,HanS Laser Tech A,35
002010.SZ,954981,Zhejiang Transfar Co Ltd,35
002013.SZ,944025,AVIC Electromechanical Systems Co Ltd,35
002016.SZ,944256,Guangdong Shirongzhaoye Co Ltd,35
002019.SZ,944949,Yifan Xinfu Pharmaceutical Co Ltd,35
002020.SZ,945004,Zhejiang Jingxin Pharmaceutical Co Ltd,35
002022.SZ,944661,Shanghai Kehua Bio-Engineering Co Ltd,35
002023.SZ,944785,Sichuan Haite High-tech Co Ltd,35
002024.SZ,944818,Suning Commerce Group Co Ltd,35
002025.SZ,944293,Guizhou Space Appliance Co Ltd,35
002027.SZ,944326,Hedy Holding Co Ltd,35
002028.SZ,944798,Sieyuan Electric Co Ltd,35
002029.SZ,944201,Fujian Septwolves Industry Co Ltd,35
002030.SZ,944149,Da An Gene Co Ltd of Sun Yat-Sen University,35
002031.SZ,944218,Greatoo Inc,35
002032.SZ,945025,Zhejiang Supor Co Ltd,35
002035.SZ,944873,Vatti Corp Ltd,35
002036.SZ,944333,Hemp Industrial Investment Co Ltd,35
002038.SZ,944055,Beijing SL Pharmaceutical Co Ltd,35
002041.SZ,944623,Shandong Denghai Seeds Co Ltd,35
002042.SZ,944360,Huafu Top Dyed Melange Yarn Co Ltd,35
002043.SZ,944162,Dehua TB New Decoration Material Co Ltd,35
002044.SZ,951657,Jiangsu Sanyou Group Co Ltd,35
002045.SZ,944296,Guoguang Electric Co Ltd,35
002047.SZ,944682,Shen Zhen Bauing Construction Holding Group Co Ltd,35
002048.SZ,944558,Ningbo Huaxiang Electronic Co Ltd,35
002049.SZ,944867,Tongfang Guoxin Electronics Co Ltd,35
002050.SZ,945354,Zhejiang Sanhua Co Ltd,35
002051.SZ,944103,China Camc Engineering Co Ltd,35
002055.SZ,944707,Shenzhen Deren Electronic Co Ltd,35
002056.SZ,944347,Hengdian Group DMEGC Magnetics Co Ltd,35
002061.SZ,945001,Zhejiang Jiangshan Chemical Co Ltd,35
002063.SZ,944948,YGSOFT Inc,35
002064.SZ,944999,Zhejiang Huafon Spandex Co Ltd,35
002065.SZ,944164,Dhc Software Co Ltd,35
002067.SZ,945005,Zhejiang Jingxing Paper Joint Stock Co Ltd,35
002073.SZ,944532,Mesnac Co Ltd,35
002074.SZ,944425,Guoxuan High-Tech Co Ltd,35
002075.SZ,944442,Jiangsu Shagang Co Ltd,35
002078.SZ,944621,Shan Dong Sun Paper Industry Joint Stock Co Ltd,35
002079.SZ,944830,Suzhou Good-Ark Electronics Co Ltd,35
002080.SZ,944802,Sinoma Science & Technology Co Ltd,35
002081.SZ,944829,Suzhou Gold Mantis Construction Decoration Co Ltd,35
002085.SZ,945028,Zhejiang Wanfeng Auto Wheel Co Ltd,35
002086.SZ,944641,Shandong Oriental Ocean Sci-Tech Co Ltd,35
002091.SZ,944428,Jiangsu Guotai International Group Guomao Co Ltd,35
002092.SZ,944930,Xinjiang Zhongtai Chemical Co Ltd,35
002093.SZ,944297,Guomai Technologies Inc,35
002094.SZ,944591,Qingdao Kingking Applied Chemistry Co Ltd,35
002097.SZ,944822,Sunward Intelligent Equipment Co Ltd,35
002099.SZ,944998,Zhejiang Hisoar Pharmaceutical Co Ltd,35
002100.SZ,944927,Xinjiang Tecon Animal Husbandry Bio-Technology Co Ltd,35
002104.SZ,944346,Hengbao Co Ltd,35
002106.SZ,944733,Shenzhen Laibao High-Technology Co Ltd,35
002108.SZ,944076,Cangzhou Mingzhu Plastic Co Ltd,35
002110.SZ,944607,Sansteel MinGuang Co Ltd Fujian,35
002117.SZ,944870,Tungkong Inc,35
002118.SZ,944473,Jilin Zixin Pharmaceutical Industrial Co Ltd,35
002120.SZ,944563,Ningbo Xinhai Electric Co Ltd,35
002121.SZ,944702,Shenzhen Clou Electronics Co Ltd,35
002123.SZ,951659,Rongxin Power Electronic Co Ltd,35
002124.SZ,944562,Ningbo Tech-Bank Co Ltd,35
002127.SZ,944450,Jiangsu Xinmin Textile Science & Technology Co Ltd,35
002128.SZ,944401,Huolinhe Opencut Coal Industry Corp Ltd of Inner Mongolia,35
002129.SZ,944858,Tianjin Zhonghuan Semiconductor Co Ltd,35
002130.SZ,944763,Shenzhen Woer Heat-Shrinkable Material Co Ltd,35
002131.SZ,944502,Leo Group Co Ltd,35
002138.SZ,944752,Shenzhen Sunlord Electronics Co Ltd,35
002139.SZ,944758,Shenzhen Topband Co Ltd,35
002142.SZ,944029,Bank of Ningbo Co Ltd,35
002143.SZ,944951,Yinji Entertainment Media Co Ltd,35
002145.SZ,944141,CNNC Hua Yuan Titanium Dioxide Co Ltd,35
002146.SZ,944599,Risesun Real Estate Development Co Ltd,35
002147.SZ,944525,Maanshan Fangyuan Slewing Ring Co Ltd,35
002151.SZ,944035,Beijing BDStar Navigation Co Ltd,35
002152.SZ,951660,GRG Banking Equipment Co Ltd,35
002153.SZ,944051,Beijing Shiji Information Technology Co Ltd,35
002155.SZ,944099,Hunan Gold Corp Ltd,35
002156.SZ,944549,Nantong Fujitsu Microelectronics Co Ltd,35
002157.SZ,954983,Jiangxi Zhengbang Technology Co Ltd,35
002158.SZ,944658,Shanghai Hanbell Precise Machinery Co Ltd,35
002167.SZ,944250,Guangdong Orient Zirconic Ind Sci & Tech Co Ltd,35
002168.SZ,945356,Shenzhen Hifuture Electric,35
002174.SZ,944956,YOUZU Interactive Co Ltd,35
002176.SZ,944462,Jiangxi Special Electric Motor Co Ltd,35
002179.SZ,944100,China Aviation Optical-Electrical Technology Co Ltd,35
002180.SZ,954985,Apex Technology Co Ltd,35
002183.SZ,944181,Eternal Asia Supply Chain Management Ltd,35
002185.SZ,944862,Tianshui Huatian Technology Co Ltd,35
002190.SZ,944779,Sichuan Chengfei Integration Technology Corp Ltd,35
002191.SZ,944727,Shenzhen Jinjia Color Printing Group Co Ltd,35
002192.SZ,944520,Youngy Co Ltd,35
002195.SZ,944659,Shanghai 2345 Network Holding Group,35
002202.SZ,944923,Xinjiang Goldwind Science & Technology Co Ltd Class A,35
002203.SZ,944995,Zhejiang Hailiang Co Ltd,35
002204.SZ,944152,Dalian Huarui Heavy Industry Group Co Ltd,35
002206.SZ,944996,Zhejiang Hailide New Material Co Ltd,35
002210.SZ,944711,Shenzhen Feima International Supply Chain Co Ltd,35
002212.SZ,944248,Guangdong Nanyang Cable Group Holding Co Ltd,35
002215.SZ,944739,Shenzhen Noposion Agrochemicals Co Ltd,35
002217.SZ,946597,Holitech Technology Co Ltd,35
002221.SZ,944575,Oriental Energy Co Ltd,35
002222.SZ,944078,Castech Inc,35
002223.SZ,944455,Jiangsu Yuyue Medical Equipment & Supply Co Ltd,35
002226.SZ,944017,Anhui Jiangnan Chemical Industry Co Ltd,35
002230.SZ,944403,Iflytek Co Ltd,35
002233.SZ,944259,Guangdong Tapai Group Co Ltd,35
002236.SZ,944983,Zhejiang Dahua Technology Co Ltd,35
002237.SZ,944628,Shandong Humon Smelting Co Ltd,35
002239.SZ,944435,Jiangsu Kingfield Garments Co Ltd,35
002240.SZ,944261,Guangdong Weihua Corp,35
002241.SZ,944212,Goertek Inc,35
002242.SZ,944487,Joyoung Co Ltd,35
002244.SZ,944311,Hangzhou Binjiang Real Estate Group Co Ltd,35
002245.SZ,944419,Jiangsu Aucksun Co Ltd,35
002246.SZ,944792,Sichuan Nitrocell Corp,35
002247.SZ,944984,Zhejiang Dilong New Material Co Ltd,35
002249.SZ,945049,Zhongshan Broad-Ocean Motor Co Ltd,35
002250.SZ,944504,Lianhe Chemical Technology Co Ltd,35
002251.SZ,944064,Better Life Commercial Chain Share Co Ltd,35
002254.SZ,944946,Yantai Tayho Advanced Materials Co Ltd,35
002258.SZ,944508,Lier Chemical Co Ltd,35
002261.SZ,944841,Talkweb Information System Co Ltd,35
002262.SZ,944440,Jiangsu Nhwa Pharmaceutical Co Ltd,35
002266.SZ,944976,Zhefu Holding Group Co Ltd,35
002267.SZ,944616,Shaanxi Provincial Natural Gas Co Ltd,35
002268.SZ,944885,Westone Information Industry Inc,35
002269.SZ,944664,Shanghai Metersbonwe Fashion&Accessories Co Ltd,35
002271.SZ,944047,Beijing Oriental Yuhong Waterproof Technology Co Ltd,35
002273.SZ,944982,Zhejiang Crystal Optech Co Ltd,35
002275.SZ,944288,Guilin Sanjin Pharmaceutical Co Ltd,35
002277.SZ,944389,Hunan Friendship&Apollo Commercial Co Ltd,35
002279.SZ,944042,Beijing Join-Cheer Software Co Ltd,35
002280.SZ,944316,Hangzhou New Century Info Tech,35
002281.SZ,944001,Accelink Technologies Co Ltd,35
002283.SZ,944861,Tianrun Crankshaft Co Ltd,35
002284.SZ,944978,ZHEJIANG ASIA-PACIFIC MECHANICAL & ELECTRONIC CO LTD,35
002285.SZ,944764,Shenzhen Worldunion Properties Consultancy Inc,35
002287.SZ,944863,Tibet Cheezheng Tibetan Medicine Co Ltd,35
002292.SZ,944223,Guangdong Alpha Animation and Culture Co Ltd,35
002293.SZ,944515,Luolai Home Textile Co Ltd,35
002294.SZ,944745,Shenzhen Salubris Pharmaceuticals Co Ltd,35
002299.SZ,944204,Fujian Sunner Development Co Ltd,35
002301.SZ,944703,Shenzhen Comix Group Co Ltd,35
002302.SZ,944123,China West Construction Group Co Ltd,35
002303.SZ,944736,Shenzhen MYS Environmental Protection & Technology Co Ltd,35
002304.SZ,944451,Jiangsu Yanghe Brewery Joint-Stock Co Ltd,35
002305.SZ,944891,Wuhan Langold Real Estate Co Ltd,35
002307.SZ,944921,Xinjiang Beixin Road&Bridge Group Co Ltd,35
002308.SZ,946601,Vtron Technologies Ltd,35
002310.SZ,944046,Beijing Orient Landscape Co Ltd,35
002311.SZ,944239,Guangdong Haid Group Co Ltd,35
002313.SZ,944820,SUNSEA Telecommunications Co Ltd,35
002314.SZ,944940,Yahgee Modular House Group Co Ltd,35
002317.SZ,944265,Guangdong Zhongsheng Pharmaceutical Co Ltd,35
002320.SZ,944307,Hainan Strait Shipping Co Ltd,35
002322.SZ,944560,Ningbo Ligong Online Monitoring Technology Co Ltd,35
002325.SZ,944721,Shenzhen Hongtao Decoration Co Ltd,35
002327.SZ,944713,Shenzhen Fuanna Bedding and Furnishing Co Ltd,35
002334.SZ,944725,Shenzhen INVT Electric Co Ltd,35
002340.SZ,944716,Shenzhen Green Eco-manufacture Hi-tech Co Ltd,35
002341.SZ,944748,Shenzhen Selen Science & Technology Co Ltd,35
002343.SZ,944997,Zhejiang Hexin Industry Group Co Ltd,35
002344.SZ,944309,Haining China Leather Market Co Ltd,35
002345.SZ,944227,Guangdong CHJ Industry Co Ltd,35
002349.SZ,944551,Nantong Jinghua Pharmaceutical Co Ltd,35
002352.SZ,944524,Maanshan Dingtai Rare Earth and New Materials Co Ltd,35
002353.SZ,944945,Yantai Jereh Oilfield Services Group Co Ltd,35
002354.SZ,950745,Dalian Zeus Entertainment,35
002358.SZ,944338,Henan Senyuan Electric Co Ltd,35
002359.SZ,1017422,Shandong Qixing Iron Tower Co Ltd,35
002365.SZ,944582,Qianjiang Yongan Pharmaceutical Co Ltd,35
002366.SZ,944781,Sichuan Danfu Compressor Co Ltd,35
002367.SZ,944077,Canny Elevator Co Ltd,35
002368.SZ,944839,Taiji Computer Corp Ltd,35
002371.SZ,944049,Beijing Sevenstar Electronics Co Ltd,35
002372.SZ,945032,Zhejiang Weixing New Building Materials Co Ltd,35
002373.SZ,944119,China TransInfo Technology Co Ltd,35
002376.SZ,944640,Shandong New Beiyang Information Technology Co Ltd,35
002378.SZ,944133,Chongyi Zhangyuan Tungsten Co Ltd,35
002382.SZ,944067,Blue Sail Medical Co Ltd,35
002383.SZ,944057,Beijing UniStrong Science & Technology Co Ltd,35
002384.SZ,944828,Suzhou Dongshan Precision Manufacturing Co Ltd,35
002385.SZ,944039,Beijing Dabeinong Technology Group Co Ltd,35
002387.SZ,944066,Blackcow Food Co Ltd,35
002389.SZ,945013,Zhejiang Nanyang Technology Co Ltd,35
002390.SZ,944294,Guizhou Xinbang Pharmaceutical Co Ltd,35
002396.SZ,946596,Fujian Star Net Communic Ltd,35
002399.SZ,944720,Shenzhen Hepalink Pharmaceutical Co Ltd,35
002400.SZ,944222,Guangdong Advertising Co Ltd,35
002402.SZ,944718,Shenzhen H&T Intelligent Control Co Ltd,35
002405.SZ,944552,Navinfo Co Ltd,35
002407.SZ,944167,Do-Fluoride Chemicals Co Ltd,35
002408.SZ,945059,Zibo Qixiang Tengda Chemical Co Ltd,35
002409.SZ,944454,Jiangsu Yoke Technology Co Ltd,35
002410.SZ,944211,Glodon Software Co Ltd,35
002411.SZ,951665,Jiangsu Jiujiujiu Technology Co Ltd,35
002413.SZ,944421,Jiangsu Changfa Refrigeration Co Ltd,35
002414.SZ,944889,Wuhan Guide Infrared Co Ltd,35
002415.SZ,944315,Hangzhou Hikvision Digital Technology Co Ltd,35
002416.SZ,944692,Shenzhen Aisidi Co Ltd,35
002418.SZ,944975,Zhe Jiang Kangsheng Co Ltd,35
002419.SZ,944596,Rainbow Department Store Co Ltd,35
002421.SZ,944706,Shenzhen Das Intellitech Co Ltd,35
002422.SZ,944789,Sichuan Kelun Pharmaceutical Co Ltd,35
002424.SZ,944290,Guizhou Bailing Group Pharmaceutical Co Ltd,35
002426.SZ,944836,Suzhou Victory Precision Manufacture Co Ltd,35
002428.SZ,944964,Yunnan Lincang Xinyuan Germanium Industrial Co Ltd,35
002429.SZ,944735,Shenzhen MTC Co Ltd,35
002430.SZ,944314,Hangzhou Hangyang Co Ltd,35
002431.SZ,944576,Palm Landscape Architecture Co Ltd,35
002433.SZ,944258,Guangdong Taiantang Pharmaceutical Co Ltd,35
002434.SZ,945029,Zhejiang Wanliyang Transmission Co Ltd,35
002436.SZ,944710,Shenzhen Fastprint Circuit Tech Co Ltd,35
002437.SZ,945361,Harbin Gloria Pharmaceuticals,35
002439.SZ,951666,Beijing Venustech Inc,35
002440.SZ,945019,Zhejiang Runtu Co Ltd,35
002444.SZ,944313,Hangzhou Great Star Industrial Co Ltd,35
002446.SZ,944255,Guangdong Shenglu Telecommunication Tech Co Ltd,35
002447.SZ,944157,Dalian Yi Qiao Sea Cucumber Co Ltd,35
002449.SZ,944189,Foshan Nationstar Optoelectronics Co Ltd,35
002450.SZ,944434,Jiangsu Kangde Xin Composite Material Co Ltd,35
002456.SZ,944740,Shenzhen O-Film Tech Co Ltd,35
002458.SZ,944653,Shandong Yisheng Livestock & Poultry Breeding Co Ltd,35
002460.SZ,944458,Jiangxi Ganfeng Lithium Co Ltd,35
002461.SZ,944284,Guangzhou Zhujiang Brewery Co Ltd,35
002462.SZ,944075,Cachet Pharmaceutical Co Ltd,35
002463.SZ,944898,WUS Printed Circuit Kunshan Co Ltd,35
002465.SZ,944276,Guangzhou Haige Communications Group Incorporated Co,35
002466.SZ,944796,Sichuan Tianqi Lithium Industries Inc,35
002468.SZ,945000,Zhejiang IDC Fluid Control Co Ltd,35
002470.SZ,944494,Kingenta Ecological Engineering Group Co Ltd,35
002475.SZ,944521,Luxshare Precision Industry Co Ltd,35
002477.SZ,944134,Chuying Agro-Pastoral Group Co Ltd,35
002479.SZ,944991,Zhejiang Fuchunjiang Environmental Thermoelectric Co Ltd,35
002481.SZ,944941,Yan Tai Shuang Ta Food Co Ltd,35
002482.SZ,944715,Shenzhen Grandland Decoration Group Co Ltd,35
002484.SZ,944550,Nantong Jianghai Capacitor Co Ltd,35
002488.SZ,945003,Zhejiang Jingu Co Ltd,35
002489.SZ,944955,Yotrio Group Co Ltd,35
002490.SZ,944639,Shandong Molong Petroleum Machinery Co Ltd,35
002491.SZ,944447,Tongding Interconnection Information,35
002493.SZ,944601,Rongsheng Petrochemical Co Ltd,35
002497.SZ,944797,Sichuan Yahua Industrial Group Co Ltd,35
002498.SZ,944590,Qingdao Hanhe Cable Co Ltd,35
002500.SZ,944677,Shanxi Securities Co Ltd,35
002501.SZ,944470,Jilin Liyuan Precision Manufacturing Co Ltd,35
002502.SZ,944369,Huawei Technology Co Ltd,35
002503.SZ,944172,Dongguan Souyute Fashion Co Ltd,35
002505.SZ,944387,Hunan Dakang Pasture Farming Co Ltd,35
002506.SZ,958792,GCL System Integration Technology Co Ltd,35
002508.SZ,944317,Hangzhou Robam Appliances Co Ltd,35
002509.SZ,951668,Tianguang Fire-Fighting Co Ltd,35
002511.SZ,944074,C&S Paper Co Ltd,35
002512.SZ,954989,Tatwah Smartech Co Ltd,35
002515.SZ,944482,Jinzi Ham Co Ltd,35
002516.SZ,944436,Kuangda Technology Group Co Ltd,35
002517.SZ,951669,Taiya Shoes Co Ltd,35
002518.SZ,944732,Shenzhen Kstar Science & Technology Co Ltd,35
002519.SZ,944453,Jiangsu Yinhe Electronics Co Ltd,35
002522.SZ,945043,Zhejiang Zhongcheng Packing Material Co Ltd,35
002527.SZ,944668,Shanghai STEP Electric Corp,35
002530.SZ,944427,Jiangsu Fengdong Thermal Technology Co Ltd,35
002537.SZ,944589,Qingdao Haili Metal One Co Ltd,35
002540.SZ,944418,Jiangsu Asia Pacific Light Alloy Technology Co Ltd,35
002542.SZ,944127,China Zhonghua Geotechnical Engineering Co Ltd,35
002544.SZ,944208,Gci Science & Technology Co Ltd,35
002545.SZ,944588,Qingdao East Steel Tower Stock Co Ltd,35
002547.SZ,944827,SuZhou ChunXing Precision Mechanical Co Ltd,35
002550.SZ,944087,Changzhou Qianhong Biopharma Co Ltd,35
002551.SZ,944714,Shenzhen Glory Medical Co Ltd,35
002555.SZ,944895,Wuhu Shunrong Auto Parts Co Ltd,35
002557.SZ,944583,Qiaqia Food Co Ltd,35
002558.SZ,1017433,Giant Network Group Co Ltd,35
002563.SZ,945021,Zhejiang Semir Garment Co Ltd,35
002568.SZ,944655,Shanghai Bairun Flavor & Fragrance Co Ltd,35
002572.SZ,944824,Suofeiya Home Collection Co Ltd,35
002573.SZ,944056,Beijing SPC Environment Protection Tech Co Ltd,35
002583.SZ,944402,Hytera Communications Corp Ltd,35
002588.SZ,944812,Stanley Fertilizer Co Ltd,35
002589.SZ,944643,Shandong Realcan Pharmaceutical Co Ltd,35
002594.SZ,944073,BYD Co Ltd Class A,35
002595.SZ,944627,Shandong Himile Mechanical Science & Technology Co Ltd,35
002596.SZ,944306,Hainan RuiZe New Building Material Co Ltd,35
002597.SZ,944018,Anhui Jinhe Industrial Co Ltd,35
002600.SZ,944488,JPMF Guangdong Co Ltd,35
002601.SZ,944334,Henan Billions Chemicals Co Ltd,35
002602.SZ,1017444,Zhejiang Century Huatong Group Co Ltd,35
002603.SZ,944772,Shijiazhuang Yiling Pharmaceutical Co Ltd,35
002608.SZ,944603,Sainty Marine Corp Ltd,35
002609.SZ,944726,Shenzhen Jieshun Science and Technology Industry Co Ltd,35
002610.SZ,944416,Jiangsu Akcome Science & Technology Co Ltd,35
002611.SZ,944229,Guangdong Dongfang Precision Science & Technology Co Ltd,35
002614.SZ,944905,Xiamen Comfort Science&Technology Group Co Ltd,35
002616.SZ,944225,Guangdong Chant Group Inc,35
002618.SZ,944705,Shenzhen Danbond Technology Co Ltd,35
002619.SZ,944987,Zhejiang Dragon Pipe Manufacturing Co Ltd,35
002622.SZ,944472,Jilin Yongda Group Co Ltd,35
002624.SZ,945006,Zhejiang Jinlei Refractories Co Ltd,35
002625.SZ,951671,Zhejiang Longsheng Auto Parts Co Ltd,35
002626.SZ,944908,Xiamen Kingdomway Group Co,35
002630.SZ,944124,China Western Power Industrial Co Ltd,35
002631.SZ,944163,Der International Home Furnishing Co Ltd,35
002635.SZ,944825,Suzhou Anjie Technology Co Ltd,35
002636.SZ,944215,Goldenmax International Technology Ltd,35
002640.SZ,944675,Shanxi Baiyuan Trousers Chain Management Co Ltd,35
002642.SZ,944871,United Electronics Co Ltd,35
002643.SZ,944947,Valiant Co Ltd,35
002646.SZ,944593,Qinghai Huzhu Barley Wine Co Ltd,35
002648.SZ,945020,Zhejiang Satellite Petrochemical Co Ltd,35
002649.SZ,944065,Beyondsoft Corp,35
002650.SZ,944412,Jiajia Food Group Co Ltd,35
002651.SZ,944092,Chengdu Leejun Industrial Co Ltd,35
002653.SZ,944936,Xizang Haisco Pharmaceutical Group Co Ltd,35
002656.SZ,944271,Guangzhou Canudilo Fashion and Accessories Co Ltd,35
002657.SZ,944800,Sinodata Co Ltd,35
002658.SZ,944048,Beijing SDL Technology Co Ltd,35
002662.SZ,944059,Beijing WKW Automotive Parts Co Ltd,35
002664.SZ,944934,Xinzhi Motor Co Ltd,35
002665.SZ,944053,Beijing Shouhang Resources Saving Co Ltd,35
002668.SZ,944241,Guangdong Homa Appliances Co Ltd,35
002670.SZ,944244,GuangDong Huasheng Electrical Appliances Co Ltd,35
002672.SZ,944174,Dongjiang Environmental Co Ltd,35
002673.SZ,944884,Western Securities Co Ltd,35
002678.SZ,944279,Guangzhou Pearl River Piano Group Co Ltd,35
002681.SZ,944712,Shenzhen Fenda Technology Co Ltd,35
002685.SZ,944901,Wuxi Huadong Heavy Machinery Co Ltd,35
002690.SZ,944330,Hefei Meiya Optoelectronic Technology Inc,35
002695.SZ,944461,Jiangxi Huangshanghuang Group Food Co Ltd,35
002697.SZ,944089,Chengdu Hongqi Chain Co Ltd,35
002698.SZ,944322,Harbin Boshi Automation Co Ltd,35
002699.SZ,944531,Meisheng Cultural & Creative Corp Ltd,35
002701.SZ,944574,ORG Packaging Co Ltd,35
002707.SZ,944058,Beijing Utour International Travel Service Co Ltd,35
002709.SZ,944282,Guangzhou Tinci Materials Technology Co Ltd,35
002711.SZ,944233,Europol Intelligent Network Co Ltd,35
002714.SZ,944536,Muyuan Foodstuff Co Ltd,35
002716.SZ,944098,Chenzhou Jingui Silver Industry Co Ltd,35
002721.SZ,944043,Beijing Kingee Culture Development Co Ltd,35
002727.SZ,944963,Yunnan Hongxiang Yixintang Pharmaceutical Co Ltd,35
002736.SZ,945328,Guosen Securities Co Ltd,35
002739.SZ,945339,Wanda Cinema Line Corp,35
002745.SZ,945809,MLS Co Ltd,35
002773.SZ,955823,Chengdu Kanghong Pharmaceuticals Group Co Ltd,35
002797.SZ,1017577,First Capital Securities Co Ltd Class A,35
002807.SZ,1017597,Jiangsu Jiangyin Rural Commercial Bank Co Ltd,35
002812.SZ,1017602,Yunnan Chuangxin New Material Co Ltd,35
002821.SZ,1017609,Asymchem Laboratories Tian Jin Co Ltd,35
002831.SZ,1017348,ShenZhen YUTO Packaging Technology Co Ltd,35
002839.SZ,1013749,Jiangsu Zhangjiagang Rural Commercial Bank Co Ltd,35
002841.SZ,1013750,Guangzhou Shiyuan Electronic Technology Co Ltd,35
002907.SZ,1053066,Chongqing Pharscin Pharmaceutical Co Ltd,35
002911.SZ,1056078,Foshan Gas Group Co Ltd Class A,35
002916.SZ,1057044,Shennan Circuits Co Ltd Class A,35
002920.SZ,1057343,Huizhou Desay SV Automotive Co Ltd Class A,35
300001.SZ,953766,Qingdao TGOOD Electric Co Ltd,35
300002.SZ,950754,Beijing Ultrapower Software,35
300003.SZ,950755,Lepu Medical Tech Beijing,35
300009.SZ,950759,Anhui Anke BioTech Group,35
300010.SZ,950760,Beijing Lanxum Tech Co,35
300014.SZ,950764,EVE Energy,35
300015.SZ,950765,Aier Eye Hospital Group,35
300017.SZ,950767,Wangsu Science Tech,35
300020.SZ,950770,Enjoyor,35
300024.SZ,950773,SIASUN Robot Automation Co,35
300026.SZ,954999,Tianjin Chase Sun Pharmaceutical Co Ltd,35
300027.SZ,945331,Huayi Brothers Media Corp,35
300033.SZ,950779,Hithink RoyalFlush Info Network,35
300036.SZ,953768,Beijing SuperMap Software Co Ltd,35
300038.SZ,1017421,Beijing Miteno Communication Technology Co Ltd,35
300053.SZ,950796,Zhuhai Orbita Control Eng,35
300054.SZ,950797,Hubei Dinglong Chemical,35
300055.SZ,950798,Beijing Water Business Doctor,35
300058.SZ,950801,BlueFocus Communication Group,35
300059.SZ,953769,East Money Information Co Ltd,35
300068.SZ,950807,Zhejiang Narada Power Source,35
300070.SZ,945332,Beijing Originwater Technology,35
300072.SZ,950810,Beijing Sanju Environmental,35
300073.SZ,950811,Beijing Easpring Material Tech,35
300075.SZ,950813,Beijing eGOVA,35
300078.SZ,1017423,Hangzhou Century Co Ltd,35
300083.SZ,1017424,JANUS Dongguan Precision Components Co Ltd,35
300085.SZ,1017425,Shenzhen InfoGem Technologies Co Ltd,35
300088.SZ,950823,Wuhu Token Sciences,35
300090.SZ,953771,Anhui Shengyun Environment-Protection Group Co Ltd,35
300098.SZ,1025092,Gosuncn Technology Group Co Ltd Class A,35
300101.SZ,955001,Chengdu CORPRO Technology Co Ltd,35
300113.SZ,950840,Hangzhou Shunwang Tech,35
300115.SZ,950841,Shenzhen Everwin Precision Tech,35
300116.SZ,953775,Shaanxi J&amp;R Fire Protection Co Ltd,35
300118.SZ,950843,Risen Energy,35
300122.SZ,950845,Chongqing Zhifei Bio Products,35
300124.SZ,950847,Shenzhen Inovance Tech,35
300133.SZ,950853,Zhejiang Huace Film TV Co,35
300134.SZ,950854,Shenzhen Tatfook Tech,35
300136.SZ,950856,Shenzhen Sunway Communication,35
300142.SZ,950859,Walvax BioTech,35
300144.SZ,950860,Songcheng Performance Develop,35
300145.SZ,950861,Nanfang Pump Industry,35
300146.SZ,950862,By health,35
300156.SZ,950870,Shenwu Environmental Tech,35
300159.SZ,950873,Xinjiang Machinery Research Inst,35
300166.SZ,950878,BI of Oriental Nations,35
300168.SZ,950880,Wonders Information,35
300170.SZ,950881,Hand Enterprise Solutions Co,35
300182.SZ,950888,Beijing Jetsen Tech Co,35
300188.SZ,950893,Xiamen Meiya Pico Information,35
300197.SZ,950900,Shenzhen Techand Eco Environment,35
300199.SZ,950902,Hybio Pharmaceutical,35
300203.SZ,950905,Focused Photonics Hangzhou Inc,35
300207.SZ,950909,Sunwoda Electronic,35
300212.SZ,950913,Beijing E Hualu Info Tech,35
300222.SZ,1017437,Csg Smart Science&amp;Technology Co Ltd,35
300226.SZ,950924,Shanghai Ganglian E Commerce,35
300244.SZ,950933,Zhejiang DiAn Diagnostics Co,35
300251.SZ,950935,Beijing Enlight Media,35
300253.SZ,950936,Shanghai Kingstar Winning Software,35
300257.SZ,950938,Zhejiang Kaishan Compressor,35
300266.SZ,953797,Xingyuan Environment Technology Co Ltd,35
300271.SZ,953798,Beijing Thunisoft Co Ltd,35
300273.SZ,950947,Zhuhai Hokai Med Instruments,35
300274.SZ,953799,Sungrow Power Supply Co Ltd,35
300285.SZ,950950,Shandong Sinocera Func Material,35
300287.SZ,950951,Beijing Philisense Tech,35
300291.SZ,950954,Beijing Hualu Baina Film TV,35
300294.SZ,950956,Jiangxi Boya Bio Pharma,35
300296.SZ,950958,Leyard Optoelectronic,35
300308.SZ,1017465,Shandong Zhongji Electrical Equipment Co Ltd,35
300310.SZ,1017467,Guangdong Eastone Century Technology Co Ltd,35
300315.SZ,950966,Ourpalm,35
300316.SZ,950967,Zhejiang Jingsheng Mech Electric,35
300317.SZ,1017471,Shenzhen Jiawei Photovoltaic Lighting Co Ltd,35
300323.SZ,950968,HC Semitek Corp,35
300324.SZ,1017475,Beijing Watertek Information Technology Co Ltd,35
300347.SZ,950981,Hangzhou Tigermed Consulting,35
300353.SZ,1017486,Kyland Technology Co Ltd,35
300355.SZ,950983,Inner Mongolia Hotision Monsod,35
300364.SZ,945336,Beijing Chinese All Digital Publishing Co Ltd,35
300367.SZ,955003,NetPosa Technologies Ltd,35
300373.SZ,1017496,Yangzhou Yangjie Electronic Technology Co Ltd,35
300377.SZ,1017504,Shenzhen Ysstech Info-Tech Co Ltd,35
300383.SZ,1017508,Beijing Sinnet Technology Co Ltd,35
300408.SZ,1017529,Chaozhou Three-circle Group Co Ltd,35
300413.SZ,945335,Happigo Home Shopping Co Ltd,35
300418.SZ,945334,Beijing Kunlun Tech Co Ltd,35
300431.SZ,948412,Beijing Baofeng Technology Co Ltd,35
300433.SZ,948413,Lens Technology Co Ltd,35
300450.SZ,953956,Wuxi Lead Auto Equipment Co Ltd,35
300458.SZ,953960,All Winner Technology Co Ltd,35
300459.SZ,953961,Zhejiang Jinke Peroxides Co Ltd,35
300463.SZ,953965,Sichuan Maker Biotechnology Co Ltd,35
300474.SZ,1017564,Changsha Jingjia Microelectronics Co Ltd,35
300476.SZ,955012,Victory Giant Technology Huizhou Co Ltd,35
300496.SZ,1017539,Thunder Software Technology Co Ltd,35
300498.SZ,1017555,Guangdong Wens Foodstuff Group Co Ltd,35
300558.SZ,1017650,Betta Pharmaceuticals Co Ltd,35
300601.SZ,1013776,Shenzhen Kangtai Biological Products Co Ltd,35
300618.SZ,1017297,Nanjing Hanrui Cobalt Co Ltd,35
300628.SZ,1017301,Yealink Network Technology Corp Ltd,35
300666.SZ,1017343,Konfoong Materials International Co Ltd,35
300676.SZ,1025093,BGI Genomics Co Ltd,35
300699.SZ,1043350,Weihai Guangwei Composites Co Ltd,35
000035.SZ,946604,China Tianying Inc,35
000070.SZ,951643,Shenzhen SDG Information Co,35
000498.SZ,945309,Shandong Hi-Speed Road&Bridge,35
000501.SZ,945310,Wuhan Department Store Group,35
000533.SZ,945312,Guangdong Macro Co,35
000558.SZ,945313,Lander Sports Development Co,35
000584.SZ,954977,Jiangsu Youli Investment Holding Co,35
000676.SZ,1013780,Genimous Technology Co,35
000719.SZ,954978,Central China Land Media Co,35
000796.SZ,951652,Hna-Caissa Travel Group Co,35
000957.SZ,945052,Zhongtong Bus Holding Co,35
000968.SZ,951654,Taiyuan Coal Gasification Co,35
000976.SZ,946595,Guangdong Kaiping Chunhui Ltd,35
002068.SZ,945317,Jiangxi Black Cat Carbon Black,35
002095.SZ,945014,Zhejiang Netsun Co,35
002126.SZ,945037,Zhejiang Yinlun Machinery Co,35
002135.SZ,945024,Zhejiang Southeast Space Frame Co,35
002171.SZ,954984,Anhui Jingcheng Copper Share Co,35
002178.SZ,945319,Shanghai Yanhua Smartech Group,35
002252.SZ,944666,Shanghai RAAS Blood Products Co,35
002256.SZ,946589,Rainbow Fine Chemical Industry,35
002276.SZ,945030,Zhejiang Wanma Co Ltd,35
002298.SZ,951662,Anhui Xinlong Electrical Co,35
002309.SZ,945048,Zhongli Science and Technology Group,35
002324.SZ,945320,Shanghai Pret Composites,35
002326.SZ,945038,Zhejiang Yongtai Technology Co,35
002332.SZ,945033,Zhejiang Xianju Pharmaceutical Co,35
002335.SZ,945360,Xiamen Kehua Hengsheng,35
002375.SZ,945034,Zhejiang Yasha Decoration Co,35
002425.SZ,945324,Kaiser China Holding Co,35
002464.SZ,1046293,Kee Ever Bright Decorative Technology,35
002507.SZ,951667,Chongqing Fuling Zhacai Group Co,35
002531.SZ,945364,Titan Wind Energy Suzhou,35
002581.SZ,945060,Zibo Wanchang Science & Technology Co,35
002586.SZ,945017,Zhejiang Reclaim Construction Group Co,35
002617.SZ,951670,Roshow Technology Co Ltd,35
002677.SZ,945010,Zhejiang Meida Industrial Co,35
002663.SZ,951672,Pubang Landscape Architecture Co,35
002703.SZ,945022,Zhejiang Shibao Co Ltd,35
002717.SZ,945327,Lingnan Landscape Co,35
002737.SZ,945329,Sunflower Pharmaceuticals Group Co,35
002747.SZ,948408,Nanjing ESTUN Automation Co,35
002752.SZ,951065,ShengXing Group Co,35
002766.SZ,954997,Shenzhen Soling Industrial Co,35
002792.SZ,1017563,Tongyu Communication Inc,35
002818.SZ,1017606,Chengdu Fusen Noble-House Industrial Co,35
002815.SZ,1017346,Shenzhen Suntak Circuit Technology Co,35
002833.SZ,1017618,Guangzhou KDT Machinery Co,35
002850.SZ,1017356,Shenzhen Kedali Industry Co Ltd,35
002859.SZ,1017360,Zhejiang Jiemei Electronic and Technology Co,35
002867.SZ,1017365,Chow Tai Seng Jewellery Co,35
002895.SZ,1043340,Guizhou Chanhen Chemical Corp,35
002901.SZ,1052637,Double Medical Technology Inc,35
002906.SZ,1052867,Foryou Corp,35
002910.SZ,1054781,Lanzhou Zhuangyuan Pasture Co,35
002912.SZ,1056079,Shenzhen Sinovatio Technology Co,35
002913.SZ,1057042,Aoshikang Technology Co Ltd,35
002918.SZ,1057046,Monalisa Group Co Ltd,35
002936.SZ,1112823,Bank of Zhengzhou Co Ltd,35
300008.SZ,1017419,Bestway Marine & Energy Technology Co,35
300012.SZ,950762,Centre Testing Intl Shenzhen,35
300031.SZ,950777,Wuxi Boton Technology Co,35
300032.SZ,950778,Jinlong Machinery Electronic,35
300037.SZ,950782,Shenzhen Capchem Tech,35
300039.SZ,950783,Shanghai Kaibao Pharmaceutical,35
300043.SZ,950786,Rastar Group,35
300044.SZ,950787,Shenzhen Sunwin Intelligent,35
300045.SZ,950788,Hwa Create Corp Ltd,35
300064.SZ,950804,Zhengzhou Sino Crystal Diamond,35
300065.SZ,955000,Beijing Highlander Digital Technology Co,35
300091.SZ,950825,JiangSu Jin Tong Ling Fluid Mach,35
300097.SZ,1017426,Dalian Zhiyun Automation Co,35
300100.SZ,950831,Ningbo Shuanglin Auto Parts,35
300102.SZ,950832,Xiamen Changelight,35
300109.SZ,950837,Boai NKY Pharmaceuticals Ltd,35
300110.SZ,1017427,Huaren Pharmaceutical Co Ltd,35
300128.SZ,950850,Suzhou Jinfu New Material Co,35
300131.SZ,953778,ShenZhen Yitoa Intelligent Control Co,35
300137.SZ,950857,Hebei Sailhero Environmental,35
300148.SZ,950864,Tangel Publishing,35
300178.SZ,950885,Shenzhen Tempus Global Business,35
300180.SZ,950887,Huafon Microfibre Shanghai Co,35
300183.SZ,950889,Qingdao Eastsoft Communic Tech,35
300185.SZ,950891,Tongyu Heavy Industry,35
300187.SZ,950892,Yonker Environmental Protect,35
300191.SZ,950895,Sino Geophysical,35
300202.SZ,950904,Julong,35
300204.SZ,950906,Staidson Beijing Biopharma,35
300215.SZ,950915,Suzhou Electrical Apparatus Sci,35
300221.SZ,950920,Guangdong Silvere Sci and Tech,35
300224.SZ,950922,Yantai Zhenghai Magnetic Mat,35
300229.SZ,950926,Beijing TRS Information Tech,35
300232.SZ,1017440,Unilumin Group Co Ltd,35
300236.SZ,950930,Shanghai Sinyang Semiconductor,35
300237.SZ,1017441,Shandong Meichen Science & Technology Co,35
300252.SZ,1046303,Kingsignal Technology Co Ltd,35
300255.SZ,950937,Hebei Changshan Biochem Pharma,35
300284.SZ,950949,Jsti Group,35
300288.SZ,950952,Longmaster Information Tech,35
300292.SZ,1017461,Wutong Holding Group Co Ltd,35
300297.SZ,950959,Bluedon Info Security Tech,35
300298.SZ,955002,Sinocare Inc,35
300300.SZ,1017463,Hakim Unique Internet Co,35
300304.SZ,950962,Jiangsu Yunyi Electric,35
300307.SZ,950965,Ningbo Cixing,35
300327.SZ,950970,Sino Wealth Electronic Ltd,35
300335.SZ,950974,Guangzhou Devotion Therm Tech,35
300336.SZ,950975,Shanghai New Culture Media Gr,35
300337.SZ,950976,Yinbang Clad Material,35
300339.SZ,953801,Jiangsu Hoperun Software Co,35
300340.SZ,1052870,Jiangmen Kanhoo Industry Co,35
300343.SZ,950979,Lecron Energy Saving Materials,35
300349.SZ,953802,Goldcard High-Tech Co Ltd,35
300352.SZ,950982,Beijing VRV Software Corp,35
300357.SZ,1017495,Zhejiang Wolwo Bio-Pharmaceutical Co,35
300359.SZ,1017492,Qtone Education Group Guangdong,35
300369.SZ,1017510,Nsfocus Information Technology Co,35
300386.SZ,955004,Feitian Technologies Co Ltd,35
300398.SZ,1025112,Shanghai Phichem Material Co,35
300406.SZ,1017527,Beijing Strong Biotechnologies Inc,35
300409.SZ,1017575,Guangdong Dowstone Technology Co,35
300432.SZ,1017538,Mianyang Fulin Precision Machining Co,35
300438.SZ,951071,Guangzhou Great Power Energy&Technology,35
300439.SZ,951072,Ningbo MedicalSystem Biotechnology,35
300451.SZ,953150,B-Soft Co Ltd,35
300457.SZ,953152,Shenzhen Yinghe Technology Co,35
300467.SZ,953968,Sichuan Xunyou Network Technology Co,35
300482.SZ,955828,Guangzhou Wondfo Biotech Co,35
300485.SZ,955830,Beijing Science Sun Pharmaceutical Co,35
300495.SZ,1017553,Misho Ecology & Landscape Co,35
300502.SZ,1017560,Eoptolink Technology Inc,35
300506.SZ,1017568,Shenzhen Minkave Technology Co,35
300527.SZ,1017623,China Harzone Industry Corp Ltd,35
300529.SZ,1017595,Jafron Biomedical Co Ltd,35
300567.SZ,1017658,Wuhan Jingce Electronic Technology Co,35
300613.SZ,1017305,Shanghai Fullhan Microelectronics Co,35
300616.SZ,1017296,Guangzhou Shangpin Home Collection Co,35
300623.SZ,1017300,Jiangsu Jiejie Microelectronics Co,35
300672.SZ,1024797,Goke Microelectronics Co,35
300679.SZ,1031208,Electric Connector Technology Co,35
300685.SZ,1031212,Amoy Diagnostics Co,35
300706.SZ,1052648,Fujian Acetron New Materials Co,35
300708.SZ,1052873,Focus Lightings Tech Co,35
300725.SZ,1056088,PharmaBlock Sciences Nanjing Inc,35
300726.SZ,1056089,Zhuzhou Hongda Electronics Corp,35
300735.SZ,1057347,DBG Technology Co Ltd,35
FTXIN9.SZ,28930,FTSE China A50,35
DJSH.SZ,954522,DowJones Shanghai,35
HSI.SZ,179,HangSeng Index,35

#KL MALAYSIA
0213.KL,1153102,Mtag Group Berhad,18
0223.KL,1169253,Samaiden Group Bhd,18
0225.Kl,1168966,Southern Cable Group Bhd,18
5296.KL,1167209,Mr D I Y Group M Bhd,18
0209.KL,1162315,I-Stone Group Bhd,18
0157.KL,1162314,Focus Point Holdings Bhd,18
0197.KL,1097892,Wegmans Holdings Berhad,18
0218.KL,1162310,Aco Group Bhd,18
0212.KL,1162322,SDS Group Bhd,18
0215.KL,1156621,Solarvest Holdings Bhd,18
5295.KL,1162316,Innature Bhd,18
0022.KL,1152964,Parlo Bhd,18
0206.KL,1117909,Gagasan Nadi Cergas Berhad,18
0205.KL,1117910,Dpi Holdings Berhad,18
7108.KL,1123082,Perdana Petroleum Bhd,18
5292.KL,1156757,Uwc Bhd,18
0208.KL,1141292,Greatech Technology Bhd,18
6633.KL,1131066,Leong Hup International Berhad,18
5218.KL,41676,Sapura Energy Bhd,18
5216.KL,950209,Datasonic Group Bhd,18
4715.KL,41655,Genting Malaysia Bhd,18
5204.KL,960847,Prestariang Bhd,18
8311.KL,953637,Pesona Metro Holdings Bhd,18
5199.KL,954964,Hibiscus Petroleum BHD,18
7073.KL,953658,Seacera Group Bhd,18
0026.KL,992880,Nova MSC Bhd,18
7080.KL,953642,Permaju Industries Bhd,18
0111.KL,992863,K-One Technology Bhd,18
0138.KL,950437,MY EG Services Bhd,18
5243.KL,950526,Velesto Energy Bhd,18
0036.KL,942844,Key Alliance Group Bhd,18
7241.KL,950122,Nextgreen Global Bhd,18
0005.KL,992889,UCrest Bhd,18
0196.KL,1075588,QES Group Bhd,18
0128.KL,950256,Frontken Corporation Bhd,18
7079.KL,953689,Tiger Synergy Bhd,18
1155.KL,41607,Malayan Banking Bhd,18
0166.KL,950321,Inari Amertron Bhd,18
0051.KL,950184,Cuscapi Berhad,18
6399.KL,41690,Astro Malaysia Holdings Bhd,18
0143.KL,950378,Key ASIC Bhd,18
4197.KL,41637,Sime Darby Bhd,18
9113.KL,953655,Sanbumi Holdings Bhd,18
5878.KL,41686,KPJ Healthcare Bhd,18
0162.KL,992854,Ideal Jacobs Malaysia Corporation Bhd,18
7036.KL,950143,Borneo Oil Bhd,18
5178.KL,953683,Tatt Giap Group Bhd,18
3182.KL,41626,Genting Bhd,18
5238.KL,950085,AirAsia X Bhd,18
1651.KL,41613,Malaysian Resources Corporation,18
5183.KL,41669,Petronas Chemicals Group Bhd,18
4456.KL,950203,Dagang Nexchange Bhd,18
0176.KL,992864,Kronologi Asia Bhd,18
5210.KL,41672,Bumi Armada Bhd,18
5256.KL,992893,Reach Energy Bhd,18
7277.KL,41698,Dialog Group Bhd,18
0096.KL,992878,Nexgram Holdings Bhd,18
0007.KL,992891,PUC Bhd,18
1023.KL,41604,Bumiputra - Commerce Holdings Bhd,18
9954.KL,950107,Asia Knight Bhd,18
0020.KL,992877,NetX Holdings Bhd,18
5099.KL,41661,Airasia Bhd,18
6888.KL,41692,Axiata Group Bhd,18
1961.KL,41615,IOI Corporation Bhd,18
2739.KL,953673,Sino Hua An International Bhd,18
4863.KL,41641,Telekom Malaysia Bhd,18
0116.KL,992843,Focus Dynamics Group Bhd,18
0150.KL,992822,Fintec Global Bhd,18
0072.KL,992827,AT Systematization Bhd,18
7215.KL,950441,Ni Hsin Resources Bhd,18
7084.KL,41695,QL Resources Bhd,18
5225.KL,41678,IHH Healthcare Bhd,18
5222.KL,41677,Felda Global Ventures Holdings Bhd,18
5398.KL,41682,Gamuda Bhd,18
7113.KL,41651,Top Glove Corporation Bhd,18
0131.KL,992836,Diversified Gateway Solutions Bhd,18
7251.KL,992829,Barakah Offshore Petroleum Bhd,18
9385.KL,950380,Lay Hong Bhd,18
6947.KL,41693,DiGi.Com Bhd,18
5014.KL,41657,Malaysia Airport Holdings Bhd,18
5347.KL,41648,Tenaga Nasional Bhd,18
5168.KL,41667,Hartalega Holdings Bhd,18
3204.KL,950266,George Kent (Malaysia) Bhd,18
0010.KL,992858,IRIS Corporation Bhd,18
0079.KL,976231,Orion lXL Bhd,18
5141.KL,41665,Dayang Enterprise Holdings Bhd,18
7066.KL,992920,Yong Tai Bhd,18
7123.KL,953650,Priceworth International Bhd,18
0187.KL,992830,BCM Alliance Bhd,18
5246.KL,950534,Westports Holdings Bhd,18
0082.KL,950277,Green Packet Bhd,18
5211.KL,41673,Sunway Bhd,18
5285.KL,1056019,Sime Darby Plantation Bhd,18
6254.KL,960841,PDZ Holdings Bhd,18
0154.KL,950212,EA Holdings Bhd,18
5259.KL,943695,EA Technique M Bhd,18
7126.KL,950393,London Biscuits Bhd,18
8567.KL,960862,Salcon Engineering Berhad,18
0045.KL,992844,G Neptune Bhd,18
1619.KL,41612,DRB - Hicom Bhd,18
5288.KL,1056020,Sime Darby Property Bhd,18
1295.KL,41609,Public Bank Bhd,18
8338.KL,950192,Dataprep Holdings Bhd,18
0152.KL,992835,DGB Asia Bhd,18
3816.KL,41632,MISC Bhd,18
7164.KL,953607,KNM Group Bhd,18
0172.KL,992881,OCK Group Bhd,18
7013.KL,950309,HUBLine Bhd,18
5037.KL,950172,Compugates Holdings Bhd,18
0186.KL,991207,Perak Transit Bhd,18
7471.KL,950219,Eden Inc Bhd,18
4677.KL,41640,YTL Corporation Bhd,18
7249.KL,950239,Ewein Bhd,18
1171.KL,41608,Malaysia Building Society Bhd,18
9288.KL,950135,Bonia Corporation Bhd,18
5227.KL,41679,IGB Real Estate Investment Trust,18
8869.KL,953641,Press Metal Bhd,18
0129.KL,992904,Silver Ridge Holdings Bhd,18
7106.KL,41696,Supermax Corporation Bhd,18
7158.KL,953661,Scomi Group Bhd,18
9172.KL,950254,Formosa Prosonic Industries,18
4235.KL,953616,Lion Industries Corporation Bhd,18
5102.KL,950272,Guan Chong Bhd,18
8664.KL,41700,SP Setia Bhd,18
5252.KL,992897,Sasbadi Holdings Bhd,18
7293.KL,950541,Yinson Holdings Bhd,18
0200.KL,1094234,Revenue Group Bhd,18
7204.KL,950206,D O Green Technologies Bhd,18
6459.KL,950425,MNRB Holdings Bhd,18
5098.KL,960828,Malaysia Steel Works KL Bhd,18
3336.KL,41627,IJM Corporation Bhd,18
4057.KL,950100,Asian Pac Holdings Bhd,18
7212.KL,950197,Destini Bhd,18
5068.KL,953617,Luster Industries Bhd,18
5277.KL,994744,FoundPac Group Bhd,18
5239.KL,992914,Titijaya Land Bhd,18
6033.KL,41689,Petronas Gas Bhd,18
0035.KL,950450,OPCOM Holdings Bhd,18
3395.KL,41628,Berjaya Corporation Bhd,18
7022.KL,950273,Globetronics Tech Bhd,18
4723.KL,950335,JAKS Resources Bhd,18
8419.KL,960839,Pansar Bhd,18
5005.KL,950528,Unisem M Bhd,18
1066.KL,41605,RHB Bank Bhd,18
5115.KL,950089,Alam Maritim Resources Bhd,18
7233.KL,950210,Dufu Tech Corp Bhd,18
6742.KL,41650,YTL Power International Bhd,18
5101.KL,950238,Evergreen Fibreboard Bhd,18
4065.KL,41635,PPB Group Bhd,18
2194.KL,41618,MMC Corporation Bhd,18
7208.KL,950231,Euro Holdings Bhd,18
6963.KL,953699,VS Industry Bhd,18
1015.KL,41603,AMMB Holdings Bhd,18
7192.KL,950284,Goodway Integrated Industries,18
0069.KL,969146,Vivocom Intl Holdings Bhd,18
0098.KL,992828,Borneo Aqua Harvest Bhd,18
7160.KL,950467,Pentamaster Corporation Bhd,18
5286.KL,1094233,Mi Equipment Holdings Bhd,18
6012.KL,41688,Maxis Bhd,18
0065.KL,950240,Excel Force MSC Bhd,18
5161.KL,41666,JCY International Bhd,18
7045.KL,960855,Scomi Energy Services Bhd,18
7114.KL,950202,Dnonce Tech Bhd,18
0083.KL,950445,Notion Vtec Bhd,18
7225.KL,953635,P.A. Resources Bhd,18
5070.KL,950474,Protasco Bhd,18
0165.KL,960890,XOX Bhd,18
5272.KL,960868,Ranhill Holdings Ltd,18
9679.KL,41653,WCT Holdings Bhd,18
4022.KL,953682,Tadmax Resources Bhd,18
0181.KL,959133,Aemulus Holdings Bhd,18
5006.KL,950410,Merge Energy Bhd,18
0120.KL,992916,VisDynamics Holdings Bhd,18
0078.KL,950262,GD Express Carrier Bhd,18
0034.KL,963748,MMAG Holdings Bhd,18
5248.KL,950127,Bermaz Auto Bhd,18
5226.KL,985290,Gabungan AQRS Bhd,18
5681.KL,41684,Petronas Dagangan Bhd,18
5819.KL,41685,Hong Leong Bank Bhd,18
0133.KL,992898,Sanichi Technology Bhd,18
4588.KL,41639,UMW Holdings Bhd,18
5279.KL,996098,Serba Dinamik Holdings Bhd,18
0159.KL,992825,Asia Media Group Bhd,18
4634.KL,41654,POS Malaysia&amp;Services Holdings Bhd,18
5983.KL,41687,MBM Resources Bhd,18
3891.KL,960830,Malayan United Industries Bhd,18
0151.KL,992862,Kelington Group Bhd,18
5200.KL,41647,UOA Development Bhd,18
5255.KL,992852,Icon Offshore Bhd,18
0024.KL,992859,JAG Bhd,18
0118.KL,950236,Trive Property Group Bhd,18
0037.KL,960851,RGB International Bhd,18
0095.KL,992918,Xinghe Holdings Bhd,18
0094.KL,992855,Inix Technologies Holdings Bhd,18
1287.KL,992886,Pan Malaysia Holdings Bhd,18
7052.KL,41694,Padini Holdings Bhd,18
0183.KL,978771,Salutica Bhd,18
6084.KL,960864,Star Media Group Bhd,18
5249.KL,950325,IOI Properties Group Bhd,18
8877.KL,950223,Ekovest Bhd,18
9261.KL,950260,Gadang Holdings Bhd,18
5264.KL,953934,Malakoff Corporation Bhd,18
0084.KL,992912,Techfast Holdings Bhd,18
0039.KL,1082090,GFM Services Bhd,18
1201.KL,959135,Sumatec Resources Bhd,18
5270.KL,962441,Red Sena Bhd,18
7243.KL,950125,Bio Osmo Bhd,18
0085.KL,992870,Mlabs Systems Bhd,18
5268.KL,958365,Ikhmas Jaya Group Bhd,18
5236.KL,950402,Matrix Concepts Holdings Bhd,18
5283.KL,1006196,Eco World International Bhd,18
1818.KL,41614,Bursa Malaysia Bhd,18
3115.KL,950368,Karambunai Corp Bhd,18
2445.KL,41620,Kuala Lumpur Kepong Bhd,18
5271.KL,976500,Pecca Group Bhd,18
5703.KL,950434,Muhibbah Engineering M Bhd,18
4243.KL,950535,WTK Holdings Bhd,18
7186.KL,950503,SWS Capital Bhd,18
0075.KL,992876,Mexter Technology Bhd,18
9571.KL,950418,Mitrajaya Holdings Bhd,18
1562.KL,41610,Berjaya Sports Toto Bhd,18
0091.KL,950193,Daya Materials Bhd,18
5220.KL,950270,Globaltec Formation Bhd,18
1481.KL,950077,Advance Synergy Bhd,18
1589.KL,950333,Iskandar Waterfront City Bhd,18
6181.KL,950421,Malton Bhd,18
3239.KL,950118,Berjaya Assets Bhd,18
0001.KL,992901,Supercomnet Technologies Bhd,18
0043.KL,960829,Metronic Global Bhd,18
0047.KL,41701,Perisai Petroleum Teknologi Bhd,18
7071.KL,950516,OCR Group Bhd,18
0119.KL,942845,Appasia Bhd,18
7179.KL,950194,D.B.E. Gurney Resources Bhd,18
0107.KL,992839,Eduspec Holdings Bhd,18
1902.KL,950462,Pinehill Pacific Bhd,18
7070.KL,950108,Vizione Holdings Bhd,18
2283.KL,950547,Zelan Bhd,18
1082.KL,41606,Hong Leong Financial Group Bhd,18
7082.KL,950505,SYF Resources Bhd,18
5072.KL,950306,Hiap Teck Venture Bhd,18
7120.KL,950076,Acoustech Bhd,18
7095.KL,953639,PIE Industrial Bhd,18
5142.KL,953701,Wah Seong Corporation Bhd,18
5054.KL,950521,TRC Synergy Bhd,18
0185.KL,986426,HSS Engineers Bhd,18
8583.KL,41699,Mah Sing Group Bhd,18
6874.KL,950375,KUB Malaysia Bhd,18
5036.KL,953601,Edaran Bhd,18
7248.KL,953668,SLP Resources Bhd,18
0023.KL,992853,IFCA MSC Bhd,18
5235SS.KL,41680,KLCC Property Holdings Bhd,18
9318.KL,950249,Fitters Diversified Bhd,18
7315.KL,950105,AHB Holdings Bhd,18
3174.KL,950379,Land General Bhd,18
8524.KL,960880,Taliworks Corporation Bhd,18
0068.KL,1061994,Asdion Bhd,18
6139.KL,950510,Syarikat Takaful Malaysia Bhd,18
0192.KL,1010852,Inta Bina Group Bhd,18
5205.KL,950233,Eversendai Corporation Bhd,18
5789.KL,950382,LBS Bina Group Bhd,18
0066.KL,992917,Vsolar Group Bhd,18
0080.KL,992892,Straits Inter Logistics Bhd,18
5001.KL,953622,Mieco Chipboard Bhd,18
0175.KL,992850,Heng Huat Resources Group Bhd,18
0127.KL,958366,JHM Consolidation Bhd,18
5148.KL,41645,UEM Sunrise Bhd,18
5079.KL,950348,GETS Global Bhd,18
5253.KL,992838,Econpile Holdings Bhd,18
5257.KL,942843,Carimin Petroleum Bhd,18
2488.KL,41621,Alliance Financial Group Bhd,18
5230.KL,959136,Tune Protect Group Bhd,18
2429.KL,950513,Tanco Holdings Bhd,18
0054.KL,992861,Karyon Industries Bhd,18
5247.KL,44483,Karex,18
5040.KL,950406,Meda Inc Bhd,18
7020.KL,953708,YKGI Holdings Bhd,18
5038.KL,950371,KSL Holdings Bhd,18
4162.KL,41636,British American Tobacco PLC,18
9342.KL,950287,Anzo Holdings Bhd,18
7213.KL,950301,Hovid Bhd,18
6599.KL,950080,AEON Co (Malaysia) Bhd,18
0034PA.KL,1057315,MMAG Holdings Bhd Pref,18
0105.KL,992826,Asia Poly Holdings Bhd,18
0198.KL,1075587,GDB Holdings Bhd,18
5095.KL,950293,HeveaBoard Bhd,18
6114.KL,950411,MKH Bhd,18
0174.KL,950199,iDimension Consolidated Bhd,18
3018.KL,960837,Olympia Industries Bhd,18
0060.KL,969145,Vortex Consolidated Bhd,18
5275.KL,976230,myNEWS Holdings Bhd,18
0048.KL,992824,Ancom Logistics Bhd,18
5186.KL,41670,Malaysia Marine and Heavy Engineering Holdings Bhd,18
0179.KL,950124,Bioalpha Holdings Bhd,18
7206.KL,960873,TH Heavy Engineering Bhd,18
3034.KL,41625,Hap Seng Consolidated Bhd,18
7078.KL,950114,Ahmad Zaki Resources Bhd,18
9873.KL,953648,Prestar Resources Bhd,18
9814.KL,950119,Bertam Alliance Bhd,18
5176.KL,953680,Sunway Real Estate Investment Trust,18
0193.KL,1056018,Kejuruteraan Asastera Bhd,18
0202.KL,1094235,Radiant Globaltech Bhd,18
8532.KL,950494,Sinotop Holdings Bhd,18
5066.KL,950444,NTPM Holdings Bhd,18
8893.KL,950420,M K Land Holdings Bhd,18
3158.KL,950543,YNH Property Bhd,18
5260.KL,943694,Only World Group Holdings Bhd,18
5143.KL,950383,Luxchem Corporation Bhd,18
2291.KL,41619,Genting Plantations Bhd,18
7153.KL,41697,Kossan Rubber Industries Bhd,18
7765.KL,953651,Rapid Synergy Bhd,18
3794.KL,41631,Lafarge Malayan Cement Bhd,18
4383.KL,950346,Jaya Tiasa Holdings Bhd,18
8397.KL,960876,Tiong Nam Logistics Holdings Bhd,18
7579.KL,950112,AWC Bhd,18
3557.KL,950216,EcoFirst Consolidated Bhd,18
2127.KL,950330,Comfort Gloves Bhd,18
7047.KL,950242,Fajarbaru Builder Group Bhd,18
5197.KL,950253,Focus Lumber Bhd,18
5242.KL,992906,Solid Automotive Bhd,18
5180.KL,41668,CapitaLand Malaysia Mall Trust,18
7014.KL,953710,YLI Holdings Bhd,18
0018.KL,976499,Lambo Group Bhd,18
5195.KL,950169,Censof Holdings Bhd,18
3859.KL,41633,Magnum Bhd,18
3883.KL,953629,Muda Holdings Bhd,18
5188.KL,950171,China Ouhua Winery Holdings,18
5025.KL,992648,NWP Holdings Bhd,18
5073.KL,950438,Naim Holdings Bhd,18
7285.KL,953691,Tomypak Holdings Bhd,18
5284.KL,1030904,Lotte Chemical Titan Holding BHD,18
7201.KL,960843,Progressive Impact Corporation Bhd,18
5053.KL,41658,OSK Holdings Bhd,18
5263.KL,958368,Sunway Construction Group Bhd,18
7226.KL,953702,Watta Holding Bhd,18
4324.KL,953669,Hengyuan Refining Company Bhd,18
6807.KL,992890,Puncak Niaga Holdings Bhd,18
5219.KL,992885,PESTECH International Bhd,18
8117.KL,953638,Poly Glass Fibre (M) Bhd,18
0059.KL,992871,M Mode Bhd,18
8907.KL,950220,Eg Industries Bhd,18
5169.KL,950294,Ho Hup Construction Company,18
4731.KL,953677,Scientex Bhd,18
9601.KL,950302,Ho Wah Genting Bhd,18
5085.KL,41660,Mudajaya Group Bhd,18
0195.KL,1062262,Binasat Communications Bhd,18
5184.KL,950189,Cypark Resources Berhad,18
5276.KL,986050,Dancomech Holdings Bhd,18
5158.KL,41646,TA Global Bhd,18
7117.KL,950181,CJ Century Logistics Holdings Bhd,18
1724.KL,950473,Paramount Corporation Bhd,18
7168.KL,945725,Prg Holdings Bhd,18
7010.KL,950265,Grand Hoover Bhd,18
9008.KL,950449,Omesti Bhd,18
5000.KL,950310,Hume Industries Bhd,18
3913.KL,950435,MUI Properties Bhd,18
7146.KL,950079,AE Multi Holdings Bhd,18
6769.KL,950359,JKG Land Bhd,18
0189.KL,995117,Matang Bhd,18
7028.KL,950546,ZECON Bhd,18
3417.KL,41629,Eastern &amp; Oriental Bhd,18
5090.KL,41602,Media Chinese International Ltd,18
6556.KL,950094,Ann Joo Resources Bhd,18
9776.KL,950251,Sinmah Capital Bhd,18
7097.KL,960879,Ta Win Holdings Bhd,18
6971.KL,950364,Kobay Tech Bhd,18
3441.KL,950340,Johan Holdings Bhd,18
4502.KL,41638,Media Prima Bhd,18
0097.KL,950531,ViTrox Corporation Bhd,18
5916.KL,953626,Malaysia Smelting Corporation Bhd,18
7219.KL,953625,Minetech Resources Bhd,18
2879.KL,950162,Chemical Company of Malaysia,18
7155.KL,953666,SKP Resources Bhd,18
0105PA.KL,1057313,Asia Poly Holdings Bhd Pref,18
5187.KL,950288,HB Global Ltd,18
5212.KL,41674,Pavilion Real Estate Inv Trust,18
0170.KL,992860,Kanger International Bhd,18
1368.KL,950525,Faber Group Bhd,18
5109.KL,993307,YTL Hospitality REIT,18
5190.KL,950117,Benalec Holdings Bhd,18
5665.KL,953676,Southern Steel Bhd,18
7133.KL,953698,United U Li Corporation Bhd,18
8176.KL,950198,ATA IMS Bhd,18
3689.KL,950255,Fraser Neave Holdings Bhd,18
2054.KL,41617,TDM Bhd,18
7148.KL,950152,CCM Duopharma Biotech Bhd,18
0123.KL,958367,Privasia Technology Bhd,18
5401.KL,41649,Tropicana Corporation Bhd,18
5843.KL,950366,Kumpulan Perangsang Selangor,18
1694.KL,950422,Menang Corporation (Malaysia) Bhd,18
5007.KL,950186,Chin Well Holdings Bhd,18
5273.KL,969144,Chin Hin Group Bhd,18
9334.KL,950351,KESM Industries Bhd,18
9474.KL,950120,Brahims Holdings Bhd,18
3867.KL,950427,Malaysian Pacific Industries,18
7595.KL,953623,MGB Bhd,18
0160.KL,992851,Hiap Huat Holdings Bhd,18
4847.KL,950373,Konsortium Transnasional Bhd,18
7077.KL,950279,GSB Group Bhd,18
0188.KL,994838,HLT Global Bhd,18
0086.KL,992919,YGL Convergence Bhd,18
5191.KL,950512,Tambun Indah Land Bhd,18
7207.KL,953657,Success Transformer Corporation Bhd,18
5194.KL,950099,APFT Bhd,18
7035.KL,953599,CCK Consolidated Holdings Bhd,18
0090.KL,992842,Elsoft Research Bhd,18
7198.KL,950208,DPS Resources Bhd,18
8206.KL,950217,Eco World Develop Group,18
2852.KL,950165,Cahya Mata Sarawak Bhd,18
5932.KL,950141,Bina Puri Holdings Bhd,18
5125.KL,960846,Pantech Group Holdings Bhd,18
7228.KL,960874,T7 Global Bhd,18
0056.KL,992847,Grand-Flo Bhd,18
0113.KL,962440,MMS Ventures Bhd,18
4707.KL,950439,Nestle (Malaysia) Bhd,18
0070.KL,992873,MQ Technology Bhd,18
7161.KL,950258,Kerjaya Prospek Group Bhd,18
7143.KL,953670,Stone Master Corpoaration Bhd,18
5267.KL,955780,Xin Hwa Holdings Bhd,18
7100.KL,953696,Uchi Technologies Bhd,18
5254.KL,950136,Boustead Plantations Bhd,18
9792.KL,960858,SEG International Bhd,18
7173.KL,960877,Toyo Ink Group Bhd,18
7223.KL,950334,Jadi Imaging Holdings Bhd,18
7889.KL,950409,Thriven Global Bhd,18
5113.KL,41662,Rimbunan Sawit Bhd,18
8303.KL,950354,Kuantan Flour Mills Bhd,18
7165PA.KL,992907,Spring Gallery Bhd Pref,18
0117.KL,992905,SMRT Holdings Bhd,18
7066PA.KL,994058,Yong Tai Bhd Pref,18
5133.KL,960848,Petra Energy Bhd,18
1147.KL,950268,Global Oriental Bhd,18
5281.KL,1024898,Advancecon Holdings Bhd,18
0040.KL,992882,OpenSys M Bhd,18
9377.KL,950257,FSBM Holdings Bhd,18
2836.KL,41623,Carlsberg Brewery Malaysia Bhd,18
3662.KL,950412,Malayan Flour Mills Bhd,18
0112.KL,992869,Mikro MSC Bhd,18
3379.KL,950324,Insas Bhd,18
5196.KL,950128,Berjaya Food Bhd,18
7668.KL,950285,Hai O Enterprise Bhd,18
5062.KL,950308,Hua Yang Bhd,18
0108.KL,992879,N2N Connect Bhd,18
1643.KL,992865,Landmarks Bhd,18
7145.KL,950475,Prinsiptek Corporation Bhd,18
4898.KL,950507,TA Enterprise Bhd,18
5056.KL,950235,Engtex Group Bhd,18
7088.KL,950460,Poh Huat Resources Holdings,18
5031.KL,41642,TIME Dotcom Bhd,18
9806.KL,960831,Nationwide Express Holdings Bhd,18
0093.KL,986427,Solution Engineering Holdings Bhd,18
5132.KL,950201,Deleum Bhd,18
7253.KL,950291,Handal Resources Bhd,18
5250.KL,950488,7 Eleven Malaysia Holdings Bhd,18
4251.KL,950314,I-Berhad,18
3948.KL,950211,Dutaland Bhd,18
7676.KL,950282,Gunung Capital Bhd,18
5121.KL,1046329,Hektar Real Estate Investment Trust,18
5012.KL,41656,Ta Ann Holdings Bhd,18
5020.KL,950269,Glomac Bhd,18
3565.KL,950352,WCE Holdings Bhd,18
4758.KL,950074,Ancom Bhd,18
7188.KL,950146,BTM Resources Bhd,18
0012.KL,953687,Three A Resources Bhd,18
2607.KL,950318,Inch Kenneth Kajang Rubber PLC,18
5355.KL,950190,Daiman Develop Bhd,18
7214.KL,950104,A Rank Bhd,18
3255.KL,950281,Heineken Bhd,18
0021.KL,950264,GHL Systems Bhd,18
7154.KL,950148,Caely Holdings Bhd,18
1996.KL,950369,Kretam Holdings Bhd,18
9326.KL,953612,LB Aluminium Bhd,18
5232.KL,950386,Leon Fuat Bhd,18
7017.KL,953608,Komarkcorp Bhd,18
5237.KL,950426,MPHB Capital Bhd,18
4464.KL,960832,Naim Indah Corporation Bhd,18
7235.KL,953675,Superlon Holdings Bhd,18
0201.KL,1094236,Nova Wellness Group Bhd,18
2674.KL,950091,Aluminium Company of Malaysia Bhd,18
5173.KL,960869,Shin Yang Shipping Corporation Bhd,18
9687.KL,950331,Ideal United Bintang Bhd,18
0168.KL,950134,Boilermech Holdings Bhd,18
8745.KL,953615,Leweko Resources Bhd,18
0089.KL,960881,Tex Cycle Technology M Bhd,18
9091.KL,950226,Emico Holdings Bhd,18
7170.KL,950387,LFE Corporation Bhd,18
7178.KL,950544,YSP Southeast Asia Holding Bhd,18
5147.KL,960853,Samchem Holdings Bhd,18
5139.KL,41664,Aeon Credit Service Bhd,18
7071PA.KL,986131,OCR Group Bhd,18
5123.KL,1030905,MRCB-Quill REIT Unit,18
5156.KL,950537,XiDeLang Holdings Ltd,18
3042.KL,950476,Petron Malaysia Refining Marketing,18
5094.KL,950179,CSC Steel Holdings Bhd,18
7111.KL,953704,Weida (M) Bhd,18
7234.KL,960826,MESB Bhd,18
8141.KL,950419,Majuperak Holdings Bhd,18
8133.KL,950121,Boustead Heavy Industries,18
9083.KL,950339,Kumpulan Jetson Bhd,18
6009.KL,950453,Pacific Orient Bhd,18
7121.KL,950536,Xian Leng Holdings Bhd,18
0145.KL,992913,TFP Solutions Bhd,18
0008.KL,950533,Willowglen MSC Bhd,18
5606.KL,950267,IGB Bhd,18
6998.KL,950130,Bintai Kinden Corporation Bhd,18
7182.KL,950221,EKA Noodles Bhd,18
6602.KL,950115,BCB Bhd,18
2186.KL,950349,Kuchai Develop Bhd,18
7217.KL,950229,Eonmetall Group Bhd,18
0140.KL,962602,Sterling Progress Bhd,18
5078.KL,992902,Marine &amp; General Bhd,18
7245.KL,953707,WZ Satu Bhd,18
0161.KL,960857,SCH Group Bhd,18
0025.KL,992866,YBS International Bhd,18
0103.KL,992872,M N C Wireless Bhd,18
5278.KL,994432,Rhone Ma Holdings Bhd,18
7231.KL,953703,Wellcall Holdings Bhd,18
6068.KL,950456,PCCS Group Bhd,18
8079.KL,950390,Lee Swee Kiat Group Bhd,18
8478.KL,950312,Hwa Tai Industries Bhd,18
0156.KL,950400,Managepay Systems Bhd,18
0136.KL,992848,Greenyield Bhd,18
7076.KL,950150,CB Industrial Product Holding,18
1783.KL,950487,Selangor Properties Bhd,18
7167.KL,950341,Johore Tin Bhd,18
2925.KL,950187,Cycle Carriage Bintang Bhd,18
0099.KL,960854,Scicom MSC Bhd,18
7195.KL,950164,Comintel Corporation Bhd,18
0109.KL,992900,SC Estate Builder Bhd,18
4944.KL,953632,Nylex (Malaysia) Bhd,18
7128.KL,950177,CAM Resources Bhd,18
7609.KL,950088,Ajiya Bhd,18
9121.KL,950367,KPS Consortium Bhd,18
1198.KL,950397,MAA Group Bhd,18
9946.KL,950481,Rex Industry Bhd,18
2658.KL,950087,Ajinomoto Malaysia Bhd,18
5228.KL,992841,ELK-Desa Resources Bhd,18
5077.KL,41659,Malaysian Bulk Carriers Bhd,18
5208.KL,992840,EITA Resources Bhd,18
7099PA.KL,1057314,ATTA Global Group Bhd Pref,18
8621.KL,950394,LPI Capital Bhd,18
8591.KL,950176,Crest Builder Holdings Bhd,18
3107.KL,950248,Fima Corporation Bhd,18
3298.KL,950313,Hexza Corporation Bhd,18
5213.KL,950498,Sentoria Group Bhd,18
0055.KL,958369,Sersol Bhd,18
5049.KL,950185,Country View Bhd,18
0158.KL,992899,SCC Holdings Bhd,18
5162.KL,950218,ECS ICT Bhd,18
0182.KL,978770,LKL International Bhd,18
9059.KL,41652,TSH Resources Bhd,18
5027.KL,950358,Kim Loong Resources Bhd,18
5181.KL,953665,SIG Gases Bhd,18
0180.KL,961708,Kim Teck Cheong Consolidated Bhd,18
2771.KL,41622,Boustead Holdings Bhd,18
8443.KL,950295,Hil Industries Bhd,18
5127.KL,1084229,AmanahRaya Real Estate Investment Trust,18
2224.KL,950486,Selangor Dredging Bhd,18
7172.KL,953640,PMB Technology Bhd,18
5265.KL,960824,Dolphin International Bhd,18
5280.KL,996097,KIP Real Estate Investment Trust,18
0173.KL,992894,Rev Asia Bhd,18
5130.KL,1082126,Atrium Real Estate Investment Trust,18
5576.KL,953624,Minho M Bhd,18
0101.KL,960875,TMC Life Sciences Bhd,18
0104.KL,992849,Genetec Technology Bhd,18
8605.KL,950245,Federal International Holdings Bhd,18
6939.KL,950246,Fiamma Holdings Bhd,18
7183.KL,950328,Ire Tex Corporation Bhd,18
9717.KL,950504,Sycal Ventures Bhd,18
7089.KL,950389,Lii Hen Industries Bhd,18
1538.KL,950506,Symphony Life Bhd,18
7240.KL,960886,Vertice Bhd,18
6238.KL,950304,Hock Seng Lee Bhd,18
5024.KL,950303,Hup Seng Industries Bhd,18
3573.KL,950388,Lien Hoe Corporation Bhd,18
6076.KL,950227,Encorp Bhd,18
7034.KL,953686,Thong Guan Industries Bhd,18
7086.KL,950071,AbleGroup Bhd,18
7105.KL,950289,HCK Capital Group Bhd,18
9598.KL,950461,Pintaras Jaya Bhd,18
5082.KL,953600,Cymao Holdings Bhd,18
3476.KL,953610,Keck Seng Malaysia Bhd,18
5269.KL,959134,Al-Salam Real Estate Investment Trust,18
9466.KL,953606,KKB Engineering Berhad,18
7099.KL,953672,Atta Global Group Bhd,18
5908.KL,950196,DKSH Holdings Malaysia Berhad,18
7247.KL,953659,SCGM Bhd,18
5738.KL,950156,Country Heights Holdings Bhd,18
5171.KL,950357,Kimlun Corporation Bhd,18
5071.KL,950180,Coastal Contracts Bhd,18
9881.KL,992645,Leader Steel Holdings Bhd,18
7323.KL,950350,Ken Holdings Bhd,18
5152.KL,953628,Muar Ban Lee Group Bhd,18
4006.KL,950452,Oriental Holdings Bhd,18
5209.KL,41671,Gas Malaysia Bhd,18
4081.KL,950468,Pan Malaysia Corporation Bhd,18
5170.KL,953654,Sarawak Cable Bhd,18
5107.KL,950327,IQ Group Holdings Bhd,18
3247.KL,950280,GUH Holdings Bhd,18
5140.KL,960870,Tasco Bhd,18
7169.KL,950205,Dominant Enterprise Bhd,18
8273.KL,953645,Public Packages Holdings Bhd,18
5657.KL,41683,Parkson Holdings Bhd,18
6041.KL,950250,Farlim Group (Malaysia) Bhd,18
6912.KL,950457,Pasdec Holdings Bhd,18
5157.KL,950484,Saudee Group Bhd,18
6017.KL,950492,SHL Consolidated Bhd,18
5258.KL,41681,BIMB Holdings Bhd,18
6645.KL,992867,Lingkaran Trans Kota Holdings Bhd,18
1007.KL,950090,Amcorp Properties Bhd,18
5160.KL,950300,Homeritz Corporation Bhd,18
7184.KL,953711,G3 Global Bhd,18
7197.KL,950263,Ge Shen Corporation Bhd,18
6025.KL,950129,Berjaya Media Bhd,18
5436.KL,953647,Perusahaan Sadur Timah Malaysia Perstima Bhd,18
2577.KL,950545,YTL Land Develop Bhd,18
3778.KL,953627,Melewar Industrial Group Bhd,18
7501.KL,950296,Harn Len Corporation Bhd,18
7250.KL,960885,Uzma Bhd,18
5134.KL,953674,Southern Acids (M) Bhd,18
5111.KL,1084230,Tower Real Estate Investment Trust,18
7016.KL,950158,Chuan Huat Resources Bhd,18
3514.KL,950429,Marco Holdings Bhd,18
8966.KL,950479,Prolexus Bhd,18
0050.KL,992909,Systech Bhd,18
0199.KL,1082047,Tri-Mode System M Bhd,18
9822.KL,950483,Sam Engineering Equipment,18
7232.KL,953652,Resintech Bhd,18
2569.KL,950485,Sungei Bagan Rubber Malaya,18
7152.KL,950337,Jaycorp Bhd,18
5010.KL,953688,Tong Herr Resources Bhd,18
4375.KL,950496,South Malaysia Industries Bhd,18
9296.KL,950480,RCE Capital Berhad,18
5065.KL,953634,Ornapaper Bhd,18
6718.KL,950175,Crescendo Corporation Bhd,18
6483.KL,950362,K N Kenanga Holdings Bhd,18
0171.KL,992887,PeterLabs Holdings Bhd,18
5149.KL,953692,TAS Offshore Bhd,18
5009.KL,953706,White Horse Bhd,18
7090.KL,950097,Apex Healthcare Bhd,18
5100.KL,950140,BP Plastics Holding Bhd,18
3905.KL,41634,Mulpha International Bhd,18
6203.KL,950355,Khee San Bhd,18
7203.KL,992651,Wang-Zheng Bhd,18
4952.KL,1071991,Amanah Harta Tanah PNB,18
6378.KL,953685,Tekala Corporation Bhd,18
7081.KL,960844,Pharmaniaga Bhd,18
3069.KL,950407,Mega First Corporation Bhd,18
5584.KL,950542,Yee Lee Corporation Bhd,18
5138.KL,41663,Hap Seng Plantations Holdings Bhd,18
0149.KL,950247,Fibon Bhd,18
2259.KL,950511,Talam Transform Bhd,18
5166.KL,950398,Minda Global Bhd,18
7060.KL,950440,New Hoong Fatt Holdings Bhd,18
7096.KL,950276,GPA Holdings Bhd,18
8834.KL,950329,Ireka Corporation Bhd,18
5175.KL,950332,Ivory Properties Group Bhd,18
6491.KL,950353,Kumpulan Fima Bhd,18
5172.KL,950374,K Star Sports Ltd,18
8494.KL,950381,LBI Capital Bhd,18
0041.KL,950454,Panpages Bhd,18
3522.KL,953605,Kian Joo Can Factory Bhd,18
0102.KL,992834,ConnectCounty Holdings Bhd,18
0017.KL,992874,M3 Technologies Asia Bhd,18
03005.KL,1072174,Metro Healthcare Berhad,18
5021.KL,950113,AYS Ventures Bhd,18
5136.KL,950173,Complete Logistic Services Bhd,18
0028.KL,953662,Scope Industries Bhd,18
5797.KL,950157,Choo Bee Metal Industries Bhd,18
2593.KL,950527,United Malacca Bhd,18
8486.KL,950391,Lion Forest Industries Bhd,18
7140.KL,953633,Oka Corporation Bhd,18
5151.KL,950297,Halex Holdings Bhd,18
7107.KL,950447,Oriental Food Industries Hold,18
5120.KL,1082127,AmFIRST Real Estate Investment Trust,18
2984.KL,950241,FACB Industries Incorporated,18
0081.KL,986051,Mega Sun City Holdings Bhd,18
0190.KL,1008998,Eversafe Rubber Bhd,18
7374.KL,953695,Tien Wah Press Holdings Bhd,18
7199.KL,960825,Kein Hing International Bhd,18
5202.KL,950430,MSM Malaysia Holdings Bhd,18
3484.KL,950191,Damansara Realty Bhd,18
7006.KL,950395,Latitude Tree Holdings Bhd,18
5011.KL,950423,Mesiniaga Bhd,18
5126.KL,950499,Sarawak Oil Palms Bhd,18
4219.KL,950132,Berjaya Land Bhd,18
5131.KL,41644,Zhulian Corporation Bhd,18
7237.KL,950471,Power Root Bhd,18
7229.KL,950259,Favelle Favco Bhd,18
9938.KL,950137,Bright Packaging Industry Bhd,18
1899.KL,950145,Batu Kawan Bhd,18
2089.KL,950530,United Plantations Bhd,18
0126.KL,992868,Microlink Solutions Bhd,18
1163.KL,950084,Allianz Malaysia Bhd,18
5015.KL,950101,APM Automotive Holdings Bhd,18
7210.KL,950252,Freight Management Holdings,18
7091.KL,960882,Unimech Group Bhd,18
2216.KL,950317,IJM Plantations Bhd,18
7216.KL,950377,Kawan Food Bhd,18
1058.KL,950424,Manulife Holdings Bhd,18
5924.KL,950433,MTD ACPI Engineering Bhd,18
8192.KL,953620,Mercury Industries Bhd,18
8982.KL,950174,Cepatwawasan Group Bhd,18
3719.KL,950469,Panasonic Manufacture Malaysia,18
9369.KL,950514,Teo Guan Lee Corporation Bhd,18
7803.KL,953653,Rubberex Corporation M Bhd,18
5022.KL,950455,Paos Holdings Bhd,18
4596.KL,950502,Sapura Resources Bhd,18
7130.KL,953609,Kumpulan Powernet Bhd,18
4995.KL,953700,Versatile Creative Bhd,18
5048.KL,953709,Yi-Lai Bhd,18
6297.KL,950138,Box Pak (Malaysia) Bhd,18
5029.KL,950244,Far East Holdings Bhd,18
4448.KL,953690,Tasek Corporation Bhd,18
7087.KL,950401,Magni Tech Industries Bhd,18
5112.KL,41643,TH Plantations Bhd,18
5185.KL,950083,AFFIN Holdings Bhd,18
5104.KL,950167,CNI Holdings Bhd,18
7094.KL,950232,Eurospan Holdings Bhd,18
5649.KL,950278,Golden Pharos Bhd,18
4936.KL,950414,Malpac Holdings Bhd,18
7055.KL,950464,PLB Engineering Bhd,18
4405.KL,950518,Tan Chong Motor Holdings Bhd,18
7811.KL,953656,Sapura Industrial Bhd,18
6521.KL,960866,Suria Capital Holdings Bhd,18
5371.KL,953604,Kim Hin Industry Bhd,18
7048.KL,950109,Atlan Holdings Bhd,18
3301.KL,950298,Hong Leong Industries Bhd,18
7062.KL,950356,Khind Holdings Bhd,18
8923.KL,950342,Jiankun International Bhd,18
7033.KL,953602,Kumpulan H &amp; L High-Tech Bhd,18
6815.KL,950237,Eupe Corporation Bhd,18
1503.KL,950283,GuocoLand (Malaysia) Bhd,18
2755.KL,950243,FCW Holdings Bhd,18
6351.KL,950093,Amway (Malaysia) Holdings Bhd,18
0053.KL,992883,OSK Ventures International Bhd,18
5245.KL,950149,Caring Pharmacy Group Bhd,18
3026.KL,41624,Dutch Lady Milk Industries Bhd,18
0002.KL,950365,Kotra Industries Bhd,18
7205.KL,950151,Cocoaland Holdings Bhd,18
5105.KL,950168,Can One Bhd,18
7202.KL,950178,Classic Scenic Bhd,18
8125.KL,950207,Daibochi Bhd,18
9962.KL,950271,Gromutual Bhd,18
5075.KL,950465,Plenitude Bhd,18
9075.KL,950515,Theta Edge Bhd,18
7757.KL,950529,UPA Corporation Bhd,18
2097.KL,950213,Eastland Equity Bhd,18
6556PA.KL,994056,Ann Joo Resources Bhd Pref,18
5087.KL,953631,Mycron Steel Bhd,18
5163.KL,960860,Seremban Engineering Bhd,18
3379PA.KL,992857,Insas Bhd Pref,18
7129.KL,950081,Asia File Corporation Bhd,18
5110.KL,1071167,UOA Real Estate Investment Trust,18
5673.KL,950326,Ipmuda Bhd,18
5041.KL,960840,PBA Holdings Bhd,18
7544.KL,960849,Quality Concrete Holdings Bhd,18
7054.KL,950070,Astral Asia Bhd,18
5198.KL,950072,ABM Fujiya Bhd,18
7131.KL,950075,Acme Holdings Bhd,18
7191.KL,950078,Adventa Bhd,18
6432.KL,950082,Apollo Food Holdings Bhd,18
2682.KL,950086,Amalgamated Industrial Steel,18
5959.KL,950092,Amverton Bhd,18
7083.KL,950095,Analabs Resources Bhd,18
5568.KL,950096,APB Resources Bhd,18
5088.KL,950098,Apex Equity Holdings Bhd,18
9148.KL,950102,Advanced Packaging Tech (Malaysia),18
7007.KL,950103,ARK Resources Bhd,18
7722.KL,950106,Asia Brands Bhd,18
7162.KL,950110,Astino Bhd,18
7181.KL,950111,Aturmaju Resources Bhd,18
6173.KL,950116,Bina Darulaman Bhd,18
7005.KL,950123,BIG Industries Bhd,18
7187.KL,950131,Chin Hin Group Property Bhd,18
5069.KL,950133,BLD Plantation Bhd,18
5032.KL,950139,Bintulu Port Holdings Bhd,18
8761.KL,950142,Brem Holding Bhd,18
7221.KL,950144,BSL Corp Bhd,18
7174.KL,950147,CAB Cakaran Corporation Bhd,18
7209.KL,950153,Cheetah Holdings Bhd,18
8044.KL,950154,Computer Forms (Malaysia) Bhd,18
9423.KL,950155,Chee Wah Corporation Bhd,18
5214.KL,950159,China Stationery Ltd,18
8052.KL,950160,Central Industrial Corp,18
2828.KL,950161,CI Holdings Bhd,18
7018.KL,950163,CME Group Bhd,18
7986.KL,950166,CN Asia Corporation Bhd,18
8435.KL,950170,Concrete Engineering Products,18
1929.KL,950182,Chin Teck Plantations Bhd,18
7157.KL,950188,CYL Corporation Bhd,18
7119.KL,950195,DeGem Bhd,18
7528.KL,950200,DKLS Industries Bhd,18
5835.KL,950204,Dolomite Corporation Bhd,18
0064.KL,950214,Efficient E Solutions Bhd,18
2143.KL,950215,ECM Libra Financial Group Bhd,18
7189.KL,950222,MB World Group Bhd,18
9016.KL,950225,Eksons Corp Bhd,18
7149.KL,950228,Eng Kah Corporation Bhd,18
7773.KL,950230,EP Manufacturing Bhd,18
5081.KL,950234,Esthetics International Group,18
3611.KL,950261,Goh Ban Huat Bhd,18
7382.KL,950274,Golden Land Bhd,18
2135.KL,950275,Gopeng Bhd,18
2062.KL,950286,Harbour Link Group Bhd,18
5028.KL,950292,HeiTech Padu Bhd,18
5165.KL,950299,Hock Heng Stone Industries Bhd,18
5008.KL,950305,Harrisons Holdings (Malaysia),18
5084.KL,950315,Ibraco Bhd,18
5614.KL,950319,Integrated Logistics Bhd,18
7222.KL,950320,Imaspro Corporation Bhd,18
9393.KL,950322,Industronics Bhd,18
6262.KL,950323,Innoprise Plantations Bhd,18
8931.KL,950338,Jerasia Capital Bhd,18
8648.KL,950343,Jasa Kita Bhd,18
7043.KL,950344,JMR Conglomeration Bhd,18
0058.KL,950345,JCBNext Berhad Bhd,18
2453.KL,950360,Kluang Rubber Company Malaya,18
8672.KL,950361,Kamdar Group (Malaysia) Bhd,18
5035.KL,950363,Knusford Bhd,18
5192.KL,950372,K Seng Seng Corporation Bhd,18
6572.KL,950376,Kwantas Corporation Bhd,18
7943.KL,950384,Sand Nisko Capital Bhd,18
9628.KL,950385,Lebtech Bhd,18
7085.KL,950396,LTKM Bhd,18
7617.KL,950399,Magna Prima Bhd,18
5189.KL,950403,Maxwell International Holdings,18
0167.KL,950404,MClean Technologies Bhd,18
5182.KL,950405,Gw Plastics Holdings Bhd,18
5129.KL,950408,Melati Ehsan Holdings Bhd,18
155.KL,950413,Malaysian Genomics Resource,18
5026.KL,950415,MHC Plantations Bhd,18
7935.KL,950416,Milux Corporation Bhd,18
5886.KL,950417,Mintye Industries Bhd,18
6548.KL,950428,Malaysia Pacific Corporation,18
5150.KL,950431,Multi Sports Holdings Ltd,18
7029.KL,950432,Master Pack Group Bhd,18
7139.KL,950442,Niche Capital Emas Holdings,18
2038.KL,950443,Negri Sembilan Oil Palms Bhd,18
0049.KL,950446,Oceancash Pacific Bhd,18
5827.KL,950448,Oriental Interest Bhd,18
5231.KL,950458,Pelikan International Corp,18
9407.KL,950459,Paragon Union Bhd,18
9695.KL,950466,PLS Plantations Bhd,18
5080.KL,950470,Poh Kong Holdings Bhd,18
8613.KL,950472,Enra Group Bhd,18
7134.KL,950478,PW Consolidated Bhd,18
2542.KL,950482,Riverview Rubber Estates Bhd,18
7246.KL,950489,Signature International Bhd,18
4316.KL,950490,Sin Heng Chan (Malaya) Bhd,18
7412.KL,950491,SHH Resources Holdings Bhd,18
5207.KL,950493,SBC Corp Bhd,18
7180.KL,950495,Sern Kou Resources Bhd,18
5135.KL,950500,Sarawak Plantation Bhd,18
7103.KL,950501,Spritzer Bhd,18
7211.KL,950508,TAFI Industries Bhd,18
2305.KL,950509,AYER Holdings Bhd,18
7230.KL,950517,Tomei Consolidated Bhd,18
7176.KL,950519,TPC Plus Bhd,18
5622.KL,950520,Pimpinan Eshan Bhd,18
7252.KL,950522,Teo Seng Capital Bhd,18
7200.KL,950523,Tek Seng Holdings Bhd,18
5042.KL,950524,TSR Capital Bhd,18
5155.KL,950538,Xingquan International Sports,18
7003.KL,950539,Y&amp;G Corp Bhd,18
5159.KL,950540,Yoong Onn Corporation Bhd,18
7031.KL,953598,Amtel Holdings Bhd,18
6211.KL,953603,Kia Lim Bhd,18
5060.KL,953611,Kinsteel Bhd,18
9199.KL,953618,Lysaght Galvanized Steel Bhd,18
7004.KL,953619,MCE Holdings Bhd,18
5223.KL,953621,Mentiga Corporation Bhd,18
9539.KL,953630,Multi-Usage Holdings Bhd,18
9997.KL,953636,Pensonic Holdings Bhd,18
6637.KL,953643,PNE PCB Bhd,18
7190.KL,953644,Pelangi Publishing Group Bhd,18
9237.KL,953660,Sarawak Consolidated Industries Bhd,18
7239.KL,953663,Scanwolf Corporation Bhd,18
4286.KL,953664,SEAL Incorporated Bhd,18
5145.KL,953667,Sealink International Bhd,18
6904.KL,953678,Subur Tiasa Holdings Bhd,18
3743.KL,953679,Sunsuria Bhd,18
9741.KL,953684,Rohas Tecnic Bhd,18
4359.KL,953693,Turiya Bhd,18
7854.KL,953694,Timberwell Bhd,18
7227.KL,953697,UMS-Neiken Group Bhd,18
7050.KL,953705,Wong Engineering Corporation Bhd,18
0178.KL,955779,Sedania Innovator Bhd,18
0100.KL,958364,ES Ceramics Technology Bhd,18
5047.KL,960833,NPC Resources Bhd,18
5533.KL,960835,OCB Bhd,18
0153.KL,960838,Oversea Enterprise Bhd,18
8346.KL,960842,Perak Corporation Bhd,18
7163.KL,960845,PJBumi Bhd,18
7498.KL,960850,Ralco Corporation Bhd,18
8885.KL,960852,Reliance Pacific Bhd,18
7053.KL,960856,See Hup Consolidated Bhd,18
9431.KL,960859,Seni Jaya Corporation Bhd,18
7115.KL,960861,SKB Shutters Corporation Bhd,18
7165.KL,960863,Spring Gallery Bhd,18
9865.KL,960867,Suiwah Corporation Bhd,18
8702.KL,960871,Texchem Resources Bhd,18
7439.KL,960872,Teck Guan Perdana Bhd,18
5167.KL,960878,Turbo Mech Bhd,18
7137.KL,960883,UMS Holdings Bhd,18
5754.KL,960884,Utusan Melayu Malaysia Bhd,18
5016.KL,960887,Warisan TC Holdings Bhd,18
7692.KL,960888,Widetech Malaysia Bhd,18
7025.KL,960889,Woodlandor Holdings Bhd,18
7122.KL,960891,YFG Bhd,18
7051.KL,992643,Amtek Holdings Bhd,18
8362.KL,992644,KYM Holdings Bhd,18
6149.KL,992646,Metrod Holdings Bhd,18
7132.KL,992649,SMIS Corporation Bhd,18
7218.KL,992650,Transocean Holdings Bhd,18
0122.KL,992823,Advance Information Marketing Bhd,18
0011.KL,992831,Brite Tech Bhd,18
5229.KL,992832,China Automobile Parts Holdings Ltd,18
0163.KL,992833,Careplus Group Bhd,18
0029.KL,992837,Digistar Corporation Bhd,18
0074.KL,992845,Green Ocean Corporation Bhd,18
5592.KL,992846,Grand Central Enterprises Bhd,18
0147.KL,992856,Innity Corporation Bhd,18
0092.KL,992875,mTouche Technology Bhd,18
0177.KL,992884,Pasukhas Group Bhd,18
0038.KL,992888,Plastrade Technology Bhd,18
0106.KL,992895,Rexit Bhd,18
0032.KL,992896,Redtone International Bhd,18
5517.KL,992903,Shangri La Hotels Malaysia Bhd,18
0148.KL,992910,Sunzen Biotech Bhd,18
0132.KL,992915,TechnoDex Bhd,18
8664PA.KL,994057,S P Setia Bhd Pref,18
8605PA.KL,999089,Federal International Holdings Bhd,18
0191.KL,1010851,Cabnet Holdings Bhd,18
0146.KL,1030932,JF Technology BHD,18
5789PA.KL,1043312,LBS Bina Group Bhd Pref,18
0169.KL,950497,Smtrack Bhd,18
KLSE.KL,29078,FTSE Malaysia KLCI,18
0800EA.KL,962283,ABF Malaysia Bond,18
5116.KL,1155598,Al Aqar Healthcare Reit,18
5293.KL,1162312,AME Elite Consortium Bhd,18
105.KL,942922,MSCI Malaysia,18
5106.KL,1162311,Axis Real Estate Investment Trust,18
0820EA.KL,962286,FTSE Bursa Malaysia KLCI,18
5274.KL,1167502,Hong Leong Capital Bhd,18
5291.KL,1141293,HPMT Holdings Bhd,18
0827EA.KL,1072258,MyETF Dow Jones Islamic Market U.S. Titans 50,18
0824EA.KL,962287,MyETF MSCI Malaysia Islamic Dividend,18
0825EA.KL,962288,MyETF MSCI Sea Islamic Dividend,18
0826EA.KL,962289,MyETF TR AsiaPacific ex-Japan Islamic Agribusiness,18
0822EA.KL,962285,Principal FTSE ASEAN 40 Malaysia,18
0823EA.KL,962284,Principal FTSE China 50 ETF,18
5289.KL,1097843,Techbond Group Bhd,18
0829EA.KL,1122289,TradePlus S&P New China Tracker,18
0828EA.KL,1165610,TradePlus Shariah Gold ETF,18

#FX
USDMYR.FX,2168,USD/MYR,9
EURUSD.FX,1,EUR/USD,9
USDJPY.FX,3,USD/JPY,9
GBPUSD.FX,2,GBP/USD,9
USDCHF.FX,4,USD/CHF,9
USDCAD.FX,7,USD/CAD,9
EURJPY.FX,9,EUR/JPY,9
AUDUSD.FX,5,AUD/USD,9
NZDUSD.FX,8,NZD/USD,9
EURGBP.FX,6,EUR/GBP,9
EURCHF.FX,10,EUR/CHF,9
AUDJPY.FX,49,AUD/JPY,9
GBPJPY.FX,11,GBP/JPY,9
CHFJPY.FX,13,CHF/JPY,9
EURCAD.FX,16,EUR/CAD,9
AUDCAD.FX,47,AUD/CAD,9
CADJPY.FX,51,CAD/JPY,9
NZDJPY.FX,58,NZD/JPY,9
AUDNZD.FX,50,AUD/NZD,9
GBPAUD.FX,53,GBP/AUD,9
EURAUD.FX,15,EUR/AUD,9
GBPCHF.FX,12,GBP/CHF,9
EURNZD.FX,52,EUR/NZD,9
AUDCHF.FX,48,AUD/CHF,9
GBPNZD.FX,55,GBP/NZD,9
USDINR.FX,160,USD/INR,9
USDCNY.FX,2111,USD/CNY,9
USDSGD.FX,42,USD/SGD,9
USDHKD.FX,155,USD/HKD,9
USDDKK.FX,43,USD/DKK,9
GBPCAD.FX,54,GBP/CAD,9
USDSEK.FX,41,USD/SEK,9
USDRUB.FX,2186,USD/RUB,9
USDTRY.FX,18,USD/TRY,9
USDMXN.FX,39,USD/MXN,9
USDZAR.FX,17,USD/ZAR,9
CADCHF.FX,14,CAD/CHF,9
NZDCAD.FX,56,NZD/CAD,9
NZDCHF.FX,57,NZD/CHF,9
USDIDR.FX,2138,USD/IDR,9
USDVND.FX,2214,USD/VND,9

#COM COMODITY
COAL.COM,1112837,Newcastle Coal Futures,48
GOLD.COM,8830,Gold Futures,48
XAUUSD.COM,68,Gold Spot US Dollar,48
SILVER.COM,8836,Silver Futures,48
COCOA.COM,8860,London Cocoa Futures,48
COPPER.COM,959211,London Copper Futures,48
ALUMINUM.COM,49768,London Aluminum Futures,48
COFFEE.COM,8911,London Robusta Coffee Futures,48
GASOIL.COM,8861,London Gas Oil Futures,48
ZINC.COM,956470,London Zinc Futures,48
LEAD.COM,959207,London Lead Futures,48
NICKEL.COM,959208,London Nickel Futures,48
TIN.COM,959209,London Tin Futures,48
BRENTOIL.COM,8833,London Brent Oil Futures,48
COPPERUS.COM,8831,US Copper Futures,48
PLATINUM.COM,8910,US Platinum Futures,48
PALLADIUM.COM,8883,US Palladium Futures,48
CRUDEOILUS.COM,8849,US Crude Oil WTI Futures,48
NATURALGAS.COM,8862,US Natural Gas Futures,48
HEATINGOIL.COM,8988,US Heating Oil Futures,48
GASOLINE.COM,954867,US Gasoline RBOB Futures,48
WHEAT.COM,8917,US Wheat Futures,48
ROUGHRICE.COM,13916,US Rough Rice Futures,48
CORN.COM,8918,US Corn Futures,48
SOYBEANS.COM,8916,US Soybeans Futures,48
SOYBEANOIL.COM,8915,US Soybean Oil Futures,48
SOYBEANMEAL.COM,8919,US Soybean Meal Futures,48
COTTON.COM,8851,US Cotton Futures,48
COCOA.COM,8894,US Cocoa Futures,48
COFFEEUS.COM,8832,US Coffee C Futures,48
SUGAR.COM,8869,US Sugar 11 Futures,48
ORANGEJUICE.COM,8891,US Orange Juice Futures,48
LIVECATTLE.COM,8914,US Live Cattle Futures,48
LEANHOGS.COM,8913,US Lean Hogs Futures,48
FEEDERCATTLE.COM,961618,US Feeder Cattle Futures,48
LUMBER.COM,959198,US Lumber Futures,48
OATS.COM,959199,US Oats Futures,48

#MCX INDIA
ALUMINUM.MCX,40015,Aluminum Futures,19
COPPER.MCX,49771,Copper Futures,19
LEAD.MCX,49784,Lead Futures,19
ALUMINUM MINI.MCX,49767,Aluminum Mini Futures,19
COPPERMINI.MCX,49772,Copper Mini Futures,19
GOLDGUINEA.MCX,49777,Gold Guinea Futures,19
GOLDMINI.MCX,49778,Gold Mini Futures,19
GOLDPETAL.MCX,49779,Gold Petal Futures,19
LEADMINI.MCX,49796,Lead Mini Futures,19
NICKELMINI.MCX,49789,Nickel Mini Futures,19
SILVERMICRO.MCX,49792,Silver Micro Futures,19
SILVERMINI.MCX,49793,Silver Mini Futures,19
ZINCMINI.MCX,49795,Zinc Mini Futures,19
NICKEL.MCX,49788,Nickel Futures,19
REFINED GOLD.MCX,49776,Refined Gold Futures,19
SILVER.MCX,49791,Silver Futures,19
ZINC.MCX,49794,Zinc Futures,19
CARDAMOM.MCX,49770,Cardamom Futures,19
COTTON.MCX,49773,Cotton 29mm Futures,19
CRUDEPALMOIL.MCX,49775,Crude Palm Oil Futures,19
MENTHAOIL.MCX,49785,Mentha Oil Futures,19
CRUDEOIL.MCX,49774,Crude Oil WTI Futures,19
NATURALGAS.MCX,49787,Natural Gas Futures,19

#L LONDON
OPM.L,28701,1pm PLC,16
SPA.L,28588,1Spatial Plc,16
C21.L,27775,21St Century Technology Plc,16
III.L,6576,3I Group PLC,16
3IN.L,6635,3I Infrastructure Plc,16
DDDD.L,949069,4D Pharma PLC,16
FOUR.L,28357,4Imprint Group Plc,16
SIXH.L,28550,600 Group,16
7DIG.L,27821,7Digital Group PLC,16
88E.L,27709,88 Energy Ltd,16
888.L,9048,888 Holdings,16
BAG.L,14006,A.G Barr Plc,16
0N54.L,948779,A2A,16
AAAA.L,948333,AA Plc,16
0NX1.L,948868,Aalberts Industries NV,16
0MG0.L,948706,Aareal Bank AG,16
ABDP.L,940856,Ab Dynamics,16
ABAA.L,40174,Abaco Capital PLC,16
0NX2.L,948869,ABB Ltd,16
ABBY.L,948999,Abbey,16
0Q15F.L,949000,Abbott Laboratories,16
0QCVF.L,989663,AbbVie Inc,16
0OPJPA.L,989716,ABC Arbitrage,16
ABCA.L,14001,Abcam,16
AAIF.L,27962,Aberdeen Asian Income Fund,16
AAS.L,27747,Aberdeen Asian Smaller Companies Investment Trust PLC,16
ADIG.L,6860,Aberdeen Diversified Income and Growth Trust PLC,16
AEMC.L,27929,Aberdeen Emerging Markets Investment Company Ltd,16
AFMC.L,27893,Aberdeen Frontier Markets Investment Company Ltd,16
AJIT.L,955572,Aberdeen Japan Investment Trust PLC,16
ALAIF.L,955573,Aberdeen Latin American Income Fund Ltd,16
ABD.L,27776,Aberdeen New Dawn Investment Tst,16
ANII.L,27957,Aberdeen New India Investment Trust PLC,16
ANW.L,40110,Aberdeen New Thai Investment Trust,16
ASCIA.L,955574,Aberdeen Smaller Companies High Income Trust PLC,16
ASLI.L,1056499,Aberdeen Standard European Logistics Income PLC,16
ASL.L,6750,Aberforth Smaller Companies Trust,16
ASIZ.L,1031152,Aberforth Split Level Income Trust PLC,16
ASITA.L,1024847,Aberforth Split Level Income Trust PLC,16
0NWD.L,948860,Abertis Infr,16
0IZMOL.L,989691,ABG Sundal Collier Holding ASA,16
ABZA.L,940778,Abzena PLC,16
ACAA.L,13148,Acacia Mining PLC,16
0RHN.L,989667,AcadeMedia AB,16
ACCI.L,28320,Access Intelligence,16
ACSO.L,28690,Accesso Technology Group PLC,16
0H4K.L,948557,Acciona,16
0H59.L,948559,Accor SA,16
ACRL.L,985175,Accrol Group Holdings PLC,16
ACCS.L,7527,Accsys Technologies,16
ACD.L,28027,Acencia Debt Strategies Ltd,16
ACIDQ.L,1061223,Acer Inc DRC,16
0OIQ.L,948920,Acerinox,16
0GYM.L,948547,Ackermans V.Haaren,16
0DLIAS.L,989686,Amsterdam Commodities NV,16
0HAC.L,948574,ACS Actividades de Construccion y Servicios SA,16
ATLNCHF.L,989696,Actelion Ltd,16
AHCG.L,942363,Action Hotels,16
AEGR.L,28149,Active Energy Group Plc,16
ACTA.L,949002,Actual Experience PLC,16
ADAM.L,949004,Adamas Finance Asia Ltd,16
ADAA.L,949003,Adams PLC,16
0REZST.L,989678,AddLife AB,16
0QI7ST.L,989669,Addtech,16
0QNMS.L,989670,Adecco SA,16
ADT.L,28395,Adept Telecom,16
AD4.L,27986,Adept4 PLC,16
ADES.L,1010613,ADES International Holding Ltd,16
ALBAL.L,954885,Adgorithms Ltd,16
0OLD.L,948924,Adidas AG,16
ADML.L,6658,Admiral Group PLC,16
AMSU.L,27760,Advanced Medical Solutions Group,16
AVO.L,28211,Advanced Oncotherapy Plc,16
APCL.L,27789,Advanced Power Components,16
AFN.L,27867,ADVFN,16
0Q0Y.L,948949,Aegon NV,16
AEO.L,28040,Aeorema Communications Plc,16
0NP8.L,948812,Aeroports De Paris SA,16
AEWL.L,1011775,AEW UK Long Lease REIT PLC,16
AEWU.L,953053,AEW UK REIT PLC,16
0QUU.L,989671,AF AB B,16
AFEN.L,28533,AFC Energy Plc,16
0OG4PA.L,989728,Affine R.E,16
AFIDLQ.L,1061224,AFI Development PLC DRC,16
AFRBB.L,949007,AFI Development PLC,16
SSAQ.L,943198,AFK Sistem DRC,16
AOF.L,27725,Africa Opportunity Fund Ltd,16
ABMA.L,40189,African Battery Metals PLC,16
0QWDOL.L,989673,African Petroleum Corporation Ltd,16
ATM.L,1055093,AfriTin Mining Ltd,16
0Q99.L,948960,Ageas,16
AMPH.L,949013,Aggregated Micro Power Holdings plc,16
AGGK.L,6701,Aggreko,16
AGTAR.L,28572,Agriterra Ltd,16
0RI8.L,948983,Koninklijke Ahold Delhaize NV,16
AIBG.L,1061196,AIB Group PLC,16
AIRC.L,949010,Air China Ltd,16
0LN7.L,948681,Air France KLM SA,16
0NWF.L,948861,Air Liquide SA,16
AIRA.L,949009,Air Partner PLC,16
0KVV.L,948676,Airbus Group SE,16
AIEA.L,27869,Airea Plc,16
0NP9.L,948813,Aixtron SE,16
0IPTOL.L,989675,Akastor ASA,16
0MJX.L,989676,Aker ASA,16
0QXP.L,948992,Aker Solutions OL,16
AKR.L,28219,Akers Biosciences Inc,16
0OK7PA.L,989674,Akka Technologies,16
0LND.L,948683,Akzo Nobel,16
ALBA.L,28035,Alba Mineral Resources,16
0HA8MC.L,989677,Corporacion Financiera Alba SA,16
0MGNPA.L,989666,Albioma,16
AADV.L,948998,Albion Development VCT PLC,16
AEFS.L,940907,Alcentra European Floating Rate Income Fund Ltd,16
ALD.L,948334,Aldermore Group Plc,16
AXM.L,28250,Alexander Mining,16
ALFAAL.L,1024845,Alfa Financial Software Holdings PLC,16
0NNF.L,948809,Alfa Laval AB,16
0OIR.L,989679,ALK-Abello B,16
AAAL.L,948997,All Asia Asset Capital Ltd,16
AGY.L,28098,Allergy Therapeutics,16
ALAPH.L,28494,Alliance Pharma,16
ATST.L,6820,Alliance Trust,16
0M6S.L,948698,Allianz SE VNA O.N,16
ATT.L,28114,Allianz Technology Trust PLC,16
ALML.L,942419,Allied Mind,16
0DJICO.L,989680,Alm. Brand,16
0O9B.L,948903,Almirall,16
0RCS.L,948923,Alpha Bank SA,16
AFM.L,1053103,Alpha Financial Markets Consulting PLC,16
AFX.L,1006463,Alpha FX Group PLC,16
ALGW.L,1057016,Alpha Growth PLC,16
ARTL.L,949017,Alpha Real Trust Ltd,16
0J2R.L,948634,Alstom SA,16
0O9Q.L,948904,Alstria Office Reit-Ag,16
0O1S.L,948886,Alten,16
ALFAL.L,958831,Alternative Liquidity Fund Ltd,16
ALT.L,28343,Altitude Group Plc,16
ALRE.L,28415,Altona Energy Plc,16
0IWK.L,948630,Altran Technologies,16
0DJVLS.L,989681,Altri SGPS,16
ALS.L,1031377,Altus Strategies PLC,16
ALTNA.L,22341,Altyn PLC,16
ALUG.L,949012,Alumasc Group PLC,16
0P2W.L,948940,Amadeus IT,16
AMBR.L,27794,Ambrian PLC,16
0R4L.L,989682,Ambu A/S,16
AMEDA.L,943181,Amedeo Resources Plc,16
AA4A.L,953052,Amedeo Air Four Plus Ltd,16
0K7Y.L,948656,Amer Sports Corporation,16
AMER.L,14086,Amerisur Resources Plc,16
0LO9.L,948688,AMG Advanced Metallurgical Group NV,16
AFS.L,28310,Amiad Water Systems Ltd,16
AMNX.L,32422,Aminex,16
AMO.L,28166,Amino Technologies,16
0NO6MC.L,989685,Amper,16
AMAMP.L,28146,Amphion Innovations Plc,16
AMYT.L,44441,Amryt Pharma PLC,16
0QWCS.L,989683,Ams AG,16
A7L.L,14087,Amur Minerals Corp,16
ADL.L,28153,Andalas Energy and Power PLC,16
PGRP.L,28407,Andes Energia PLC,16
ANSY.L,27823,Andrews Sykes Group,16
0MJZ.L,948740,Andritz AG,16
0P6ZPA.L,989668,ANF Immobilier,16
AGLE.L,28684,Angle Plc,16
AYM.L,27754,Anglesey Mining,16
ANG.L,1031150,Angling Direct PLC,16
AAAP.L,961756,Anglo African Agriculture PLC,16
AAOG.L,997433,Anglo African Oil & Gas PLC,16
AAL.L,6603,Anglo American PLC,16
AAZ.L,28167,Anglo Asian Mining Plc,16
APF.L,19697,Anglo Pacific Group,16
ANEA.L,27750,Anglo-Eastern Plantations,16
ANGSA.L,993238,Angus Energy PLC,16
0RJI.L,948887,Anheuser Busch Inbev SA NV,16
ANCR.L,28245,Animalcare Group Plc,16
ANP.L,28637,Anpario Plc,16
0NK9.L,948800,Ansaldo STS,16
ANTO.L,6633,Antofagasta PLC,16
AO.L,940869,Ao World,16
AOR.L,28058,Aortech International,16
APAX.L,954886,Apax Global Alpha Ltd,16
0OLF.L,948925,Aperam SA,16
APGNA.L,954887,Applegreen Plc,16
AGMA.L,942382,Applied Graphene Materials Plc,16
0QTZ.L,948985,Applus Services SA,16
APPSA.L,1045832,Appscatter Group PLC,16
APQ.L,986624,APQ Global Ltd,16
AQSG.L,941168,Aquila Services Group PLC,16
0QKRS.L,989672,Arbonia AG,16
ARBB.L,28010,Arbuthnot Banking Group Plc,16
0N6B.L,948780,Arcadis,16
0QJA.L,989688,Arcam AB,16
0RP9.L,948842,ArcelorMittal SA,16
0RBAOL.L,989687,Archer Limited,16
ARC.L,27820,Arcontech Group Plc,16
ARDN.L,28346,Arden Partners Plc,16
ARE.L,1031340,Arena Events Group PLC,16
0RB9PA.L,989960,Ares Allergy Holding PLC,16
0QW0BR.L,989689,Argen-X,16
ARGOA.L,28535,Argo Group Ltd,16
ARGR.L,28318,Argos Resources Ltd,16
AGQ.L,28353,Arian Silver Corporation,16
ARNR.L,28459,Ariana Resources,16
ARIX.L,996532,Arix Bioscience PLC,16
0IB0.L,948613,Arkema,16
ACPA.L,28252,Armadale Capital PLC,16
ARWA.L,50669,Arrow Global Group Plc,16
ATS.L,28139,Artemis Alpha Trust,16
ATSS.L,949021,Artemis Alpha Trust,16
ARTA.L,28590,Artilium Plc,16
ASCR.L,28457,Ascent Resources,16
ASCL.L,963710,Ascential PLC,16
0DMEMI.L,989690,Ascopiave,16
ASPL.L,949019,Aseana Properties Ltd,16
0QDTOL.L,989692,Asetek,16
ASH.L,28443,Ashley House Plc,16
ASHM.L,6678,Ashmore Group Plc,16
AGOL.L,27715,Ashmore Global Opportunities Ltd,16
AHT.L,6836,Ashtead Group PLC,16
ARSA.L,28241,Asiamet Resources Ltd,16
ATRAS.L,40117,Asian Total Return Invest Co Plc,16
0NX3.L,948870,ASM International,16
0QB8.L,948962,ASML Holding NV,16
ASOS.L,6822,Asos,16
0R87.L,948562,ASSA ABLOY AB ser. B,16
ASTO.L,28624,Assetco Plc,16
ASBE.L,949018,Associated British Engineering,16
ABF.L,6625,Associated British Foods PLC,16
AGRP.L,7351,Assura Group Ltd,16
0OA7PA.L,989694,Assystem,16
0DMQMI.L,989693,Astaldi,16
0K82MI.L,989697,ASTM SpA,16
AZN.L,6565,AstraZeneca PLC,16
0O5CVI.L,989699,AT & S Austria Technologie & Systemtechnik AG,16
ATYM.L,28160,Atalaya Mining Ltd,16
0JWO.L,989695,Atea ASA,16
ATTR.L,958832,Athelney Trust PLC,16
0I2R.L,948608,Atlantia,16
AJG.L,955571,Atlantis Japan Growth Fund Ltd,16
ARL.L,940880,Atlantis Resources Ltd,16
0R82.L,948536,Atlas Copco AB ser. A,16
0R81.L,948564,Atlas Copco AB ser. B,16
ATMA.L,949020,Atlas Mara Ltd,16
0DNH.L,948487,Atos SE,16
0MJT.L,948739,Atresmedia,16
ATRLJBST.L,989834,Atrium Ljungberg AB ser. B,16
0MK2VI.L,989698,Atrium Europ.Real Est.Ltd,16
0RCY.L,989700,Attendo International publ AB,16
ATQT.L,943168,ATTRAQT Group PLC,16
AUCT.L,949022,Auctus Growth PLC,16
BOOMA.L,949038,Audioboom Group PLC,16
AUG.L,28644,Augean,16
AUK.L,27746,Aukett Fitzroy Robinson Group,16
AURA.L,989447,Aura Energy Ltd,16
AURT.L,955575,Aurora Investment Trust PLC,16
0K7F.L,948654,Aurubis AG,16
0DNW.L,989701,Austevoll Seafood ASA,16
AUTGA.L,986301,Autins Group PLC,16
AUTOA.L,948335,Auto Trader Group Plc,16
0DHJ.L,948486,Autogrill,16
AVTG.L,28455,Avacta Group PLC,16
0QTXOL.L,989702,Avance Gas Holding Ltd,16
AVN.L,14003,Avanti Communications Group Plc,16
0NUK.L,989703,Avanza Bank Holding AB,16
AVAP.L,949023,Avation PLC,16
ASOA.L,22679,Avesoro Resources Inc,16
AVV.L,6821,Aveva Group,16
0IXTPA.L,989829,Aviation Latecoere,16
AVG.L,28506,Avingtrans Plc,16
AV.L,6615,Aviva PLC,16
AV_P.L,1061197,Aviva PLC Pref,16
AVM.L,22680,Avocet Mining PLC,16
AVON.L,28486,Avon Rubber,16
0HAR.L,948581,AXA SA,16
APT.L,28375,AXA Property Trust,16
0QIGOL.L,989704,Axactor AB,16
0NV2.L,948849,Axel Springer SE,16
0R6R.L,948781,Axfood AB,16
0QVY.L,989705,Axiare Patrimonio SOCIMI SA,16
AXI.L,960674,Axiom European Financial Debt Ltd,16
0GWC.L,948543,Axis AB,16
AXBKQ.L,44422,Axis Bank Ltd GDR,16
0MHJ.L,948729,Azimut Holding,16
BPM.L,40124,B P Marsh and Partners PLC,16
0I5OST.L,989709,B&B Tools AB,16
BMEB.L,949036,B&M European Value Retail SA,16
0H00.L,948550,B. Sabadell,16
BAB.L,6690,Babcock International Group PLC,16
BCNB.L,942384,Bacanora Minerals Ltd,16
BAES.L,6632,BAE Systems PLC,16
BAGR.L,943191,Bagir Group Ltd,16
BPCB.L,13170,Bahamas Petroleum Company Plc,16
BGFD.L,27919,Baillie Gifford Japan Trust,16
BGS.L,50670,Baillie Gifford Shin Nippon PLC,16
BSRT.L,949039,Baker Steel Resources Trust,16
BAKK.L,1055838,Bakkavor Group PLC,16
BALF.L,6588,Balfour Beatty,16
0LNQ.L,948686,Koninklijke BAM Groep NV,16
0DQZ.L,948493,Banca Generali,16
0RDO.L,989718,Banca Mediolanum SpA,16
0RN0.L,948795,Banca Piccolo Credito Valtellinese SpA,16
0NWJ.L,948862,Banca Popolare Sondrio,16
0R9HMI.L,989727,Banca Sistema Spa,16
0DPG.L,989708,Banco BPI,16
0RLA.L,948982,Banco Bpm,16
0RJN.L,948876,Banco Comercial Portugues,16
0MRMCO.L,989719,Bang & Olufsen,16
BGO.L,28671,Bango,16
AUSRQ.L,1061225,Bank Audi SAL DRC,16
BOCH.L,13899,Bank Of Cyprus Holdings PCL,16
BIRG.L,290,Bank of Ireland Group plc,16
0DP0.L,948488,Bank Polska Kasa Opieki SA,16
0DVR.L,948494,Bank Zachodni WBK SA,16
BNKR.L,6554,Bankers Investment Trust,16
0RQ1.L,948966,Bankia SA,16
0H7O.L,948568,Bankinter,16
BARC.L,282,Barclays PLC,16
0KDK.L,948668,Barco,16
BEE.L,28048,Baring Emerging Europe Plc,16
BWOB.L,40128,Barloworld,16
BARV.L,963707,Baronsmead Venture Trust PLC,16
BDEV.L,6613,Barratt Developments PLC,16
BSE.L,40127,Base Resources Ltd,16
BFA.L,27665,BASF SE NA O.N,16
BASK.L,1052261,Baskerville Capital Plc,16
BVC.L,102942,Batm Advanced Communications Ltd,16
0P6S.L,948947,Bayer AG NA,16
0AH7.L,948479,Baywa AG Vink. NA O.N,16
0JYO.L,948650,BB Biotech AG,16
BBH.L,994021,BB Healthcare Trust PLC,16
BBA.L,6819,BBA Aviation Plc,16
BBGIB.L,27934,BBGI SICAV SA,16
BVAB.L,27670,BBVA,16
BCA.L,942672,BCA Marketplace plc,16
BCRE.L,949029,BCRE Brack Capital Real Estate Investments NV,16
BHRD.L,943165,Be Heard Group PLC,16
0DQH.L,948492,BE Semiconductor Industries NV,16
BEZG.L,6867,Beazley Plc,16
0DPM.L,948489,Bechtle AG,16
BKSB.L,1057263,Beeks Financial Cloud Group PLC,16
0MFT.L,948704,Befimmo-Sicafi,16
BEG.L,14007,Begbies Traynor Group Plc,16
0DQ7.L,948491,Beiersdorf AG O.N,16
0GX4ST.L,989712,Beijer Alma AB ser. B,16
0OQJ.L,948936,NV Bekaert SA,16
BWY.L,6567,Bellway,16
BZM.L,14092,Bellzone Mining Plc,16
BLVB.L,942385,Belvoir Lettings plc,16
BMKB.L,942386,Benchmark Holdings plc,16
0K8NPA.L,989741,Beneteau,16
BEM.L,28338,Beowulf Mining,16
BKY.L,27682,Berkeley Energy Ltd,16
BKGH.L,13127,The Berkeley Group Holdings plc,16
BOTB.L,28255,Best Of The Best Plc,16
0DQKAS.L,989713,Beter Bed Holding NV,16
0RPT.L,948986,Betsson AB,16
BCAP.L,949026,Better Capital PCC Ltd,16
BCAPX.L,949027,Better Capital PCC Ltd 2012,16
BZT.L,14093,Bezant Resources Plc,16
BGEO.L,28003,Bgeo Group PLC,16
BHGG.L,14010,BH Global Ltd,16
BHGGU.L,14011,BH Global Ltd USD,16
BHMG.L,14012,BH Macro Limited,16
BHMGU.L,14013,BH Macro USD,16
BLT.L,6617,BHP Billiton PLC,16
0MGP.L,948719,BIC,16
0DUKMI.L,989726,Biesse,16
BIFF.L,992767,Biffa PLC,16
BST.L,994251,Big Sofa Technologies Group PLC,16
BYG.L,6801,Big Yellow Group,16
BILBI.L,954888,Bilby PLC,16
0NRG.L,948839,Bilfinger SE O.N,16
0RQ2.L,989714,Bilia AB,16
0GWS.L,948545,BillerudKorsnas AB,16
B4S.L,28184,Billing Services Group,16
BILN.L,949033,Billington Holdings PLC,16
0N6Y.L,948782,BinckBank NV,16
0R72BR.L,989710,Biocartis Group NV,16
BIOM.L,28162,Biome Technologies Plc,16
BPCR.L,999057,BioPharma Credit PLC,16
BIOQ.L,949034,Bioquell PLC,16
0DRVOL.L,989715,Biotec Pharmacon ASA,16
BIOGW.L,27751,Biotech Growth Trust Plc,16
BVXP.L,943184,Bioventix,16
BISI.L,949035,Bisichi Mining PLC,16
BRNA.L,50672,Blackrock B,16
BRCI.L,27903,BlackRock Commodities Income Investment Trust plc,16
BRGE.L,27902,BlackRock Greater Europe Investment Trust plc,16
BRFI.L,27984,BlackRock Frontiers Investment Trust plc,16
BRIGB.L,955857,Blackrock Income and Growth Investment Trust PLC,16
BRLA.L,27996,BlackRock Latin American Investment Trust plc,16
BRSC.L,14094,BlackRock Smaller Companies Trust plc,16
BRWM.L,14018,Blackrock World Mining Trust Plc,16
BGLF.L,949032,Blackstone Gso Loan Financing Ltd,16
BLTGB.L,28512,Blancco Technology Group PLC,16
BNRB.L,949042,Blenheim Natural Resources PLC,16
BLBDQ.L,1061226,BLOM Bank SAL DRC,16
BLPU.L,28237,Bloomsbury Publishing,16
BCAI.L,949028,Blue Capital Alternative Income Fund Limited,16
BLP.L,955577,Blue Planet Investment Trust PLC,16
PRSMB.L,968981,Blue Prism Group PLC,16
BLUS.L,28238,Blue Star Capital Plc,16
BMV.L,976459,Bluebird Merchants Ventures Ltd,16
JAY.L,940884,Bluejay Mining PLC,16
BRD.L,942388,BlueRock Diamonds plc,16
0N73.L,948783,Bolsas y Mercados Espanoles,16
BMRB.L,27764,BMR Mining PLC,16
0O0U.L,948882,Bayerische Motoren Werke AG,16
BNN.L,940783,BNN Technology PLC,16
0HB5.L,948588,BNP Paribas SA,16
BOY.L,6806,Bodycote Plc,16
BOEB.L,29385,Boeing Co,16
BOKU.L,1055128,Boku Inc,16
0MI5.L,948736,Boliden AB,16
0IXZ.L,948631,Bollore SA,16
0RHA.L,989720,Bonava AB B,16
0N75PA.L,989721,Bonduelle,16
0DTIOL.L,989722,Bonheur,16
BONB.L,942387,Bonmarche Holdings plc,16
BOOH.L,940877,boohoo.com plc,16
BOK.L,14015,Booker Group Plc,16
BSTH.L,13179,Borders & Southern Petroleum,16
BOSB.L,27698,BOS Global Holdings Ltd,16
0LO8.L,948687,Koninklijke Boskalis Westminster NV,16
BODP.L,28231,Botswana Diamonds Plc,16
0ELN.L,948502,Bourbon Corporation SA,16
BGHS.L,949030,Boussard and Gavaudan Holding Ltd ORD,16
BGHSX.L,949031,Boussard and Gavaudan Holding Ltd,16
0HDUOL.L,989723,Bouvet,16
0HAN.L,948579,Bouygues SA,16
BVS.L,6654,Bovis Homes Group,16
BLVN.L,7119,Bowleven,16
BOX.L,28306,Boxhill Technologies PLC,16
BP.L,284,BP PLC,16
0MU6.L,948767,Bper Banca SpA,16
0QF5.L,948972,bpost NV,16
BRDY.L,28199,Brady,16
BRMS.L,27749,Braemar Shipping Services Plc,16
BBSN.L,44420,Brave Bison Group PLC,16
BRH.L,28030,Braveheart Investment Group,16
0RBW.L,989724,Bravida Holding AB,16
0QWBBR.L,989725,Brederode,16
BREE.L,28180,Breedon Group PLC,16
0MPT.L,948761,Brenntag AG,16
BRW.L,14017,Brewin Dolphin Holdings PLC,16
PIER.L,942383,Brighton Pier Group PLC,16
BATS.L,279,British American Tobacco PLC,16
BAF.L,955576,British and American Investment Trust PLC,16
BTEM.L,6810,British Empire Trust plc,16
BLND.L,6672,British Land Company PLC,16
BVIC.L,6644,Britvic,16
0KEHF.L,989707,Brookfield Asset Management Inc,16
BRK.L,28034,Brooks Macdonald Group,16
0Q7S.L,989711,Brunello Cucinelli,16
BUT.L,28410,Brunner Investment Trust,16
BSDB.L,27879,BSD Crown Ltd,16
BSIF.L,50673,Bluefield Solar Income Fund Limited,16
BT.L,6719,BT Group PLC,16
BTG.L,14009,BTG,16
BNZL.L,6610,Bunzl PLC,16
BRBY.L,6611,Burberry Group PLC,16
0N7DST.L,989729,Bure Equity AB,16
0MH1.L,948726,Bureau Veritas,16
BURF.L,28326,Burford Capital Ltd,16
BMNB.L,101930,Bushveld Minerals Ltd,16
0NVQ.L,948855,Buzzi Unicem,16
0NVRMI.L,989731,Buzzi Unicem RSP,16
0MR4.L,989717,Byggmax Group AB,16
BYOT.L,28619,Byotrol Plc,16
GCC.L,6866,C&C Group,16
C4XD.L,943167,C4X Discovery Holdings PLC,16
CABC.L,18892,Cabot Energy PLC,16
CADP.L,14096,Cadogan Petroleum,16
CFYN.L,949048,Caffyns PLC,16
CNE.L,6631,Cairn Energy Plc,16
CRN.L,954889,Cairn Homes PLC,16
0ILK.L,948622,Caixabank SA,16
CLDN.L,6757,Caledonia Investments,16
CALQ.L,27694,Caledonia Mining Corporation Plc,16
CNN.L,949058,Caledonian Trust PLC,16
CMBNC.L,940910,Cambian Group plc,16
TREE.L,28072,Cambium Global Timberland Ltd,16
CMBC.L,28370,Cambria Africa Plc,16
CAMBA.L,39215,Cambria Automobiles Plc,16
COGC.L,949059,Cambridge Cognition Holdings,16
CAME.L,27875,Camellia,16
0ROY.L,948495,Davide Campari Milano SpA,16
0RD1ST.L,989733,Camurus AB,16
COPL.L,949060,Canadian Overseas Petroleum Limited,16
CDI.L,6558,Candover Investments,16
0HAZ.L,948584,Cap Gemini SA,16
CAPX.L,28704,CAP-XX Ltd,16
0R90ST.L,989734,Capio AB,16
CPI.L,6604,Capita PLC,16
CAPD.L,949040,Capital Drilling Ltd,16
CGT.L,28076,Capital Gearing Trust,16
CAPCC.L,14019,Capital & Counties Properties Plc,16
CAL.L,7469,Capital & Regional,16
CIFU.L,949051,Carador Income Fund PLC,16
C1Y.L,32423,Carclo,16
CARDC.L,942375,Card Factory PLC,16
CDFF.L,949046,Cardiff Property PLC,16
CTH.L,6872,Caretech Holdings Plc,16
0MGH.L,948714,Cargotec Oyj,16
CIHL.L,40120,Caribbean Investment Holdings Ltd,16
CLLN.L,6826,Carillion Plc,16
0DHC.L,948485,Carl Zeiss Meditec AG,16
0AI4.L,948480,Carlsberg A/S B,16
CCL.L,6746,Carnival PLC,16
CPRC.L,6640,Carpetright,16
0NPH.L,948814,Carrefour SA,16
CARRC.L,27714,Carr’s Group PLC,16
0HB1.L,948585,Casino Guichard,16
CASPC.L,28348,Caspian Sunrise PLC,16
0GT1.L,948539,Castellum AB,16
CGS.L,949049,Castings PLC,16
CTPC.L,28593,Castleton Technology PLC,16
CMX.L,949056,Catalyst Media Group PLC,16
CATCCC.L,1057249,CATCo Reinsurance Opportunities Fund Ltd,16
CATC.L,961637,CATCo Reinsurance Opportunities Fund Ltd,16
CTI.L,949062,Cathay International Holdings,16
0QFC.L,948973,Caverion Ord,16
CCJI.L,962335,CC Japan Income and Growth Trust PLC,16
0LX1.L,989737,CD Projekt SA,16
0MR5ST.L,989739,CellaVision AB,16
CLTV.L,28543,Cellcast Group,16
CLL.L,28478,Cello Group,16
CCP.L,949043,Celtic PLC,16
0QFKBR.L,989754,Celyad SA,16
0HY2MI.L,989738,Cementir Holding,16
CNKS.L,28212,Cenkos Securities Plc,16
CEY.L,14020,Centamin Plc,16
CAU.L,28414,Centaur Media,16
CAML.L,28134,Central Asia Metals Plc,16
CNIC.L,949057,CentralNic Group Plc,16
CNA.L,6574,Centrica PLC,16
CEPS.L,28707,Ceps PLC,16
CWR.L,6799,Ceres Power Holdings,16
CER.L,968973,Cerillion PLC,16
0NZF.L,948877,CEZ as,16
0RI9.L,948889,CGG SA,16
BLEY.L,40121,CH Bailey PLC,16
CGH.L,28221,Chaarat Gold Holdings Ltd,16
CGLO.L,962508,Chagala Group Ltd,16
CHAL.L,945899,Challenger Acquisitions Ltd,16
CMH.L,28505,Chamberlin Plc,16
CCT.L,28293,Character Group,16
0E1YPA.L,989752,Chargeurs,16
CHARC.L,14097,Chariot Oil & Gas Ltd,16
CAY.L,949041,Charles Stanley Group PLC,16
CTR.L,27833,Charles Taylor PLC,16
CCFS.L,1052431,Charter Court Financial Services Group PLC,16
CHLV.L,955578,Chelverton Growth Trust PLC,16
SDVC.L,1057381,Chelverton Small Companies Dividend Trust PLC,16
SDV.L,955594,Chelvertov Small Companies Dividend Trust PLC,16
CHG.L,6788,Chemring Group,16
CCSL.L,949045,Chenavari Capital Solutions Ltd,16
CSN.L,28601,Chesnara,16
CHF.L,1036847,Chesterfield Resources PLC,16
HCM.L,27995,Hutchison China MediTech Ltd,16
CNGC.L,28298,China Nonferrous Gold Ltd,16
0MR6.L,948763,Chr. Hansen Holding A/S,16
C3U.L,27851,Christie Group,16
CHCH.L,27848,Churchill China,16
CINE.L,28317,Cineworld Group,16
CIP.L,1057140,CIP Merchant Capital Ltd,16
0MHAMI.L,989742,CIR,16
CIRCI.L,940909,Circassia Pharmaceuticals plc,16
CRC.L,963711,Circle Property PLC,16
CMHY.L,27930,City Merchants High Yield Trust Ltd,16
CYNL.L,27748,City Natural Resources High Yield Trust plc,16
CLIG.L,32411,City Of London Investment Group,16
CITY.L,949053,City of London Group PLC,16
CTY.L,6863,City Of London Investment Trust,16
CPC.L,1055912,City Pub Group PLC,16
0E2N.L,948496,Citycon Oyj,16
CITYC.L,942390,CityFibre Infrastructure Holdings PLC,16
CSHC.L,1055041,Civitas Social Housing PLC C,16
CSH.L,993275,Civitas Social Housing PLC,16
0QJSS.L,989745,Clariant AG,16
CKN.L,28600,Clarkson,16
0GQE.L,989744,Clas Ohlson AB ser. B,16
CLPC.L,28516,Clear Leisure Plc,16
CLSU.L,960676,ClearStar Inc,16
CLINC.L,40129,Clinigen Group Plc,16
CLG.L,949054,Clipper Logistics PLC,16
0N7X.L,989746,Cloetta AB ser. B,16
CLON.L,28302,Clontarf Energy Plc,16
CBRO.L,25635,Close Brothers Group plc,16
CBUY.L,27691,Cloudbuy PLC,16
CALL.L,28399,Cloudcall Group PLC,16
CLSH.L,6882,CLS Holdings,16
CLNR.L,40130,Cluff Natural Resources Plc,16
CMCX.L,963706,CMC Markets PLC,16
CML.L,949055,CML Microsystems Plc,16
0IUQ.L,948628,CNP Assurances,16
COA.L,946350,Coats Group PLC,16
COB.L,6663,Cobham,16
CCH.L,42596,Coca Cola HBC AG,16
0J3X.L,948636,Cofinimmo-Sicafi,16
CHRT.L,28647,Cohort,16
CFX.L,28383,Colefax Group,16
COSS.L,940878,Collagen So,16
0QBO.L,948963,Coloplast A/S,16
0NPJCO.L,989747,Columbus A/S,16
CERP.L,28347,Columbus Energy Resources PLC,16
COMIQ.L,44423,Commer Intl Bank,16
CZB.L,27668,Commerzbank AG O.N,16
CMS.L,50662,Communisis,16
CPG.L,6738,Compass Group PLC,16
COM.L,985782,Comptoir Group PLC,16
0MSD.L,948764,CompuGroup Medical AG O.N,16
CCC.L,6756,Computacenter,16
0P4XST.L,989748,Concentric AB,16
CPTC.L,940861,Concepta PLC,16
CHA.L,28646,Concha PLC,16
CNCT.L,27796,Concurrent Technologies,16
CNDR.L,28463,Condor Gold Plc,16
CNCTC.L,28500,Connect Group PLC,16
CON.L,27994,Connemara Mining Plc,16
CGNR.L,27762,Conroy Gold & Natural Resources Plc,16
CSRT.L,28314,Consort Medical Plc,16
0RKF.L,989732,Construcciones y Auxiliar de Ferrocarriles SA,16
0LQ1.L,948689,Continental AG O.N,16
GLO.L,1055938,ContourGlobal PLC,16
CTEC.L,992768,ConvaTec Group PLC,16
CVRC.L,940879,Conviviality Plc,16
CIC.L,14021,Conygar Investment Co PLC,16
CORAC.L,1052354,Cora Gold Ltd,16
CRU.L,28335,Coral Products,16
0QHL.L,948978,Corbion NV,16
CNSP.L,28029,Corero Network Security Plc,16
0O7J.L,989750,Corticeira Amorim,16
0RGIS.L,989749,COSMO Pharmaceuticals SA,16
COSG.L,7267,Costain Group,16
CSPC.L,963708,Countryside Properties PLC,16
CWD.L,44418,Countrywide Plc,16
DQ5.L,949075,Cpl Resources,16
CPPG.L,14022,CPP Group Plc,16
NCYF.L,940918,CQS New City High Yield Fund,16
CRW.L,28560,Craneware Plc,16
CWK.L,14024,Cranswick,16
CRV.L,40131,Craven House Capital PLC,16
CRAW.L,28377,Crawshaw Group Plc,16
0HAI.L,948578,Credit Agricole SA,16
0QP5S.L,989753,Credit Suisse Group AG,16
CRGT.L,949061,Creightons PLC,16
CREO.L,994252,Creo Medical Group PLC,16
CRST.L,44417,Crest Nicholson Holdings plc,16
CRH.L,6664,CRH PLC,16
CTID.L,27846,Crimson Tide Plc,16
CRDA.L,6710,Croda International PLC,16
CSSG.L,27939,Croma Security Solutions Group Plc,16
CRON.L,27970,Cronin Group PLC,16
CROSC.L,942332,Crossrider,16
CRSL.L,28193,Crystal Amber Fund Ltd,16
CSFG.L,28566,CSF Group Plc,16
0EEE.L,948501,CTS Eventim AG,16
0QIM.L,948980,CTT Correios de Portugal SA,16
CBP.L,953054,Curtis Banks Ltd,16
CZN.L,1055081,Curzon Energy,16
CREI.L,940911,Custodian Reit,16
CCPG.L,50674,CVC Credit Partners European Opportunities Ltd,16
CCPE.L,949044,CVC Credit Partners European Opportunities Ltd ORD,16
CVSG.L,28561,CVS Group Plc,16
CYAN.L,28394,Cyanconnode Holdings PLC,16
CYBGC.L,968974,CYBG PLC,16
0R80ST.L,989758,D Carnegie & Co AB,16
0HDPCO.L,989761,D/S Norden,16
D4T4.L,27844,D4t4 Solutions PLC,16
DJAN.L,14026,Daejan Holdings Plc,16
DMGOA.L,6677,Daily Mail & General Trust,16
0NXX.L,948873,Daimler AG NA O.N,16
DCG.L,6835,Dairy Crest Group,16
DALD.L,949066,Dalata Hotel Group PLC,16
DALR.L,949067,Dalradian Resources Inc,16
DIL2.L,949072,Damille Investments II Ltd,16
0APMMI.L,989756,Danieli & C,16
0N4IMI.L,989757,Danieli & C RSP,16
0KFX.L,948671,Danone SA,16
0NVC.L,948852,Danske Bank A/S,16
DTG.L,28514,Dart Group Plc,16
0IAX.L,948612,Dassault Aviation,16
0HB4.L,948587,Dassault Systemes,16
0E3CMI.L,989755,Datalogic,16
DATD.L,949068,Datang Intl Power Gen Co-H,16
DVTD.L,976460,daVictus plc,16
DCC.L,23449,DCC plc,16
DCD.L,28559,DCD Media Plc,16
DLAR.L,6792,De La Rue PLC,16
0E5M.L,948498,De Longhi SpA,16
DEB.L,6614,Debenhams Plc,16
DPH.L,32416,Dechra Pharmaceuticals PLC,16
DFX.L,961757,Defenx PLC,16
DKLD.L,940858,DekelOil Public Ltd,16
DEMG.L,28097,Deltex Medical Group,16
0M0Q.L,948692,Deoleo,16
DERR.L,994717,Derriston Capital PLC,16
DLN.L,6850,Derwent London Plc,16
DEST.L,1043250,Destiny Pharma PLC,16
0H7D.L,948566,Deutsche Bank AG NA O.N,16
0H3T.L,948554,Deutsche Boerse AG,16
0I3Z.L,948609,Deutsche Euroshop AG,16
0H3Q.L,948553,Deutsche Post AG NA O.N,16
0MPH.L,948756,Deutsche Telekom AG Na,16
0OBQ.L,948907,Deutsche Wohnen AG,16
0E4K.L,948497,Deutz AG,16
DVO.L,14101,Devro,16
DWHT.L,40133,Dewhurst,16
DWHTT.L,949080,Dewhurst,16
DFSD.L,946349,DFS Furniture PLC,16
0Q2F.L,948950,Distribuidora Intl de Aliment,16
DGE.L,6584,Diageo PLC,16
DIAL.L,28698,Dialight,16
0OLN.L,948927,Dialog Semiconductor,16
0GZX.L,948549,Diasorin,16
0H7B.L,948565,Diebold Nixdorf AG,16
0ON7.L,948930,DIeteren SA,16
DTY.L,6811,Dignity PLC,16
DSG.L,28254,Dillistone Group,16
0GTMST.L,989760,Dios Fastigheter AB,16
DPLM.L,32417,Diploma,16
DLGD.L,32420,Direct Line Insurance Group PLC,16
DCTA.L,985176,Directa Plus PLC,16
DSCV.L,44440,Discovery Group plc,16
DISD.L,28051,Distil PLC,16
DNL.L,962336,Diurnal Group PLC,16
DIVI.L,50675,Diverse Income Trust PLC,16
DGOC.L,995934,Diversified Gas & Oil PLC,16
DC.L,14023,Dixons Carphone PLC,16
0OP0.L,948933,DMG Mori AG,16
0O84.L,948897,DnB ASA,16
0MHP.L,948731,DNO International ASA,16
DOCVI.L,989762,DO & CO AG,16
DODS.L,28692,Dods Group Plc,16
DOLC.L,28084,Dolphin Capital Investors,16
DOM.L,8923,Domino’s Pizza Group Plc,16
DNA3.L,949073,Doric Nimrod Air Three Ltd,16
DOTD.L,28261,Dotdigital Group Plc,16
DSM.L,1010614,Downing Strategic Micro-Cap Investment Trust PLC,16
DPAD.L,949074,DP Aircraft I Ltd,16
DPEU.L,1025132,DP Eurasia NV,16
DPP.L,28564,DP Poland Plc,16
DRG.L,28062,Draganfly Investments,16
DUPD.L,14122,Dragon-Ukrainian Properties & Development plc,16
GROW.L,985177,Draper Esprit PLC,16
DRX.L,6689,Drax Group,16
0E6Y.L,948499,Drillisch AG,16
DRV.L,28437,Driver Group,16
DRIP.L,953822,Drum Income Plus REIT PLC,16
SMDS.L,6787,DS Smith PLC,16
0NPP.L,948816,Koninklijke DSM NV,16
0JN9.L,948645,DSV,16
0J9C.L,948641,Duerr AG,16
0QK3S.L,989763,Dufry AG,16
DUKE.L,40178,Duke Royalty Ltd,16
DKE.L,1052366,Dukemount Capital PLC,16
DUNE.L,27756,Dunedin Enterprise Investment Trust,16
DIG.L,27921,Dunedin Income Growth Investment Trust PLC,16
DNDL.L,27983,Dunedin Smaller Companies Investment Trust PLC,16
DNLM.L,14027,Dunelm Group Plc,16
DXDX.L,940882,Dx Plc,16
ETXP.L,28367,E-Therapeutics Plc,16
0MPP.L,948760,E.ON SE NA,16
EYE.L,940859,Eagle Eye Solutions Group plc,16
EPO.L,28556,Earthport Plc,16
BEEP.L,28049,Eastern European Trust,16
EEUP.L,27967,Eastern European Property Fund,16
EZH.L,940775,EASYHOTEL PLC,16
EZJ.L,288,EasyJet PLC,16
EBQ.L,28580,Ebiquity Plc,16
0NYH.L,948875,Ebro Foods,16
ECHOE.L,28064,Echo Energy PLC,16
ECK.L,28669,Eckoh Plc,16
EAH.L,28014,Eco Animal Health Group Plc,16
ECOE.L,996147,Eco Atlantic Oil & Gas Ltd,16
EGL.L,989662,Ecofin Global Utilities and Infrastructure Trust PLC,16
ECRE.L,28460,ECR Minerals PLC,16
ECSC.L,994253,ECSC Group PLC,16
ESLE.L,1008979,Eddie Stobart Logistics PLC,16
EDENE.L,40134,Eden Research,16
0MUM.L,948769,Edenred,16
EDLE.L,28273,Edenville Energy PLC,16
EFM.L,14030,Edinburgh Dragon Trust,16
EDIN.L,6807,Edinburgh Investment Trust,16
EWI.L,27888,Edinburgh Worldwide Investment Trust plc,16
EPICE.L,942505,Ediston Property Investment Company plc,16
EFIDQ.L,987086,Edita Food Industries SAE,16
0OF7.L,948911,EDP,16
0ML1.L,948752,EDP Renovaveis,16
0QS9MC.L,989768,eDreams Odigeo SA,16
EFR.L,989661,EF Realisation Company Ltd,16
0QJXS.L,989769,EFG International AG,16
EGRE.L,28327,Egdon Resources PLC,16
EIGE.L,6715,EI Group PLC,16
0NPT.L,948817,Eiffage,16
EIH.L,27736,EIH Plc,16
EJFI.L,1008647,EJF Investments Ltd,16
EKF.L,27992,EKF Diagnostics Holdings Plc,16
0QSVPA.L,989770,Ekinops SA,16
0E9SOL.L,989771,Ekornes ASA,16
ELA.L,40136,Eland Oil & Gas Plc,16
0JBYST.L,989772,Elanders AB ser. B,16
ELCO.L,27868,Elecosoft PLC,16
ELTA.L,6879,Electra Private Equity,16
0HBA.L,948589,Electricite de France SA,16
ECM.L,6833,Electrocomponents,16
0MDT.L,948701,Electrolux AB ser. B,16
ELDA.L,949084,Electronic Data Processing PLC,16
EHGE.L,953823,Elegant Hotels Group PLC,16
0O5H.L,948894,Elekta AB ser. B,16
EKT.L,28129,Elektron Technology Plc,16
ELM.L,14031,Elementis,16
0Q1GDE.L,989835,Eli Lilly and Company,16
0NTU.L,948846,Elia,16
0I8Y.L,948610,Elisa Oyj,16
0MG5.L,948708,Elringklinger AG NA O.N,16
0R53.L,989773,Eltel AB,16
EMISG.L,32424,Emis Group Plc,16
EML.L,996533,Emmerson PLC,16
ESP.L,949086,Empiric Student Property PLC,16
EMPR.L,28279,Empresaria Group Plc,16
EMEL.L,28497,Empyrean Energy,16
ENPLQ.L,1055954,En+ Group PLC DRC,16
0EBQ.L,948500,Enagas,16
0RIE.L,989774,Enav SpA,16
0K96MC.L,989775,ENCE,16
0N9G.L,948784,Endesa,16
0NRE.L,948838,Enel,16
0QX7.L,948991,Energa SA,16
ENGI.L,40137,Energiser Investments Plc,16
0LD0.L,948680,Engie SA,16
0N9S.L,948785,ENI,16
ENQ.L,13147,Enquest Plc,16
NTQ.L,943183,Enteq Upstream,16
ETO.L,44442,Entertainment One Ltd,16
0R3Y.L,948995,Entra ASA,16
0QARPA.L,989776,EOS Imaging,16
EPGT.L,27988,EP Global Opportunities Trust,16
ESOE.L,949085,EPE Special Opportunities PLC,16
EPWN.L,940779,Epwin Group PLC,16
EQTE.L,28676,EQTEC PLC,16
PALO.L,28151,Equatorial Palm Oil Plc,16
EQN.L,960677,Equiniti Group PLC,16
0MGV.L,948724,Eramet,16
ERGO.L,943188,Ergomed,16
ERIS.L,1057030,Erris Resources PLC,16
0MJK.L,948738,Erste Group Bank AG,16
ESCE.L,985885,Escape Hunt PLC,16
ESCH.L,40138,Escher Group Holdings plc,16
ESGQ.L,27683,eServGlobal Ltd,16
0NFSMI.L,989900,Esprinet,16
ESNT.L,6789,Essentra PLC,16
0OMK.L,948929,Essilor International Compagnie Generale d’Optique SA,16
0N9VPA.L,989778,ESSO,16
ESUR.L,39213,Esure Group Plc,16
0N4Y.L,948778,Etablissementen Fr Colruyt NV,16
ETLNGQ.L,44424,Etalon Group,16
ENET.L,1025133,Ethernity Networks Ltd,16
EUSPP.L,942364,Eu Supply,16
0OBR.L,948908,Euler Hermes,16
EUA.L,27828,Eurasia Mining,16
0HZC.L,948605,Eurazeo,16
0LTM.L,948691,Eurocash SA,16
0QE2AS.L,989765,Eurocastle Investment Ltd,16
ECEL.L,945898,Eurocell PLC,16
0MV5.L,948771,Eurofins Scientific,16
ERM.L,6869,Euromoney Institutional Investor,16
EOG.L,28061,Europa Oil & Gas Holdings,16
49BI.L,1057000,European Assets Trust NV,16
EUTP.L,27769,European Investment Trust Plc,16
EMHE.L,961758,European Metals Holdings Ltd,16
0RAIOL.L,989777,Europris ASA,16
0JNI.L,948646,Eutelsat Communications,16
EVEE.L,1010869,eve Sleep PLC,16
EMANE.L,44414,Everyman Media Group plc,16
EVG.L,960678,Evgen Pharma PLC,16
EVNVI.L,989780,EVN AG,16
0QQJS.L,989779,Evolva Holding SA,16
EVRH.L,28471,EVR Holdings PLC,16
EVRE.L,14617,Evraz Plc,16
0N9ZBR.L,989781,EVS Broadcast Equipment,16
EWGE.L,40142,EW Group Ltd,16
EXIL.L,14032,Exillon Energy Plc,16
0RKY.L,948728,Exor NV,16
XPSA.L,28594,Expansys Plc,16
EXPN.L,13120,Experian PLC,16
FCI.L,27953,F&C Capital and Income Investment Trust PLC,16
FCPTL.L,14033,F&C Commercial Property Trust Ltd,16
FPERX.L,28124,F&C Private Equity Trust,16
FCS.L,27900,F&C Global Smaller Companies,16
FHI.L,949112,F&C UK High Income Trust PLC,16
FCRE.L,28001,F&C Uk Real Estate Investments Ltd,16
0MI6.L,948737,Fabege AB,16
0K9HMC.L,989784,Faes Farma SA,16
0HNZ.L,948600,Fagron NV,16
FAIR.L,949088,Fair Oaks Income Ltd,16
FFX.L,943169,Fairfx Group PLC,16
FLXFA.L,940885,Falanx Group Ltd,16
FAL.L,962509,Falcon Acquisitions Ltd,16
FOG.L,940886,Falcon Oil & Gas Ltd,16
FHP.L,1024853,Fandango Holdings PLC,16
FPM.L,7201,Faroe Petroleum Plc,16
FARN.L,961638,Faron Pharmaceuticals Oy,16
FFWD.L,27969,FastForward Innovations Ltd,16
FJET.L,27914,Fastjet PLC,16
0MGR.L,948720,Faurecia,16
FBH.L,949089,Fbd Holdings,16
0HAA.L,948573,FCC,16
FDM.L,942422,FDM Group Holdings PLC,16
FDBK.L,943177,Feedback PLC,16
FENR.L,14036,Fenner Plc,16
FERG.L,6562,Ferguson PLC,16
FXPO.L,6846,Ferrexpo Plc,16
0P2N.L,948939,Ferrovial,16
FCRF.L,27697,Ferrum Crescent Ltd,16
FEVR.L,942509,Fevertree Drinks PLC,16
FFIF.L,1024852,FFI Holdings PLC,16
0HV8PA.L,989788,FFP SA,16
0QXR.L,948993,Fiat Chrysler Automobiles NV,16
FAS.L,28077,Fidelity Asian Values,16
FASS.L,994022,Fidelity Asian Values PLC,16
FCSS.L,14034,Fidelity China Special Situations,16
FEV.L,7104,Fidelity European Values,16
FJV.L,50676,Fidelity Japanese Values PLC ORD,16
FSV.L,14038,Fidelity Special Values,16
FDSA.L,14035,Fidessa Group Plc,16
FIH.L,27974,FIH Group PLC,16
0QIQMI.L,989789,Fila SpA,16
FLTA.L,993181,Filta Group Holdings PLC,16
FTC.L,28568,Filtronic,16
0QWNMI.L,989785,Fincantieri SpA,16
FDL.L,6885,Findel,16
FIF.L,27795,Finsbury Food Group,16
FGT.L,27941,Finsbury Growth & Income Trust,16
FDI.L,22229,Firestone Diamonds,16
FRST.L,28232,First Derivatives Plc,16
FSTP.L,27814,First Property Group,16
0P6EF.L,14037,First Quantum Minerals Ltd,16
FGP.L,6708,FirstGroup plc,16
FISH.L,953824,Fishing Republic PLC,16
FCHK.L,40143,Fletcher King,16
FLOWF.L,28305,Flowgroup PLC,16
FLOL.L,940849,Flowtech Fluidpower PLC,16
0OJA.L,948921,FLSmidth & Co,16
FLYB.L,14125,Flybe Group Plc,16
TUNE.L,943160,Focusrite PLC,16
0J6V.L,948638,Fonciere des Regions,16
FPQ.L,1061230,Fondul Proprietatea SA DRC,16
FOOT.L,1054788,Footasylum PLC,16
FBT.L,28032,Forbidden Technologies,16
0P4FF.L,989786,Ford Motor Company,16
FRCL.L,6594,Foreign & Colonial Investment Trust PLC,16
FSFL.L,49814,Foresight Solar Fund Ltd,16
0RHZAS.L,989787,ForFarmers NV,16
0M8YST.L,989791,FormPipe Software AB,16
FORT.L,976461,Forterra PLC,16
0HAH.L,948577,Fortum Oyj,16
FOX.L,40144,Fox Marble Holdings plc,16
FOXT.L,940872,Foxtons Group Plc ORD,16
FRAN.L,986250,Franchise Brands PLC,16
0O1R.L,948885,Fraport AG,16
0EHFOL.L,989790,Fred. Olsen Energy ASA,16
FREE.L,993239,FreeAgent Holdings PLC,16
0MV2.L,948770,Freenet AG NA,16
FCCN.L,949090,French Connection Group PLC,16
0RPV.L,948926,Freni Brembo SpA,16
FEN.L,28060,Frenkel Topping Group,16
0OO9.L,948932,Fresenius SE & Co KGAA O.N,16
0H9X.L,948570,Fresenius Medical Care KGAA ST,16
FRES.L,10522,Fresnillo PLC,16
FRR.L,28110,Frontera Resources Corporation,16
FDEV.L,940860,Frontier Developments plc,16
FIPPG.L,28233,Frontier Ip Group Plc,16
FST.L,28651,Frontier Smart Technologies Group Ltd,16
FEESQ.L,1061229,FSK YeES PAO DRC,16
0B4R.L,948481,Fuchs Petrolub AG O.N,16
FCRM.L,28111,Fulcrum Utility Services Ltd,16
FULH.L,943174,Fulham Shore PLC,16
FSTA.L,32404,Fuller Smith & Turner,16
FCIF.L,961759,Funding Circle SME Income Fund Limited,16
FEET.L,942423,Fundsmith Emerging Equities Trust plc,16
FAB.L,1057250,Fusion Antibodies PLC,16
FUM.L,28339,Futura Medical,16
FUTR.L,949092,Future PLC,16
TFW.L,28430,FW Thorpe PLC,16
G3EG.L,940888,G3 Exploration Ltd,16
GFS.L,6680,G4S PLC,16
GVP.L,945901,Gabelli Value Plus Trust PLC,16
GAILQ.L,44426,GAIL Ltd UK,16
GAGO.L,28362,Galantas Gold Corp,16
GLR.L,28209,Galileo Resources Plc,16
GFRD.L,6784,Galliford Try,16
0B67.L,948482,Galp Energia Nom,16
0QN3S.L,989793,GAM Holding AG,16
GMAA.L,942392,Gama Aviation PLC,16
GMDG.L,942424,GAME Digital plc,16
GAW.L,50668,Games Workshop Group PLC,16
0H4N.L,948558,Siemens Gamesa Renewable Energy SA,16
GMRG.L,25648,Gaming Realms PLC,16
GAMA.L,942503,Gamma Communications PLC,16
GAN.L,942391,Gan PLC,16
0NPV.L,948818,Gas Natural,16
GTLY.L,953826,Gateley Holdings PLC,16
GATC.L,28307,GATTACA Plc,16
GAZPQ.L,13119,Gazprom PAO,16
SIBNQ.L,1061239,Gazprom Neft PAO ADR,16
GBGP.L,27874,GB Group,16
GBGI.L,996534,GBGI Ltd,16
0IN2.L,948623,Groupe Bruxelles Lambert SA,16
GCM.L,32549,GCM Resources Plc,16
GABIG.L,960686,GCP Asset Backed Income Fund Ltd,16
GABIGC.L,996148,GCP Asset Backed Income Fund Ltd,16
GCPI.L,27942,GCP Infrastructure Investments Ltd,16
DIGS.L,949071,GCP Student Living PLC,16
0MPJ.L,948757,GEA Group AG,16
G4M.L,953825,Gear4music Holdings PLC,16
0QQ2S.L,989794,Geberit AG,16
0OPE.L,948935,Gecina Nom,16
GCSG.L,1056500,Geiger Counter Ltd,16
GEMD.L,6795,Gem Diamonds Ltd,16
0OGA.L,948916,Gemalto,16
GDRG.L,28257,Genedrive PLC,16
GENL.L,32418,Genel Energy Plc,16
GECG.L,29560,General Electric Company,16
0K78.L,948653,Generali,16
GSS.L,14039,Genesis Emerging Markets Fund Ltd,16
0MGB.L,948709,Genmab,16
GNS.L,291,Genus PLC,16
GHGG.L,960679,Georgia Healthcare Group PLC,16
GEOG.L,28450,Georgian Mining Corporation,16
0KHHMI.L,989795,Geox,16
0NTI.L,948844,Gerresheimer AG,16
GETB.L,1031162,GetBusy PLC,16
GTC.L,28436,Getech Group,16
0GZV.L,948548,Getinge AB ser. B,16
GFIN.L,943166,Gfinity,16
0QPSS.L,989797,Givaudan SA,16
0OJC.L,948922,Gjensidige Forsikring ASA,16
GKN.L,6685,GKN PLC,16
0IX0PA.L,989798,Gl Events,16
GL9.L,949094,Glanbia PLC,16
GSK.L,6612,GlaxoSmithKline PLC,16
GLEN.L,13811,Glencore PLC,16
GLV.L,1055079,Glenveagh Properties PLC,16
GLIF.L,28037,GLI Finance Ltd,16
GINV.L,942365,Global Invacom Group Ltd,16
GBPQ.L,27699,Global Petroleum Ltd,16
GPH.L,1061198,Global Ports Holding PLC,16
GRIT.L,27926,Global Resources Investment Trust PLC,16
DATA.L,27907,GlobalData PLC,16
GLTRQ.L,44427,Globaltrans Investment PLC,16
GWI.L,949100,Globalworth RE Investments,16
GLOO.L,958252,Gloo Networks PLC,16
0K9P.L,948658,GN Store Nord,16
GOG.L,6623,Go-Ahead Group,16
GOAL.L,7564,Goals Soccer Centres,16
GOCO.L,992971,Gocompare.Com Group PLC,16
BOIL.L,32552,Gold Oil Plc,16
GPSS.L,1057251,Golden Prospect Precious Metals Ltd,16
GCG.L,992970,Golden Rock Global PLC,16
GSRL.L,949097,Golden Saint Resources Ltd,16
GLDP.L,28608,Goldplat Plc,16
GRL.L,28295,Goldstone Resources Ltd,16
GHH.L,28290,Gooch & Housego Plc,16
GOODG.L,40147,Good Energy Group Plc,16
GDWN.L,28628,Goodwin PLC,16
GOR.L,949217,Gordon Dadds Group PLC,16
0OFR.L,948914,Gornictwo Naftowe i Gazownictwo SA,16
GOT.L,949099,Gotech Group PLC,16
GRAG.L,27843,Grafenia Plc,16
GFTU_U.L,50663,Grafton Group PLC,16
GRI.L,6844,Grainger Plc,16
0OQX.L,948938,Grammer AG,16
GFHG.L,1010836,Grand Fortune High Grade Ltd,16
GRPHG.L,28118,Graphene Nanochem Plc,16
GPOR.L,6665,Great Portland Estates PLC,16
32NJ.L,948996,Great Portland Estates PLC,16
GWMO.L,27950,Great Western Mining Corp Plc,16
GGPL.L,28365,Greatland Gold Plc,16
GRNG.L,949096,Green REIT PLC,16
UKWG.L,50660,Greencoat UK Wind PLC,16
GRPG.L,1030903,Greencoat Renewables PLC,16
GNC.L,27822,Greencore Group,16
GNK.L,6556,Greene King,16
GRG.L,6818,Greggs,16
GDL.L,39116,Greka Drilling Ltd,16
GHT.L,28711,Gresham Computing,16
GHE.L,943172,Gresham House PLC,16
GHS.L,27830,Gresham House Strategic PLC,16
0GW8.L,989800,Grieg Seafood,16
GFM.L,27752,Griffin Mining,16
0RDU.L,948503,Grifols SA,16
0RDV.L,948951,Grifols SA Pref,16
GRIO.L,949095,Ground Rents Income Fund PLC,16
0DZJPA.L,989743,Groupe Crit,16
0P72.L,948948,Groupe Eurotunnel,16
0MGS.L,948721,SEB SA,16
0F58.L,948509,Grupa Lotos SA,16
0NRN.L,948840,Grupo Catalana Occidente,16
GCSAQ.L,1061231,Grupo Clarin SA DRC,16
0QIHMC.L,989783,Grupo Ezentis SA,16
CHEQ.L,1061227,Gruppa Cherkizovo PAO DRC,16
LSRGQ.L,953530,Gruppa LSR PAO DRC,16
0ELV.L,989799,Guerbet,16
GKP.L,14040,Gulf Keystone Petroleum Ltd,16
GMS.L,940868,Gulf Marine Services PLC,16
GPX.L,22054,Gulfsands Petroleum,16
GUN.L,40141,Gunsynd PLC,16
GUS.L,28544,Gusbourne PLC,16
GVC.L,28449,GVC Holdings PLC,16
GYG.L,1024854,GYG PLC,16
GYM.L,961639,GYM Ltd,16
SLNG.L,949196,H C Slingsby PLC,16
0HBP.L,948593,H & M Hennes & Mauritz AB B,16
HTGR.L,14045,H&T Group,16
HWSL.L,985783,Hadrians Wall Secured Investments Ltd,16
HAIK.L,28112,Haike Chemical Group Ltd,16
HFD.L,6601,Halfords Group,16
HLMA.L,6768,Halma,16
HALH.L,949101,Halosource,16
HALHX.L,40148,HaloSource Inc,16
HSBKQ.L,44430,Halyk Bank AO DRC,16
HMSO.L,6621,Hammerson PLC,16
HUW.L,28125,Hampden Underwriting Plc,16
0M9A.L,948699,Hannover Rueck SE,16
HAN.L,28489,Hansa Trust,16
HSD.L,32398,Hansard Global Plc,16
HSTN.L,6877,Hansteen Holdings Plc,16
HVPEA.L,996149,HarbourVest Global Private Equity Ltd,16
HDD.L,28617,Hardide Plc,16
HAOG.L,14129,Hardy Oil & Gas,16
HRGV.L,6580,Hargreaves Lansdown PLC,16
HASE.L,7085,Hargreaves Services,16
HMI.L,961864,Harvest Minerals Ltd,16
HARV.L,949102,Harvey Nash Group PLC,16
HW.L,976070,Harwood Wealth Management Group PLC,16
HWG.L,949630,Harworth Group PLC,16
HSTG.L,960680,Hastings Group Holdings PLC,16
0HVAPA.L,989903,Haulotte Group,16
HAVE.L,27825,Havelock Europa Plc,16
HAYD.L,940889,Haydale Graphene Industries PLC,16
HYNS.L,949111,Haynes Publishing Group PLC,16
HAYS.L,6739,Hays Plc,16
0QOCS.L,989801,HBM Healthcare Investments,16
HEAD.L,7690,Headlam Group,16
HVT.L,27839,Heavitree Brewery,16
HVTA.L,28716,Heavitree Brewery A,16
0MG2.L,948707,Heidelbergcement AG O.N,16
0OC2.L,948909,Heidelberger Druckmaschinen O.N,16
0M6IAS.L,989802,Heijmans NV,16
0NBD.L,948787,Heineken Holding NV,16
0O26.L,948888,Heineken,16
HLCL.L,6763,Helical Bar Plc,16
0OKRAT.L,989782,Hellenic Exchanges Athens Stock Exchange SA,16
0FIZ.L,948518,Hellenic Telec,16
HAST.L,40152,Henderson Alternative Strategies Trust PLC,16
HDIV.L,28004,Henderson Diversified Income Ltd,16
HEFT.L,27940,Henderson European Focus Trust Plc,16
HNE.L,28138,Henderson Eurotrust,16
HFEL.L,28082,Henderson Far East Income Ltd,16
HHI.L,27924,Henderson High Income Trust,16
HINT.L,955580,Henderson International Income Trust PLC,16
HENT.L,949105,Henderson Opportunities Trust,16
HSL.L,14103,Henderson Smaller Cos Inv Tst,16
0IZ8.L,948632,Henkel AG & Co KGAA ST O.N,16
BOOT.L,28526,Henry Boot PLC,16
0NVV.L,948856,Hera,16
HRI.L,14044,Herald Investment Trust,16
HERS.L,28364,Herencia Resources,16
0HV2.L,948602,Hermes International SCA,16
HPAC.L,949108,Hermes Pacific Investments PLC,16
0GRX.L,948537,Hexagon AB ser. B,16
0EOFOL.L,989803,Hexagon Composites ASA,16
0R7O.L,948643,HEXPOL AB ser. B,16
HGT.L,28265,HG Capital Trust,16
HBRN.L,949103,Hibernia Reit,16
HICL.L,14041,HICL Infrastructure Co Ltd,16
HMSF.L,14005,Highbridge Multi-Strategy Fund,16
HCFT.L,949104,Highcroft Investments PLC REIT,16
HGM.L,28096,Highland Gold Mining,16
HNRH.L,949629,Highlands Natural Resources,16
HIK.L,6589,Hikma Pharmaceuticals PLC,16
HILS.L,28078,Hill & Smith Holdings PLC,16
HFG.L,28224,Hilton Food Group Plc,16
HSX.L,6749,Hiscox Ltd,16
HKLB.L,949106,Hong Kong Land Holdings Limited,16
HMLH.L,943182,HML Holdings plc,16
HOCM.L,6564,Hochschild Mining Plc,16
0EPW.L,948504,Hochtief AG,16
HLNGOL.L,989665,Hoegh LNG Holdings Ltd,16
HRG.L,28141,Hogg Robinson Group Plc,16
HDT.L,28161,Holders Technology,16
BOWL.L,989537,Hollywood Bowl Group PLC,16
0NBO.L,948788,Holmen AB ser. B,16
HSV.L,6827,HomeServe plc,16
2317Q.L,44429,Hon Hai Precision Industry Co Ltd DRC,16
HONY.L,962337,Honeycomb Investment Trust PLC,16
HONH.L,949107,Honeywell International Inc,16
HZDH.L,940854,Horizon Discovery Group PLC,16
HZM.L,28170,Horizonte Minerals,16
HRN.L,949109,Hornby PLC,16
HSW.L,960681,Hostelworld Group PLC,16
HOTC.L,978741,Hotel Chocolat Group PLC,16
HWDN.L,13138,Howden Joinery Group Plc,16
HSBA.L,280,HSBC Holdings PLC,16
HSS.L,945670,HSS Hire Group Plc,16
0GW3.L,948541,Hufvudstaden AB ser. A,16
0Q8F.L,948957,Hugo Boss AG NA O.N,16
0K9W.L,948659,Huhtamaki Oyj,16
HUMR.L,32400,Hummingbird Resources Plc,16
HUNT.L,955581,Hunters Property Plc,16
HTG.L,6723,Hunting PLC,16
HNTS.L,28662,Huntsworth,16
HUR.L,940890,Hurricane Energy plc,16
0GTR.L,948540,Husqvarna AB ser. B,16
HVO.L,27947,Hvivo PLC,16
HYR.L,28340,Hydrodec Group,16
HYDG.L,942393,Hydrogen Group plc,16
0538Q.L,1061222,Hyundai Motor Co DRC,16
0NC2OL.L,994323,I.M. Skaugen A,16
I3E.L,1031164,I3 Energy PLC,16
ICAG.L,13812,International Consolidated Airlines Group S.A,16
0HIT.L,948598,Iberdrola,16
IBMI.L,29547,International Business Machines,16
IBST.L,960682,Ibstock PLC,16
0NB9.L,948786,ICA Gruppen AB,16
0K4O.L,948652,ICADE,16
LBOW.L,40158,ICG Longbow Senior Secured UK Property Debt Investments Ltd,16
ICGT.L,27981,ICG Enterprise Trust PLC,16
0QAGPA.L,989808,ID Logistics SAS,16
IDEI.L,32554,IDE Group Holdings PLC,16
IDEA.L,40153,Ideagen Plc,16
0MTPOL.L,989807,Idex ASA,16
IDOX.L,28691,Idox,16
IBPO.L,28650,Ienergizer Ltd,16
IFP.L,949115,Ifg Group,16
IGRI.L,27797,IG Design Group PLC,16
IGG.L,6688,IG Group Holdings,16
IGAS.L,39125,IGas Energy PLC,16
0NYKMI.L,989809,IGD - Immobiliare Grande Distribuzione,16
0MGY.L,948725,Iliad,16
IKA.L,942394,Ilika,16
IMGE.L,28319,Image Scan Holdings plc,16
IMTK.L,28515,Imaginatik Plc,16
0NPX.L,948819,Imerys,16
IMI.L,6716,IMI,16
IMOI.L,940848,IMImobile PLC,16
IME.L,945087,Immedia Group Plc,16
0MKE.L,948742,Immofinanz AG,16
IDH.L,14046,Immunodiagnostic Systems Holdings PLC,16
IMM.L,28509,ImmuPharma PLC,16
IHR.L,997434,Impact Healthcare REIT PLC,16
IMPX.L,14047,Impax Environmental Markets Plc,16
IPX.L,27758,Impax Asset Management Group Plc,16
IPEL.L,14130,Impellam Group Plc,16
IMB.L,6569,Imperial Brands PLC,16
INCH.L,6722,Inchcape Plc,16
IIT.L,1061199,Independent Investment Trust PLC,16
INME.L,27739,Independent News & Media PLC,16
IGC.L,28063,India Capital Growth Fund,16
ID2A.L,28371,Indigovision Group,16
0QWI.L,948990,Inditex,16
INDV.L,943157,Indivior PLC,16
0HA9.L,948572,Indra A,16
INDII.L,28573,Indus Gas Ltd,16
0H13.L,948551,Industrivarden AB ser. A,16
0MHU.L,948734,Industrivarden AB ser. C,16
0KED.L,948669,Infineon Technologies AG NA O.N,16
INFT.L,40145,Infinity Energy SA,16
INF.L,6673,Informa Plc,16
INFAT.L,13153,Infrastrata Plc,16
IIP.L,28109,Infrastructure India Plc,16
0KA0.L,948660,Ingenico Group,16
INGI.L,28066,Ingenta PLC,16
ILND.L,28461,Inland Homes Plc,16
ISA.L,6626,Inmarsat PLC,16
IDP.L,987087,Innovaderma PLC,16
IHC.L,28571,Inspiration Healthcare Group PLC,16
INSEI.L,28329,Inspired Energy Plc,16
INSP.L,27938,Inspirit Energy Holdings Plc,16
INS.L,28658,Instem PLC,16
IDHC.L,953055,Integrated Diagnostics Holdings PLC,16
0IUJPA.L,989812,Inter Parfums Inc,16
IGP.L,28291,Intercede Group,16
IHG.L,283,InterContinental Hotels Group PLC,16
ICP.L,6741,Intermediate Capital Group PLC,16
ITQ.L,28251,Interquest Group,16
IRV.L,6643,Interserve,16
ITRK.L,6696,Intertek Group PLC,16
0MTKBR.L,989897,Intervest Offices - Ware,16
0HBC.L,948590,Intesa Sanpaolo,16
IBT.L,50677,International Biotechnology Trust plc,16
IFL.L,6873,International Ferro Metals Ltd,16
IPF.L,6786,International Personal Finance PLC,16
INPP.L,14048,International Public Partnership,16
0H9P.L,948569,Intrum Justitia AB,16
INTUP.L,10521,Intu Properties PLC,16
IAT.L,28183,Invesco Asia Trust,16
IVI.L,27922,Invesco Income Growth Trust,16
IVPB.L,949121,Invesco Perpetual Bal Risk,16
IVPG.L,949122,Invesco Perpetual Glbl Equity,16
IVPM.L,949123,Invesco Perpetual Man Liq,16
IVPU.L,949124,Invesco Perpetual UK Equity,16
IPU.L,28002,Invesco Perpetual UK Smaller Companies Investment Trust,16
INVP.L,6595,Investec Plc,16
IM88.L,958253,Investec Bank plc,16
0RQP.L,989830,Investment Latour AB,16
0RGBST.L,989886,Investment AB Oresund,16
0NC6.L,948789,Investor AB ser. B,16
FHIB.L,949113,Investors Capital Trust PLC Class B,16
0QXM.L,989811,Inwido publ AB,16
IOFI.L,32428,Iofina Plc,16
IOG.L,942366,Independent Oil and Gas plc,16
IOMG.L,27861,Iomart Group,16
IPO.L,28602,IP Group,16
0MH6.L,948727,Ipsen,16
0KA3.L,948661,Ipsos,16
IQE.L,14104,International Quantum Epitaxy,16
IRFE.L,949120,IRF European Finance Investments Ltd,16
0QT8I.L,989813,Irish Res Pr P,16
IRR.L,945669,Ironridge Resources Ltd,16
IRONI.L,28013,Ironveld Plc,16
ITXI.L,949179,Itaconix PLC,16
ITE.L,6832,ITE Group Plc,16
0MOSPA.L,989806,Itissalat Al-Maghrib,16
ITM.L,28554,ITM Power,16
ITV.L,6735,ITV PLC,16
IWG.L,6765,IWG PLC,16
IXI.L,942395,IXICO plc,16
JDW.L,6630,J D Wetherspoon PLC,16
SBRY.L,6706,J Sainsbury PLC,16
SMJ.L,949197,J Smart Co Contractors PLC,16
0EXG.L,948506,J. Martins SGPS,16
JTWO.L,1055080,J2 Acquisition,16
JPJ.L,995935,Jackpotjoy PLC,16
0IN3PA.L,989814,Jacquet Metal Sce,16
CRPR.L,27836,James Cropper PLC,16
FSJ.L,28223,James Fisher & Sons plc,16
JHD.L,7193,James Halstead,16
LTHM.L,28586,James Latham PLC,16
JANJ.L,1024855,Jangada Mines PLC,16
JLT.L,6605,Jardine Lloyd Thompson Group,16
JIM.L,28203,Jarvis Securities,16
JWNG.L,28534,Jaywing PLC,16
0MGO.L,948718,JC Decaux SA,16
JD.L,14051,JD Sports Fashion PLC,16
0EX7.L,948505,Jenoptik AG,16
JLEC.L,949127,Jersey Electricity PLC,16
JOG.L,40195,Jersey Oil and Gas PLC,16
CHOO.L,942504,Jimmy Choo PLC,16
JKX.L,6566,JKX Oil & Gas,16
0MI3.L,948735,JM AB,16
JARB.L,27676,Jardine Matheson Hldgs Ltd,16
JLIF.L,18891,John Laing Infrastructure Fund Ltd,16
JLEN.L,940915,John Laing Environmental Assets Group Ltd,16
JLG.L,945668,John Laing Group Plc,16
JLH.L,27991,John Lewis Of Hungerford,16
MNZS.L,32419,John Menzies PLC,16
WG.L,6591,John Wood Group PLC,16
JMAT.L,6598,Johnson Matthey PLC,16
JSG.L,28057,Johnson Service Group Plc,16
JPR.L,6887,Johnston Press,16
JOUL.L,980197,Joules Group PLC,16
JPGI.L,27886,JP Morgan Global Growth & Income PLC,16
JETI.L,27963,JPMorgan Asset Management,16
JAM.L,14050,JPMorgan American Investment Trust,16
JAI.L,14049,JPMorgan Asian Investment Trust,16
JPB.L,949128,JPMorgan Brazil Inv Trust,16
JMC.L,27889,JPMorgan Chinese Investment Trust,16
JCH.L,28025,JPMorgan Claverhouse Investment Trust Plc,16
JPEX.L,949131,Jpmorgan Elect PLC 0.002p,16
JPEI.L,949130,Jpmorgan Elect PLC 0.003p,16
JPE.L,949129,Jpmorgan Elect PLC 0.01p,16
JMG.L,6770,JPMorgan Emerging Mkts Inv Trust,16
JESC.L,14052,JPMorgan Euro Small Companies Trust Plc,16
JETX.L,6878,JPMorgan European Investment Trust,16
JGCI.L,50678,Jpmorgan Gl,16
JEMI.L,27904,JPMorgan Global Emerging Marketss Investment Trust Plc,16
JPIP.L,955584,JPMorgan Income & Capital Investment Trust PLC,16
JII.L,6918,JPMorgan Indian Inv Trust,16
JPS.L,27920,JPmorgan Japan Smaller Co Trust PLC,16
JFJ.L,27901,JPMorgan Japanese Investment Trust,16
JMF.L,27980,JPMorgan Mid Cap Investment Trust,16
JRS.L,14106,JPMorgan Russian Securities,16
JMI.L,14105,JPMorgan Smaller Companies Investment Trust Plc,16
JUSC.L,955585,JPmorgan US Smaller Companies Investment Trust PLC,16
NKELYQ.L,943196,JSC MMC Norilsk Nickel ADR,16
VTBRQ.L,943197,JSC VTB Bank DRC,16
JDSB.L,29582,Jardine Strategic Holdings Ltd,16
JLP.L,28244,Jubilee Platinum,16
JDG.L,28201,Judges Scientific Plc,16
0QNGS.L,989815,Jungfraubahn Holding AG,16
JEFI.L,1010685,Jupiter Emerging & Frontier Income Trust Plc,16
JEO.L,27918,Jupiter European Opportunities Tst,16
JUP.L,14053,Jupiter Fund Management Plc,16
JGC.L,955582,Jupiter Green Investment Trust PLC,16
JUKG.L,955583,Jupiter UK Growth Investment Trust PLC,16
JUS.L,27793,Jupiter US Smaller Companies PLC,16
JIL.L,28126,Juridica Investments Ltd,16
JE.L,940873,Just Eat,16
JUSTJ.L,44421,Just Group PLC,16
0H65MI.L,989816,Juventus Football Club,16
0MGD.L,948711,Jyske Bank A/S,16
JZCP.L,28155,JZ Capital Partners Ltd,16
0Q2N.L,948952,K+S AG NA O.N,16
KBT.L,27895,K3 Business Technology Group PLC,16
K3C.L,1008649,K3 Capital Group PLC,16
KNOS.L,955859,Kainos Group PLC,16
0GO5.L,989817,KappAhl AB,16
KDR.L,27949,Karelian Diamond Resources PLC,16
KATK.L,951006,Katoro Gold PLC,16
0F07PA.L,989825,Kaufman Et Broad,16
KAZ.L,6652,KAZ Minerals PLC,16
KMGQ.L,44431,Razvedka Dobycha KazMunayGaz AO DRC,16
0EYG.L,948507,KBC,16
0MFW.L,948705,KBC Ancora,16
KCELQ.L,953528,Kcell AO DRC,16
KCOM.L,19706,Kcom Group Plc,16
KCR.L,955858,KCR Residential Reit PLC,16
KEFI.L,28402,KEFI Minerals PLC,16
KLR.L,6775,Keller Group,16
KEMK.L,28577,Kemin Resources Plc,16
0MGG.L,948713,Kemira Oyj,16
0G68AS.L,989965,Kendrion NV,16
JEV.L,7224,Kenmare Resources PLC,16
KENV.L,28253,Kennedy Ventures Plc,16
KRS.L,28657,Keras Resources PLC,16
0IIH.L,948619,Kering SA,16
0Q9Y.L,989818,Kernel Holding SA,16
KYGA.L,949139,Kerry Group,16
0BNT.L,948483,Kesko Oyj,16
KIT.L,28354,Keystone Investment Trust,16
KEYS.L,1057264,Keystone Law Group PLC,16
KWS.L,940863,Keywords Studios Plc,16
0O8D.L,948899,KGHM Polska Miedz SA,16
KIBO.L,28483,Kibo Mining PLC,16
KIE.L,6717,Kier Group,16
KBEK.L,40156,Kimberly Enterprises N.V,16
KINK.L,28322,Kin Group PLC,16
0RDS.L,989986,Kindred Group PLC,16
0QV7.L,989820,Kinepolis Group NV,16
KGF.L,6571,Kingfisher PLC,16
KSP.L,32414,Kingspan Group,16
0RH1.L,948642,Kinnevik Investment AB ser. B,16
0F0JOL.L,989827,Kitron,16
0F4I.L,948508,Klepierre,16
0KVR.L,948675,Kloeckner & Co SE NA,16
0R4G.L,989821,Klovern AB,16
0R49ST.L,989822,Klovern AB Pref,16
KOD.L,942399,Kodal Minerals,16
0IKH.L,948620,Komercni Banka,16
KNM.L,949137,Konami Corp,16
0II2.L,948617,KONE Oyj,16
0MET.L,948703,Konecranes ABP,16
0F08.L,989826,Kongsberg Gruppen ASA,16
0HW0OL.L,989824,Kongsberg Automotive Holding ASA,16
KOOV.L,940891,Koovs Plc,16
0O8F.L,948900,Koninklijke KPN NV,16
KMK.L,942398,Kromek Group plc,16
0LQ4.L,948690,Krones AG O.N,16
KSK.L,949138,KSK Power Ventur PLC,16
KUBCQ.L,27723,Kubera Cross-Border Fund Ltd,16
0QMWS.L,989823,Kuehne & Nagel,16
0JOE.L,948648,Kuka AG,16
0GRG.L,948535,Kungsleden AB,16
0Q2SOL.L,989828,Kværner ASA,16
0NZM.L,948878,L’Oreal SA,16
0F2QMI.L,989831,La Doria,16
LCL.L,6585,Ladbrokes Coral Group PLC,16
0HB2.L,948586,Lagardere S.C.A,16
LRD.L,9218,Laird Plc,16
LAKE.L,948337,Lakehouse Plc,16
LAM.L,14055,Lamprell Plc,16
LRE.L,14056,Lancashire Holdings Limited,16
LAND.L,6755,Land Securities Group PLC,16
LND.L,28393,Landore Resources Plc,16
LOGP.L,28131,Lansdowne Oil & Gas,16
0H7I.L,948567,Lanxess AG,16
LARTQ.L,44438,Larsen & Toubro Ltd DRC,16
ALY.L,28222,Laura Ashley Holdings PLC,16
LWDB.L,14058,Law Debenture Corp,16
WTR.L,978746,Lazard World Trust Fund,16
LBP.L,949114,LB-Shell PLC,16
0OR2PA.L,989836,Le Noble Age,16
LEAF.L,28288,Leaf Clean Energy Co,16
LTGL.L,28351,Learning Technologies Group PLC,16
0NUTBR.L,989837,Leasinvest-Sicafi,16
0IVJPA.L,989832,Lectra,16
LDSG.L,949140,Leeds Group PLC,16
LGEN.L,6568,Legal & General Group PLC,16
LEGL.L,27804,Legendary Investments,16
0MW7.L,948773,Legrand SA,16
LEK.L,940892,Lekoil,16
LNTAQ.L,953529,Lenta Ltd,16
0ONG.L,948931,Leonardo SpA,16
0O0J.L,948881,Leoni AG,16
6657Q.L,1025138,LG Electronics Inc DRC,16
LID.L,28476,Lidco Group,16
LGHT.L,27815,Lighthouse Group Plc,16
LWRF.L,28445,LightwaveRF plc,16
LMEL.L,949143,Limitless Earth PLC,16
0MWK.L,989833,Lindab International AB,16
0H3X.L,948555,Linde AG O.N,16
LDIT.L,955586,Lindsell Train Investment Trust PLC,16
LIONL.L,28518,Lionsgold Ltd,16
LIO.L,27787,Liontrust Asset Management,16
0EKEPA.L,989796,Lisi,16
LVCG.L,28127,Live Company Group PLC,16
AUIV.L,40118,Livermore Investments Group Ltd,16
LLOY.L,287,Lloyds Banking Group PLC,16
0O87.L,948898,Telefonaktiebolaget LM Ericsson Class B,16
LMS.L,7698,LMS Capital Plc,16
LSR.L,28332,Local Shopping Reit Plc,16
0O0KPA.L,989838,Locindus,16
0QWA.L,948989,Logista,16
LOK.L,28200,Lok’N Store Group,16
LRM.L,28015,Lombard Risk Management,16
LCG.L,27887,London Capital Group Holdings plc,16
LFI.L,949141,London Finance and Investment Group PLC,16
LSC.L,27826,London Security Plc,16
LSE.L,6628,London Stock Exchange Group PLC,16
LAS.L,27766,London & Associated Properties,16
LMPL.L,14057,Londonmetric Property Plc,16
LMI.L,6725,Lonmin PLC,16
0QNOS.L,989840,Lonza Group AG,16
LOOK.L,14132,Lookers,16
0JYZ.L,948651,Loomis AB ser. B,16
LOOP.L,986302,LoopUp Group PLC,16
0HAU.L,948583,LVMH Moet Hennessy Louis Vuitton SE,16
LWB.L,28487,Low & Bonar PLC,16
LWI.L,28356,Lowland Investment Co,16
LPA.L,40160,LPA Group,16
LSL.L,28080,LSL Property Services Plc,16
0QUI.L,989841,Lucara Diamond Corp,16
LUCEL.L,992769,Luceco PLC,16
0H4A.L,948556,Deutsche Lufthansa AG,16
LKOH.L,949142,Lukoil,16
LKOHYQ.L,13136,NK Lukoil PAO,16
0ND5.L,948790,Lundbeck A/S,16
0GWB.L,948542,Lundbergforetagen AB L E ser. B,16
0NNR.L,948810,Lundin Petroleum AB,16
0ND7.L,948791,Luxottica Group,16
LXB.L,32405,LXB Retail Properties Plc,16
LXIL.L,997109,LXi REIT PLC,16
GLEG.L,50667,M J Gleeson Group Ltd,16
WINKM.L,942418,M Winkworth PLC,16
SAA.L,28477,M&C Saatchi,16
MPE.L,7542,M.P.Evans Group,16
MPO.L,940916,Macau Property Opportunities Fund Ltd,16
MACF.L,949631,Macfarlane Group PLC,16
MGNTQ.L,943200,Magnit DRC,16
MAGNQ.L,945671,Magnitogorskiy Metallurgichesk DRC,16
MAGP.L,28173,Magnolia Petroleum PLC,16
0NUGBU.L,989858,Magyar Telekom PLC,16
MAHMQ.L,953531,Mahindra and Mahindra Ltd,16
MAILRQ.L,44432,Mail.ru Group Ltd,16
MAIH.L,28464,Maintel Holdings Plc,16
0QEPMI.L,989857,Maire Tecnimont SpA,16
0RHL.L,989844,Maisons du Monde SAS,16
0F8TPA.L,989847,Maisons France,16
MAISM.L,40122,Maistro PLC,16
MAJE.L,28488,Majedie Investments,16
WINEW.L,6884,Majestic Wine PLC,16
MLVN.L,28389,Malvern International,16
EMG.L,6636,Man Group Plc,16
0KJB.L,948674,Man SE,16
NZX.L,27779,Management Consulting Group,16
MNL.L,27979,Manchester and London Investment Trust plc,16
0NDAPA.L,989842,Manitou BF,16
MFX.L,28108,Manx Financial Group Plc,16
MANX.L,940893,Manx Telecom plc,16
0NQ2.L,948820,Mapfre,16
0OAW.L,948905,Marine Harvest ASA,16
MKS.L,289,Marks and Spencer Group PLC,16
MRLM.L,949189,Marlowe PLC,16
MHMM.L,949148,Marsh & McLennan Companies Inc,16
MMHM.L,949632,Marshall Motor Holdings PLC,16
MSLH.L,6839,Marshalls,16
MARS.L,8811,Marston’S Plc,16
MACP.L,27780,Martin Currie Asia Unconstrained Trust PLC,16
MNP.L,27955,Martin Currie Global Portfolio Trust plc,16
MVIR.L,994023,Marwyn Value Investors Ltd,16
MRWN.L,945088,Marwyn Value Investors Ltd,16
0QFACO.L,989843,Matas,16
MTMY.L,103938,Matomy Media Group Ltd,16
MTWL.L,28538,Mattioli Woods,16
0F6LPA.L,948510,Etablissements Maurel et Prom SA,16
MXCT.L,976071,MaxCyte Inc,16
MXCR.L,1009357,MaxCyte Inc REG S,16
MAYA.L,953057,MayAir Group plc,16
MYN.L,940894,Mayan Energy Ltd,16
0NZ7VI.L,989851,Mayr-Melnhof Karton AG,16
MUBL.L,28558,MBL Group Plc,16
MCMM.L,22222,MC Mining Ltd,16
MCB.L,28629,McBride plc,16
MCS.L,960684,McCarthy & Stone PLC,16
MCLSM.L,940913,McColls Retail Group plc,16
MCKS.L,28266,Mckay Securities,16
MERG.L,6841,Mears Group,16
MEDM.L,941169,MedaPhor Group PLC,16
0NE1.L,948793,Mediaset,16
0G9W.L,948529,Mediaset ESP,16
MDZE.L,28685,MediaZest plc,16
MGPM.L,998049,Medica Group PLC,16
MDCM.L,44416,Mediclinic International PLC,16
MXF.L,28492,Medicx Fund Ltd,16
0HBF.L,948591,Mediobanca,16
0GP7ST.L,989859,Medivir AB ser. B,16
MFONQ.L,943201,MegaFon OAO DRC,16
MGGT.L,6762,Meggitt PLC,16
0HDJ.L,989845,Mekonomen AB,16
0MKO.L,948745,Melia Hotels,16
MRON.L,6692,Melrose Industries PLC,16
MHN.L,958254,Menhaden Capital PLC,16
MRCM.L,14060,Mercantile Investment Trust,16
MPL.L,28053,Mercantile Ports & Logistics Ltd,16
MRCH.L,6864,Merchants Trust,16
MERCM.L,943161,Mercia Technologies PLC,16
0IQU.L,948625,Mercialys,16
0O14.L,948883,Merck KGaA,16
0QAHDE.L,989855,Merck & Company Inc,16
MPHM.L,985163,Mereo BioPharma Group PLC,16
MERL.L,950986,Merlin Entertainments PLC,16
0QVM.L,948987,Merlin Properties SA,16
0Q6QPA.L,989735,Mersen,16
MTRM.L,40126,Metal Tiger PLC,16
MTL.L,28195,Metals Exploration Plc,16
MNC.L,27679,Metminco Ltd,16
0MPM.L,948759,Metro AG,16
MTRO.L,968979,Metro Bank PLC,16
0MGL.L,948717,Metropole TV,16
0F89.L,948511,Metso Oyj,16
0F8VPA.L,989848,Mgi Coutier,16
MHPCQ.L,1061232,MHP SA DRC,16
MPAYM.L,28169,MI-PAY Group,16
0OFM.L,948912,Compagnie Generale des Etablissements Michelin SCA,16
MBH.L,27945,Michelmersh Brick Holdings Plc,16
MCRO.L,6759,Micro Focus International PLC,16
MCGN.L,948338,Microgen Plc,16
MSYS.L,28217,Microsaic Systems Plc,16
0RBCPA.L,989850,Microskin PLC,16
MIDW.L,955587,Mid Wynd International Investment Trust PLC,16
MTPH.L,942681,Midatech Pharma PLC,16
MCT_P.L,28006,Middlefield Canadian Inc Pcc,16
MIDWM.L,978742,Midwich Group PLC,16
MILA.L,991232,Mila Resources PLC,16
MSG.L,28502,Milestone Group,16
MLC.L,6796,Millennium & Copthorne Hotels,16
MCON.L,949146,Mincon Group P,16
MMXM.L,28075,Minds + Machines Group Ltd,16
MAFL.L,28187,Mineral & Financial Investments Ltd,16
MIN.L,27840,Minoan Group,16
MIRA.L,28664,Mirada Plc,16
MIRI.L,1056977,Mirriad Advertising PLC,16
TMMG.L,27912,Mission Marketing Group PLC,16
MAB.L,6698,Mitchells & Butlers,16
MIIT.L,958255,Mithras Investment Trust PLC,16
MTO.L,6699,Mitie Group,16
MGRM.L,40164,Miton Group Plc,16
MIGO.L,955588,Miton Global Oppurtunities PLC,16
MINI.L,953058,Miton UK MicroCap Trust PLC,16
MELM.L,949147,Mitsubishi Electric Corp,16
MKA.L,985178,Mkango Resources Ltd,16
MOSE.L,28539,Mobile Streams,16
MBLT.L,28289,Mobile Tornado Group,16
MBO.L,28485,Mobilityone Ltd,16
MWG.L,28444,Modern Water Plc,16
MOLBQ.L,1061233,MOL PLC ADR,16
0O77.L,948895,AP Moeller - Maersk A/S B,16
0IE3MI.L,991173,Molecular Medicine SpA,16
MCC.L,40166,Monchhichi plc,16
0QII.L,948979,Moncler SpA,16
MNDI.L,6702,Mondi PLC,16
0RGC.L,989852,Moneta Money Bank AS,16
MONY.L,6825,Moneysupermarket.Com Group Plc,16
MNKS.L,6859,Monks Investment Trust,16
MORE.L,963712,Monreal PLC,16
MONT.L,50679,Montanaro European Smaller Companies Plc,16
MGAMM.L,22485,Morgan Advanced Materials Plc,16
MGNS.L,6560,Morgan Sindall Group Plc,16
0NDV.L,948792,Morphosys AG O.N,16
MRW.L,6573,WM Morrison Supermarkets PLC,16
MCLM.L,977680,Morses Club PLC,16
MAB1.L,942676,Mortgage Advice Bureau Holdings plc,16
MROGYQ.L,1061234,Mosenergo PAO DRC,16
MSMN.L,942402,Mosman Oil and Gas Ltd,16
MOSB.L,940914,Moss Bros Group PLC,16
0FB0.L,989854,Mota Engil,16
MTC.L,14061,Mothercare,16
MTFB.L,949633,Motif Bio PLC,16
0MQTAT.L,989853,Motor Oil Hellas Corinth Refineries SA,16
MOTR.L,978743,Motorpoint Group PLC,16
MOGP.L,28259,Mountfield Group Plc,16
MTVW.L,940917,Mountview Estates PLC,16
MPAC.L,942368,MPAC Group PLC,16
MPM.L,942401,Mporium Group PLC,16
MRS.L,13162,Management Resource Solutions PLC,16
MSTL.L,942403,MS INTERNATIONAL plc,16
0GXJ.L,948546,Modern Times Group MTG AB B,16
MWEE.L,28421,MTI Wireless Edge,16
0FC9.L,948512,MTU Aero Engines NA O.N,16
MKLW.L,28412,A&J Mucklow Group Plc,16
0KFE.L,948670,Muench. Rueckvers. VNA O.N,16
MUL.L,14108,Mulberry Group,16
MURG.L,28465,Murgitroyd Group,16
MUT.L,6856,Murray Income Trust,16
MYI.L,6934,Murray International Trust,16
MTU.L,14107,Montanaro UK Smaller Companies Investment Trust PLC,16
MXO.L,943187,MX Oil,16
MXCP.L,28431,MXC Capital,16
MILM.L,949149,Myanmar Investments International Ltd,16
SHWE.L,1046332,Myanmar Strategic Holdings Ltd,16
MYXM.L,949151,MyCelx Technologies Corp,16
0QMTS.L,989860,Myriad Group AG,16
MYSL.L,940770,MySale Group PLC,16
MYSQ.L,955589,MySquar Ltd,16
MYT.L,40169,Mytrah Energy Ltd,16
BWNG.L,6557,N Brown Group PLC,16
NWF.L,28548,N.W.F Group,16
N4P.L,28292,N4 Pharma PLC,16
NAH.L,940777,NAHL Group PLC,16
NAK.L,28427,Nakama Group Plc,16
NANON.L,14143,Nanoco Group Plc,16
NTAS.L,27755,North Atlantic Smaller Companies Investment Trust plc,16
NASA.L,28620,Nasstar,16
0RCR.L,948969,National Bank of Greece,16
NEX.L,6776,National Express Group,16
NG.L,6712,National Grid PLC,16
NWB_PA.L,1048902,National Westminster Bank PLC Pref Series A,16
NBS.L,968980,Nationwide Building Society,16
0IHK.L,948616,Natixis,16
NGRP.L,28466,Nature Group Plc,16
0O6EPA.L,989862,Naturex,16
NAUTN.L,28089,Nautilus Marine Services PLC,16
NBDD.L,949153,NB Distressed Debt Investment Fund Ltd,16
NBDX.L,949155,NB Distressed Debt Investment Fund Ltd,16
NBDG.L,949154,NB Distressed Debt Investment Fund Ltd ORD,16
NBLS.L,32399,NB Global Floating Rate Income Fund Ltd,16
NBPE.L,40171,NB Private Equity Partners Ltd,16
NBPE_P.L,989538,NB Private Equity Partners Ltd Pref,16
0OFP.L,948913,NCC AB ser. B,16
NCCG.L,28689,NCC Group,16
NCCL.L,28074,Ncondezi Coal Co Ltd,16
0NNUAS.L,989864,NV Nederlandsche Apparatenfabriek Nedap,16
NKTN.L,942507,Nektan PLC,16
0E4QOL.L,989865,Nel ASA,16
0NQ5.L,948821,Neopost,16
0O46.L,948890,Neste Oil Oyj,16
0QR4S.L,989866,Nestle SA,16
NETC.L,27878,Netcall,16
NSCI.L,942404,NetScientific plc,16
NESI.L,955590,New Star Investment Trust PLC,16
NTLG.L,949163,New Trend Lifestyle Group PLC,16
0KIZST.L,989867,New Wave Group AB ser. B,16
NWRR.L,19708,New World Resources Plc,16
NWMS.L,27842,Newmark Security,16
NRRT.L,40172,Newriver Retail Ltd,16
NXGN.L,6577,NEX Group PLC,16
0IGF.L,948615,Nexans,16
0KB3.L,948662,Nexity,16
NXT.L,286,Next PLC,16
0QWKOL.L,989868,Next Biometrics Group ASA,16
NFC.L,28012,Next Fifteen Communications Group,16
NESF.L,943190,NextEnergy Solar Fund Ltd,16
NEXSN.L,1024856,Nexus Infrastructure PLC,16
0OHG.L,948918,NH Hoteles,16
NICL.L,14062,Nichols,16
NGTE.L,8801,Nighthawk Energy Plc,16
0MGC.L,948710,NKT Holding,16
NMC.L,32551,NMC Health Plc,16
0R5ZCO.L,989870,Nnit AS,16
0R8O.L,989871,Nobina publ AB,16
0HAF.L,948575,Nokia Oyj,16
0FFY.L,948513,Nokian Renkaat Oyj,16
0OA9ST.L,989873,Nolato AB ser. B,16
NSF.L,945900,Non-Standard Finance PLC,16
NXR.L,28632,Norcros Plc,16
0R8RST.L,989863,Nordax Bank AB,16
0JNL.L,948647,Nordea Bank AB,16
0MEC.L,948702,Nordex SE O.N,16
0R6YOL.L,989861,Nordic Nanovector ASA,16
0P38.L,948941,Norma Group AG NA O.N,16
NBB.L,28663,Norman Broadbent Plc,16
0KB6OL.L,989878,Norske Skogindustrier ASA,16
NAIT.L,28024,The North American Income Trust plc,16
NMD.L,949161,North Midland Construction PLC,16
NAR.L,949152,Northamber PLC,16
NBI.L,27910,Northbridge Industrial Services,16
NTBR.L,28398,Northern Bear Plc,16
NRI.L,955591,Northern Investors Company PLC,16
NTG.L,6845,Northgate Plc,16
0P3NOL.L,989877,Norway Royal S,16
0FGH.L,948514,Norwegian Air Shuttle ASA,16
0RIU.L,989872,Norwegian Finans Holding ASA,16
0MHSOL.L,989876,Norwegian Property ASA,16
0J1Z.L,948633,Nos SGPS SA,16
NTOG.L,27936,Nostra Terra Oil and Gas Company PLC,16
NOGN.L,44437,Nostrum Oil & Gas LP,16
NCYT.L,1054961,Novacyt,16
0QLRS.L,989875,Novartis AG,16
NVTKQ.L,943202,Novatek DRC,16
0QIU.L,948981,Novo Nordisk A/S B,16
NLMKQ.L,943203,Novolipetsk DRC,16
NCSPQ.L,1061235,Novorossiyskiy Morskoy Torgovyi Port PAO DRC,16
0Q4U.L,948953,Novozymes A/S B,16
NUOG.L,28562,Nu-Oil and Gas PLC,16
NFXN.L,962338,Nuformix PLC,16
NUM.L,7284,Numis Corp,16
0RH8.L,989879,Nyrstar NV,16
OCIO.L,28031,Oakley Capital Investments Ltd,16
0N4AST.L,989880,Oasmia Pharmaceutical AB,16
OBT.L,28447,Obtala Ltd,16
0QO3S.L,989883,OC Oerlikon Corp AG,16
OCDO.L,13165,Ocado Group Plc,16
OCN.L,949165,Ocean Wilsons Holdings Ltd,16
0QG5OL.L,989881,Ocean Yield,16
OLOT.L,1034492,Ocelot Partners Ltd,16
0QGH.L,948976,OCI NV,16
OCT.L,40188,Octagonal plc,16
OSEC.L,976072,Octopus Aim VCT 2 PLC,16
OAP3.L,949164,Octopus Apollo VCT PLC,16
0J77OL.L,989882,Odfjell SE,16
0RHE.L,989759,Oersted A/S,16
0NTM.L,948845,Oesterr. Post AG,16
0MKG.L,948743,Obrascon Huarte Lain SA,16
OEX.L,27680,Oilex Ltd,16
OKEYQ.L,1061236,O'Key Group SA DRC,16
0FHP.L,989884,Olav Thon Eien,16
OML.L,293,Old Mutual PLC,16
ODX.L,28019,Omega Diagnostics Group Plc,16
OMG1.L,28708,Oxford Metrics plc,16
0MKH.L,948744,OMV AG,16
OTB.L,958836,On The Beach Group PLC,16
ONCON.L,978744,Oncimmune Holdings PLC,16
OMIP.L,940864,One Media iP Group Plc,16
ONEV.L,27860,OneView Group PLC,16
OBC.L,40173,Online Blockchain PLC,16
0QVQ.L,948988,Ontex Group,16
0FI1.L,948515,Greek Organisation of Football Prognostics SA,16
0FI5.L,948516,Opera Software ASA,16
OPG.L,28179,OPG Power Venture Plc,16
OPHR.L,14063,Ophir Energy Plc,16
OPTIO.L,27978,Optibiotix Health PLC,16
ORCP.L,28216,Oracle Coalfields Plc,16
0OQV.L,948937,Orange SA,16
0GB7.L,948531,OrangePL,16
ORCH.L,955592,Orchard Funding Group PLC,16
0OOJAS.L,989885,Ordina NV,16
ORNT.L,1055078,Orient Telecoms,16
0R8V.L,955856,Oriflame Holding AG,16
OGN.L,27740,Origin Enterprises Plc,16
OPP.L,28717,Origo Partners Plc,16
OPPPP.L,27731,Origo Partners Plc PRF,16
0M2O.L,948693,Orion Oyj B,16
0FIN.L,948517,Orkla ASA,16
0FMN.L,948519,Polski Koncern Naftowy ORLEN SA,16
ORM.L,28352,Ormonde Mining PLC,16
OMIN.L,27689,Orosur Mining Inc,16
0NEX.L,948794,Orpea,16
ARCMA.L,28325,Ortac Resources Ltd,16
OSBO.L,942425,OneSavings Bank plc,16
OSIO.L,976462,Osirium Technologies PLC,16
0M69.L,948697,OTP Bank PLC,16
OTPBQ.L,1061237,OTP Bank Nyrt DRC,16
OTM.L,28612,Ottoman Fund,16
0MGI.L,948715,Outotec Oyj,16
OVG.L,28519,Ovoca Gold,16
OBD.L,994024,Oxford Biodynamics PLC,16
OXB.L,7126,Oxford BioMedica plc,16
OXIG.L,19709,Oxford Instruments,16
P2PG.L,942426,P2P Global Investments plc ORD,16
PACL.L,27719,Pacific Alliance China Land Ltd,16
PACA.L,27816,Pacific Assets Trust,16
PHI.L,28079,Pacific Horizon Investment Trust,16
PPB.L,6858,Paddy Power Betfair PLC,16
PAGE.L,6671,Pagegroup PLC,16
PCA.L,28344,Palace Capital PLC,16
PALVI.L,989888,Palfinger AG,16
PAFR.L,14135,Pan African Resources Plc,16
0QPTS.L,989901,Panalpina Welttransport Holding AG,16
0NQC.L,948824,Pandora A/S,16
PANI.L,27761,Pantheon Internat Participations,16
PANR.L,28171,Pantheon Resources,16
PNS.L,949174,Panther Securities P L C,16
PATP.L,1057031,Panthera Resources PLC,16
0FR0MC.L,989902,Papeles Y Cartones De Europa SA,16
PPHP.L,985784,Papillon Holdings PLC,16
PMLP.L,28467,Papua Mining Plc,16
PARA.L,13156,Paragon Banking Group PLC,16
PELP.L,949171,Paragon Entertainment Ltd,16
PTY.L,28713,Parity Group,16
PRKG.L,27864,Park Group,16
PMG.L,28336,Parkmead Group PLC,16
0NQB.L,948823,Parmalat,16
0QOQS.L,989890,Partners Group,16
PGD.L,22629,Patagonia Gold,16
PRSPA.L,27791,Paternoster Resources Plc,16
PATH.L,1052367,Path Investments PLC,16
PFP.L,28133,Pathfinder Minerals PLC,16
CAKEP.L,942389,Patisserie Holdings PLC,16
PAYP.L,6871,PayPoint plc,16
PCF.L,27935,PCF Group plc,16
PCGE.L,942674,PCG Entertainment Plc,16
PCIPP.L,949119,PCI-PAL PLC,16
0MHT.L,948733,Peab AB ser. B,16
PSON.L,6620,Pearson PLC,16
PEB.L,28627,Pebble Beach Systems Group PLC,16
PEEL.L,40175,Peel Hotels,16
PTRO.L,1056978,Pelatro PLC,16
PERE.L,14083,Pembridge Resources PLC,16
PDG.L,7756,Pendragon Plc,16
PNIG.L,27778,Pennant International Group,16
PNN.L,6648,Pennon Group,16
PPPP.L,1057032,Pennpetro Energy PLC,16
0REQCO.L,989887,Per Aarsleff B,16
IL0A.L,953056,Permanent TSB Group Holdings PLC,16
0HAT.L,948582,Pernod Ricard SA,16
PLI.L,6812,Perpetual Income and Growth Investment Trust plc,16
PSHP.L,1009358,Pershing Square Holdings Ltd,16
PSN.L,6656,Persimmon PLC,16
PNL.L,19710,Personal Assets Trust,16
PGH.L,28009,Personal Group Holdings PLC,16
PETA.L,28425,Petards Group PLC,16
PDL.L,14111,Petra Diamonds,16
PET.L,27811,Petrel Resources,16
MATD.L,28484,Petro Matad Ltd,16
PFC.L,6561,Petrofac,16
0MHR.L,948732,Petroleum Geo - Services ASA,16
PTR.L,22089,PetroNeft Resources plc,16
POG.L,6700,Petropavlovsk Plc,16
PETSP.L,101928,Pets at Home Group PLC,16
0NQ9.L,948822,Peugeot SA,16
0FQR.L,948523,Pfeiffer Vacuum Technology O.N,16
0MN3.L,948753,PGE Polska Grupa Energetyczna SA,16
0RC6.L,989891,Pharma Mar SAU,16
0FQ8.L,948521,Pharol SGPS SA,16
PMPA.L,989664,Philip Morris International Inc,16
0LNG.L,948684,Koninklijke Philips NV,16
PGMH.L,1025134,Phoenix Global Mining Ltd,16
PHNX.L,14066,Phoenix Group Holdings,16
PSDL.L,954892,Phoenix Spree Deutschland Ltd,16
PHTM.L,39205,Photo-Me International,16
0IMTOL.L,989892,Photocure,16
PSL.L,28103,Photonstar Led Group Plc,16
PHSC.L,943178,PHSC PLC,16
PYSM.L,28530,Physiomics PLC,16
0FM1MI.L,989893,Piaggio & C,16
PCTN.L,28050,Picton Property Income Ltd,16
PHWK.L,27873,PipeHawk plc,16
PIRI.L,942405,Pires Investments PLC,16
PTTD.L,27876,Pittards,16
ROSYQ.L,953534,PJSC Rostelecom PAO,16
0FMO.L,948520,Powszechna Kasa Oszczednosci Bank Polski SA,16
PHC.L,28204,Plant Health Care,16
PIM.L,28441,Plant Impact Plc,16
0NW1.L,948857,Plastic Omnium,16
PLA.L,28258,Plastics Capital Plc,16
PVLPA.L,989895,Plastiques du Val de Loire SA,16
PTEC.L,13125,Playtech Plc,16
PLAZ.L,943156,Plaza Centers NV,16
PLEX.L,32550,Plexus Holdings plc,16
PLUSP.L,40956,Plus500 Ltd,16
PPGL.L,943173,Plutus PowerGen PLC,16
PMEA.L,27721,PME African Infrastructure Opp Plc,16
PCT.L,14064,Polar Capital Partners Limited,16
POLR.L,28039,Polar Capital Holdings plc,16
PCFT.L,50666,Polar Capital Global Financials Trust plc,16
PCGH.L,27928,Polar Capital Global Healthcare Trust plc,16
0M14OL.L,989894,Polarcus Ltd,16
PLMO.L,28164,Polemos Plc,16
POLO.L,14137,Polo Resources Ltd,16
POLYP.L,14618,Polymetal International PLC,16
PLP.L,940919,Polypipe Group,16
PLZLQ.L,1025139,Polyus PAO,16
PEBI.L,27917,Port Erin Biopharma Investments Ltd,16
PTCM.L,28107,Porta Communications Plc,16
PMGR.L,27838,Portmeirion Group,16
PORV.L,940921,Porvair,16
0P47.L,948942,PostNL,16
PHEG.L,943185,PowerHouse Energy Group plc,16
PPH.L,949175,PPHE Hotel Group Ltd,16
PDZP.L,960685,Prairie Downs Metals Ltd,16
0JDU.L,989896,Precise Biometrics AB,16
NIPT.L,28615,Premaitha Health PLC,16
PREM.L,940896,Premier African Minerals Ltd,16
PAM.L,991233,Premier Asset Management Group PLC,16
PFD.L,298,Premier Foods Plc,16
PGIT.L,955593,Premier Global Infrastructure Trust PLC,16
PMO.L,6718,Premier Oil,16
PTSG.L,945673,Premier Technical Services Group plc,16
PVGP.L,28710,Premier Veterinary Group PLC,16
PPTC.L,39208,President Energy Plc,16
PRES.L,28065,Pressure Technologies Plc,16
PHP.L,27982,Primary Health Properties,16
PRP.L,943186,Prime People,16
PRIMP.L,27807,Primorus Investments PLC,16
PEY.L,949172,Princess Private Equity Holding Ltd,16
PEYS.L,1052441,Princess Private Equity Holding Ltd,16
PHD.L,28397,PROACTIS Holdings PLC,16
0NOFDE.L,989889,Procter & Gamble Company,16
PIL.L,949173,Produce Investments PLC,16
PGY.L,28552,Progility PLC,16
0R7WMC.L,989899,Promotora de Informaciones SA,16
TPFG.L,942367,Property Franchise Group PLC,16
PPIRX.L,40177,Prophotonix Ltd,16
0J5Y.L,948637,Prosafe,16
0Q8P.L,948959,Prosegur,16
0QG9.L,948975,Prosiebensat 1 Media AG,16
PXOG.L,27785,Prospex Oil & Gas PLC,16
0JXF.L,989898,Protector Fors,16
PRM.L,7074,Proteome Sciences Plc,16
P6K.L,949166,Proton Power Systems PLC,16
PXSP.L,22921,Provexis,16
PRR.L,28280,Providence Resources,16
PFG.L,6707,Provident Financial,16
PROXP.L,28563,Proxama PLC,16
0DPU.L,948490,Proximus NV,16
PRSR.L,1024857,PRS Reit PLC,16
PRU.L,296,Prudential PLC,16
0NUX.L,948848,Prysmian,16
0FQI.L,948522,Publicis Groupe SA,16
0NQE.L,948825,Puma SE,16
PURE.L,28503,Purecircle Ltd,16
PRTC.L,954891,PureTech Health PLC,16
PURP.L,962339,Purplebricks Group PLC,16
PVCS.L,6815,PV Crystalox Solar Plc,16
PZC.L,6774,PZ Cussons,16
0MYY.L,948774,Powszechny Zaklad Ubezpieczen SA,16
0RLT.L,948552,Qiagen NV,16
QQ.L,6657,Qinetiq Group,16
QFI.L,27898,Quadrise Fuels International,16
QTX.L,942508,Quartix Holdings PLC,16
QRT.L,949177,Quarto Group Inc,16
0KF1OL.L,989904,Questerre Energy Corporation,16
QXT.L,940897,Quixant,16
QUIZ.L,1031171,QUIZ PLC,16
0R40MI.L,989918,Rai Way SpA,16
0NXR.L,948872,Raiffeisen Bank Internat. AG,16
RBWR.L,995936,Rainbow Rare Earths Ltd,16
0K9N.L,948657,Rallye,16
RMM.L,28016,Rambler Metals & Mining,16
RFXR.L,996535,Ramsdens Holdings PLC,16
RQIH.L,27885,Randall & Quilter Investment Holdings Ltd,16
RRS.L,6629,Randgold Resources Ltd,16
0NW2.L,948858,Randstad Holding NV,16
RRLR.L,1057076,Range Resources Ltd,16
RDLO.L,986083,Ranger Direct Lending Fund PLC,16
RDL.L,953059,Ranger Direct Lending Fund PLC,16
RNK.L,6754,Rank Group,16
KDNC.L,28144,Rare Earth Minerals PLC,16
RMA.L,949083,Rasmala PLC,16
RAT.L,6881,Rathbone Brothers PLC,16
0FRJ.L,948524,Rational AG,16
0KBQ.L,948664,Ratos AB ser. B,16
RUS.L,28452,Raven Russia Ltd,16
0GRZST.L,989905,RaySearch Laboratories AB ser. B,16
RBS.L,295,Royal Bank of Scotland Group PLC,16
0QEJMI.L,989907,RCS MediaGroup,16
REAH.L,27827,R.E.A Holdings PLC,16
RBDR.L,28529,Reabold Resources Plc,16
R4ER.L,27906,Reach4Entertainment Enterprises Plc,16
REAT.L,28207,React Group PLC,16
RECIV.L,940922,Real Estate Credit Investments Ltd,16
RLE.L,28240,Real Estate Investors PLC,16
RGD.L,27944,Real Good Food Co,16
RLM.L,28714,Realm Therapeutics Ltd,16
0FS8OL.L,989909,REC Silicon ASA,16
0QSDST.L,989908,Recipharm publ AB,16
RB.L,6570,Reckitt Benckiser Group PLC,16
RC2.L,943195,Reconstruction Capital II Ltd,16
RECL.L,44439,Record PLC,16
0KBS.L,948665,Recordati,16
0RI5.L,948864,Red Electrica Corporacion SA,16
RMPQ.L,27706,Red Emperor Resources NL,16
RLEO.L,28275,Red Leopard Holdings Plc,16
RRR.L,28168,Red Rock Resources,16
RCN.L,940898,Redcentric,16
REDD.L,7350,Redde PLC,16
RDI.L,940874,Redefine International PLC,16
RHL.L,28382,Redhall Group,16
RDW.L,6764,Redrow,16
REDS.L,28696,Redstoneconnect PLC,16
RED.L,28321,Redt Energy PLC,16
REDX.L,949634,Redx Pharma Plc,16
RPT.L,6748,Regal Petroleum,16
RGM.L,28390,Regency Mines PLC,16
RGLR.L,960687,Regional REIT Ltd,16
RSER.L,50681,Riverstone Energy Ltd,16
RELIQ.L,44433,Reliance Industries Ltd DRC,16
RLENQ.L,1061238,Reliance Infrastructure Ltd DRC,16
0NX9.L,948871,Relx NV,16
REL.L,6572,Relx PLC,16
0MGU.L,948723,Remy Cointreau,16
0KBT.L,989910,REN,16
0NQF.L,948826,Renault SA,16
RQE.L,28540,ReNeuron Group PLC,16
RNWH.L,27829,Renew Holdings plc,16
TRIG.L,50659,The Renewables Infrastructure Group Ltd,16
RWI.L,6851,Renewi PLC,16
RSW.L,6804,Renishaw,16
RNO.L,28653,Renold,16
RTO.L,6736,Rentokil Initial,16
REYMI.L,989913,Reply SpA,16
0NQG.L,948827,Repsol,16
RESIR.L,1024858,Residential Secure Income PLC,16
RTN.L,6790,Restaurant Group Plc,16
RSTP.L,28641,Restore Plc,16
0RFP.L,989912,Resurs Holding AB,16
RBG.L,948339,Revolution Bars Group,16
0KBZ.L,948666,Rexel,16
0GNMST.L,989914,Rezidor Hotel Group AB,16
0NI1.L,948796,Rheinmetall AG,16
RHIM.L,989915,RHI Magnesita NV,16
0NQH.L,948828,Rhoen Klinikum AG,16
RTHM.L,13168,RhythmOne PLC,16
RCDO.L,28630,Ricardo,16
0QMUS.L,989740,Compagnie Financiere Richemont SA,16
RLDR.L,28185,Richland Resources Ltd,16
RICX.L,949182,Richoux Group PLC,16
0QFP.L,948974,Richter Gedeon PLC,16
RICO.L,949181,Ricoh Co,16
RMV.L,6771,Rightmove Plc,16
RIO.L,6597,Rio Tinto PLC,16
RCP.L,6803,RIT Capital Partners,16
RIV.L,949183,River and Mercantile Group PLC,16
RMMC.L,943171,River and Mercantile UK Micro Cap Investment Company Ltd,16
RM.L,27882,RM Plc,16
RMDL.L,994255,RM Secured Direct Lending PLC,16
RM2.L,942410,Rm2 Int,16
0P1GAS.L,989906,Robeco Global Stars Equities Fund NV,16
RWA.L,28358,Robert Walters,16
RBSN.L,943180,Robinson,16
0QQ6S.L,989916,Roche Holding AG,16
0QOKS.L,989917,Roche Holding AG Participation,16
RKH.L,13121,Rockhopper Exploration,16
ROC.L,1024859,Rockpool Acquisitions PLC,16
RRE.L,962510,Rockrose Energy PLC,16
RR.L,6645,Rolls-Royce Holdings PLC,16
SNGRQ.L,1061240,Societatea Nationala de Gaze Naturale Romgaz SA DRC,16
AGRORQ.L,989536,Ros Agro PLC,16
ROSER.L,28388,Rose Petroleum PLC,16
ROSNQ.L,943205,Rosneft,16
RGP.L,949180,Ross Group PLC,16
RDTR.L,942407,Rosslyn Data Technologies plc,16
ROTL.L,28705,Rotala,16
ROR.L,6703,Rotork,16
0LN9.L,948682,Royal Dutch Shell PLC Class A,16
RDSA.L,23655,Royal Dutch Shell PLC Class A,16
RDSB.L,22093,Royal Dutch Shell B,16
RMG.L,41343,Royal Mail PLC,16
RPC.L,14068,RPC Group,16
RPS.L,6761,RPS Group,16
RSA.L,6653,RSA Insurance Group PLC,16
RTCR.L,943176,RTC Group PLC,16
0MNC.L,948754,RTL Group,16
0RTS.L,948768,Rubis SCA,16
RICA_P.L,28285,Ruffer Investment Co,16
RUR.L,28616,Rurelec,16
HYDRQ.L,953527,RusHydro JSC ADR,16
0HA0.L,948571,RWE AG ST O.N,16
RWS.L,14069,RWS Holdings plc,16
RYA.L,8790,Ryanair Holdings PLC,16
SPIVI.L,989934,S Immo Ag,16
SUS.L,28679,S & U,16
0GWL.L,948544,SAAB AB ser. B,16
SNT.L,28018,Sabien Technology Group Plc,16
SBRE.L,1056378,Sabre Insurance Group PLC,16
0OFU.L,948915,Sacyr,16
0O4N.L,948892,SAF Holland SA,16
SCHS.L,940899,SafeCharge International Group Ltd,16
SAFL.L,40181,Safeland Plc,16
SSTY.L,940773,Safestay PLC,16
SAFE.L,6780,Safestore Holdings Plc,16
SFES.L,942409,Safestyle UK plc,16
SRON.L,997110,Saffron Energy PLC,16
0NJ5MI.L,989930,Safilo Group,16
0IU8.L,948627,Safran SA,16
SAGAG.L,942376,Saga,16
SGE.L,6618,Sage Group PLC,16
SAFI.L,949184,Sagicor Financial Corp,16
CODC.L,27669,Compagnie de Saint Gobain SA,16
0RPI.L,948867,Saipem SpA,16
SO4.L,27712,Salt Lake Potash Ltd,16
SALVS.L,28311,SalvaRx Group Plc,16
0P52.L,948943,Salvatore Ferragamo,16
0G77.L,948526,Salzgitter AG,16
0HAG.L,948576,Sampo Oyj A,16
0593Q.L,44434,Samsung Electronics Co Ltd DRC Pref,16
0593XQ.L,32397,Samsung Electronics Co Ltd DRC,16
SLEN.L,14138,San Leon Energy Plc,16
SND.L,28300,Sanderson Group,16
SIT.L,949194,Sanditon Investment Trust PLC,16
0HC0.L,948597,Sandvik AB,16
SNNS.L,949636,Sanne Group PLC,16
0O59.L,948893,Sanofi SA,16
SANQ.L,27672,Banco Santander,16
0QN1S.L,989919,Santhera Pharmaceuticals Holding AG,16
0NW4.L,948859,SAP SE,16
SAR.L,28296,Sareum Hldgs Plc,16
0O1WST.L,989921,SAS AB,16
0QRNST.L,989920,SAS AB Pref,16
SAT.L,943163,Satellite Solutions Worldwide Group PLC,16
SAVP.L,943170,Savannah Petroleum,16
SAVS.L,27905,Savannah Resources PLC,16
SVS.L,6752,Savills,16
SBNCYQ.L,39214,Sberbank Of Russia,16
0NIS.L,948797,SBM Offshore NV,16
0MCK.L,948700,Svenska Cellulosa SCA AB B,16
SCLP.L,40182,Scancell Hldgs Plc,16
0QVRST.L,989926,Scandi Standard publ AB,16
0RD7.L,989933,Scandic Hotels Group AB,16
0RES.L,989961,Scandinavian Tobacco Group AS,16
SCPA.L,27847,Scapa Group Plc,16
0R3IOL.L,989959,Scatec Solar OL,16
0MHM.L,948730,Schibsted ASA A,16
0QO1S.L,989925,Schindler Ps,16
SCL.L,949187,Schlumberger NV,16
0NWV.L,948865,Schneider Electric SE,16
SCHOS.L,940865,Scholium Group,16
0O0N.L,989924,Schouw & Co,16
SDP.L,14071,Schroder Asia Pacific Fund,16
SERE.L,961760,Schroder European Real Estate PLC,16
SCF.L,27923,Schroder Income Growth Fund,16
SJG.L,27958,Schroder Japan Growth Fund,16
SOI.L,27891,Schroder Oriental Income Fund,16
SREI.L,6745,Schroder Real Estate Investment Trust Lts,16
SDU.L,28026,Schroder Uk Growth Fund,16
SCP.L,14114,Schroder UK Mid Cap Fund plc,16
SDRT.L,6693,Schroders PLC,16
SDR.L,6733,Schroders PLC,16
0QKGS.L,989944,Schweizerische Nationalbank,16
SAGS.L,28368,Science Group PLC,16
SISS.L,940900,Science in Sport plc,16
SDIS.L,27972,Scientific Digital Imaging Plc,16
SSY.L,28643,Scisys Plc,16
0IT3.L,948626,SCOR SE,16
SGEM.L,1024860,Scotgems PLC,16
SGZ.L,27707,Scotgold Resources Ltd,16
SCAM.L,27997,Scottish American Investment Co,16
SCIN.L,6834,Scottish Investment Trust,16
SMT.L,6760,Scottish Mortgage Investment Trust PLC,16
SOST.L,27757,The Scottish Oriental Smaller Companies Trust plc,16
SCSS.L,945089,Scs Group Plc,16
SDL.L,14070,SDL,16
SDX.L,980198,SDX Energy Inc,16
0HYK.L,948604,Seadrill Limited,16
SCGL.L,961640,Sealand Capital Galaxy Ltd,16
0HBY.L,948596,Skandinaviska Enskilda Banken AB A,16
SECG.L,985962,Sec SpA,16
0OG6PA.L,989736,Seche Environnem,16
SIRE.L,949193,Secure Income REIT Plc,16
SPDI.L,28192,Secure Property Development & Investment PLC,16
STBS.L,28235,Secure Trust Bank Plc,16
0IAH.L,948611,Securitas AB ser. B,16
SESTS.L,27989,Securities Trust Of Scotland,16
M2Z.L,28493,Seeing Machines,16
SGRO.L,6729,Segro Plc,16
0Q92OL.L,989923,Selvaag Bolig,16
0Q4JF.L,989942,SEMAFO Inc,16
0IE9LS.L,989928,Semapa,16
SEMVI.L,989943,Semperit AG Holding,16
SIGT.L,949191,Seneca Global Income Growth,16
SNR.L,14115,Senior Plc,16
SEPL.L,949188,Seplat Petroleum Development,16
SEQI.L,945897,Sequoia Economic Infrastructure,16
SRB.L,28482,Serabi Gold Plc,16
SRP.L,6634,Serco Group,16
SQZ.L,7298,Serica Energy,16
SEVL.L,28687,Servision,16
SVCA.L,28623,Servoca PLC,16
0OA4PA.L,989929,SES Imagotag,16
SFR.L,6842,Severfield-Rowen,16
SVT.L,6679,Severn Trent PLC,16
SVSTQ.L,943206,Severstal AO DRC,16
0MPL.L,948758,SGL Carbon SE,16
SHB.L,6791,Shaftesbury Plc,16
SHAN.L,28634,Shanta Gold,16
SHRE.L,27866,Share Plc,16
SWGS.L,28606,Shearwater Group PLC,16
SIGC.L,1025135,Sherborne Investors Guernsey C Ltd,16
SIGB.L,949190,Sherborne Investors Guernsey B,16
STXS.L,968982,Shield Therapeutics PLC,16
SHP.L,6600,Shire PLC,16
SHRS.L,28413,Shires Income,16
SHOE.L,940771,Shoe Zone PLC,16
SGRS.L,942370,Shore Capital Group Ltd,16
0P6M.L,948945,Siemens AG Class N,16
0RHTAS.L,989935,Sif Holding NV,16
SHI.L,6662,SIG,16
SISGM.L,40184,Sigma Capital Group Plc,16
SRC.L,28147,Sigmaroc PLC,16
0QMAS.L,989936,Sika I,16
SLN.L,14073,Silence Therapeutics,16
HEMO.L,961643,Silver Falcon PLC,16
SMGS.L,995937,Simian Global PLC,16
SIMI.L,40183,Simigon Ltd,16
SPH.L,28165,Sinclair Is Pharma Plc,16
0NOHBR.L,989937,Sioen,16
SXX.L,14116,Sirius Minerals Plc,16
SRSP.L,28248,Sirius Petroleum Plc,16
SRET.L,27741,Sirius Real Estate Ltd,16
0HBT.L,948594,Skanska AB ser. B,16
0NWWST.L,989938,AB SKF A,16
0NWX.L,948866,AB SKF B,16
SBTX.L,1052368,SkinBioTherapeutics PLC,16
0H34ST.L,989939,SkiStar AB ser. B,16
SKYB.L,6586,SKY PLC,16
0MKMAS.L,989941,Sligro Food Group NV,16
SMSS.L,28054,Smart Metering Systems Plc,16
SN.L,6695,Smith & Nephew PLC,16
SMIN.L,6686,Smiths Group PLC,16
SKG.L,14117,Smurfit Kappa Group Plc,16
0NQP.L,948830,Snam,16
ELSAQ.L,1061228,Societatea Energetica Electrica SA DRC,16
0J6Y.L,948640,Societe Generale,16
SIA.L,6797,Soco International,16
0J3F.L,948635,Sodexo,16
SCTS.L,961641,Softcat PLC,16
0NV0MI.L,989931,Sogefi,16
0NJPMI.L,989946,Sol,16
SOLG.L,28621,Solgold Plc,16
SOLI.L,28474,Solid State Plc,16
SOLO.L,28592,Solo Oil PLC,16
0NZR.L,948879,Solvay SA,16
SOM.L,28220,Somero Enterprise Inc,16
0ML0.L,948751,Sonae,16
0KJ1OL.L,989947,Songa Offshore SE,16
0QPYS.L,989948,Sonova H Ag,16
SPHN.L,7130,Sopheon PLC,16
SOPH.L,955595,Sophos Group PLC,16
SOSS.L,28498,Sosandar PLC,16
SOU.L,28555,Sound Energy PLC,16
SAPO.L,949185,South African Property Opportunities plc,16
S32.L,953827,South32 Ltd,16
0G3UCO.L,989949,SP Group,16
SAL.L,942411,SpaceandPeople Plc,16
0JH4CO.L,989950,Spar Nord Bank,16
0J1N.L,989874,Sparebank 1 Nord-Norge,16
0IVM.L,989849,Sparebank 1 SMN,16
0Q57.L,989955,Sparebank 1Sr,16
0G45OL.L,989951,Sparebanken Ost,16
0G67OL.L,989964,Sparebanken Vest,16
SPSY.L,943810,Spectra Systems Corp,16
SXS.L,6767,Spectris,16
0JIIOL.L,989953,Spectrum,16
SDY.L,6876,Speedy Hire,16
0R8M.L,1025137,Spie SA,16
SOP.L,1010686,Spinnaker Opportunities PLC,16
SPX.L,6808,Spirax Sarco Engineering Plc,16
SPI.L,942380,Spire Healthcare Group plc,16
SPT.L,6837,Spirent Communications,16
SRO.L,28472,Spitfire Oil Ltd,16
ROD.L,28699,Sportech,16
SPD.L,6772,Sports Direct International PLC,16
SPRSP.L,1052605,Springfield Properties PLC,16
SPRP.L,942412,Sprue Aegis,16
0Q90PA.L,989954,SQLi,16
SQNS.L,940852,SQN AFIF Ltd,16
SQNSC.L,961644,SQN Asset Finance Income Fund Ltd,16
SSIF.L,958834,Sqn Secured Income Fund PLC,16
SQS.L,27708,SQS Software Quality Systems Ag,16
SORA.L,28083,SRT Marine Systems PLC,16
0KII.L,948673,SSAB AB ser. A,16
0MHZ.L,989958,SSAB AB ser. B,16
SSE.L,6669,SSE PLC,16
SSPG.L,942377,SSP Group PLC,16
SIV.L,28631,St Ives Plc,16
SPPC.L,28069,St Peter Port Capital Ltd,16
SJP.L,6683,St. James’s Place PLC,16
SMP.L,7157,St.Modwen Properties,16
0OM4.L,948928,STADA Arzneimittel VNA O.N,16
SDMS.L,27837,Stadium Group Plc,16
STAF.L,28299,Staffline Group Plc,16
SGC.L,6732,Stagecoach Group,16
STAN.L,6670,Standard Chartered PLC,16
SLA.L,6583,Standard Life Aberdeen PLC,16
SLET.L,27890,Starwood European Real Estate Finance Ltd,16
SLPE.L,27884,Standard Life European Private Equity Trust PLC,16
SLI.L,27960,Standard Life Investments Property Income Trust Ltd,16
SLS.L,14118,Standard Life Uk Smaller Co Trust,16
SGI.L,27788,Stanley Gibbons Group Plc,16
BLOC.L,1052262,Stapleton Capital Plc,16
STARS.L,940866,Starcom,16
SVE.L,27859,Starvest,16
SWEF.L,40190,Starwood European Real Estate Finance Ltd ORD,16
SBIQ.L,44435,State Bank of India DRC,16
0M2Z.L,948695,Statoil ASA,16
SOG.L,28384,Statpro Group,16
STELD.L,28276,Stellar Diamonds PLC,16
STCM.L,28409,Steppe Cement,16
SEY.L,6874,Sterling Energy,16
STHR.L,6838,Sthree Plc,16
STLO.L,27824,Stilo International,16
STMG.L,28579,STM Group Plc,16
0INB.L,948624,STMicroelectronics,16
STOB.L,14076,Stobart Group Ltd,16
STCK.L,50680,Stock Spirits Group PLC,16
0OHKOL.L,989945,Stolt-Nielsen Limited,16
0CXC.L,948484,Stora Enso Oyj R,16
0NO0.L,948811,Storebrand ASA,16
STRVI.L,989962,Strabag SE,16
STHP.L,995097,Stranger Holdings PLC,16
AERO.L,942678,Strat Aero PLC,16
SEC.L,954893,Strategic Equity Capital,16
SMLP.L,28190,Strategic Minerals Plc,16
STIL.L,28208,Stratex International,16
STRST.L,953828,Stride Gaming PLC,16
KETL.L,1031738,Strix Group Plc,16
STVG.L,940924,STV Group plc,16
STY.L,942413,Styles & Wood Group plc,16
0OGK.L,948917,Subsea 7 SA,16
0G7B.L,948527,Suedzucker AG,16
0NRV.L,948841,Suez SA,16
0QQ9S.L,989963,Sulzer AG,16
SMTG.L,940853,Summit Germany,16
SUMM.L,28433,Summit Therapeutics PLC,16
SUMO.L,1057033,Sumo Group PLC,16
SRES.L,28206,Sunrise Resources Plc,16
0R5GS.L,989956,Sunrise Communications AG,16
SDRY.L,14072,SuperGroup PLC,16
SUPR.L,1029193,Supermarket Income REIT PLC,16
SURE.L,1061150,Sure Ventures PLC,16
SCEU.L,27800,Surface Transforms Plc,16
SUNU.L,27784,Surgical Innovations Group,16
SNGSYQ.L,943207,Surgutneftegaz ADR,16
SUH.L,28011,Sutton Harbour Holdings plc,16
0R7R.L,948595,Svenska Handelsbanken AB A,16
0R7SST.L,989932,Svenska Handelsbanken ser. B,16
SVME.L,958258,SVM UK Emerging Fund PLC,16
SWL.L,40191,Swallowfield,16
0QJVS.L,989984,Swatch Group I,16
0H0G.L,989966,SWECO AB ser. B,16
0H6T.L,948561,Swedbank AB ser A,16
0GO4.L,948534,Swedish Match AB,16
0MTD.L,948766,Swedish Orphan Biovitrum AB,16
0QMGS.L,989940,Swiss Life Holding AG,16
0QOGS.L,989952,Swiss Prime Site AG,16
0QL6S.L,989957,Swiss Re AG,16
0MGE.L,948712,Sydbank,16
SLPL.L,39209,Sylvania Platinum Ltd,16
SYMU.L,27763,Symphony Environmental Tech Plc,16
SIHL.L,949192,Symphony International Holdings Ltd,16
0G6T.L,948525,Symrise AG Inh. O.N,16
SYNG.L,40192,Synairgen,16
SYNCS.L,40119,Syncona Ltd,16
SNXS.L,27845,Synectics Plc,16
0HDQPA.L,989927,Synergie,16
0QOPS.L,989967,Syngenta AG,16
SYNTS.L,14142,Synthomer Plc,16
SYS.L,940857,SysGroup PLC,16
SYS1.L,28214,System1 Group PLC,16
0HDKST.L,989969,Systemair AB,16
CTO.L,949063,T Clarke PLC,16
0JK4.L,948644,Tag Immobilien AG,16
TPF.L,28043,Taliesin Property Fund Ltd,16
TALK.L,14077,Talk Talk Telecom Group Plc,16
TND.L,28446,Tandem Group,16
TAN.L,6624,Tanfield Group,16
TAP.L,940774,Taptica International Ltd,16
THRLT.L,949203,Target Healthcare REIT Ltd,16
0RISOL.L,989980,Targovax ASA,16
TRS.L,28453,Tarsus Group Plc,16
TAST.L,28672,Tasty Plc,16
TISCQ.L,1061241,Tata Steel Ltd DRC,16
TATE.L,6651,Tate & Lyle,16
TATNXQ.L,943204,Tatneft ADR,16
TAMT.L,1024862,Tatton Asset Management PLC,16
TAU.L,27734,Tau Capital Plc,16
0N2X.L,948777,Tauron Polska Energia SA,16
TAVI.L,28584,Tavistock Investments Plc,16
TAX.L,28202,Tax Systems PLC,16
TW.L,6800,Taylor Wimpey PLC,16
TBCG.L,986303,TBC Bank Group PLC,16
TCSQ.L,961761,TCS Group Holding PLC,16
0MOP.L,948755,TDC A/S,16
TECH.L,946605,TechFinancials Inc,16
0RG1MI.L,989972,Technogym SpA,16
0MKT.L,948747,Tecnicas Reunidas,16
TED.L,32426,Ted Baker,16
TEKT.L,940855,Tekcapital,16
0QE6.L,948968,Tele2 AB,16
0H6I.L,948560,Telecom Italia,16
TEP.L,14119,Telecom Plus,16
TDET.L,27671,Telefonica,16
0QAL.L,948961,Telefonica Deutschland Holding AG,16
0NKL.L,948801,Telekom Austria AG,16
0GAF.L,948530,Telenet Group,16
0G8C.L,948528,Telenor ASA,16
0J6X.L,948639,Teleperformance,16
TELF.L,32410,Telford Homes,16
0H6X.L,948563,Telia Company AB,16
TELT.L,28117,Telit Communications Plc,16
TMPL.L,6870,Temple Bar Investment Trust,16
TEM.L,6817,Templeton Emerg Mark Investm Trust,16
TEG.L,1008650,Ten Entertainment Group PLC,16
FTSE.L,27,FTSE100,16
FTSE100.L,8838,FTSE100 Futures,16

#BHB BAHRAIN STOCK EXCHANGE
SOLID.BHB,13528,Alahlia Insurance Co BSC,49
ABCB.BHB,13529,Arab Banking Corporation,49
ARIG.BHB,13530,Arab Insurance Group,49
AUBB.BHB,13531,Ahli United Bank,49
BANA.BHB,13532,Banader Hotels Co,49
BARKA.BHB,13533,Al Baraka Banking Group BSC,49
BBKB.BHB,13534,BBK,49
BCFC.BHB,13535,Bahrain Commercial Facilities Co BSC,49
BFMC.BHB,13536,Bahrain Flour Mills Co,49
BISB.BHB,13537,Bahrain Islamic Bank,49
BKIC.BHB,13538,Bahrain Kuwait Insurance Co,49
BMEB.BHB,13539,Bahrain Middle East Bank,49
BMMI.BHB,13540,BMMI BSC,49
BNHB.BHB,13541,Bahrain National Holding Co,49
BSRC.BHB,13543,Bah. Ship Repairing&Engineering Co,49
BTEL.BHB,13545,Bahrain Telecommunications Co,49
CNCO.BHB,13546,Bahrain Cinema Co BSC,49
DPCB.BHB,13547,Delmon Poultry Co,49
DUTY.BHB,13548,Bahrain Duty Free Shop Complex,49
EICB.BHB,13549,Esterad Investment Company BSC,49
FMLY.BHB,13550,Bahrain Family Leisure Co,49
GFHB.BHB,13551,Gulf Finance Group BSC,49
GTFP.BHB,13552,General Trading&Food Processing Co,49
INOV.BHB,13553,INOVEST BSC,49
INVB.BHB,13554,Investcorp Bank,49
ITHMR.BHB,13555,Ithmaar Holding BSC,49
KHCB.BHB,13556,Khaleeji Commercial Bank BSC,49
NASS.BHB,13557,Nass Corporation BSC,49
NATB.BHB,13558,National Bank of Bahrain,49
NHTL.BHB,13559,National Hotels Co,49
PARK.BHB,13560,Bahrain Car Park Co,49
SALAM.BHB,13561,Al Salam Bank,49
SEEF.BHB,13562,Seef Properties BSC,49
UGIC.BHB,13566,United Gulf Investment Corp BSC,49
ALBH.BHB,40422,Aluminum Bahrain BSC,49
ZAIN.BHB,942784,Zain Bahrain Bsc,49
BHTL.BHB,943631,Gulf Hotel Group,49

#ASE AMMAN STOCK EXCHANGE
AEIV.ASE,12393,Arab East Investment,49
EXFB.ASE,12351,Capital Bank Of Jordan,49
FFCO.ASE,12409,First Finance,49
UINV.ASE,12450,Union Investment Corporation,49
UCIC.ASE,12383,United Cable Industries,49
IDMC.ASE,12413,Ad-Dulayl Industrial Park&RE Co PLC,49
JOPT.ASE,12374,Jordan Petroleum Refinery,49
JOST.ASE,12376,Jordan Steel,49
SIBK.ASE,19040,Jordan Dubai Islamic Bank PSC,49
AMAL.ASE,12397,Al-Amal Financial Investments Co,49
JOPH.ASE,12372,Jordan Phosphate Mines,49
UTOB.ASE,12384,Union Tobacco&Cigarette Industries,49
JOIB.ASE,12355,Jordan Islamic Bank,49
ULDC.ASE,12451,Union Land Development Corporation,49
WIRE.ASE,19049,National Cable & Wire Manufacturing,49
AHLI.ASE,12357,Jordan Ahli Bank,49
PHNX.ASE,19047,Taameer Jordan Holdings PSC,49
ARBK.ASE,12461,Arab Bank,49
OFTC.ASE,12401,Offtec Holding Group Plc,49
CABK.ASE,12350,Cairo Amman Bank,49
UCFI.ASE,12448,United Financial Investments,49
MSKN.ASE,19042,Jordan Masaken Development,49
JRCD.ASE,12426,Jordanian Realestate Company,49
EICO.ASE,12368,Al-Eqbal Investment Company Ltd,49
FINS.ASE,12386,First Insurance,49
JOEP.ASE,12422,Jordan Electric Power,49
TAJM.ASE,12432,Al-Tajamouat Touristic Projects Co,49
ABCO.ASE,12346,Arab Banking Corp Jordan PSC,49
BOJX.ASE,12349,Bank Of Jordan,49
UBSI.ASE,19048,Bank Al-Etihad,49
MBED.ASE,12379,The Arab Pesticides Mfg. Co,49
NAQL.ASE,12434,Transport& Investment Barter Co,49
JTEL.ASE,12427,Jordan Telecom,49
ZARA.ASE,12460,Zara Investement Holding,49
DADI.ASE,12366,Dar Al Dawa Development Investment,49
ATTA.ASE,12364,Comprehensive Land Development,49
MSFT.ASE,12433,Masafat For Specialised Transport,49
AJIB.ASE,12348,Arab Jordan Investment Bank,49
MANE.ASE,12429,Afaq For Energy Co. P.L.C,49
TIIC.ASE,12359,The Islamic Insurance,49
SITT.ASE,12445,Salam Internationl Transport,49
PROF.ASE,12438,The Professional Co RE Investment,49
ATCO.ASE,103958,Enjaz for Development and Multi Projects Co PLC,49
REAL.ASE,19043,Arab East Real Estate Investments,49
AIEI.ASE,19034,The Arab Int Education & Investment,49
AAFI.ASE,12390,Al-Amin For Investment,49
JEIH.ASE,12419,Jordanian Expatriates Invest Hld,49
SHIP.ASE,12459,Jordan National Shipping Lines,49
JOKB.ASE,12356,Jordan Kuwait Bank,49
SANA.ASE,12442,Al-Sanabel Int,49
JIJC.ASE,12388,Jordan International Insurance,49
RMCC.ASE,19045,Ready Mix Concrte & Construction,49
ASPMM.ASE,12363,Arabian Steel Pipes Manufacturing,49
JCBK.ASE,12354,Jordan Commercial Bank,49
RUMI.ASE,955899,Al Safweh for Financial Investments Co PSC,49
THBK.ASE,12358,The Housing Bank Trade & Finance,49
FRST.ASE,12387,First Jordan Investment Company PLC,49
COHO.ASE,19036,Contempro For Housing Projects,49
JDFS.ASE,940932,Jo Duty Fre,49
FUTR.ASE,12411,Future Arab Investment Company,49
JOWM.ASE,12377,The Jordan Worsted Mills,49
AALU.ASE,12360,Arab Aluminum Industry /Aral,49
AIHO.ASE,12394,Arab International Hotels,49
INVB.ASE,12353,Invest Bank,49
APOT.ASE,12361,The Arab Potash,49
ICAG.ASE,12367,The Industrial Commercial&Agr,49
JOCM.ASE,12370,The Jordan Cement Factories,49
MEIN.ASE,12389,Middle East Insurance,49
ABMS.ASE,12391,Al-Bilad Medical Services,49
AMAD.ASE,12396,Amad Investment & RE Development,49
BIND.ASE,12402,Bindar Trading & Investment Co PLC,49
ITSC.ASE,12417,Ittihad Schools,49
MALL.ASE,12428,Al-Dawliyah For Hotels & Malls,49
MEET.ASE,12431,Methaq Real Estate Investment,49
AQAR.ASE,12436,Real Estate and Investment Portfolio Co PSC,49
REDV.ASE,12439,Real Estate Development,49
JETT.ASE,12457,Jordan Express Tourist Transport,49
AFIN.ASE,19033,Arab Financial Investment,49
IBNH.ASE,19039,Ibn Alhaytham Hospital Company,49
CEIG.ASE,103955,Century Inv,49
HPIC.ASE,103956,Hayat Phat,49
IREL.ASE,103957,Irbid Elect,49
MANR.ASE,103959,Afaq Hld In,49
MANS.ASE,103960,Manaseer St,49
SHRA.ASE,103961,Shira,49
UMIC.ASE,103962,Univ Mod In,49
ZEIC.ASE,940931,Zarqa Educ,49
JODA.ASE,950020,Jordan Dairy Co PSC,49
PHIL.ASE,955691,Philadelphia Pharmaceuticals Industry Co PSC,49
JDFI.ASE,961695,Jordanian Company for Developing and Financial Investment,49
JOIN.ASE,961696,Jordan Insurance Co PSC,49
FUND.ASE,962400,Jordanian Mutual Funds Management Company PSC,49
JOFR.ASE,1010627,Jordan French Insurance Co PSC,49
PIEC.ASE,1010628,Philadelphia International Educational Investment Company PSC,49
GENI.ASE,1010695,General Investment Company PSC,49

#QA QATAR
QFLS.QA,13221,Qatar Fuel,53
DOBK.QA,13189,Doha Bank,53
BRES.QA,13200,Barwa,53
MRDS.QA,13567,Mazaya,53
MARK.QA,13191,Masraf al rayan,53
QFBQ.QA,976552,Qatar First Bank LLC,53
IQCD.QA,13206,Industries Qatar,53
ERES.QA,13203,Ezdan,53
QNBK.QA,13195,QNB,53
MPHC.QA,945817,Mesaieed Petrochemical Holding,53
UDCD.QA,13225,United Development Co,53
QISB.QA,13194,Qatar Islamic Bank,53
QINS.QA,13568,Qatar Insurance Co,53
COMB.QA,13192,Commercial Bank of Qatar,53
QOIS.QA,13223,Qatar Oman Investment Company,53
QGTS.QA,13213,Qatar Gas Transport Company,53
SALM.QA,13224,Salam International,53
ORDS.QA,13219,Qatar Telecom,53
QEWC.QA,13212,Qatar Electricity and Water,53
KCBK.QA,13188,Al khalij Commercial Bank,53
IGRD.QA,1055289,Investment Holding Group,53
QIIB.QA,13193,Qatar International Islamic Bank,53
QNNC.QA,13222,Qatar Navigation,53
MCGS.QA,13209,Medicare,53
QGMS.QA,13220,Qatar German Company for Medical Devices,53
GISS.QA,13204,Gulf International,53
AHCS.QA,13196,Aamal,53
QIGD.QA,13199,Al-Khalij Holding,53
NLCS.QA,13210,National Leasing,53
DBIS.QA,13201,Dlala,53
QANC.QA,13218,Qatar National Cement Co,53
WDAM.QA,13217,Qatar Meat and Livestock,53
GWCS.QA,13205,Gulf warehousing Co,53
QGIR.QA,13214,General Insurance & Reinsurance Co,53
MERS.QA,13198,Al Meera,53
MCCS.QA,13208,Mannai Corp,53
QIIC.QA,13216,Qatar Islamic Insurance Company,53
KINS.QA,13197,Al Kaleej Takaful,53
DICO.QA,13202,Doha Insurance,53
QCFD.QA,13211,Qatar Cinema & Film Distribution,53
ZHCD.QA,13227,Zad Holding Company,53
AABQ.QA,13187,Al Ahli Bank,53
IHGS.QA,13207,Islamic Holding,53
QIMC.QA,13215,Qatar Industrial Manufacturing Co,53
VFQS.QA,13226,Vodafone Group PLC,53

#ADX ABU DHABI SECURITIES EXCHANGE 
ADAV.ADX,941292,Ad Aviation,51
FH.ADX,941293,Finance House,51
EIC.ADX,941294,Emirates Ins C,51
UAB.ADX,941295,United Arab Bk,51
IHC.ADX,941296,International Holding Company PJSC,51
GCIC.ADX,941297,Green Crs Ins,51
QIC.ADX,941298,Umm Al Qaiwain Cement Industries Co PSC,51
DRIV.ADX,941299,Em Driving Co,51
IH.ADX,941300,Insurance Hous,51
INVB.ADX,941301,Invest Bank AD,51
RAKC.ADX,941302,Rak Cmt & Cons,51
SCID.ADX,941303,Sharjah Cement AD,51
TKFL.ADX,941305,Abd Nat Takafu,51
ABNI.ADX,941306,Buhaira Nat In,51
ADIB.ADX,941307,Ad Islamic Bk,51
ADNI.ADX,941308,Ad Natl Ins Co,51
AGTH.ADX,941309,Agthia Group,51
BILD.ADX,941310,Abu Dhabi National for Building Materials Co PJSC,51
ADSB.ADX,941311,Ad Shipbldg Co,51
AKIC.ADX,941312,Al Khazna Ins,51
ARKN.ADX,941313,Arkan Building Materials Co PJSC,51
BOS.ADX,941314,Bank Of Sharja,51
DANA.ADX,941315,Dana Gas,51
ADCB.ADX,941316,Ad Commercial,51
ALDR.ADX,941317,Aldar Properti,51
ETEL.ADX,941318,Emirates Telec,51
GCEM.ADX,941320,Gulf Cement Co,51
GPHI.ADX,941321,Gulf Pharm Ind,51
METH.ADX,941322,Methaq,51
FAB.ADX,941323,First Abu Dhabi Bank PJSC,51
NBQ.ADX,941324,Nat Bk Qaiwain,51
RAKB.ADX,941325,Natl Bk Of Rak,51
RKCE.ADX,941326,Rak Ceramics,51
RPRO.ADX,941327,Rak Properties,51
RKCC.ADX,941328,Rak Cement Co,51
SIB.ADX,941329,Sharjah Islami,51
TAQA.ADX,941330,Ad Natl Energy,51
UNB.ADX,941331,Union Natl Bk,51
WAHA.ADX,941332,Waha Capital,51
ADNH.ADX,950734,Abu Dhabi National Hotels Co,51
CBI.ADX,950735,Commercial Bank International,51
FOOD.ADX,950736,Foodco Holding PJSC,51
NCTH.ADX,950737,National Corp Tourism Hotels,51
NMDC.ADX,953758,National Marine Dredging PSC,51
RAKN.ADX,953759,Ras Al Khaimah National Insurance Co PSC,51
GMPC.ADX,955815,Gulf Medical Projects Co PSC,51
ESHR.ADX,959190,Eshraq Properties Co PJSC,51
MANZP.ADX,969226,Manazel Real Estate PJSC,51
FBI.ADX,976266,Fujairah Building Industries Co PSC,51
OEIH.ADX,976267,Oman And Emirates Holding Co SAOG,51
ORDS.ADX,976268,Qatar Telecom,51
SDTL.ADX,976269,Sudatel Telecom Group Ltd,51
FCI.ADX,993907,Fujairah Cement Industries Co PSC,51
RAKP.ADX,993908,Ras Al Khaimah Poultry and Feeding Co,51
UNIN.ADX,993909,Union Insurance Co PSC,51
KICO.ADX,998166,Al Khaleej Investment Co PJSC,51
NBF.ADX,998167,National Bank of Fujairah PJSC,51
WATA.ADX,998168,National Takaful Co PJSC,51
AAIC.ADX,1052876,Al Ain Ahlia Insurance Co PSC,51
ADNO.ADX,1057034,Abu Dhabi National Oil Company for Distribution PJSC,51
ALQD.ADX,1057035,Al Qudra Holding PJSC,51
SG.ADX,1057036,Sharjah Group Co,51

#DFM DUBAI FINANCIAL MARKET
DXBE.DFM,945150,DXB Entertainments (P.J.S.C.),54
ARTC.DFM,12535,Arabtec Holding PJSC,54
GNAV.DFM,12550,Gulf Navigation Holding PJSC,54
UPRO.DFM,12561,Union Properties PJSC,54
SALAMA.DFM,12556,Islamic Arab Insurance Company,54
DINV.DFM,12541,Dubai Investments PJSC,54
DEYR.DFM,12538,Deyaar Development PJSC,54
DFM.DFM,12539,Dubai Financial Market PJSC,54
EMAA.DFM,943614,Emaar Malls,54
DSI.DFM,12544,Drake & Scull International PJSC,54
EMAR.DFM,12547,Emaar Properties PJSC,54
EMAARDEV.DFM,1055159,Emaar Development PJSC,54
AMANT.DFM,945149,Amanat Holdings PJSC,54
DISB.DFM,12542,Dubai Islamic Bank,54
DAMAC.DFM,946567,Damac Properties Dubai Co PSC,54
SHUA.DFM,12557,SHUAA Capital PSC,54
AMLK.DFM,40413,Amlak Finance PJSC,54
AIRA.DFM,12530,Air Arabia PJSC,54
DU.DFM,12546,Emirate Integrated Telecom Co PJSC,54
DTKF.DFM,12545,Takaful House,54
AJBNK.DFM,12531,AJMAN BANK PJSC,54
ARMX.DFM,12534,ARAMEX PJSC,54
GGIC.DFM,12549,Gulf General Investments Company,54
ENBD.DFM,12548,Emirates NBD PJSC,54
TABR.DFM,12558,National Central Cooling Co,54
CBD.DFM,12537,Commercial Bank of Dubai P.S.C,54
AMAN.DFM,12532,Dubai Islamic Insurance Co,54
MASB.DFM,19059,Mashreqbank PSC,54
DNIN.DFM,12543,Dubai National Insurance,54
NCC.DFM,12553,National Cement Company P.S.C,54
TKFE.DFM,12560,Takaful Emarat PSC,54
DINC.DFM,19058,Dubai Insurance Co PSC,54
NGIN.DFM,19060,National General Insurance Co PSC,54
ASCI.DFM,40414,Arabian Scandinavian Insurance Co PLC,54
ERC.DFM,40415,Emirates Refreshments Company,54
OIC.DFM,40416,Oman Insurance Company P.S.C,54
MARKA.DFM,943615,Marka Pjse,54

#TW TAIWAN
TWII.TW,38017,Taiwan Weighted Index,39
3130.TW,103519,104 Corporatio,39
2009.TW,103180,1St Copper Tec,39
1217.TW,102994,A.G.V. Product,39
2311.TW,103228,A.S.E,39
2374.TW,103270,Ability Enter,39
4133.TW,103597,Abnova,39
2444.TW,103319,Abocom Systems,39
6282.TW,103720,Acbel,39
9941.TW,103798,Acceptance,39
2345.TW,103248,Accton,39
8374.TW,103759,Ace Pillar,39
1466.TW,103067,Acelon Chem Fi,39
2353.TW,103253,Acer,39
3605.TW,103573,Aces Elec,39
1715.TW,103137,Achem,39
3024.TW,103482,Action Eltr,39
4142.TW,103600,Adim,39
6166.TW,103687,Adlink Tech,39
8261.TW,103757,Advanced Power,39
1442.TW,103050,Advancetek,39
2395.TW,103285,Advantech Co Ltd,39
3002.TW,103464,Ahoku Eltr,39
1626.TW,103125,Airmate,39
1590.TW,103111,Airtac,39
3041.TW,103498,Ali,39
1514.TW,103085,Allis Electric,39
3209.TW,103524,Alltek Tech,39
3380.TW,103537,Alpha Networks,39
3059.TW,103513,Altek,39
2704.TW,103407,Ambassador Hot,39
2493.TW,103355,Ampoc Far-East,39
2489.TW,103353,Amtran Tech,39
1528.TW,103095,Anderson,39
6289.TW,103724,Aoc,39
3046.TW,103502,Aopen,39
8271.TW,103758,Apacer,39
6108.TW,103668,Apcb Inc,39
3052.TW,103507,Apex,39
1733.TW,103152,Apex Biotech,39
4106.TW,103594,Apex Medical,39
3682.TW,103584,Apt,39
3596.TW,103571,Arcadyan Tech,39
2471.TW,103339,Ares Int'L,39
8101.TW,103743,Arima Communic,39
1102.TW,102982,Asia Cement Corp,39
3019.TW,103478,Asia Optical,39
1337.TW,103027,Asia Plastic,39
1308.TW,103013,Asia Polymer C,39
5269.TW,103642,Asmedia,39
3515.TW,103551,Asrock,39
9912.TW,103777,Assoc Ind Chin,39
2357.TW,103257,Asustek,39
6277.TW,103717,Aten,39
2409.TW,103293,Au Optronics,39
2459.TW,103330,Audix,39
2373.TW,103269,Aurora Corp,39
2433.TW,103310,Aurora Sys,39
6215.TW,103705,Aurotek,39
8072.TW,103741,Av Tech,39
3017.TW,103476,Avc,39
3669.TW,103581,Aver,39
2417.TW,103298,Avermedia Tech,39
2380.TW,103275,Avision,39
1530.TW,103096,Awea Mech,39
3694.TW,103586,Azurewave,39
1527.TW,103094,Basso Indu,39
8215.TW,103755,Benq Materials,39
2515.TW,103367,Bes Eng Corp,39
3308.TW,103530,Bestec Power,39
3027.TW,103485,Billion,39
4737.TW,103612,Bionime,39
2399.TW,103287,Biostar,39
3665.TW,103580,Bizlink,39
2836.TW,103425,Bk Of Kaohsiun,39
3031.TW,103489,Bright Led,39
2467.TW,103337,C Sun Mfg,39
4976.TW,103629,Calin,39
6142.TW,103680,Cameo,39
5259.TW,103640,Candmark,39
6005.TW,103667,Capital Sec,39
6153.TW,103683,Career,39
1417.TW,103037,Carnival,39
3054.TW,103508,Carry,39
5264.TW,103641,Casetek,39
2474.TW,103341,Catcher Tech,39
1713.TW,103135,Cathay Chemica,39
2882.TW,103440,Cathay Fin Hld,39
2501.TW,103360,Cathay Red,39
6230.TW,103709,Cci,39
2851.TW,103433,Central Reins,39
9958.TW,103805,Century Iron,39
5871.TW,103663,Chailease,39
2509.TW,103364,Chainqui,39
1806.TW,103164,Champion,39
3257.TW,103527,Champion Micro,39
1468.TW,103069,Chang Ho,39
2801.TW,103416,Chang Hwa Bank,39
1541.TW,103106,Chang Type,39
8070.TW,103740,Chang Wah Elec,39
6205.TW,103700,Chant Sincere,39
1215.TW,102992,Charoen Pokphand Enterprise,39
2722.TW,103412,Chateau,39
4164.TW,103602,Chc,39
3229.TW,103525,Cheer Time,39
8210.TW,103753,Chenbro Micom,39
1904.TW,103171,Cheng Loong,39
2105.TW,103208,Cheng Shin Rub,39
2392.TW,103283,Cheng Uei,39
3013.TW,103472,Chenming Mold,39
4960.TW,103628,Chi Mei Materi,39
4942.TW,103624,Chia Chang,39
1103.TW,102983,Chia Hsin Ceme,39
2033.TW,103198,Chia Ta World,39
6412.TW,103727,Chicony,39
2385.TW,103279,Chicony Eltn,39
5515.TW,103651,Chien Kuo Cons,39
2025.TW,103191,Chien Shing Ss,39
2024.TW,103190,Chih Lien Ind,39
2456.TW,103327,Chilisin Elec,39
2355.TW,103255,Chin Poon Ind,39
2610.TW,103394,China Air Line,39
2820.TW,103420,China Bills,39
1701.TW,103126,China Chem&Pha,39
2613.TW,103397,China Containe,39
2883.TW,103441,China Dvlp Fin,39
1535.TW,103100,China Ecotek,39
1611.TW,103117,China Electric,39
1305.TW,103011,China General,39
1809.TW,103166,China Glaze,39
9930.TW,103789,China Hi-Ment,39
2823.TW,103421,China Life Insurance,39
1718.TW,103139,China Manmade,39
1532.TW,103098,China Metal,39
2204.TW,103216,China Motor,39
1314.TW,103018,China Petroche,39
2104.TW,103207,China Rubber,39
2002.TW,103176,China Steel,39
1723.TW,103143,China Steel Ch,39
2013.TW,103183,China Steel St,39
9928.TW,103787,China Tv,39
1603.TW,103112,China Wire&Cab,39
2891.TW,103449,Chinatrust Fhc,39
2612.TW,103396,Chinese Mariti,39
9935.TW,103793,Ching Feng,39
8150.TW,103750,Chipmos,39
1539.TW,103104,Chiu Ting Mach,39
4137.TW,103598,Chlitina,39
9929.TW,103788,Choice Develop,39
5534.TW,103658,Chong Hong Con,39
2360.TW,103260,Chroma,39
2012.TW,103182,Chun Yu Works,39
2010.TW,103181,Chun Yuan Stee,39
1435.TW,103043,Chung Fu,39
2014.TW,103184,Chung Hung Ste,39
1727.TW,103147,Chung Hwa Chem,39
1905.TW,103172,Chung Hwa Pulp,39
1513.TW,103084,Chung-Hsin,39
1762.TW,103157,Chunghwa Chem,39
2412.TW,103294,Chunghwa Telec,39
1439.TW,103047,Chuwa Wool,39
1463.TW,103064,Chyang Sheng,39
8422.TW,103762,Cleanaway,39
2362.TW,103261,Clevo,39
2323.TW,103234,Cmc Magnetics,39
4984.TW,103631,Coadna,39
4144.TW,103601,Coland,39
2906.TW,103455,Collins,39
2324.TW,103235,Compal Electrn,39
2313.TW,103230,Compeq Manufacturing Co Ltd,39
3032.TW,103490,Compucase,39
3703.TW,103589,Continental Ho,39
3550.TW,103559,Copartner,39
2466.TW,103336,Cosmo Eltr,39
3607.TW,103574,Coxon,39
8249.TW,103756,Creative Senso,39
2528.TW,103372,Crowell,39
2208.TW,103219,Csbc Corp,39
9933.TW,103791,Ctci Corp,39
2231.TW,103222,Cub Elec,39
8103.TW,103744,Cvilux,39
2415.TW,103297,Cx Tech,39
5203.TW,103635,Cyberlink,39
3617.TW,103575,Cyberpower,39
3062.TW,103516,Cybertan,39
2332.TW,103242,D-Link Corp,39
2535.TW,103375,Da-Cin Constr,39
6177.TW,103690,Da-Li Const,39
6184.TW,103692,Dafeng Tv,39
1615.TW,103121,Dah San Elec,39
3686.TW,103585,Danen,39
8163.TW,103751,Darfon,39
3094.TW,103518,Davicom,39
5234.TW,103638,Daxin,39
1464.TW,103065,De Licacy Ind,39
2530.TW,103373,Delpha Constr,39
2308.TW,103227,Delta Electron,39
6605.TW,103732,Depo Auto,39
2397.TW,103286,Dfi,39
6216.TW,103706,Draytek,39
6251.TW,103713,Dynamic,39
2497.TW,103357,E-Lead Elec,39
6281.TW,103719,E-Life Mall,39
2884.TW,103442,E.Sun Fhc,39
1476.TW,103077,Eclat Textile,39
3047.TW,103503,Edimax Tech,39
3591.TW,103569,Edison Opto,39
3048.TW,103504,Edom,39
2458.TW,103329,Elan Microele,39
3450.TW,103543,Elite Adv Lase,39
2383.TW,103277,Elite Matl,39
2331.TW,103241,Elitegroup Com,39
3038.TW,103496,Emerging Displ,39
6243.TW,103712,Ene,39
6414.TW,103728,Ennoconn,39
2849.TW,103431,Entie Bank,39
3573.TW,103563,Entire Tech,39
4956.TW,103626,Epileds Tech,39
2448.TW,103320,Epistar,39
3006.TW,103468,Esmt,39
5243.TW,103639,Eson,39
1717.TW,103138,Eternal,39
2618.TW,103402,Eva Airways,39
1460.TW,103063,Everest Text,39
5484.TW,103650,Everfocus Elec,39
2607.TW,103391,Evergreen Intl,39
2603.TW,103388,Evergreen Mari,39
2393.TW,103284,Everlight,39
1711.TW,103133,Everlight Chem,39
1735.TW,103154,Evermore Chem,39
2390.TW,103282,Everspring Ind,39
1470.TW,103071,Evertex,39
1616.TW,103122,Evertop Wire,39
2483.TW,103348,Excel Cell,39
4104.TW,103593,Excelsior,39
4977.TW,103630,F-Pcl,39
2903.TW,103452,Far East Dept,39
1402.TW,103031,Far Eastern Ne,39
4904.TW,103615,Far Eastone,39
3035.TW,103493,Faraday Tech,39
1730.TW,103149,Farcent,39
5522.TW,103654,Farglory,39
5607.TW,103660,Farglory Ftz H,39
3535.TW,103556,Favite,39
2102.TW,103205,Federal Corp,39
2845.TW,103429,Feib,39
2015.TW,103185,Feng Hsin Iron,39
9910.TW,103775,Feng Tay Entpr,39
2712.TW,103411,Fgh,39
2892.TW,103450,First Fhc,39
2706.TW,103409,First Hotel,39
2852.TW,103434,First Ins,39
6269.TW,103715,Flexium,39
6206.TW,103701,Flytech,39
6120.TW,103673,Forhouse,39
8131.TW,103749,Formosa Advanc,39
1326.TW,103026,Formosa Chem F,39
2707.TW,103410,Formosa Hotel,39
4746.TW,103613,Formosa Lab,39
1225.TW,102998,Formosa Oilsee,39
6505.TW,103731,Formosa Petro,39
1301.TW,103008,Formosa Plasti,39
3532.TW,103554,Formosa Sumco,39
1434.TW,103042,Formosa Taffet,39
1709.TW,103131,Formosa Union,39
2107.TW,103210,Formosan Rubbe,39
1519.TW,103088,Fortune Electr,39
2468.TW,103338,Fortune Info,39
5533.TW,103657,Founding Const,39
2354.TW,103254,Foxconn Tech,39
2030.TW,103195,Froch Enterpri,39
3015.TW,103474,Fsp Tech,39
9924.TW,103783,Fu Hsing Indu,39
2881.TW,103439,Fubon Fin Hldg,39
9802.TW,103768,Fulgent Sun,39
6136.TW,103677,Fullerton Tech,39
1219.TW,102996,Fwusow,39
2476.TW,103342,G-Shank Enter,39
3149.TW,103520,G-Tech,39
9905.TW,103771,G. China Metal,39
3312.TW,103532,G.M.I,39
3557.TW,103560,Gamma Optical,39
2460.TW,103331,Gem Terminal,39
4906.TW,103616,Gemtek Tech,39
6128.TW,103674,General Plasti,39
4952.TW,103625,Generalplus,39
3383.TW,103538,Genesis Photon,39
3406.TW,103539,Genius,39
3164.TW,103521,Genmont Biotec,39
3356.TW,103535,Geo Vision,39
3005.TW,103467,Getac Tech,39
9921.TW,103782,Giant,39
8105.TW,103745,Giantplus,39
3559.TW,103561,Giga Solution,39
2376.TW,103272,Gigabyte Tech,39
2406.TW,103292,Gigastorage,39
3514.TW,103550,Gintech,39
6191.TW,103694,Global Brands,39
4935.TW,103622,Global Lightin,39
3443.TW,103542,Global Unichip,39
3040.TW,103497,Global View,39
1324.TW,103024,Globe Inds,39
9934.TW,103792,Globe Union,39
8081.TW,103742,Gmt,39
2368.TW,103266,Gold Circuit E,39
6133.TW,103676,Golden Bridge,39
2504.TW,103361,Goldsun Const,39
2423.TW,103302,Good Will,39
1583.TW,103109,Goodway,39
1524.TW,103091,Gordon Auto,39
2723.TW,103413,Gourmet Master,39
5907.TW,103666,Grand Ocean,39
1312.TW,103016,Grand Petroche,39
1707.TW,103129,Grape King,39
9908.TW,103774,Great Taipei G,39
1210.TW,102990,Great Wall Ent,39
2441.TW,103316,Greatek Eltrs,39
3519.TW,103553,Green Energy,39
1262.TW,103007,Green Seal,39
1437.TW,103045,Gtm Corp,39
2038.TW,103200,Hai Kwang,39
5469.TW,103648,Hannstar Board,39
6116.TW,103671,Hannstar Displ,39
3049.TW,103505,Hannstar Touch,39
2488.TW,103352,Hanpin,39
6168.TW,103688,Harvatek,39
1234.TW,103004,Hey-Song,39
2542.TW,103380,Highwealth Con,39
1338.TW,103028,Hiroca Holding,39
3494.TW,103547,Hiti Digital,39
2419.TW,103299,Hitron Tech,39
2049.TW,103201,Hiwin,39
1714.TW,103136,Ho Tung,39
1810.TW,103167,Hocheng,39
1618.TW,103124,Hold-Key,39
6202.TW,103699,Holtek,39
3026.TW,103484,Holystone,39
2317.TW,103233,Hon Hai,39
1446.TW,103054,Hong Ho Precis,39
1612.TW,103118,Hong Tai Elec,39
1452.TW,103057,Hong Yi Fiber,39
1474.TW,103075,Honmyue Enter,39
1536.TW,103101,Hota Ind,39
2207.TW,103218,Hotai Motor,39
2702.TW,103406,Hotel Garden,39
9906.TW,103772,Hsin Ba Ba,39
9931.TW,103790,Hsin Kao Gas,39
2031.TW,103196,Hsin Kuang Ste,39
2114.TW,103213,Hsin Yung Chie,39
1109.TW,102986,Hsing Ta Cemen,39
2498.TW,103358,Htc Corp,39
2880.TW,103438,Hua Nan Fin,39
1436.TW,103044,Hua Yu Lien,39
1608.TW,103115,Huaeng Wire&Ca,39
2548.TW,103385,Huaku,39
2545.TW,103382,Huang Hsiang,39
2527.TW,103371,Hung Ching,39
1413.TW,103034,Hung Chou Chem,39
2536.TW,103376,Hung Poo R Est,39
2534.TW,103374,Hung Sheng Con,39
1236.TW,103006,Hunya,39
2109.TW,103212,Hwa Fong,39
2543.TW,103381,Hwang Chang,39
2486.TW,103351,I-Chiun,39
6115.TW,103670,I-Sheng Electr,39
3022.TW,103480,Iei,39
3598.TW,103572,Ilitek,39
6117.TW,103672,In-Win Dev,39
2495.TW,103356,Infortrend,39
3481.TW,103546,Innolux,39
3474.TW,103545,Inotera Memo,39
8201.TW,103752,Inventec Besta,39
2356.TW,103256,Inventec Corp,39
2228.TW,103221,Iron Force,39
3014.TW,103473,Ite,39
6213.TW,103703,Iteq,39
3584.TW,103567,J Touch,39
2442.TW,103317,Jean,39
1538.TW,103103,Jenn Feng,39
3653.TW,103579,Jentech,39
6197.TW,103697,Jess-Link,39
3011.TW,103471,Ji-Haw Indu,39
5285.TW,103644,Jih Lin,39
8429.TW,103764,Jinli,39
1736.TW,103155,Johnson,39
1512.TW,103083,Jui Li,39
1617.TW,103123,Jung Shing Wir,39
6165.TW,103686,Jye Tai Precision Industrial Co Ltd,39
2461.TW,103332,K Laser,39
3003.TW,103465,K.S. Terminals,39
9919.TW,103781,Kang Na Hsiung,39
2008.TW,103179,Kao Hsing Chan,39
8996.TW,103767,Kaori Heat,39
1531.TW,103097,Kaulin Mfg,39
2546.TW,103383,Kedge Cont,39
2538.TW,103378,Kee Tai Proper,39
2106.TW,103209,Kenda Rubber,39
2608.TW,103392,Kerry Tj,39
8427.TW,103763,Keysheen,39
1525.TW,103092,Kian Shen,39
2520.TW,103369,Kindom Constr,39
6155.TW,103684,King Core,39
2059.TW,103202,King Slide,39
2449.TW,103321,King Yuan Elec,39
2524.TW,103370,King'S Town,39
2809.TW,103417,King'S Town Ba,39
8411.TW,103761,Kingcan,39
1560.TW,103107,Kinik,39
6209.TW,103702,Kinko Optical,39
2312.TW,103229,Kinpo,39
3189.TW,103523,Kinsus,39
5215.TW,103636,Ko Ja,39
1805.TW,103163,Kpt Industries,39
5521.TW,103653,Kseco,39
1537.TW,103102,Kung Long,39
2505.TW,103362,Kuo Yang Const,39
1416.TW,103036,Kwong Fong Ind,39
2365.TW,103264,Kye Systems,39
5225.TW,103637,Kyet,39
6139.TW,103678,L&K Eng,39
1459.TW,103062,Lan Fa Textile,39
3008.TW,103469,Largan Precisi,39
1704.TW,103128,Lcy Chemical,39
3058.TW,103512,Leader,39
2465.TW,103335,Leadtek,39
3588.TW,103568,Leadtrend,39
1444.TW,103052,Lealea Ent. Co,39
6164.TW,103685,Ledtech,39
1517.TW,103087,Lee Chi,39
2472.TW,103340,Lelon Eltr,39
2705.TW,103408,Leofoo Dvlpmt,39
2911.TW,103458,Les Enphants,39
3698.TW,103587,Lextar,39
4426.TW,103605,Li Cheng,39
1447.TW,103055,Li Peng Ent,39
1231.TW,103001,Lian Hwa,39
2431.TW,103309,Lien Chang Elt,39
1229.TW,103000,Lien Hwa Ind,39
1469.TW,103070,Lilontex,39
1443.TW,103051,Lily Textile,39
2369.TW,103267,Lingsen,39
2731.TW,103415,Liontravel,39
5305.TW,103645,Lite-On Semi,39
2301.TW,103223,Lite-On Tech,39
3593.TW,103570,Logah,39
2514.TW,103366,Long Bon,39
1909.TW,103175,Long Chen Pape,39
5519.TW,103652,Long Da,39
3025.TW,103483,Loop Telecom,39
3533.TW,103555,Lotes,39
2115.TW,103214,Lu Hai,39
1108.TW,102985,Lucky Cement,39
6192.TW,103695,Lumax,39
2424.TW,103303,Lung Hwa Eltrs,39
2337.TW,103243,Macronix,39
2358.TW,103258,Mag Tech,39
1477.TW,103078,Makalot,39
1732.TW,103151,Mao Bao,39
6196.TW,103696,Marketech,39
2856.TW,103436,Masterlink Sec,39
3315.TW,103533,Maxtek Tech,39
2020.TW,103187,Mayer Steel,39
1731.TW,103150,Maywufa,39
1783.TW,103159,Mbi,39
2454.TW,103325,Mediatek,39
2886.TW,103444,Mega Fhc,39
2477.TW,103343,Meiloon Ind,39
2905.TW,103454,Mercuries Asst,39
2427.TW,103306,Mercuries Data,39
2867.TW,103437,Mercuries Life,39
9914.TW,103778,Merida Industr,39
2439.TW,103314,Merry Eltrs,39
3706.TW,103592,Mhc,39
2314.TW,103231,Microelectroni,39
2305.TW,103226,Microtek Intl,39
3060.TW,103514,Min Aik,39
2464.TW,103334,Mirle Auto,39
1533.TW,103099,Mobiletron,39
2342.TW,103246,Mosel,39
2434.TW,103311,Mospec,39
2377.TW,103273,Msi,39
3004.TW,103466,Nafco,39
9942.TW,103799,Nak Sealing Te,39
1702.TW,103127,Namchow Chem I,39
2101.TW,103204,Nan Kang Tire,39
6504.TW,103730,Nan Liu,39
8046.TW,103739,Nan Ya Pcb Cor,39
1303.TW,103009,Nan Ya Plastic,39
1410.TW,103033,Nan Yang Dyein,39
2108.TW,103211,Nantex Industr,39
9937.TW,103794,National Petr,39
3576.TW,103564,Neo Solar Powe,39
2516.TW,103368,New Asia Const,39
8940.TW,103766,New Palace,39
3090.TW,103517,Nichidenbo,39
1451.TW,103056,Nien Hsing Tex,39
3679.TW,103583,Nishoku,39
3034.TW,103492,Novatek Microe,39
4919.TW,103619,Nuvoton,39
1321.TW,103022,Ocean Plastics,39
1213.TW,102991,Oceanic Bevera,39
6405.TW,103725,Onano,39
2340.TW,103245,Opto Tech,39
2329.TW,103239,Orient Semicon,39
1710.TW,103132,Oriental Union,39
3545.TW,103558,Orise Tech,39
2506.TW,103363,Pacific Constr,39
8404.TW,103760,Paiho Shih,39
2328.TW,103238,Pan Intl Ind,39
2481.TW,103346,Pan Jit,39
2904.TW,103453,Pan Overseas,39
1906.TW,103173,Pao Lung,39
6226.TW,103708,Para,39
3518.TW,103552,Paragon Tech,39
4916.TW,103618,Pec,39
4938.TW,103623,Pegatron,39
2642.TW,103404,Pelican,39
2457.TW,103328,Phihong,39
5706.TW,103662,Phoenix Tours,39
4108.TW,103595,Phytohealth,39
1729.TW,103148,Pihsiang,39
6141.TW,103679,Plotech,39
8114.TW,103748,Posiflex,39
9904.TW,103770,Pou Chen,39
3296.TW,103528,Powertech,39
6239.TW,103711,Powertech Tech,39
3016.TW,103475,Precision,39
2912.TW,103459,President Chai,39
2855.TW,103435,President Sec,39
4915.TW,103617,Primax,39
6152.TW,103682,Prime Eltrs,39
2511.TW,103365,Prince Housing,39
6189.TW,103693,Promate,39
3057.TW,103511,Promise Technology Inc,39
6224.TW,103707,Pttc,39
2352.TW,103252,Qisda,39
4722.TW,103609,Qualipoly,39
2382.TW,103276,Quanta,39
2017.TW,103186,Quintain Steel,39
6176.TW,103689,Radiant,39
2547.TW,103384,Radium Life Te,39
2437.TW,103313,Ralec Eltr,39
2379.TW,103274,Realtek,39
4532.TW,103607,Rechi,39
2302.TW,103224,Rectron,39
1423.TW,103040,Reward Wool In,39
1515.TW,103086,Rexon Indu,39
1506.TW,103081,Right Way Ind,39
2349.TW,103250,Ritek,39
4414.TW,103604,Roo Hsing,39
4141.TW,103599,Rotam,39
1540.TW,103105,Roundtop,39
9945.TW,103802,Ruentex,39
2597.TW,103386,Ruentex E&C,39
2915.TW,103461,Ruentex Ind,39
1808.TW,103165,Run Long,39
2539.TW,103379,Sakura Develop,39
1604.TW,103113,Sampo Corp,39
3579.TW,103565,San Chih,39
1307.TW,103012,San Fang Chem,39
4755.TW,103614,San Fu,39
5007.TW,103634,San Shing,39
9946.TW,103803,Sanfar,39
1817.TW,103168,Sanita,39
2206.TW,103217,Sanyang Indust,39
1614.TW,103120,Sanyo Elec,39
4119.TW,103596,Sci Pharmtech,39
3583.TW,103566,Scientech,39
1789.TW,103161,Scinopharm,39
1720.TW,103140,Scpc,39
2351.TW,103251,Sdi Corp,39
2450.TW,103322,Senao,39
5388.TW,103646,Sercomm,39
1708.TW,103130,Sesoda,39
2616.TW,103400,Shan-Loong Tra,39
2029.TW,103194,Sheng Yu Steel,39
3305.TW,103529,Shenmao,39
5608.TW,103661,Shih Wei,39
1503.TW,103079,Shihlin Electr,39
1903.TW,103170,Shihlin Paper,39
9926.TW,103785,Shin Hai Gas,39
2888.TW,103446,Shin Kong Fhc,39
2901.TW,103451,Shin Shin Co L,39
9918.TW,103780,Shin Shin Nat,39
1235.TW,103005,Shin Tai Ind,39
3376.TW,103536,Shin Zu Shing,39
9944.TW,103801,Shinih,39
5531.TW,103656,Shining Bldg,39
2850.TW,103432,Shinkong Ins,39
1409.TW,103032,Shinkong Syn F,39
1419.TW,103039,Shinkong Texti,39
1773.TW,103158,Shiny Chemical,39
6283.TW,103721,Shun On,39
2405.TW,103291,Shuttle,39
6257.TW,103714,Sigurd,39
6415.TW,103729,Silergy,39
2325.TW,103236,Siliconware,39
3311.TW,103531,Silitech Tech,39
3023.TW,103481,Sinbon Elec,39
2605.TW,103389,Sincere,39
4999.TW,103633,Sinher,39
2032.TW,103197,Sinkang Inds,39
2923.TW,103462,Sino Horizon,39
1712.TW,103134,Sinon,39
2890.TW,103448,Sinopac Fhc,39
1734.TW,103153,Sinphar,39
3536.TW,103557,Sintronic Tech,39
9940.TW,103797,Sinyi,39
2363.TW,103262,Sis,39
8016.TW,103735,Sitronix,39
2484.TW,103349,Siward Crystal,39
3561.TW,103562,Solartech Ener,39
1471.TW,103072,Solytech,39
5471.TW,103649,Sonix Tech,39
1110.TW,102987,Southeast Ceme,39
2440.TW,103315,Space Shuttle,39
3055.TW,103509,Spirox,39
1227.TW,102999,Standard Foods,39
4930.TW,103620,Star Comgistic,39
2480.TW,103345,Stark,39
1475.TW,103076,Sumagh High-Te,39
1721.TW,103141,Sunko Ink,39
2421.TW,103301,Sunonwealth,39
2401.TW,103288,Sunplus Tech,39
1526.TW,103093,Sunrace,39
2387.TW,103280,Sunrex,39
2062.TW,103203,Sunspring Meta,39
9955.TW,103804,Super Dragon,39
8112.TW,103747,Supreme Elec,39
1786.TW,103160,Svbi,39
4733.TW,103611,Swancor,39
5525.TW,103655,Sweeten Const,39
1582.TW,103108,Syncmold,39
2347.TW,103249,Synnex,39
6112.TW,103669,Sysage Tech,39
2453.TW,103324,Syscom Compute,39
6214.TW,103704,Systex,39
2027.TW,103192,Ta Chen,39
1453.TW,103058,Ta Jiang,39
1609.TW,103116,Ta Ya Wire&Cab,39
1521.TW,103089,Ta Yih Ind,39
2478.TW,103344,Ta-I Tech,39
1315.TW,103019,Tah Hsin Indus,39
1441.TW,103049,Tah Tong Texti,39
1220.TW,102997,Tai Roun Produ,39
8011.TW,103734,Tai Tung,39
3432.TW,103541,Tai Twun,39
1613.TW,103119,Tai-I,39
2812.TW,103418,Taichung Comm,39
8039.TW,103738,Taiflex,39
3645.TW,103578,Taimide,39
5906.TW,103665,Tainan Cayman,39
1473.TW,103074,Tainan Enter,39
1440.TW,103048,Tainan Spinnin,39
4934.TW,103621,Tainergy Tech,39
2887.TW,103445,Taishin Fhc,39
3338.TW,103534,Taisol,39
1218.TW,102995,Taisun,39
1309.TW,103014,Taita Chemical,39
9939.TW,103796,Taiwan Hon Chu,39
2841.TW,103428,Taiwan Land,39
2462.TW,103333,Taiwan Line Te,39
2338.TW,103244,Taiwan Mask,39
3045.TW,103501,Taiwan Mobile,39
2617.TW,103401,Taiwan Nav,39
9938.TW,103795,Taiwan Paiho,39
8213.TW,103754,Taiwan Pcb Tec,39
9911.TW,103776,Taiwan Sakura,39
9917.TW,103779,Taiwan Secom,39
2330.TW,103240,Taiwan Semicon,39
6278.TW,103718,Taiwan Surface,39
2913.TW,103460,Taiwan Tea Cor,39
3167.TW,103522,Taliang,39
1432.TW,103041,Taroko Texl,39
2371.TW,103268,Tatung Co Ltd,39
5880.TW,103664,Tcfhc,39
2375.TW,103271,Teapo,39
1504.TW,103080,Teco Electric,39
1233.TW,103003,Ten Ren Tea,39
3030.TW,103488,Test Research,39
2908.TW,103456,Test Rite Int'l,39
1467.TW,103068,Tex-Ray,39
2832.TW,103422,Tfm Insurance,39
6271.TW,103716,Theil,39
2428.TW,103307,Thinking Eltr,39
8033.TW,103737,Thunder Tiger,39
9927.TW,103786,Thye Ming Indu,39
9902.TW,103769,Tidehold Devl,39
1724.TW,103144,Tnc Indu,39
9907.TW,103773,Ton Yi Ind,39
5538.TW,103659,Tong Ming,39
1319.TW,103021,Tong Yang,39
1418.TW,103038,Tong-Hwa Synth,39
4526.TW,103606,Tong-Tai Mach,39
2910.TW,103457,Tonlin Dept,39
2929.TW,103463,Topbi,39
5434.TW,103647,Topco Scient,39
4536.TW,103608,Topkey,39
8021.TW,103736,Topoint Tech,39
4725.TW,103610,Tpcc,39
3673.TW,103582,Tpk Holding,39
6183.TW,103691,Trade-Van Info,39
6702.TW,103733,Transasia,39
2451.TW,103323,Transcend Info,39
1472.TW,103073,Tri Ocean Text,39
3044.TW,103500,Tripod Tech,39
2430.TW,103308,Tsann Kuen Ent,39
2611.TW,103395,Tsi,39
2103.TW,103206,Tsrc,39
1232.TW,103002,Ttet Union,39
1414.TW,103035,Tung Ho,39
2006.TW,103177,Tung Ho Steel,39
3018.TW,103477,Tung Kai Tech,39
9925.TW,103784,Tw Shin Kong S,39
2364.TW,103263,Twinhead Intl,39
2834.TW,103424,Twn Biz Bank,39
1101.TW,102981,Twn Cement,39
8926.TW,103765,Twn Cogenerati,39
1722.TW,103142,Twn Fertilizer,39
1802.TW,103162,Twn Glass Ind,39
1902.TW,103169,Twn Pulp & Pap,39
1310.TW,103015,Twn Styrene Mo,39
1454.TW,103059,Twn Taffeta Fa,39
3042.TW,103499,Txc,39
1522.TW,103090,Tyc Brother In,39
2022.TW,103188,Tycoons,39
2426.TW,103305,Tyntek,39
2606.TW,103390,U-Ming Marine,39
3050.TW,103506,U-Tech,39
2413.TW,103295,Umec,39
1216.TW,102993,Uni-President,39
2482.TW,103347,Uniform,39
3037.TW,103495,Unimicron Tech,39
2838.TW,103427,Union Bk,39
2816.TW,103419,Union Insuranc,39
2414.TW,103296,Unitech Computer Co Ltd,39
2367.TW,103265,Unitech Printed Circuit Board,39
2404.TW,103290,United Integ S,39
2303.TW,103225,United Micro,39
2499.TW,103359,Unity Opto,39
1104.TW,102984,Universal Ceme,39
1445.TW,103053,Universal Txet,39
3704.TW,103590,Unizyx Holding,39
1325.TW,103025,Unvl,39
1313.TW,103017,Upc Tech,39
1304.TW,103010,Usi,39
1203.TW,102989,Ve Wong Corp,39
2388.TW,103281,Via Tech,39
1340.TW,103030,Victory,39
2455.TW,103326,Visual Photoni,39
3454.TW,103544,Vivotek,39
6409.TW,103726,Voltronic,39
6235.TW,103710,Waffer Tech,39
3010.TW,103470,Wah Lee Indu,39
1605.TW,103114,Walsin Lihwa,39
2492.TW,103354,Walsin Tech,39
8110.TW,103746,Walton,39
2425.TW,103304,Walton Chainte,39
2615.TW,103399,Wan Hai Lines,39
2701.TW,103405,Wan Hwa Ent Co,39
2889.TW,103447,Waterland Fin,39
2537.TW,103377,We &Win,39
2028.TW,103193,Wei Chih Steel,39
1201.TW,102988,Wei-Chuan Food,39
3033.TW,103491,Weikeng Indu,39
3501.TW,103548,Well Shin,39
2436.TW,103312,Weltrend Semic,39
3419.TW,103540,Wha Yu,39
2344.TW,103247,Winbond,39
2637.TW,103403,Wisdom,39
1465.TW,103066,Wisher Ind,39
3231.TW,103526,Wistron Corp,39
6285.TW,103722,Wistron Neweb,39
2727.TW,103414,Wowprime,39
3702.TW,103588,Wpg Holdings,39
3036.TW,103494,Wt Microelectr,39
2316.TW,103232,Wus Printed Ci,39
4994.TW,103632,X-Legend,39
1339.TW,103029,Y.C.C,39
6201.TW,103698,Ya Horng,39
2327.TW,103237,Yageo Corp,39
2609.TW,103393,Yang Ming Mari,39
4306.TW,103603,Yem Chio,39
2034.TW,103199,Yeun Chyang,39
1589.TW,103110,Ygg,39
1457.TW,103061,Yi Jinn Indu,39
2007.TW,103178,Yieh Hsing Ent,39
2023.TW,103189,Yieh Phui,39
6131.TW,103675,Yoko Tech,39
1323.TW,103023,Yon Yu Plastic,39
3622.TW,103576,Young Fast,39
3504.TW,103549,Young Optics,39
1438.TW,103046,Yu Foung Intl,39
1725.TW,103145,Yuan Jen,39
2885.TW,103443,Yuanta Fhc,39
1907.TW,103174,Yuen Foong Yu,39
2201.TW,103215,Yulon Motor,39
2227.TW,103220,Yulon Nissan,39
1726.TW,103146,Yung Chi,39
3705.TW,103591,Yungshin Globa,39
1507.TW,103082,Yungtay,39
3028.TW,103486,Zenitron,39
3029.TW,103487,Zero One Tech,39
4958.TW,103627,Zhen Ding,39
1455.TW,103060,Zig Sheng Ind,39
2485.TW,103350,Zinwell,39
2420.TW,103300,Zippy Tech,39
3056.TW,103510,Zong Tai,39

#KSE PAKISTAN STOCK EXCHANGE
ABBT.KSE,104072,Abbott Laboratories Pakistan Ltd,55
ADIN.KSE,104073,Adamjee Insurance Company Ltd,55
ABL.KSE,104080,Allied Bank Ltd,55
ARM.KSE,950549,Allied Rental Modaraba,55
ARIF.KSE,104085,Arif Habib Corporation Ltd,55
ASBK.KSE,104088,Askari Bank Ltd,55
ASSC.KSE,103989,Associated Services Ltd,55
APL.KSE,104093,Attock Petroleum Ltd,55
ATOR.KSE,104094,Attock Refinery Ltd,55
BKEQ.KSE,104101,Bank Al-Habib Ltd,55
BAFL.KSE,104099,Bank Alfalah Ltd,55
BOPU.KSE,104104,Bank of Punjab,55
BANU.KSE,104007,Bannu Woollen Mills Ltd,55
BATA.KSE,104105,Bata Pakistan Ltd,55
BEST.KSE,103967,Bestway Cement Ltd,55
CHRC.KSE,104118,Cherat Cement Company Ltd,55
CHPR.KSE,104121,Cherat Packaging Ltd,55
COLG.KSE,104009,Colgate-Palmolive Pakistan Ltd,55
CRST.KSE,104128,Crescent Steel & Allied Products Ltd,55
DGKH.KSE,104130,D G Khan Cement Company Ltd,55
DAWH.KSE,104135,Dawood Hercules Corporation Ltd,55
DOLM.KSE,955781,Dolmen City REIT,55
EFUI.KSE,104148,EFU General Insurance Ltd,55
EGCH.KSE,104150,Engro Corporation Ltd,55
ENGR.KSE,950553,Engro Fertilizers Ltd,55
ENFL.KSE,940997,Engro Foods Ltd,55
FATF.KSE,104152,Fatima Fertilizer Company Ltd,55
FAUC.KSE,104158,Fauji Cement Company Ltd,55
JORD.KSE,104156,Fauji Fertilizer Bin Qasim Ltd,55
FAUF.KSE,104160,Fauji Fertilizer Company Ltd,55
FYBL.KSE,104159,Faysal Bank Ltd,55
FERZ.KSE,950554,Feroze1888 Mills Ltd,55
FERO.KSE,104163,Ferozsons Laboratories Ltd,55
GHGL.KSE,104169,Ghani Glass Ltd,55
GLAX.KSE,104172,GlaxoSmithKline Pakistan Ltd,55
HBL.KSE,104183,Habib Bank Ltd,55
HMB.KSE,104185,Habib Metropolitan Bank Ltd,55
HASC.KSE,958370,Hascol Petroleum Ltd,55
PAKISTAN.KSE,104192,Honda Atlas Cars,55
HPWR.KSE,104193,Hub Power Company Ltd,55
HUMN.KSE,104195,Hum Network Ltd,55
IBFL.KSE,104196,Ibrahim Fibres Ltd,55
ICI.KSE,104197,ICI Pakistan Ltd,55
IGI.KSE,104202,IGI Insurance Ltd,55
INDY.KSE,104043,Indus Dyeing & Manufacturing Co Ltd,55
INDM.KSE,104200,Indus Motor Company Ltd,55
INTE.KSE,940998,International Steels Ltd,55
JSCO.KSE,104209,Jahangir Siddiqui & Company Ltd,55
JDWS.KSE,940991,JDW Sugar Mills Ltd,55
JGIC.KSE,103991,Jubilee General Insurance Company Ltd,55
JLIC.KSE,104215,Jubilee Life Insurance Company Ltd,55
KELE.KSE,104212,K-Electric Ltd,55
KOHC.KSE,104225,Kohat Cement Company Ltd,55
KOHT.KSE,104229,Kohinoor Textile Mills Ltd,55
KAPCO.KSE,104222,KOT Addu Power Company Ltd,55
LUKC.KSE,104232,Lucky Cement Ltd,55
MPLF.KSE,104234,Maple Leaf Cement Factory Ltd,55
MGAS.KSE,104231,Mari Petroleum Company Ltd,55
MCB.KSE,104238,MCB Bank Ltd,55
AMZN.KSE,104240,Meezan Bank Ltd,55
MILM.KSE,104245,Millat Tractors Ltd,55
MUBR.KSE,104251,Murree Brewery Company Ltd,55
NBPK.KSE,104254,National Bank of Pakistan,55
NATF.KSE,104255,National Foods Ltd,55
NATR.KSE,104256,National Refinery Ltd,55
MLKP.KSE,104046,Nestle Pakistan Ltd,55
NCHU.KSE,104262,Nishat Chunian Ltd,55
NCPL.KSE,104261,Nishat Chunian Power Ltd,55
NISM.KSE,104263,Nishat Mills Ltd,55
NISH.KSE,104264,Nishat Power Ltd,55
OGDC.KSE,104266,Oil and Gas Development Co Ltd,55
ORIL.KSE,955785,ORIX Leasing Pakistan Ltd,55
PACK.KSE,104276,Packages Ltd,55
PKEL.KSE,104273,Pak Elektron Ltd,55
PKSU.KSE,104284,Pak Suzuki Motor Co Ltd,55
PICT.KSE,104277,Pakistan International Container Terminal Ltd,55
PIBT.KSE,955787,Pakistan International Bulk Terminal Private Ltd,55
PKOL.KSE,104279,Pakistan Oilfields Ltd,55
PPL.KSE,104281,Pakistan Petroleum Ltd,55
PKSV.KSE,104048,Pakistan Services Ltd,55
PSO.KSE,104278,Pakistan State Oil Company Ltd,55
PTCA.KSE,104272,Pakistan Telecommunication Company Ltd,55
PAKT.KSE,104286,Pakistan Tobacco Company Ltd,55
PHIM.KSE,104290,Philip Morris Ltd,55
PGFD.KSE,104291,PICIC Growth Fund,55
PION.KSE,104293,Pioneer Cement Ltd,55
PJBO.KSE,940996,Punjab Oil Mills Ltd,55
RAMZ.KSE,104298,Rafhan Maize Products Co Ltd,55
SAIP.KSE,943697,Saif Power Ltd,55
SVCI.KSE,104313,Service Industries Ltd,55
SHEL.KSE,104320,Shell Pakistan Ltd,55
SIHL.KSE,104322,Shifa International Hospitals Ltd,55
SONA.KSE,104328,Soneri Bank Ltd,55
SCBP.KSE,104329,Standard Chartered Bank Pakistan Ltd,55
SUIN.KSE,104335,Sui Northern Gas Pipelines Ltd,55
SUIS.KSE,104336,Sui Southern Gas Co Ltd,55
THAL.KSE,104338,Thal Ltd,55
SEAR.KSE,104312,The Searle Company Ltd,55
TRGP.KSE,104342,TRG Pakistan Ltd,55
UBL.KSE,104349,United Bank Ltd,55

#T TOKYO
1301.T,949823,Kyokuyo,41
1305.T,953198,Daiwa ETF TOPIX Listed,41
1306.T,953341,Nomura TOPIX Listed,41
1308.T,953335,Nikko TOPIX Listed,41
1309.T,953339,Nomura SSE50,41
1311.T,953340,Nomura TOPIX Core30 Listed,41
1312.T,953346,Russell/Nomura Small Cap Core,41
1313.T,953349,Samsung KODEX KOSPI 200 Securities,41
1319.T,953338,Nomura Nikkei 300 Listed,41
1320.T,953195,Daiwa ETF Nikkei 225 Listed,41
1321.T,953337,Nomura Nikkei 225 Listed,41
1322.T,953249,Listed Index Fund China A Share CSI300,41
1323.T,953285,NEXT FUNDS FTSE/JSE Africa Top 40 Linked,41
1324.T,953297,NEXT FUNDS Russia RTS Linked,41
1325.T,953286,NEXT FUNDS Ibovespa Linked,41
1326.T,953363,SPDR  Gold Shares,41
1327.T,953347,S&P GSCI Energy&Metals THEAM Easy UCITS C,41
1328.T,953336,Nomura Gold Price Linked,41
1329.T,953240,iShares Nikkei 225,41
1330.T,953334,Nikko Nikkei 225 Listed,41
1332.T,44109,Nippon Suisan Kaisha,41
1333.T,102046,Maruha Nichiro Corp,41
1343.T,953295,NEXT FUNDS REIT,41
1344.T,953275,MAXIS TOPIX Core 30,41
1345.T,953260,Listed Index Fund J-REIT,41
1346.T,953272,MAXIS Nikkei 225,41
1348.T,953274,MAXIS TOPIX,41
1349.T,953187,ABF Pan Asia Bond Index,41
1352.T,949824,Hohsui Corp,41
1356.T,953359,Simplex TOPIX Bear -2x,41
1357.T,953289,NEXT FUNDS Nikkei 225 Double Inverse,41
1358.T,953333,Nikko Listed Index Fund Nikkei Leveraged,41
1360.T,953354,Simplex Nikkei 225 Bear -2x,41
1364.T,953236,iShares JPX-Nikkei 400,41
1365.T,953191,Daiwa ETF Japan Nikkei 225 Leveraged,41
1366.T,953190,Daiwa ETF Japan Nikkei 225 Double Inverse,41
1367.T,953193,Daiwa ETF Japan TOPIX Leveraged (2x),41
1368.T,953192,Daiwa ETF Japan TOPIX Double Inverse (-2x),41
1369.T,956403,DIAM Nikkei 225,41
1375.T,1166024,Yukiguni Maitake Co Ltd,41
1376.T,991309,Kaneko Seeds Co Ltd,41
1377.T,949825,Sakata Seed Corp,41
1379.T,946079,Hokuto Corp,41
1380.T,991310,Akikawa Foods & Farms Co Ltd,41
1381.T,991311,Axyz Co Ltd,41
1382.T,991312,Hob Co Ltd,41
1383.T,991313,Berg Earth Co Ltd,41
1384.T,976095,Hokuryo Co Ltd,41
1385.T,956405,UBS EURO STOXX 50 UCITS,41
1386.T,956414,UBS MSCI Europe UCITS,41
1387.T,956406,UBS MSCI EMU UCITS,41
1388.T,956407,UBS MSCI EMU Small Cap UCITS,41
1389.T,956415,UBS FTSE 100 UCITS,41
1390.T,956408,UBS MSCI Pacific ex Japan UCITS,41
1391.T,956412,UBS MSCI Switzerland 20/35 UCITS,41
1392.T,956409,UBS MSCI United Kingdom UCITS,41
1393.T,956410,UBS MSCI USA UCITS,41
1394.T,956411,UBS MSCI World UCITS,41
1397.T,956417,SMAM NIKKEI225,41
1398.T,956416,SMAM REIT,41
1399.T,962252,Nikko MSCI Japan Equity High Dividend Low Volatility,41
1400.T,991314,Ruden Holdings Co Ltd,41
1401.T,1011942,Mbs Inc,41
1407.T,991315,West Holdings Corp,41
1413.T,998060,Hinokiya Holdings Co Ltd,41
1414.T,949826,Sho Bond Holdings,41
1417.T,949827,Mirait Holdings Corp,41
1418.T,991317,Interlife Holdings Co Ltd,41
1419.T,949828,Tama Home,41
1420.T,949829,Sanyo Homes Corp,41
1429.T,1011943,Nippon Aqua Co Ltd,41
1430.T,1011944,First-Corporation Inc,41
1431.T,1152845,Lib Work Co Ltd,41
1433.T,1011945,Besterra Co Ltd,41
1434.T,991318,Jesco Holdings Inc,41
1435.T,1011946,Investors Cloud Co Ltd,41
1436.T,969029,Fit Inc,41
1439.T,996157,Yasue Corp,41
1443.T,1062246,Giken Holdings Co Ltd,41
1446.T,1080122,Candeal Co Ltd,41
1447.T,1096304,ITbook Holdings Co Ltd,41
1448.T,949878,Space Value Holdings Co Ltd,41
1450.T,1097873,Tanaken,41
1451.T,1123309,KHC,41
1456.T,956418,Daiwa Japan Nikkei225 Inverse,41
1457.T,956419,Daiwa Japan TOPIX Inverse,41
1458.T,962257,Rakuten-Nikkei 225 Leveraged,41
1459.T,962256,Rakuten-Nikkei 225 Double Inverse,41
1464.T,962243,Daiwa Japan JPX-Nikkei 400 Leveraged,41
1465.T,962242,Daiwa Japan JPX-Nikkei 400 Inverse,41
1466.T,962241,Daiwa Japan JPX-Nikkei 400 Double Inverse,41
1467.T,962260,JPX-Nikkei 400 Bull 2x Leveraged ETF,41
1468.T,962259,Simplex JPX-Nikkei 400 Bear Inverse,41
1469.T,962258,Simplex JPX-Nikkei 400 Bear Double Inverse,41
1470.T,962255,Nomura NF JPX-Nikkei 400 Leveraged,41
1471.T,962254,Nomura NF JPX-Nikkei 400 Inverse,41
1472.T,962253,Nomura NF JPX-Nikkei 400 Double Inverse,41
1473.T,962247,DIAM TOPIX,41
1474.T,962246,DIAM JPX Nikkei 400,41
1475.T,962240,BRJ iShares TOPIX,41
1476.T,962237,BRJ iShares Japan REIT,41
1477.T,962239,BRJ iShares MSCI Japan Minimum Volatility,41
1478.T,962238,BRJ iShares MSCI Japan High Dividend,41
1482.T,1156039,iShares Core US Treasury Bond 7-10 Year JPY Hedged ETF,41
1486.T,1155920,Listed Index Fund US Bond (No Currency Hedge),41
1488.T,1159442,Daiwa ETF Tokyo Stock Exchange REIT Index,41
1489.T,997943,NEXT FUNDS Nikkei 225 High Dividend Yield Stock 50,41
1490.T,1011889,Listed Fund MSCI Japan Equity High Dividend Low Volatility Beta Hedged,41
1491.T,991319,Chugai Mining Co Ltd,41
1492.T,1013277,MAXIS JPX-Nikkei Mid and Small Cap,41
1495.T,1155919,Listed Index Fund Asian REIT,41
1496.T,1045783,iShares USD Investment Grade Corporate Bond JPY Hedged ETF,41
1497.T,1045792,iShares USD High Yield Corporate Bond JPY Hedged ETF,41
1498.T,1056169,AM-One ESG,41
1499.T,1057093,MAXIS Japan Equity High Dividend 70 Market Neutral,41
1514.T,949830,Sumiseki Holdings Inc,41
1515.T,949831,Nittetsu Mining,41
1518.T,946080,Mitsui Matsushima Co Ltd,41
1540.T,953277,Mitsubishi Japan Physical Gold,41
1541.T,953279,Mitsubishi Japan Physical Platinum,41
1542.T,953280,Mitsubishi Japan Physical Silver,41
1543.T,953278,Mitsubishi Japan Physical Palladium,41
1545.T,953288,NEXT FUNDS NASDAQ 100,41
1546.T,953283,NEXT FUNDS Dow Jones Industrial Average,41
1547.T,953267,Listed Index Fund US Equity (S&P500),41
1550.T,953269,MAXIS Global Equity (MSCI Kokusai),41
1551.T,953246,JASDAQ-Top20,41
1552.T,953248,KOKUSAI S&P500 VIX Short-Term Futures,41
1554.T,953268,Listed Index Fund World Equity (MSCI ACWI) ex Japan,41
1555.T,962251,Nikko Australia REIT,41
1557.T,953364,SPDR S&P 500,41
1559.T,953298,NEXT FUNDS Thai Stock SET50,41
1560.T,953284,NEXT FUNDS FTSE Bursa Malaysia KLCI,41
1563.T,953361,Simplex TSE Mothers Core,41
1566.T,953252,Listed Index Fund Emerging Bond (Barclays Local EM),41
1567.T,953276,MAXIS TOPIX Risk Control (5%),41
1568.T,953360,Simplex TOPIX Bull 2x,41
1569.T,953358,Simplex TOPIX Bear -1x,41
1570.T,953291,NEXT FUNDS Nikkei 225 Leveraged,41
1571.T,953290,NEXT FUNDS Nikkei 225 Inverse,41
1572.T,953352,Simplex China Bull 2x H-share,41
1573.T,953351,Simplex China Bear -1x H-share,41
1575.T,953188,ChinaAMC CSI 300,41
1576.T,953189,CSOP FTSE China A50,41
1577.T,953294,NEXT FUNDS Nomura Japan Equity High Dividend 70,41
1578.T,953261,Listed Index Fund Nikkei 225 (Mini),41
1579.T,953355,Simplex Nikkei 225 Bull 2x,41
1580.T,953353,Simplex Nikkei 225 Bear -1x,41
1584.T,953350,Samsung KODEX Samsung Group,41
1585.T,953197,Daiwa ETF TOPIX Ex-Financials,41
1586.T,953263,Listed Index Fund TOPIX Ex-Financials,41
1591.T,953287,NEXT FUNDS JPX-Nikkei 400,41
1592.T,953259,Listed Index Fund JPX-Nikkei 400,41
1593.T,953270,MAXIS JPX-Nikkei 400,41
1595.T,953344,NZAM ETF J-REIT,41
1596.T,953345,NZAM ETF TOPIX Ex-Financials,41
1597.T,953271,MAXIS J-REIT,41
1598.T,953296,NEXT FUNDS Russell/Nomura Fundamental,41
1599.T,953194,Daiwa ETF JPX-Nikkei 400,41
1605.T,44119,Inpex Corp.,41
1615.T,953342,Nomura TSE Bank Listed,41
1617.T,953307,NEXT FUNDS TOPIX-17 Foods,41
1618.T,953305,NEXT FUNDS TOPIX-17 Energy Resources,41
1619.T,953302,NEXT FUNDS TOPIX-17 Construction & Materials,41
1620.T,953311,NEXT FUNDS TOPIX-17 Raw Materials & Chemicals,41
1621.T,953310,NEXT FUNDS TOPIX-17 Pharmaceutical,41
1622.T,953299,NEXT FUNDS TOPIX-17 Automobiles & Transportation Equipment,41
1623.T,953314,NEXT FUNDS TOPIX-17 Steel & NonFerrous,41
1624.T,953309,NEXT FUNDS TOPIX-17 Machinery,41
1625.T,953303,NEXT FUNDS TOPIX-17 Electric Applicances & Precision Instruments,41
1626.T,953308,NEXT FUNDS TOPIX-17 IT & Services,41
1627.T,953304,NEXT FUNDS TOPIX-17 Electric Power & Gas,41
1628.T,953315,NEXT FUNDS TOPIX-17 Transportation & Logistics,41
1629.T,953301,NEXT FUNDS TOPIX-17 Commercial & Wholesale Trade,41
1630.T,953313,NEXT FUNDS TOPIX-17 Retail Trade,41
1631.T,953300,NEXT FUNDS TOPIX-17 Banks,41
1632.T,953306,NEXT FUNDS TOPIX-17 Financials Ex Banks,41
1633.T,953312,NEXT FUNDS TOPIX-17 Real Estate,41
1651.T,1052294,Daiwa TOPIX High Dividend Yield 40,41
1652.T,1052295,Daiwa MSCI Japan Empowering Women,41
1653.T,1052296,Daiwa MSCI Japan ESG Select Leaders,41
1654.T,1052297,Daiwa FTSE Blossom Japan,41
1655.T,1052298,iShares S&P 500,41
1656.T,1052299,iShares Core 7-10 US Treasury Bond,41
1657.T,1052300,iShares Core MSCI Kokusai,41
1658.T,1052301,iShares Core MSCI Emerging Markets IMI,41
1659.T,1052302,iShares US REIT,41
1660.T,1052392,MUKAM MAXIS High Yield J-REIT,41
1662.T,946081,JP Petroleum Exploration Ltd,41
1663.T,949833,K&O Energy Group Inc,41
1670.T,953273,MAXIS S&P Mitsubishi Group,41
1671.T,953362,Simplex WTI,41
1673.T,953223,WisdomTree Physical Silver,41
1674.T,962249,WisdomTree Physical Platinum,41
1677.T,953254,Listed Index Fund International Bond (Citi WGBI) Monthly Dividend Payment,41
1678.T,953282,NEXT FUNDS CNX Nifty Linked,41
1679.T,953357,Simplex NY Dow Jones,41
1680.T,953255,Listed Index Fund International Developed Countries Equity (MSCI Kokusai),41
1681.T,953256,Listed Index Fund International Emerging Countries Equity (MSCI Emerging),41
1682.T,953292,NEXT FUNDS Nikkei-TOCOM Platinum Linked,41
1684.T,953217,WisdomTree Broad Commodities,41
1687.T,953216,WisdomTree Agriculture,41
1688.T,953221,WisdomTree Grains,41
1689.T,953222,WisdomTree Natural Gas,41
1690.T,953225,WisdomTree WTI Crude Oil,41
1691.T,953220,WisdomTree Gasoline,41
1693.T,953218,WisdomTree Copper,41
1694.T,962248,WisdomTree Nickel,41
1695.T,953224,WisdomTree Wheat,41
1696.T,953219,WisdomTree Corn,41
1698.T,953258,Listed Index Fund Japan High Dividend (TSE Dividend Focus 100),41
1699.T,953293,NEXT FUNDS NOMURA Crude Oil Long Index Linked Exchange Traded Fund,41
1711.T,991320,Shodensya Co Ltd,41
1712.T,949834,Daiseki Eco. Solution,41
1716.T,991321,Dai-Ichi Cutter Kogyo KK,41
1717.T,991322,Meiho Facility Works Ltd,41
1718.T,991323,Mikikogyo Co Ltd,41
1719.T,949835,Hazama Ando Corp,41
1720.T,949836,Tokyu Construction,41
1721.T,44124,Comsys Holdings Corp.,41
1723.T,991324,Nihon Dengi Co Ltd,41
1724.T,991325,Synclayer Inc,41
1726.T,976096,Br. Holdings Corp,41
1728.T,991326,Misawa Homes Chugoku Co Ltd,41
1730.T,991327,Aso Foam Crete Co Ltd,41
1736.T,991328,Otec Corp,41
1737.T,991329,MESCO Inc,41
1739.T,991330,SeedHeiwa Co Ltd,41
1743.T,991331,Koatsu Kogyo Co Ltd,41
1757.T,991332,Crea Holdings Inc,41
1758.T,991333,Taiyo Kisokogyo Co Ltd,41
1762.T,949838,Takamatsu Construction Group,41
1764.T,991334,Kudo Corp,41
1766.T,949839,Token Corp,41
1768.T,976097,Sonec Corp,41
1770.T,991335,Fujita Engineering Co Ltd,41
1773.T,1122731,YTL Corporation Bhd,41
1775.T,991336,Fuji Furukawa Engineering & Construction Co Ltd,41
1776.T,991337,Sumiken Mitsui Road Co Ltd,41
1780.T,949840,Yamaura Corp,41
1782.T,991338,Joban Kaihatsu Co Ltd,41
1783.T,991339,Asia Gate Holdings Co Ltd,41
1787.T,991340,Nakabohtec Corrosion Protecting Co Ltd,41
1788.T,991341,Santo Co Ltd,41
1789.T,991342,Yamaka Electric Construction Co Ltd,41
1793.T,991343,Ohmoto Gumi Co Ltd,41
1795.T,991344,Masaru Corp,41
1798.T,991345,Moriya Corp,41
1799.T,991346,Daiichi Kensetsu Corp,41
1801.T,44129,Taisei Corp.,41
1802.T,44134,Obayashi Corp.,41
1803.T,44139,Shimizu Corp.,41
1805.T,949841,Tobishima Corp,41
1807.T,991347,Watanabe Sato Co Ltd,41
1808.T,969277,Haseko Corp,41
1810.T,949842,Matsui Construction,41
1811.T,949843,Zenitaka Corp,41
1812.T,44144,Kajima Corp.,41
1813.T,946082,Fudo Tetra Corp,41
1814.T,949844,Daisue Construction,41
1815.T,949845,Tekken Corp,41
1820.T,946083,Nishimatsu Const Co Ltd,41
1821.T,949847,Sumitomo Mitsui Construction,41
1822.T,949848,Daiho Corp,41
1824.T,949849,Maeda Corp,41
1826.T,949850,Sata Construction,41
1827.T,949851,Nakano Corp,41
1828.T,991348,Tanabe Engineering Corp,41
1833.T,949852,Okumura Corp,41
1835.T,949854,Totetsu Kogyo,41
1840.T,991349,Tsuchiya Holdings Co Ltd,41
1841.T,991350,Sanyu Construction Co Ltd,41
1844.T,991351,Ohmori Co Ltd,41
1847.T,949855,Ichiken,41
1848.T,991353,Fuji PS Corp,41
1850.T,991354,Nankai Tatsumura Construction Co Ltd,41
1852.T,949856,Asanuma Corp,41
1853.T,991355,Mori-Gumi Co Ltd,41
1860.T,946084,Toda Corp,41
1861.T,949857,Kumagai Gumi,41
1866.T,949859,Kitano Construction Corp,41
1867.T,949860,Ueki Corp,41
1870.T,949862,Yahagi Construction,41
1871.T,949863,P.S. Mitsubishi Construction,41
1873.T,949864,Higashi Nihon House,41
1878.T,946085,Daito Trust Construction,41
1879.T,949865,Shinnihon Corp,41
1881.T,946086,Nippo Corp,41
1882.T,949866,Toa Road Corp,41
1883.T,949867,Maeda Road Construction,41
1884.T,949868,Nippon Road,41
1885.T,949869,Toa Corp,41
1887.T,1121162,JDC Corporation,41
1888.T,949870,Wakachiku Construction,41
1890.T,949871,Toyo Construction,41
1893.T,946087,Penta-Ocean Const Co Ltd,41
1897.T,991356,Kaneshita Construction Co Ltd,41
1898.T,949873,Seikitokyu Kogyo,41
1899.T,949874,Fukuda Corp,41
1904.T,991357,Taisei Oncho Co Ltd,41
1905.T,991358,Tenox Corp,41
1909.T,949875,Nippon Dry Chemical,41
1911.T,949876,Sumitomo Forestry,41
1914.T,949877,Japan Foundation Engineering,41
1921.T,949880,Tomoe Corp,41
1925.T,44149,Daiwa House Industry Co.,41
1926.T,949882,Raito Kogyo,41
1928.T,44154,Sekisui House,41
1929.T,949883,Nittoc Construction,41
1930.T,949884,Hokuriku Electrical Construct,41
1934.T,949885,Yurtec Corp,41
1938.T,991363,Nippon Rietec Co Ltd,41
1939.T,949887,Yondenko Corp,41
1941.T,949888,Chudenko Corp,41
1942.T,946088,Kandenko Co Ltd,41
1944.T,946089,Kinden Corp,41
1945.T,949889,Tokyo Energy Systems Inc,41
1946.T,949890,Toenec Corp,41
1948.T,991364,Kodensha Co Ltd,41
1949.T,949891,Sumitomo Densetsu,41
1950.T,949892,Nippon Densetsu Kogyo,41
1951.T,946090,Kyowa Exeo Corp,41
1952.T,949893,Shin Nippon Air Technologies,41
1954.T,949894,Nippon Koei,41
1959.T,949896,Kyudenko Corp,41
1960.T,991365,Sanyo Engineering & Construction Inc,41
1961.T,949897,Sanki Engineering,41
1963.T,44159,JGC Corp.,41
1964.T,951753,Chugai Ro Co Ltd,41
1965.T,991366,Techno Ryowa Ltd,41
1966.T,991367,Takada Corp,41
1967.T,951754,Yamato Corp,41
1968.T,951755,Taihei Dengyo Kaisha Ltd,41
1969.T,951756,Takasago Thermal Engineering Co Ltd,41
1971.T,991368,Chuo Build Industry Co Ltd,41
1972.T,951757,Sanko Metal Industrial Co Ltd,41
1973.T,951758,NEC Networks & System Integration Corp,41
1975.T,951759,Asahi Kogyosha Co Ltd,41
1976.T,951760,Meisei Industrial Co Ltd,41
1979.T,951761,Taikisha Ltd,41
1980.T,951762,Dai-Dan Co Ltd,41
1981.T,991369,Kyowanissei Co Ltd,41
1982.T,951763,Hibiya Engineering Ltd,41
1992.T,991373,Kanda Tsushinki Co Ltd,41
1994.T,991374,Takahashi Curtain Wall Corp,41
1997.T,991375,Akatsuki Eazima Co Ltd,41
2001.T,951764,Nippon Flour Mills Co Ltd,41
2002.T,44164,Nisshin Seifun Group Inc.,41
2003.T,951765,Nitto Fuji Flour Milling Co Ltd,41
2004.T,951766,Showa Sangyo Co Ltd,41
2009.T,951767,Torigoe Co Ltd,41
2031.T,953319,NEXT NOTES HSI Leveraged,41
2032.T,953320,NEXT NOTES HSI Short,41
2033.T,953321,NEXT NOTES KOSPI 200 Leverage,41
2034.T,953318,NEXT NOTES F-KOSPI 200 Inverse,41
2035.T,953324,Next Notes Nikkei 225 VI Futures,41
2036.T,953328,NEXT NOTES Nikkei-TOCOM Leveraged Gold,41
2037.T,953326,NEXT NOTES Nikkei-TOCOM Inverse Gold,41
2038.T,953327,NEXT NOTES Nikkei-TOCOM Leveraged Crude Oil,41
2039.T,953325,NEXT NOTES Nikkei-TOCOM Inverse Crude Oil,41
2040.T,953316,NEXT NOTES DJIA Price Return JPY Monthly Hedged Leveraged 2x,41
2041.T,953317,NEXT NOTES DJIA Total Return JPY Monthly Hedged Inverse 1x,41
2042.T,953332,NEXT NOTES Tokyo Stock Exchange Mothers,41
2043.T,953331,NEXT NOTES Stoxx Asean Five Select Dividend 50 Net Return,41
2044.T,953329,NEXT NOTES S&P 500 Dividend Aristocrats Net Total Return,41
2045.T,953330,NEXT NOTES S&P Singapore REIT Net Total Return,41
2046.T,953322,NEXT NOTES Nifty Price Return 2x Leverage,41
2047.T,953323,NEXT NOTES Nifty Total Return Daily Inverse,41
2048.T,956404,NEXT NOTES Nomura Japan Equity High Dividend ,41
2050.T,1141835,NEXT NOTES Niche Top Mid Small Cap Japan Equity,41
2053.T,951768,Chubushiryo Co Ltd,41
2055.T,991377,Nichiwa Sangyo Co Ltd,41
2060.T,951769,Feed One Holdings Co Ltd,41
2067.T,1011913,NEXT NOTES AI Companies 70 Net Total Return,41
2068.T,1011890,NEXT NOTES Japan Equity High Beta Select 30 Net Total Return,41
2069.T,1011891,NEXT NOTES Japan Equity Low Beta Select 50 Net Total Return,41
2107.T,951770,Toyo Sugar Refining Co Ltd,41
2108.T,951771,Nippon Beet Sugar Manufacturing Co Ltd,41
2109.T,951772,Mitsui Sugar Co Ltd,41
2112.T,951773,Ensuiko Sugar Refining Co Ltd,41
2114.T,991378,Fuji Nihon Seito Corp,41
2117.T,976098,Nissin Sugar Co Ltd,41
2120.T,951774,Next Co Ltd,41
2121.T,991379,Mixi Inc,41
2122.T,1096256,Interspace Co Ltd,41
2124.T,976099,Jac Recruitment Co Ltd,41
2127.T,951775,Nihon M&A Center Inc,41
2130.T,976479,Members Co Ltd,41
2134.T,991380,Sun Capital Management Corp,41
2136.T,991381,HIP Corp,41
2138.T,991382,Crooz Inc,41
2139.T,976100,Chuco Co Ltd,41
2146.T,991385,UT Group Co Ltd,41
2148.T,1096257,ITmedia Inc,41
2150.T,1096258,CareNet Inc,41
2151.T,951777,Takeei Corp,41
2152.T,991386,Youji Corp,41
2153.T,991387,E J Holdings Inc,41
2154.T,951778,Trust Tech Inc,41
2156.T,991388,Saylor Advertising Inc,41
2157.T,991389,Koshidaka Holdings Co Ltd,41
2158.T,1031399,FRONTEO Inc,41
2159.T,1096259,Full Speed Inc,41
2160.T,1052084,GNI Group Ltd,41
2162.T,991390,Nippon Manufacturing Service Corp,41
2163.T,991391,Artner Co Ltd,41
2164.T,991392,Chiikishinbunsha Co Ltd,41
2168.T,951779,Pasona Group Inc,41
2169.T,951780,CDS Co Ltd,41
2170.T,951781,Link and Motivation Inc,41
2173.T,991393,Hakuten Corp,41
2174.T,951782,GCA Savvian Corp,41
2175.T,951783,SMS Co Ltd,41
2176.T,991394,Ina Research Inc,41
2178.T,1096260,Tri-Stage Inc,41
2179.T,991395,Seigakusya Co Ltd,41
2180.T,991396,Sunny Side Up Inc,41
2181.T,949899,Temp Holdings,41
2183.T,951784,Linical Co Ltd,41
2185.T,991397,CMC Corp,41
2186.T,991398,Sobal Corp,41
2191.T,991399,Tella Inc,41
2193.T,951785,Cookpad Inc,41
2195.T,991400,Amita Holdings Co Ltd,41
2196.T,951786,Escrit Inc,41
2198.T,951787,IKK Inc,41
2201.T,951788,Morinaga & Co Ltd,41
2204.T,951789,Nakamuraya Co Ltd,41
2206.T,951790,Ezaki Glico Co Ltd,41
2207.T,951791,Meito Sangyo Co Ltd,41
2208.T,991401,Bourbon Corp,41
2209.T,991402,Imuraya Group Co Ltd,41
2211.T,951792,Fujiya Co Ltd,41
2212.T,946092,Yamazaki Baking Co Ltd,41
2215.T,951793,First Baking Co Ltd,41
2216.T,991403,Kanro Co Ltd,41
2217.T,951794,Morozoff Ltd,41
2220.T,951795,Kameda Seika Co Ltd,41
2221.T,991404,Iwatsuka Confectionery Co Ltd,41
2222.T,951796,Kotobuki Spirits Co Ltd,41
2224.T,991405,Como Co Ltd,41
2226.T,991406,Koikeya Inc,41
2229.T,949900,Calbee Inc,41
2264.T,951797,Morinaga Milk Industry Co Ltd,41
2266.T,951798,Rokko Butter Co Ltd,41
2267.T,946093,Yakult Honsha Co Ltd,41
2268.T,991408,B-R 31 Ice Cream Co Ltd,41
2269.T,44169,Meiji Holdings Co.,41
2270.T,951799,Megmilk Snow Brand Co Ltd,41
2281.T,951800,Prima Meat Packers Ltd,41
2282.T,44174,Nippon Meat Packers,41
2286.T,951802,Hayashikane Sangyo Co Ltd,41
2288.T,951803,Marudai Food Co Ltd,41
2291.T,991409,Fukutome Meat Packers Ltd,41
2292.T,951805,S Foods Inc,41
2293.T,991410,Takizawa Ham Co Ltd,41
2294.T,991411,Kakiyasu Honten Co Ltd,41
2296.T,976101,Itoham Yonekyu Holdings Inc,41
2300.T,991412,Kyokuto Co Ltd,41
2301.T,951806,Gakujo Co Ltd,41
2303.T,991413,Dawn Corp,41
2304.T,991414,CSS Holdings Ltd,41
2305.T,951807,Studio Alice Co Ltd,41
2307.T,991415,Cross Cat Co Ltd,41
2309.T,951808,CMIC Holdings Co Ltd,41
2311.T,991416,EPCO Co Ltd,41
2315.T,991417,SJI Inc,41
2317.T,951809,Systena Corp,41
2321.T,991418,Softfront Holdings,41
2323.T,991419,Fonfun Corp,41
2325.T,951810,NJS Co Ltd,41
2326.T,951811,Digital Arts Inc,41
2327.T,946094,Ns Solutions Corp,41
2329.T,991420,Tohokushinsha Film Corp,41
2330.T,991421,Forside Co Ltd,41
2331.T,951812,Sohgo Security Services Co Ltd,41
2332.T,991422,Quest Co Ltd,41
2334.T,1056467,eole Inc,41
2335.T,951813,Cube System Inc,41
2336.T,1161317,Fuji Techno Solutions Co Inc,41
2337.T,976102,Ichigo Inc,41
2338.T,991423,Fasteps Co Ltd,41
2340.T,991424,Gokurakuyu Co Ltd,41
2341.T,991425,Arbeit-Times Co Ltd,41
2342.T,1096261,Trans Genic Inc,41
2344.T,991426,Heian Ceremony Service Co Ltd,41
2345.T,991427,iStudy Co Ltd,41
2349.T,991428,Nippon Information Development Co Ltd,41
2351.T,1096262,ASJ Inc,41
2352.T,991429,Azia Co Ltd,41
2353.T,951814,Nippon Parking Development Co Ltd,41
2354.T,991430,Yaskawa Information Systems Corp,41
2359.T,951815,Core Corp,41
2362.T,991431,Yumeshin Holdings Co Ltd,41
2370.T,1096263,Medinet Co Ltd,41
2371.T,946095,KakakuCom Inc,41
2372.T,951816,I rom Holdings Co Ltd,41
2373.T,991432,Care Twentyone Corp,41
2374.T,991433,Saint-Care Holding Corp,41
2375.T,991434,Threepro Group Inc,41
2376.T,991435,SCiNEX Corp,41
2378.T,951817,Renaissance Inc,41
2379.T,951818,Dip Corp,41
2384.T,951819,SBS Holdings Inc,41
2385.T,1096264,Soiken Holdings Inc,41
2388.T,991436,Wedge Holdings Co Ltd,41
2389.T,951820,Opt Holding Inc,41
2391.T,991437,Planet Inc,41
2393.T,991438,Nippon Care Supply Co Ltd,41
2395.T,951821,Shin Nippon Biomedical Laboratories Ltd,41
2397.T,991439,DNA Chip Research Inc,41
2398.T,951822,Tsukui Corp,41
2402.T,1096265,Amana inc,41
2404.T,991441,Tetsujin Inc,41
2406.T,991443,Arte Salon Holdings Inc,41
2408.T,991444,KG Intelligence Co Ltd,41
2410.T,951824,Career Design Center Co Ltd,41
2411.T,991445,Gendai Agency Inc,41
2412.T,991446,Benefit One Inc,41
2413.T,946096,M3 Inc,41
2415.T,991447,Human Holdings Co Ltd,41
2418.T,951825,Tsukada Global Holdings Inc,41
2424.T,969030,Brass Corp,41
2425.T,991449,Care Service Co Ltd,41
2427.T,951826,Outsourcing Inc,41
2428.T,951827,Wellnet Corp,41
2429.T,991450,World Holdings Co Ltd,41
2432.T,102045,DeNA Co Ltd,41
2433.T,949901,Hakuhodo DY Holdings Inc,41
2435.T,991451,Cedar Co Ltd,41
2436.T,991452,Kyodo Public Relations Co Ltd,41
2437.T,991453,Shinwa Art Auction Co Ltd,41
2438.T,1096266,Asukanet Co Ltd,41
2440.T,951828,Gurunavi Inc,41
2445.T,951829,SRG Takamiya Co Ltd,41
2449.T,991454,PRAP Japan Inc,41
2453.T,951831,Japan Best Rescue System Co Ltd,41
2454.T,991455,All About Inc,41
2459.T,991457,Aun Consulting Inc,41
2461.T,951832,F@N Communications Inc,41
2462.T,951833,Like Co Ltd,41
2464.T,1096267,Business Breakthrough Inc,41
2468.T,991458,FueTrek Co Ltd,41
2469.T,991459,Hibino Corp,41
2471.T,991460,S-Pool Inc,41
2475.T,951835,WDB Holdings Co Ltd,41
2477.T,1096268,Temairazu Inc,41
2479.T,991461,JTec Corp,41
2480.T,991462,System Location Co Ltd,41
2481.T,991463,Townnews-Sha Co Ltd,41
2483.T,991464,Honyaku Center Inc,41
2484.T,991465,Yume No Machi Souzou Iinkai Co Ltd,41
2485.T,951836,Tear Corp,41
2487.T,991466,CDG Co Ltd,41
2488.T,991467,Japan Third Party Co Ltd,41
2489.T,1036816,Adways Inc,41
2491.T,951837,ValueCommerce Co Ltd,41
2492.T,976103,Infomart Corp,41
2493.T,991468,E-Supportlink Ltd,41
2497.T,1096269,United Inc,41
2498.T,991469,ACKG Ltd,41
2499.T,991470,Nihonwasou Holdings Inc,41
2501.T,44179,Sapporo Holdings Ltd.,41
2502.T,44184,Asahi Group Holdings,41
2503.T,44189,Kirin Holdings Co.,41
2510.T,1057110,NEXT FUNDS Japan Bond NOMURA-BPI,41
2511.T,1057100,NEXT FUNDS International Bond Citi World Government Bd Idx ex Jpn UnHdg,41
2512.T,1057103,NEXT FUNDS International Bond Citi World Government Bd Idx ex Jpn Hdg,41
2513.T,1057108,NEXT FUNDS International Equity MSCI-KOKUSAI Unhedged,41
2514.T,1057106,NEXT FUNDS International Equity MSCI-KOKUSAI Yen-Hedged,41
2515.T,1057104,NEXT FUNDS International REIT S&P Developed REIT Index ex Japan UnHdg,41
2516.T,1062629,TSE Mothers,41
2517.T,1075242,Mukam Maxis J-REIT Core,41
2518.T,1080059,NEXT FUNDS MSCI Japan Empowering Women Select,41
2519.T,1089277,NEXT FUNDS Emerging Market Bond J.P. Morgan EMBI Plus Unhedged,41
2520.T,1089276,NEXT FUNDS Emerging Market Equity MSCI-EM Unhedged,41
2521.T,1090664,Listed Index Fund US Equity (S&P500) Currency Hedge,41
2522.T,1112800,iShares Automation & Robot ETF,41
2523.T,1120038,MAXIS TOPIX Ex-Financials ETF,41
2524.T,1122465,NZAM ETF TOPIX,41
2525.T,1122462,NZAM ETF Nikkei 225,41
2526.T,1122463,NZAM ETF JPX-Nikkei400,41
2527.T,1122464,NZAM ETF J-REIT Core Index,41
2528.T,1122481,Daiwa Tokyo Stock Exchange REIT Core Index,41
2529.T,1130986,NEXT FUNDS Nomura Shareholder Yield 70 Exchange Traded Fund,41
2530.T,1141307,MAXIS HuaAn China Equity (SSE 180 index) ETF,41
2531.T,44194,Takara Holdings Inc.,41
2533.T,951838,Oenon Holdings Inc,41
2540.T,951839,Yomeishu Seizo Co Ltd,41
2552.T,1137468,Listed Index Fund J-REIT (Tokyo Stock Exchange REIT Index) Bi-Monthly Mini,41
2553.T,1141308,One ETF Southern China A-Share CSI 500,41
2554.T,1141332,NEXT FUNDS Bloomberg Barclays US Intermediate Corporate Index (JPY Hdg) ETF,41
2555.T,1142250,TSE REIT ETF,41
2556.T,1152289,AM-One One ETF Tokyo Stock Exchange REIT,41
2558.T,1156583,MAXIS S&P500 US Equity ETF,41
2559.T,1159443,MAXIS World Equity (MSCI ACWI) ETF,41
2568.T,1167234,Listed Index Fund US Equity (NASDAQ100) No Currency Hedge,41
2569.T,1167254,Listed Index Fund US Equity (NASDAQ100) Currency Hedge,41
2573.T,991472,Hokkaido Coca Cola Bottling Co Ltd,41
2579.T,946097,Coca-Cola West Co Ltd,41
2586.T,1011947,Fruta Fruta Inc,41
2587.T,951840,Suntory Beverage & Food Ltd,41
2588.T,991473,Premium Water Holdings Inc,41
2590.T,951841,Dydo Drinco Inc,41
2593.T,946099,Ito En Ltd,41
25935.T,991474,Ito En Ltd Pref,41
2594.T,951842,Key Coffee Inc,41
2597.T,951843,Unicafe Inc,41
2599.T,951844,Japan Foods Co Ltd,41
2602.T,951845,Nisshin OilliO Group Ltd,41
2607.T,946100,Fuji Oil Co Ltd,41
2612.T,951846,Kadoya Sesame Mills Inc,41
2613.T,951847,J-Oil Mills Inc,41
2651.T,946101,Lawson Inc,41
2652.T,991477,Mandarake Inc,41
2653.T,991478,Aeon Kyushu Co Ltd,41
2654.T,991479,Asmo Corp,41
2656.T,991481,Vector,41
2659.T,951848,San-A Co Ltd,41
2664.T,951850,Cawachi Ltd,41
2666.T,991482,Autowave Co Ltd,41
2667.T,991483,ImageOne Co Ltd,41
2668.T,991484,Tabio Corp,41
2669.T,991485,Kanemi Co Ltd,41
2670.T,946102,ABC-Mart Inc,41
2673.T,991486,Yumemitsuketai Co Ltd,41
2674.T,951851,Hard Off Corporation Co Ltd,41
2675.T,991487,Dynac Corp,41
2676.T,951852,Takachiho Koheki Co Ltd,41
2678.T,951853,Askul Corp,41
2681.T,946103,Geo Holdings Corp,41
2683.T,991488,Uoki Co Ltd,41
2685.T,951854,Adastria Holdings Co Ltd,41
2686.T,961680,GFoot Co Ltd,41
2687.T,951855,CVS Bay Area Inc,41
2689.T,991489,Kawanishi Holdings Inc,41
2692.T,951856,Itochu-Shokuhin Co Ltd,41
2693.T,991490,YKT Corp,41
2694.T,991491,G.taste Co Ltd,41
2695.T,951857,Kura Corp,41
2698.T,951858,Can Do Co Ltd,41
2700.T,991492,Kitoku Shinryo Co Ltd,41
2702.T,991493,McDonald s Holdings Company Japan Ltd,41
2705.T,991495,Ootoya Holdings Co Ltd,41
2706.T,991496,Broccoli Co Ltd,41
2708.T,991497,Kuze Co Ltd,41
2714.T,991498,Pla Matels Corp,41
2715.T,951859,Elematec Corp,41
2721.T,991500,J-Holdings Corp,41
2722.T,991501,I K Co Ltd,41
2726.T,949902,Pal,41
2729.T,951860,Jalux Inc,41
2730.T,946104,Edion Corp,41
2733.T,951861,Arata Corp,41
2734.T,951862,Sala Corp,41
2735.T,951863,Watts Co Ltd,41
2736.T,991502,Sadamatsu Co Ltd,41
2737.T,951864,Tomen Devices Corp,41
2742.T,976104,Halows Co Ltd,41
2743.T,991503,Pixel Companyz Inc,41
2747.T,991504,Hokuyu Lucky Co Ltd,41
2749.T,951865,JP-Holdings Inc,41
2750.T,991505,S.Ishimitsu & Co Ltd,41
2751.T,991506,Tenpos Busters Co Ltd,41
2752.T,991507,Fujio Food System Co Ltd,41
2753.T,951866,Amiyaki Tei Co Ltd,41
2754.T,991508,Tokatsu Holdings Co Ltd,41
2760.T,951867,Tokyo Electron Device Ltd,41
2761.T,991509,Toshin Group Co Ltd,41
2762.T,991510,Sanko Marketing Foods Co Ltd,41
2763.T,991511,FTGroup Co Ltd,41
2764.T,951868,Hiramatsu Inc,41
2767.T,951869,Fields Corp,41
2768.T,44199,Sojitz Corp.,41
2769.T,991512,Village Vanguard Co Ltd,41
2773.T,991513,Mutual Corp,41
2776.T,991514,Crymson Co Ltd,41
2777.T,991515,Cassina Ixc. Ltd,41
2778.T,991516,Palemo Co Ltd,41
2780.T,991517,Komehyo Co Ltd,41
2782.T,991518,Seria Co Ltd,41
2784.T,946105,Alfresa Holdings Corp,41
2788.T,991519,Apple International Co Ltd,41
2789.T,991520,Karula Co Ltd,41
2790.T,991521,Nafco Co Ltd,41
2791.T,951872,Daikokutenbussan Co Ltd,41
2792.T,951873,Honeys Co Ltd,41
2795.T,991522,Nippon Primex Inc,41
2796.T,951874,Pharmarise Holdings Corp,41
2798.T,991523,Y s Table Corp,41
2801.T,44204,Kikkoman Corp.,41
2802.T,44209,Ajinomoto Co.,41
2804.T,991524,Bull-Dog Sauce Co Ltd,41
2805.T,991525,S&B Foods Inc,41
2806.T,991526,Yutaka Foods Corp,41
2809.T,946106,Kewpie Corp,41
2810.T,946107,House Foods Group Inc,41
2811.T,946108,Kagome Co Ltd,41
2812.T,951875,Yaizu Suisankagaku Industry Co Ltd,41
2813.T,991527,Wakou Shokuhin Co Ltd,41
2814.T,991528,Sato Foods Industries Co Ltd,41
2815.T,951876,Ariake Japan Co Ltd,41
2816.T,991529,Daisho Co Ltd,41
2818.T,976105,Pietro Co Ltd,41
2819.T,951877,Ebara Foods Industry Inc,41
2820.T,985816,Yamami Co,41
2830.T,991530,Aohata Corp,41
2831.T,991531,Hagoromo Foods Corp,41
2871.T,44214,Nichirei Corp.,41
2872.T,991532,Seihyo Co Ltd,41
2874.T,951878,Yokohama Reito Co Ltd,41
2875.T,946109,Toyo Suisan Kaisha Ltd,41
2876.T,991533,JC Comsa Corp,41
2877.T,991534,NittoBest Corp,41
2882.T,951879,Eat& Co Ltd,41
2883.T,991535,Dairei Co Ltd,41
2884.T,969031,Yoshimura Food Holdings KK,41
2892.T,991536,Nihon Shokuhin Kako Co Ltd,41
2894.T,991537,Ishii Food Co Ltd,41
2897.T,946110,Nissin Foods Holdings Co Ltd,41
2899.T,951880,Nagatanien Co Ltd,41
2901.T,991538,Ishigaki Foods Co Ltd,41
2903.T,991539,Shinobu Foods Products Co Ltd,41
2904.T,951881,Ichimasa Kamaboko Co Ltd,41
2905.T,991540,OK Food Industry Co Ltd,41
2907.T,991541,Ahjikan Co Ltd,41
2908.T,951882,Fujicco Co Ltd,41
2910.T,951883,Rock Field Co Ltd,41
2911.T,991542,Asahimatsu Foods Co Ltd,41
2914.T,44219,Japan Tobacco Inc,41
2915.T,951884,Kenko Mayonnaise Co Ltd,41
2916.T,991543,Semba Tohka Industries Co Ltd,41
2917.T,991544,Ohmoriya Co Ltd,41
2918.T,951885,Warabeya Nichiyo Co Ltd,41
2922.T,951886,Natori Co Ltd,41
2923.T,991545,Sato Foods Co Ltd,41
2924.T,991546,Ifuji Sangyo Co Ltd,41
2925.T,991547,Pickles Corp,41
2926.T,991548,Shinozakiya Inc,41
2927.T,991549,AFC-HD AMS Life Science Co Ltd,41
2929.T,1096270,Pharma Foods International Co Ltd,41
2930.T,976106,Kitanotatsujin Corp,41
2931.T,951887,Euglena Co Ltd,41
2932.T,1166251,Sti Foods Holdings Inc,41
2970.T,1097840,Good Life Company Inc,41
2971.T,1122732,Escon Japan Reit Investment Corp,41
2972.T,1152808,Sankei Real Estate Inc,41
2975.T,991605,Star Mica Holdings Co Ltd,41
2978.T,1141271,Tsukuruba Inc,41
2979.T,1161316,SOSiLA Logistics REIT Inc,41
2980.T,1155542,Sre Holdings Corporation,41
2981.T,1155541,Landix Inc,41
2982.T,976116,AD Works Corp,41
2986.T,992432,LA Holdings Co Ltd,41
2987.T,1166448,Tasuki Corp,41
3001.T,951888,Katakura Industries Co Ltd,41
3002.T,951889,Gunze Ltd,41
3003.T,946111,Hulic Co Ltd,41
3004.T,951890,Shinyei Kaisha,41
3010.T,991550,Kachikaihatsu Co Ltd,41
3011.T,991551,Banners Co Ltd,41
3020.T,991552,Applied Co Ltd,41
3021.T,991553,Pacific Net Co Ltd,41
3023.T,951892,Rasa Corp,41
3024.T,991554,Create Corp,41
3028.T,951893,Alpen Co Ltd,41
3030.T,991555,Hub Co Ltd,41
3031.T,976107,Raccoon Co Ltd,41
3034.T,951894,Qol Co Ltd,41
3035.T,991556,Ktk Inc,41
3036.T,951895,Alconix Corp,41
3038.T,951896,Kobe Bussan Co Ltd,41
3040.T,991557,Soliton Systems KK,41
3041.T,992980,Beauty Kadan Co Ltd,41
3042.T,991558,SecuAvail Inc,41
3045.T,991559,Kawasaki & Co Ltd,41
3046.T,951897,JIN Co Ltd,41
3048.T,951898,BIC Camera Inc,41
3050.T,946112,DCM Holdings Co Ltd,41
3053.T,1056301,Pepper Food Service Co Ltd,41
3054.T,991560,Hyper Inc,41
3058.T,991561,Sanyodo Holdings Inc,41
3059.T,991562,Hiraki Co Ltd,41
3063.T,1096271,j-Group Holdings Corp,41
3064.T,949903,MonotaRO,41
3065.T,991563,Life Foods Co Ltd,41
3067.T,976108,Tokyo Ichiban Foods Co Ltd,41
3068.T,991564,WDI Corp,41
3069.T,991565,Asrapport Dining Co Ltd,41
3070.T,991566,Amagasa Co Ltd,41
3071.T,1096272,Stream Co Ltd,41
3073.T,976109,Diamond Dining Co Ltd,41
3075.T,991567,Choushimaru Co Ltd,41
3076.T,951899,Ai Holdings Corp,41
3077.T,991568,Horiifoodservice Co Ltd,41
3079.T,951900,DVx Inc,41
3080.T,991569,Jason Co Ltd,41
3082.T,951901,Kichiri & Co Ltd,41
3083.T,991570,C sMEN Co Ltd,41
3085.T,951902,Arcland Service Co Ltd,41
3086.T,44224,J.Front Retailing Co.,41
3087.T,951903,Doutor Nichires Holdings Co Ltd,41
3088.T,949904,MatsumotoKiyoshi Holdings Co,41
3089.T,991571,Techno Alpha Co Ltd,41
3091.T,951904,Bronco Billy Co Ltd,41
3092.T,946113,Start Today Co Ltd,41
3093.T,951905,Treasure Factory Co Ltd,41
3094.T,991572,Super Value Co Ltd,41
3096.T,991573,Ocean System Corp,41
3097.T,951906,Monogatari Corp,41
3098.T,951907,Cocokara Fine Inc,41
3099.T,44229,Isetan Mitsukoshi Holdings Ltd.,41
3101.T,44234,Toyobo Co.,41
3103.T,44239,Unitika,41
3104.T,951908,Fujibo Holdings Inc,41
3105.T,44244,Nisshinbo Holdings Inc.,41
3106.T,951909,Kurabo Industries Ltd,41
3107.T,946114,Daiwabo Holdings Co Ltd,41
3109.T,951910,Shikibo Ltd,41
3110.T,44249,Nitto Boseki Co.,41
3111.T,991574,Omikenshi Co Ltd,41
3113.T,991575,Oak Capital Corp,41
3116.T,946115,Toyota Boshoku Corp,41
3121.T,991576,MBK Co Ltd,41
3123.T,991577,Saibo Co Ltd,41
3125.T,991578,Shinnaigai Textile Ltd,41
3131.T,991579,Shinden Hightex Corp,41
3132.T,951911,Macnica Fuji Electronics Holdings Inc,41
3133.T,1011948,Kaihan Co Ltd,41
3134.T,991580,Hamee Corp,41
3135.T,1011949,Marketenterprise Co Ltd,41
3137.T,1011950,Fundely Co Ltd,41
3138.T,1011951,Fujisan Magazine Service Co Ltd,41
3139.T,991581,Lacto Japan Co Ltd,41
3140.T,991582,Idea International Co Ltd,41
3141.T,949905,Welcia Holdings,41
3143.T,991583,O  will Corp,41
3148.T,951912,Create SD Holdings Co Ltd,41
3150.T,991584,Gremz Inc,41
3151.T,951913,Vital Ksk Holdings Inc,41
3153.T,951914,Yashima Denki Co Ltd,41
3154.T,991585,Medius Holdings Co Ltd,41
3156.T,951915,UKC Holdings Corp,41
3157.T,991586,Jutec Holdings Corp,41
3159.T,951916,Maruzen CHI Holdings Co Ltd,41
3160.T,991587,Oomitsu Co Ltd,41
3161.T,991588,Azearth Corp,41
3166.T,951917,Ochi Holdings Co Ltd,41
3167.T,951918,Tokai Holdings Corp,41
3168.T,991590,Kurotani Corp,41
3169.T,951919,Misawa & Co Ltd,41
3172.T,991592,Tea Life Co Ltd,41
3173.T,991593,Osaka Kohki Co Ltd,41
3174.T,991594,Happiness and D Co Ltd,41
3175.T,951920,AP Company Co Ltd,41
3176.T,951921,Sanyo Trading Co Ltd,41
3177.T,991595,Arigatou Services Co Ltd,41
3178.T,951922,Chimney Co Ltd,41
3179.T,976110,Syuppin Co Ltd,41
3180.T,991596,Beauty Garage Inc,41
3181.T,991597,Kaitori Okoku Co Ltd,41
3182.T,1011952,Oisix Inc,41
3183.T,951923,Win-Partners Co Ltd,41
3184.T,991598,International Conglomerate of Distribution for Automobile Holdings Co Ltd,41
3185.T,1011953,Dream Vision Co Ltd,41
3186.T,951924,Nextage Co Ltd,41
3187.T,1011954,Sanwa Company Ltd,41
3189.T,44459,ANAP,41
3190.T,991599,Hotman Co Ltd,41
3191.T,951925,Joyful Honda Co Ltd,41
3192.T,991600,Shirohato Co Ltd,41
3193.T,976111,Torikizoku Co Ltd,41
3194.T,951926,Kirindo Holdings Co Ltd,41
3195.T,1011955,Generation Pass Co Ltd,41
3196.T,976112,HotLand Co Ltd,41
3197.T,951927,Skylark Co Ltd,41
3198.T,991601,SFP Dining Co Ltd,41
3199.T,976113,Watahan & Co Ltd,41
3201.T,951928,Japan Wool Textile Co Ltd,41
3202.T,951929,Daito Woolen Spinning & Weaving Co Ltd,41
3204.T,951930,Toabo Corp,41
3205.T,951931,Daidoh Ltd,41
3221.T,991603,Yossix Co Ltd,41
3222.T,951932,United Super Markets Holdings Inc,41
3223.T,991604,SLD Entertainment Inc,41
3224.T,1011956,Humanweb Inc,41
3226.T,1096273,Nippon Accommodations Fund Inc,41
3227.T,1096274,MCUBS MidCity Investment Corp,41
3228.T,951934,Sanei Architecture Planning Co Ltd,41
3231.T,946116,Nomura Real Estate Holding Inc,41
3232.T,951935,Mie Kotsu Group Holdings Inc,41
3234.T,1096275,Mori Hills Reit Investment Corp,41
3236.T,991606,Properst Co Ltd,41
3237.T,1096276,Intrance Co Ltd,41
3238.T,991607,Central General Development Co Ltd,41
3241.T,991608,Will Co Ltd,41
3242.T,991609,Urbanet Corporation Co Ltd,41
3244.T,976114,Samty Co Ltd,41
3245.T,976115,Dear Life Co Ltd,41
3246.T,991610,Kose RE Co Ltd,41
3248.T,1096277,Early Age Co Ltd,41
3249.T,1056302,Industrial & Infrastructure Fund Investment Corp,41
3252.T,951936,Nippon Commercial Development Co Ltd,41
3254.T,951937,Pressance Corp,41
3261.T,1011957,Grandes Inc,41
3264.T,991611,Ascot Corp,41
3266.T,991612,Fund Creation Group Co Ltd,41
3267.T,993286,Phil Company Inc,41
3269.T,1056303,Advance Residence Investment Corp,41
3271.T,991613,Global Ltd,41
3275.T,991614,Housecom Corp,41
3276.T,951939,Japan Property Management Center Co Ltd,41
3277.T,951940,Sansei Landic Co Ltd,41
3278.T,1056304,Kenedix Residential Investment Corp,41
3279.T,1056305,Activia Properties Inc,41
3280.T,951941,STrust Co Ltd,41
3281.T,1056306,GLP J-REIT,41
3282.T,1056307,Comforia Residential Reit Inc,41
3283.T,1056308,Nippon Prologis REIT Inc,41
3284.T,951942,Hoosiers Holdings,41
3286.T,1011958,Trust Holdings Inc,41
3287.T,1096278,Hoshino Resorts REIT Inc,41
3288.T,951943,Open House Co Ltd,41
3289.T,44457,Tokyu Fudosan,41
3290.T,1096279,One REIT Inc,41
3291.T,946117,Iida Group Holdings Co Ltd,41
3292.T,1056309,Aeon Reit Investment Corp,41
3293.T,991615,Azuma House Co Ltd,41
3294.T,991616,e grand Co Ltd,41
3295.T,1056310,Hulic Reit Inc,41
3296.T,1096280,Nippon REIT Investment Corp,41
3297.T,991617,Toubujyuhan Co Ltd,41
3298.T,1056311,Invesco Office J-Reit Inc,41
3299.T,976117,Mugen Estate Co Ltd,41
3300.T,1011959,Ambition Corporation,41
3302.T,951944,Teikoku Sen-I Co Ltd,41
3306.T,991618,Nihon Seima Co Ltd,41
3309.T,1056312,Sekisui House Reit Inc,41
3315.T,946118,Nippon Coke & Engineering Ltd,41
3316.T,991619,Tokyo Nissan Computer System Co Ltd,41
3317.T,991620,Flying Garden Co Ltd,41
3319.T,976118,Golf Digest Online Inc,41
3320.T,991622,Cross Plus Inc,41
3321.T,951946,Mitachi Co Ltd,41
3322.T,991623,Alpha Group Inc,41
3323.T,991624,Recomm Co Ltd,41
3326.T,991625,Runsystem Co Ltd,41
3328.T,991626,Beenos Inc,41
3329.T,991627,Towa Food Service Co Ltd,41
3333.T,951947,Asahi Co Ltd,41
3341.T,951948,Nihon Chouzai Co Ltd,41
3344.T,991628,Wonder Corp,41
3347.T,991629,Trust Co Ltd,41
3349.T,949906,Cosmos Pharmaceutical Corp,41
3350.T,991630,Red Planet Japan Inc,41
3352.T,991631,Buffalo Co Ltd,41
3353.T,991632,Medical Ikkou Co Ltd,41
3355.T,991633,Kuriyama Holdings Corp,41
3356.T,991634,Terilogy Co Ltd,41
3358.T,991635,Y.S.Food Co Ltd,41
3359.T,1011960,Taisei Co Ltd,41
3360.T,946119,Ship Healthcare Holdings Inc,41
3361.T,951949,Toell Co Ltd,41
3370.T,991636,Fujita Corporation Co Ltd,41
3371.T,951951,Softcreate Holdings Corp,41
3372.T,991637,Kanmonkai Co Ltd,41
3374.T,991638,Naigai Tec Corp,41
3375.T,991639,Zoa Corp,41
3376.T,991640,Only Corp,41
3377.T,991641,Bike O & Co Ltd,41
3382.T,44254,Seven & i Holdings Co.,41
3386.T,991642,Cosmo Bio Co Ltd,41
3387.T,951953,Create Restaurants Holdings Inc,41
3388.T,951954,Meiji Electric Industries Co Ltd,41
3390.T,991643,INEST Inc,41
3391.T,946120,Tsuruha Holdings Inc,41
3392.T,951955,Delica Foods Co Ltd,41
3393.T,951956,Startia Inc,41
3395.T,951957,Saint Marc Holdings Co Ltd,41
3396.T,951958,Felissimo Corp,41
3397.T,951959,Toridoll Corp,41
3399.T,991645,Maruchiyo Yamaokaya Corp,41
3401.T,44259,Teijin Ltd.,41
3402.T,44264,Toray Industries,41
3405.T,44269,Kuraray Co.,41
3407.T,44274,Asahi Kasei Corp.,41
3408.T,951961,Sakai Ovex Co Ltd,41
3409.T,991646,Kitanihon Spinning Co Ltd,41
3415.T,1011961,Studious Co Ltd,41
3416.T,1011962,Pixta Inc,41
3417.T,991647,Ohki Healthcare Holdings Co Ltd,41
3418.T,1011963,Balnibarbi Co Ltd,41
3420.T,991648,KFC Ltd,41
3421.T,951962,Inaba Seisakusho Co Ltd,41
3423.T,991649,S E Corp,41
3426.T,991651,Atom Livin Tech Co Ltd,41
3431.T,951963,Miyaji Engineering Group Inc,41
3433.T,951964,Tocalo Co Ltd,41
3434.T,951965,Alpha Corp,41
3435.T,991652,Sanko Techno Co Ltd,41
3436.T,44279,SUMCO Corp.,41
3437.T,991653,Tokuden Co Ltd,41
3439.T,991654,Mitsuchi Corp,41
3440.T,1152846,Nisso Pronity Co Ltd,41
3441.T,991655,Sanno Co Ltd,41
3443.T,951966,Kawada Technologies Inc,41
3444.T,991656,Kikuchi Seisakusho Co Ltd,41
3445.T,991657,RS Technologies Co Ltd,41
3446.T,1066603,JTEC Corp,41
3447.T,1072310,Shinwa Co,41
3449.T,1155105,Technoflex Corp,41
3451.T,1056365,Tosei REIT Investment Corp,41
3452.T,1011964,B-Lot Company Limited,41
3453.T,1056313,Kenedix Retail Reit Corp,41
3454.T,992981,First Brothers Co Ltd,41
3455.T,1096282,Healthcare & Medical Investment Corp,41
3457.T,1011965,House Do Co Ltd,41
3458.T,991658,CRE Inc,41
3459.T,1096283,Samty Residential Investment Corp,41
3461.T,1011966,Palma Co Ltd,41
3462.T,1056314,Nomura Real Estate Master Fund Inc,41
3463.T,1056366,Ichigo Hotel REIT Investment Corp,41
3464.T,962373,Property Agent Inc,41
3465.T,962374,Ki-Star Real Estate Co Ltd,41
3466.T,1096284,LaSalle Logiport REIT,41
3467.T,969032,Agratio Urban Design Inc,41
3468.T,1056367,Star Asia Investment Corp,41
3469.T,986000,Dualtap Co Ltd,41
3470.T,1096285,Marimo Regional Revitalization REIT Inc,41
3471.T,1056315,Mitsui Fudosan Logistics Park Inc,41
3472.T,1096286,Ooedo Onsen Reit Investment Corp,41
3474.T,991185,G-Factory Co Ltd,41
3475.T,994235,Good Com Asset Co Ltd,41
3476.T,1056368,Mirai Corp,41
3477.T,994236,Forlife Co Ltd,41
3478.T,1056316,Mori Trust Hotel Reit Inc,41
3479.T,998061,TKP Corp,41
3480.T,1013397,JSB Co Ltd,41
3481.T,1096288,Mitsubishi Estate Logistics REIT Investment Corp,41
3482.T,1034503,Loadstar Capital KK,41
3484.T,1050743,Tenpo Innovation Co Ltd,41
3486.T,1056357,Global Link Management Inc,41
3487.T,1096289,CRE Logistics REIT Inc,41
3488.T,1096290,Xymax Reit Investment Corp,41
3489.T,1072219,FaithNetwork Co Ltd,41
3490.T,1073028,Azplanning Co,41
3491.T,1082116,GA Technologies Co Ltd,41
3492.T,1096291,Takara Leben Real Estate Investment Corp,41
3493.T,1097711,Itochu Advance Logistics Investment Corp,41
3494.T,1090478,Mullion Co Ltd,41
3495.T,1090529,Koryojyuhan Co Ltd,41
3496.T,1091200,AZOOM Co Ltd,41
3497.T,1096122,Legal Corporation,41
3498.T,1097547,Kasumigaseki Capital Co Ltd,41
3501.T,951967,Suminoe Textile Co Ltd,41
3512.T,951968,Nippon Felt Co Ltd,41
3513.T,951969,Ichikawa Co Ltd,41
3515.T,991659,Fuji Corp Hyogo,41
3521.T,951971,Econach Holdings Co Ltd,41
3524.T,951972,Nitto Seimo Co Ltd,41
3526.T,951973,Ashimori Industry Co Ltd,41
3528.T,991660,Prospect Co Ltd,41
3529.T,951974,Atsugi Co Ltd,41
3536.T,969033,Axas Holdings Co Ltd,41
3537.T,969034,Shoei Yakuhin Co Ltd,41
3538.T,969035,Willplus Holdings Co Ltd,41
3539.T,976480,Japan Meat Co Ltd,41
3540.T,1056479,C.I. MEDICAL CO Ltd,41
3541.T,985817,Nousouken Corp,41
3542.T,985818,Vega Corporation Co Ltd,41
3543.T,985819,Komeda Holdings Co Ltd,41
3544.T,986310,Satudora Holdings Co Ltd,41
3546.T,987114,Daiyu LIC Holdings Co Ltd,41
3547.T,989479,Kushikatsu Tanaka Co,41
3548.T,992790,Baroque Japan Ltd,41
3549.T,993287,Kusuri No Aoki Holdings Co Ltd,41
3550.T,993288,Studio Atao Co Ltd,41
3551.T,951975,Dynic Corp,41
3553.T,951976,Kyowa Leather Cloth Co Ltd,41
3556.T,994237,Renet Japan Group Inc,41
3557.T,996158,United & Collective Co Ltd,41
3558.T,996159,Locondo Inc,41
3559.T,996160,P-Ban.Com Corp,41
3560.T,997442,Hobonichi Co Ltd,41
3561.T,998062,Chikaranomoto Holdings Co Ltd,41
3562.T,998063,No.1 Co Ltd,41
3563.T,998064,Sushiro Global Holdings Ltd,41
3565.T,1006185,Ascentech KK,41
3566.T,1013398,UNIFORM NEXT Co LTD,41
3569.T,951977,Seiren Co Ltd,41
3571.T,991661,Sotoh Co Ltd,41
3577.T,951978,Tokai Senko KK,41
3578.T,991662,Soko Seiren Co Ltd,41
3580.T,951979,Komatsu Seiren Co Ltd,41
3583.T,991663,AuBEX Corp,41
3591.T,946121,Wacoal Holdings Corp,41
3593.T,951980,Hogy Medical Co Ltd,41
3597.T,991664,Jichodo Co Ltd,41
3598.T,991665,Yamaki Co Ltd,41
3600.T,991666,Fujix Ltd,41
3604.T,991667,Kawamoto Corp,41
3607.T,951982,Kuraudia Co Ltd,41
3608.T,951983,TSI Holdings Co Ltd,41
3611.T,1056358,Matsuoka Corp,41
3612.T,1093918,World Co Ltd,41
3622.T,1036817,Netyear Group Corp,41
3623.T,1096292,Billing System Corp,41
3624.T,1096293,Axel Mark Inc,41
3625.T,991668,Techfirm Holdings Inc,41
3626.T,946122,It Holdings Corp,41
3627.T,951984,Neos Corp,41
3628.T,1096294,Data Horizon Co Ltd,41
3630.T,951985,Densan System Co Ltd,41
3632.T,946123,Gree Inc,41
3633.T,991669,GMO Pepabo Inc,41
3634.T,1096295,Sockets Inc,41
3635.T,951986,Koei Tecmo Holdings Co Ltd,41
3636.T,951987,Mitsubishi Research Institute Inc,41
3639.T,951988,Voltage Inc,41
3640.T,951989,Densan Co Ltd,41
3641.T,991670,Papyless Co Ltd,41
3645.T,1096296,Medical Net Inc,41
3646.T,1096297,Ekitan & Co Ltd,41
3647.T,991671,G Three Holdings Corp,41
3648.T,951990,AGS Corp,41
3649.T,951991,Findex Inc,41
3652.T,1096298,Digital Media Professionals Inc,41
3653.T,1096299,Morpho Inc,41
3655.T,951993,BrainPad Inc,41
3656.T,951994,KLab Inc,41
3657.T,951995,Poletowin Pitcrew Holdings Inc,41
3658.T,951996,eBook Initiative Japan Co Ltd,41
3659.T,946124,Nexon Co Ltd,41
3660.T,951997,Istyle Inc,41
3661.T,951998,M-up Inc,41
3662.T,951999,Ateam Inc,41
3663.T,991672,ArtSpark Holdings Inc,41
3664.T,1096300,Mobcast Holdings Inc,41
3665.T,1096301,Enigmo Inc,41
3666.T,976119,Tecnos Japan Inc,41
3667.T,952000,Enish Inc,41
3668.T,952001,Colopl Inc,41
3670.T,991673,Kyoritsu Computer & Communication Co Ltd,41
3671.T,1011967,Softmax Co Ltd,41
3672.T,952003,AltPlus Inc,41
3673.T,952004,Broadleaf Co Ltd,41
3674.T,1011968,Aucfan Co Ltd,41
3675.T,1011969,Cross Marketing Group Inc,41
3676.T,952005,Hearts United Group Co Ltd,41
3677.T,991674,System Information Co Ltd,41
3678.T,976120,Media Do Co Ltd,41
3679.T,44460,Zigexn,41
3680.T,1011970,Hotto Link Inc,41
3681.T,976121,V-cube Inc,41
3682.T,1011971,Encourage Technologies Co Ltd,41
3683.T,976122,Cyberlinks Co Ltd,41
3686.T,991675,DLE Inc,41
3687.T,1011973,Fixstars Corporation,41
3688.T,976123,Voyage Group Inc,41
3689.T,1011974,Ignis Ltd,41
3690.T,1011975,Lockon Co Ltd,41
3691.T,1011976,Realworld Inc,41
3692.T,1011977,Ffri Inc,41
3694.T,976124,OPTiM Corp,41
3695.T,1011978,Gmo Research Inc,41
3696.T,1011979,Ceres Inc,41
3697.T,1011980,Shift Inc,41
3698.T,1011981,Cri Middleware Co Ltd,41
3708.T,952006,Tokushu Tokai Paper Co Ltd,41
3710.T,991676,Jorudan Co Ltd,41
3712.T,991678,Information Planning Co Ltd,41
3719.T,991679,Gexeed Co Ltd,41
3723.T,1096302,Nihon Falcom Corp,41
3726.T,991680,4Cs Holdings Co Ltd,41
3727.T,1096303,Aplix Corp,41
3733.T,991681,Software Service Inc,41
3738.T,949907,T Gaia Corp,41
3741.T,991682,Systems Engineering Consultants Co Ltd,41
3744.T,991683,SIOS Technology Inc,41
3747.T,991684,Intertrade Co Ltd,41
3750.T,991685,Seven Seas Holdings Co Ltd,41
3751.T,976125,Japan Asia Group Ltd,41
3753.T,991686,Flight Holdings Inc,41
3758.T,991688,Aeria Inc,41
3760.T,991689,Cave Interactive Co Ltd,41
3762.T,952009,Techmatrix Corp,41
3763.T,991690,Pro-Ship Inc,41
3765.T,976126,GungHo Online Entertainment Inc,41
3766.T,991691,Systems Design Co Ltd,41
3768.T,991692,Riskmonster.com,41
3769.T,952010,GMO Payment Gateway Inc,41
3770.T,952011,Zappallas Inc,41
3771.T,991693,System Research Co Ltd,41
3772.T,991694,Wealth Management Inc,41
3773.T,1096305,Advanced Media Inc,41
3774.T,946125,Internet Initiative Japan Inc,41
3776.T,991695,BroadBand Tower Inc,41
3777.T,991696,Geonext Corp,41
3778.T,976127,Sakura Internet Inc,41
3779.T,991697,J Escom Holdings Inc,41
3782.T,1096306,DDS Inc,41
3784.T,991698,VINX Corp,41
3787.T,991699,Techno Mathematical Co Ltd,41
3788.T,952012,GMO Cloud KK,41
3791.T,991700,IG Port Inc,41
3793.T,1096307,Drecom Co Ltd,41
3796.T,991702,e-Seikatsu Co Ltd,41
3798.T,991703,ULS Group Inc,41
3799.T,991704,Keyware Solutions Inc,41
3800.T,991705,Unirita Inc,41
3802.T,1161318,Ecomic Co Ltd,41
3803.T,991706,Image Information Inc,41
3804.T,991707,System D Inc,41
3807.T,991708,Fisco Ltd,41
3810.T,1096308,Cyberstep Inc,41
3814.T,991709,Alphax Food System Co Ltd,41
3815.T,1096309,Media Kobo Inc,41
3816.T,991710,Daiwa Computer Co Ltd,41
3817.T,952014,SRA Holdings Inc,41
3823.T,1096310,Acrodea Inc,41
3825.T,1056369,Remixpoint Inc,41
3826.T,952015,System Integrator Corp,41
3834.T,952017,Asahi Net Inc,41
3835.T,991712,eBASE Co Ltd,41
3836.T,991713,Avant Corp,41
3837.T,991714,Ad-Sol Nissin Corp,41
3839.T,991715,ODK Solutions Co Ltd,41
3840.T,1096311,Path Corp,41
3841.T,991716,Jedat Inc,41
3842.T,991717,Nextgen Inc,41
3843.T,991718,FreeBit Co Ltd,41
3844.T,952018,Comture Corp,41
3845.T,991719,I-Freek Mobile Inc,41
3847.T,991720,Pacific Systems Corp,41
3848.T,991721,Data Applications Co Ltd,41
3850.T,1096312,NTT Data Intramart Corp,41
3851.T,991722,Nippon Ichi Software Inc,41
3852.T,976129,Cyber Com Co Ltd,41
3853.T,1096313,Infoteria Corp,41
3854.T,991723,I LL Inc,41
3856.T,1096314,Abalance Corp,41
3857.T,991724,LAC Co Ltd,41
3858.T,991725,Ubiquitous Corp,41
3861.T,44284,Oji Holdings Corp.,41
3863.T,44289,Nippon Paper Industries Co.,41
3864.T,44294,Mitsubishi Paper Mills,41
3865.T,44299,Hokuetsu Kishu Paper Co.,41
3877.T,952019,Chuetsu Pulp & Paper Co Ltd,41
3878.T,952020,Tomoegawa Co Ltd,41
3880.T,952021,Daio Paper Corp,41
3891.T,991726,Nippon Kodoshi Corp,41
3892.T,991727,Okayama Paper Industries Co Ltd,41
3895.T,991728,Havix Corp,41
3896.T,991729,Awa Paper Mfg. Co Ltd,41
3900.T,1011982,Crowdworks Inc,41
3901.T,991730,MarkLines Co Ltd,41
3902.T,1011983,Medical Data Vision Co Ltd,41
3903.T,952022,Gumi Inc,41
3904.T,1011984,Kayac Inc,41
3905.T,1011985,Datasection Inc,41
3906.T,1011986,Albert Inc,41
3907.T,1011987,Silicon Studio Corp,41
3908.T,1011988,Collabos Corporation,41
3909.T,1011989,Showcase-Tv Inc,41
3910.T,991731,MKSystem Corp,41
3911.T,1011990,Aiming Inc,41
3912.T,1011991,Mobile Factory Inc,41
3913.T,1011992,Smedio Inc,41
3914.T,1011993,Jig-Saw Inc,41
3915.T,1011994,Terrasky Co Ltd,41
3916.T,991732,Digital Information Technologies Corp,41
3917.T,1011995,Iridge Inc,41
3918.T,991733,PCI Holdings Inc,41
3919.T,976130,PiPEDO HD Inc,41
3920.T,1011996,Internetworking And Broadband Consulting Co Ltd,41
3921.T,961974,NEOJAPAN Inc,41
3922.T,976131,PR Times Inc,41
3923.T,961975,Rakus Co Ltd,41
3924.T,961976,R&D Computer Co Ltd,41
3925.T,962375,Double Standard Inc,41
3926.T,962376,Open Door Inc,41
3927.T,962377,Ahkun Co Ltd,41
3928.T,962378,Mynet Inc,41
3929.T,962379,Socialwire Co Ltd,41
3930.T,963731,Hatena Co Ltd,41
3931.T,969036,Value Golf Inc,41
3932.T,969037,Akatsuki Shoji Co Ltd,41
3933.T,969038,CHIeru Co Ltd,41
3934.T,969039,Benefit Japan Co Ltd,41
3935.T,976481,Edia Co Ltd,41
3936.T,976482,Globalway Inc,41
3937.T,985820,AWS Holdings Inc,41
3938.T,985876,Line Corp,41
3939.T,989480,Kanamic Network Co Ltd,41
3940.T,989621,Nomura System Corporation Co Ltd,41
3941.T,946126,Rengo Co Ltd,41
3944.T,991734,Furubayashi Shiko Co Ltd,41
3945.T,991735,Superbag Co Ltd,41
3946.T,952023,Tomoku Co Ltd,41
3947.T,991736,Dynapac Co Ltd,41
3948.T,991737,Hikari Business Form Co Ltd,41
3950.T,952024,Pack Corp,41
3951.T,991738,Asahi Printing Co Ltd,41
3953.T,991739,Ohmura Shigyo Co Ltd,41
3954.T,991740,Showa Paxxs Corp,41
3955.T,991741,Imura Envelope Co Inc,41
3956.T,991742,Kokusai Chart Corp,41
3960.T,990014,Valuedesign Inc,41
3961.T,990015,Silver Egg Technology Co Ltd,41
3962.T,990016,Change Inc,41
3963.T,990017,Synchro Food Co Ltd,41
3964.T,998065,Aucnet Inc,41
3965.T,991743,Capital Asset Planning Inc,41
3966.T,992791,Uzabase Inc,41
3967.T,993289,Eltes Co Ltd,41
3968.T,994238,Segue Group Co Ltd,41
3969.T,994239,Atled Corp,41
3970.T,994240,Innovation Inc,41
3974.T,994491,TBCSCAT Inc,41
3975.T,994492,AOI TYO Holdings Inc,41
3976.T,994493,Shanon Inc,41
3978.T,998066,Macromill Inc,41
3979.T,997443,Uluru Co Ltd,41
3981.T,997444,Beaglee Inc,41
3983.T,998067,Oro Co Ltd,41
3984.T,998068,User Local Inc,41
3985.T,998069,Temona Inc,41
3986.T,1010723,bBreak Systems Co Ltd,41
3987.T,1088712,Ecomott Inc,41
3988.T,1011054,SYS Holdings Co Ltd,41
3989.T,1030996,Sharingtechnology Inc,41
3990.T,1031003,UUUM Co Ltd,41
3991.T,1031384,Wantedly Inc,41
3992.T,1034501,Needs Well Inc,41
3993.T,1031735,PKSHA Technology Inc,41
3994.T,1034504,Money Forward Inc,41
3995.T,1050744,SKiyaki Inc,41
3996.T,1055098,Signpost Corp,41
3997.T,1055287,Trade Works Co Ltd,41
3998.T,1056471,SuRaLa Net Co Ltd,41
3999.T,1056472,KnowledgeSuite Inc,41
4004.T,44304,Showa Denko K.K.,41
4005.T,44309,Sumitomo Chemical Co.,41
4008.T,952027,Sumitomo Seika Chemicals Co Ltd,41
4011.T,1166377,Headwaters Co Ltd,41
4012.T,1166378,Axis Co Ltd,41
4013.T,1166734,Nittsusystem Co Ltd,41
4014.T,1166995,Karadanote Inc,41
4015.T,1167323,Arara Inc,41
4016.T,1167249,Mit Holdings Co Ltd,41
4017.T,1167479,Creema Ltd,41
4021.T,44314,Nissan Chemical Industries,41
4022.T,952028,Rasa Industries Ltd,41
4023.T,946127,Kureha Corp,41
4025.T,952029,Taki Chemical Co Ltd,41
4026.T,991744,Konoshima Chemical Co Ltd,41
4027.T,952030,Tayca Corp,41
4028.T,946128,Ishihara Sangyo Kaisha Ltd,41
4031.T,952031,Katakura Chikkarin Co Ltd,41
4041.T,44319,Nippon Soda Co.,41
4042.T,44324,Tosoh Corp.,41
4043.T,44329,Tokuyama Corp.,41
4044.T,946129,Central Glass Co Ltd,41
4045.T,946130,Toagosei Co Ltd,41
4046.T,952032,Daiso Co Ltd,41
4047.T,952033,Kanto Denka Kogyo Co Ltd,41
4051.T,1163259,Gmo Financial Gate Inc,41
4052.T,1162601,Ficha Inc,41
4053.T,1163497,Sun Inc,41
4054.T,1163498,Nihon Jyoho Create Co Ltd,41
4055.T,1164145,T And S Inc,41
4056.T,1165316,Neural Pocket Inc,41
4057.T,1165406,Interfactory Inc,41
4058.T,1166025,Toyokumo Inc,41
4059.T,1166376,Magmag Inc,41
4060.T,1166253,Rakumo Inc,41
4061.T,44110,Denki Kagaku Kogyo K.K.,41
4062.T,946131,Ibiden Co Ltd,41
4063.T,44115,Shin-Etsu Chemical Co.,41
4064.T,952034,Nippon Carbide Industries Co Inc,41
4078.T,952035,Sakai Chemical Industry Co Ltd,41
4080.T,991745,Tanaka Chemical Corp,41
4082.T,991746,Daiichi Kigenso Kagaku Kogyo Co Ltd,41
4088.T,946132,Air Water Inc,41
4091.T,102044,Taiyo Nippon Sanso Corp,41
4092.T,952036,Nippon Chemical Industrial Co Ltd,41
4093.T,991747,Toho Acetylene Co Ltd,41
4094.T,991748,Nihon Kagaku Sangyo Co Ltd,41
4095.T,949908,Nihon Parkerizing,41
4097.T,952037,Koatsu Gas Kogyo Co Ltd,41
4098.T,952038,Titan Kogyo Ltd,41
4099.T,952039,Shikoku Chemicals Corp,41
4100.T,952040,Toda Kogyo Corp,41
4102.T,991749,Maruo Calcium Co Ltd,41
4107.T,991750,Ise Chemicals Corp,41
4109.T,952041,Stella Chemifa Corp,41
4112.T,952042,Hodogaya Chemical Co Ltd,41
4113.T,991751,Taoka Chemical Co Ltd,41
4114.T,946133,Nippon Shokubai Co Ltd,41
4115.T,991752,Honshu Chemical Industry Co Ltd,41
4116.T,952043,Dainichiseika Color & Chemicals MFG Co Ltd,41
4118.T,946134,Kaneka Corp,41
4119.T,991754,Nippon Pigment Co Ltd,41
4120.T,991755,Sugai Chemical Industry Co Ltd,41
4124.T,1050757,Osaka Yuka Industry Ltd,41
4151.T,44120,Kyowa Hakko Kirin Co.,41
4182.T,946135,Mitsubishi Gas Chemical Co Inc,41
4183.T,44125,Mitsui Chemicals,41
4185.T,946136,Jsr Cor,41
4186.T,952044,Tokyo Ohka Kogyo Co Ltd,41
4187.T,952045,Osaka Organic Chemical Industry Ltd,41
4188.T,44130,Mitsubishi Chemical Holdings Corp,41
4189.T,991756,KH Neochem Co Ltd,41
4202.T,946137,Daicel Corp,41
4203.T,946138,Sumitomo Bakelite Co Ltd,41
4204.T,946139,Sekisui Chemical Co Ltd,41
4205.T,946140,Zeon Corp,41
4206.T,949910,Aica Kogyo,41
4208.T,44135,Ube Industries,41
4212.T,952046,Sekisui Jushi Corp,41
4215.T,952047,Takiron Co Ltd,41
4216.T,952048,Asahi Organic Chemicals Industry Co Ltd,41
4218.T,952049,Nichiban Co Ltd,41
4220.T,952050,Riken Technos Corp,41
4221.T,952051,Okura Industrial Co Ltd,41
4222.T,991757,Kodama Chemical Industry Co Ltd,41
4224.T,991758,Lonseal Corp,41
4228.T,952052,Sekisui Plastics Co Ltd,41
4229.T,952053,Gun Ei Chemical Industry Co Ltd,41
4231.T,952054,Tigers Polymer Corp,41
4234.T,991759,Sun A. Kaken Co Ltd,41
4235.T,991760,Daiichi Kasei Co Ltd,41
4237.T,991761,Fujipream Corp,41
4238.T,952055,Miraial Co Ltd,41
4240.T,991763,Cluster Technology Co Ltd,41
4241.T,991764,Atect Corp,41
4242.T,991765,Takagi Seiko Corp,41
4243.T,991766,Nix Inc,41
4245.T,952056,Daiki Axis Co Ltd,41
4246.T,952057,DaikyoNishikawa Corp,41
4248.T,991767,Takemoto Yohki Co Ltd,41
4249.T,1056474,Moriroku Holdings Co Ltd,41
4251.T,1152997,Keiwa Inc,41
4272.T,44140,Nippon Kayaku Co.,41
4274.T,991768,Hosoya Pyro-Engineering Co Ltd,41
4275.T,952058,Carlit Holdings Co Ltd,41
4282.T,952059,EPS Holdings Inc,41
4284.T,991769,Solxyz Co Ltd,41
4286.T,976133,Legs Co Ltd,41
4287.T,991770,Justplanning Inc,41
4288.T,991771,Asgent Inc,41
4290.T,952061,Prestige International Inc,41
4293.T,991773,Septeni Holdings Co Ltd,41
4295.T,952062,Faith Inc,41
4298.T,991774,Proto Corp,41
4299.T,952063,Himacs Ltd,41
4301.T,952064,Amuse Inc,41
4304.T,991775,Estore Corp,41
4307.T,946142,Nomura Research Institute Ltd,41
4308.T,1096315,J-Stream Inc,41
4310.T,952065,Dream Incubator Inc,41
4312.T,952066,Cybernet Systems Co Ltd,41
4316.T,991776,Bemap Inc,41
4317.T,991777,Ray Corp,41
4318.T,952067,Quick Co Ltd,41
4319.T,952068,TAC Co Ltd,41
4320.T,952069,CE Holdings Co Ltd,41
4321.T,946143,Kenedix Inc,41
4323.T,991778,Japan System Techniques Co Ltd,41
4324.T,44145,Dentsu Inc.,41
4326.T,952070,Intage Holdings Inc,41
4327.T,991779,SHL-Japan Ltd,41
4331.T,952071,Take And Give Needs Co Ltd,41
4333.T,952072,Toho System Science Co Ltd,41
4334.T,991780,Yuke s Co Ltd,41
4335.T,991781,IPS Co Ltd,41
4336.T,991782,Crie Anabuki Inc,41
4337.T,952073,Pia Corp,41
4341.T,991783,Seiryo Electric Corp,41
4342.T,991784,Secom Joshinetsu Co Ltd,41
4343.T,952074,Aeon Fantasy Co Ltd,41
4344.T,952075,Sourcenext Corp,41
4345.T,976134,CTS Co Ltd,41
4346.T,952076,Nexyz. Corp,41
4347.T,991785,Broadmedia Corp,41
4348.T,991786,Infocom Corp,41
4350.T,952077,Medical System Network Co Ltd,41
4351.T,991787,Yamada Servicer Synthetic Office Co Ltd,41
4355.T,991788,Longlife Holding Co Ltd,41
4356.T,991789,Applied Technology Co Ltd,41
4361.T,991790,Kawaguchi Chemical Industry Co Ltd,41
4362.T,952079,Nippon Fine Chemical Co Ltd,41
4364.T,991791,Manac Incorporated,41
4365.T,991792,Matsumoto Yushi Seiyaku Co Ltd,41
4366.T,991793,Daito Chemix Corp,41
4367.T,991794,Koei Chemical Co Ltd,41
4368.T,976135,Fuso Chemical Co Ltd,41
4369.T,991795,Tri Chemical Laboratories Inc,41
4380.T,1066602,M-Mart Inc,41
4381.T,1073032,BPLATS Inc,41
4382.T,1073035,HEROZ Inc,41
4384.T,1075229,Raksul Inc,41
4385.T,1076785,Mercari Inc,41
4386.T,1076999,SIG Co,41
4387.T,1076997,ZUU Co Ltd,41
4388.T,1079229,AI Inc,41
4389.T,1079230,Property Data Bank Inc,41
4390.T,1079288,IPS Inc,41
4391.T,1080121,Logizard Co,41
4392.T,952002,Future Innovation Group Inc,41
4393.T,1082117,Bank of Innovation Inc,41
4394.T,1082132,eXmotion Co Ltd,41
4395.T,1082133,Accrete Inc,41
4396.T,1084927,System Support Inc,41
4397.T,1089256,TeamSpirit Inc,41
4398.T,1091242,BroadBand Security Inc,41
4399.T,1096515,Kufu Co Inc,41
4401.T,946144,Adeka Corp,41
4403.T,952080,NOF Corp,41
4404.T,952081,Miyoshi Oil & Fat Co Ltd,41
4406.T,952082,New Japan Chemical Co Ltd,41
4409.T,991796,Toho Chemical Industry Co Ltd,41
4410.T,952083,Harima Chemicals Group Inc,41
4420.T,1096027,eSOL Co Ltd,41
4421.T,1096124,D.I.System Co Ltd,41
4422.T,1096121,Valuenex Japan Inc,41
4423.T,1097887,ARTERIA Networks Corporation,41
4424.T,1097885,Amazia Inc,41
4425.T,1097915,Kudan Inc,41
4427.T,1097912,EduLab Inc,41
4428.T,1099587,Link Inc,41
4429.T,1118187,Ricksoft Co Ltd,41
4430.T,1118186,Tokai Soft Co Ltd,41
4431.T,1121892,Smaregi Inc,41
4433.T,951992,Hito Communications Holdings Inc,41
4434.T,1122222,Serverworks Co Ltd,41
4435.T,1123307,Kaonvavi Inc,41
4436.T,1123310,Minkabu The Infonoid Inc,41
4437.T,1123807,gooddays holdings Inc,41
4438.T,1123811,Welby Inc,41
4439.T,1123813,Toumei Co Ltd,41
4440.T,1123971,Witz,41
4441.T,1123973,Tobila Systems Inc,41
4442.T,1129398,Valtes Co Ltd,41
4443.T,1131558,Sansan Inc,41
4444.T,1131561,Infonet Inc,41
4445.T,1131565,Living Technologies Inc,41
4446.T,1138464,Link U Inc,41
4448.T,1152224,Chatwork Co Ltd,41
4449.T,1152223,Giftee Inc,41
4450.T,1152303,Power Solutions Ltd,41
4452.T,44150,Kao Corp.,41
4461.T,952084,DKS Co Ltd,41
4462.T,991797,Ishihara Chemical Co Ltd,41
4463.T,962380,Nicca Chemical Co Ltd,41
4464.T,991798,Soft99 Corp,41
4465.T,952085,Niitaka Co Ltd,41
4471.T,952086,Sanyo Chemical Industries Ltd,41
4475.T,1152344,Hennge Kk,41
4476.T,1152343,Ai Cross Inc,41
4477.T,1152961,Base Inc,41
4478.T,1155101,Freee Kk,41
4479.T,1155103,Makuake Inc,41
4480.T,1155102,Medley Inc,41
4481.T,1161319,Base Co Ltd,41
4482.T,1155482,Wills Inc,41
4483.T,1155547,Jmdc Inc,41
4484.T,1155546,Lancers Inc,41
4485.T,1155543,Jtower Inc,41
4486.T,1155544,Unite And Grow Inc,41
4487.T,1155540,Space Market Inc,41
4488.T,1155695,Ai Inside Inc,41
4490.T,1156703,Visasq Inc,41
4491.T,1156723,Computer Management Co Ltd,41
4492.T,1156798,Genetec Corp,41
4493.T,1158936,Cyber Security Cloud Inc,41
4494.T,1158934,Vario Secure Inc,41
4495.T,1163260,I3 Systems Inc,41
4496.T,1159092,Commerce One Holdings Inc,41
4497.T,1162602,Locoguide Inc,41
4499.T,1159095,Speee Inc,41
4502.T,44155,Takeda Pharmaceutical Co.,41
4503.T,44160,Astellas Pharma Inc.,41
4506.T,44165,Sumitomo Dainippon Pharma Co Ltd,41
4507.T,44170,Shionogi & Co.,41
4512.T,952087,Wakamoto Pharmaceutical Co Ltd,41
4514.T,952088,ASKA Pharmaceutical Co Ltd,41
4516.T,952089,Nippon Shinyaku Co Ltd,41
4517.T,952090,Biofermin Pharmaceutical Co Ltd,41
4519.T,44175,Chugai Pharmaceutical Co.,41
4521.T,946146,Kaken Pharmaceutical Co Ltd,41
4523.T,44180,Eisai Co.,41
4524.T,991799,Morishita Jintan Co Ltd,41
4526.T,952091,Riken Vitamin Co Ltd,41
4527.T,949911,Rohto Pharmaceutical,41
4528.T,946147,Ono Pharmaceutical Ltd,41
4530.T,946148,Hisamitsu Pharmaceutical Inc,41
4531.T,952092,Yuki Gosei Kogyo Co Ltd,41
4534.T,949912,Mochida Pharmaceutical,41
4536.T,946149,Santen Pharmaceutical Co Ltd,41
4538.T,952093,Fuso Pharmaceutical Industries Ltd,41
4539.T,952094,Nippon Chemiphar Co Ltd,41
4540.T,946150,Tsumura & Co,41
4541.T,952095,Nichi-Iko Pharmaceutical Co Ltd,41
4543.T,44185,Terumo Corp.,41
4544.T,946151,Miraca Holdings Inc,41
4547.T,952096,Kissei Pharmaceutical Co Ltd,41
4548.T,952097,Seikagaku Corp,41
4549.T,952098,Eiken Chemical Co Ltd,41
4550.T,952099,Nissui Pharmaceutical Co Ltd,41
4551.T,952100,Torii Pharmaceutical Co Ltd,41
4552.T,952101,JCR Pharmaceuticals Co Ltd,41
4553.T,952102,Towa Pharmaceutical Co Ltd,41
4554.T,952103,Fuji Pharma Co Ltd,41
4555.T,952104,Sawai Pharmaceutical Co Ltd,41
4556.T,991800,Kainos Laboratories Inc,41
4557.T,991801,Medical&Biological Laboratories Co Ltd,41
4558.T,991802,Chukyoiyakuhin Co Ltd,41
4559.T,952105,Zeria Pharmaceutical Co Ltd,41
4563.T,1036818,AnGes Inc,41
4564.T,1096316,OncoTherapy Science Inc,41
4565.T,1096317,Sosei Group Corp,41
4568.T,44190,Daiichi Sankyo Co.,41
4569.T,946152,Kyorin Holdings Inc,41
4570.T,991803,Immuno-Biological Laboratories Co Ltd,41
4571.T,1056317,NanoCarrier Co Ltd,41
4572.T,991804,Carna Biosciences Inc,41
4574.T,952106,Taiko Pharmaceutical Co Ltd,41
4575.T,1096318,CanBas Co Ltd,41
4576.T,991805,D.Western Therapeutics Institute Inc,41
4577.T,952107,Daito Pharmaceutical Co Ltd,41
4578.T,946153,Otsuka Holdings Ltd,41
4579.T,991806,RaQualia Pharma Inc,41
4581.T,946154,Taisho Pharmaceutical Hold Ltd,41
4582.T,991807,SymBio Pharmaceuticals Ltd,41
4583.T,1056370,Chiome Bioscience Inc,41
4584.T,1096319,Gene Techno Science Co Ltd,41
4586.T,1011997,Medrx Co Ltd,41
4587.T,969040,PeptiDream Inc,41
4588.T,1011998,Oncolys Biopharma Inc,41
4591.T,1011999,Ribomic Inc,41
4592.T,1012000,Sanbio Company Limited,41
4593.T,1012001,Healios K K,41
4594.T,1012002,Greenpeptide Co Ltd,41
4595.T,962381,Mizuho Medy Co Ltd,41
4596.T,994041,Kubota Pharmaceutical Holdings Co Ltd,41
4597.T,998070,Solasia Pharma KK,41
4598.T,1096011,Delta-Fly Pharma Inc,41
4599.T,1142320,StemRIM,41
4611.T,952108,Dai Nippon Toryo Co Ltd,41
4612.T,946155,Nippon Paint Holdings Co Ltd,41
4613.T,946156,Kansai Paint Co Ltd,41
4615.T,952109,Shinto Paint Co Ltd,41
4616.T,991808,Kawakami Paint Mfg Co Ltd,41
4617.T,952110,Chugoku Marine Paints Ltd,41
4619.T,952111,Nihon Tokushu Toryo Co Ltd,41
4620.T,952112,Fujikura Kasei Co Ltd,41
4621.T,991809,Rock Paint Co Ltd,41
4623.T,991810,Asahipen Corp,41
4624.T,991811,Isamu Paint Co Ltd,41
4625.T,991812,Atomix Co Ltd,41
4626.T,952113,Taiyo Holdings Co Ltd,41
4627.T,991813,Natoco Co Ltd,41
4628.T,991814,Sk Kaken Co Ltd,41
4629.T,991815,Daishin Chemical Co Ltd,41
4631.T,946157,DIC Corp,41
4633.T,952114,Sakata Inx Corp,41
4634.T,946158,Toyo Ink Sc Holdings Co Ltd,41
4635.T,991816,Tokyo Printing Ink Mfg Co Ltd,41
4636.T,952115,T&K Toka Co Ltd,41
4640.T,991817,Andor Co Ltd,41
4641.T,952116,Altech Corp,41
4642.T,991818,Original Engineering Consultants Co Ltd,41
4644.T,991819,Imagineer Co Ltd,41
4645.T,991820,Ichishin Holdings Co Ltd,41
4650.T,991821,SD Entertainment Inc,41
4651.T,952117,Sanix Inc,41
4653.T,952118,Daiohs Corp,41
4657.T,991823,Environmental Control Center Co Ltd,41
4658.T,952119,Nippon Air Conditioning Services Co Ltd,41
4659.T,991824,AJIS Co Ltd,41
4661.T,946159,Oriental Land Co Ltd,41
4662.T,976136,Focus Systems Corp,41
4664.T,991825,Japan Reliance Service Corp,41
4665.T,952120,Duskin Co Ltd,41
4666.T,946160,Park24 Co Ltd,41
4667.T,991826,Aisan Technology Co Ltd,41
4668.T,952121,Meiko Network Japan Co Ltd,41
4669.T,991827,Nippan Rental Co Ltd,41
4671.T,952122,Falco Holdings Co Ltd,41
4673.T,991828,Kawasaki Geological Engineering Co Ltd,41
4674.T,952123,Cresco Ltd,41
4676.T,946161,Fuji Media Holdings Inc,41
4678.T,952124,Shuei Yobiko Co Ltd,41
4679.T,952125,Taya Co Ltd,41
4680.T,946162,Round One Corp,41
4681.T,952126,Resorttrust Inc,41
4684.T,952127,Obic Co Ltd,41
4685.T,991829,Ryoyu Systems Co Ltd,41
4686.T,952128,Justsystems Corp,41
4687.T,952129,TDC Software Engineering Inc,41
4689.T,44195,Yahoo Japan Corp.,41
4690.T,991830,Nippon Pallet Pool Co Ltd,41
4691.T,1152822,Washington Hotel Corp,41
4694.T,952130,BML Inc,41
4696.T,952131,Watabe Wedding Corp,41
4699.T,991832,Uchida Esco Co Ltd,41
4704.T,44200,Trend Micro Inc.,41
4705.T,991833,Clip Corp,41
4707.T,991834,Kitac Corp,41
4708.T,952132,Moshi Moshi Hotline Inc,41
4709.T,952133,Information Development Co Ltd,41
4712.T,991835,Adores Inc,41
4714.T,952134,Riso Kyoiku Co Ltd,41
4716.T,946163,Oracle Corp Japan,41
4718.T,952135,Waseda Academy Co Ltd,41
4719.T,952136,Alpha Systems Inc,41
4720.T,991836,Johnan Academic Preparatory Institute Inc,41
4722.T,952137,Future Architect Inc,41
4725.T,952138,CAC Holdings Corp,41
4726.T,952139,Softbank Technology Corp,41
4728.T,952140,Tose Co Ltd,41
4732.T,952141,USS Co Ltd,41
4733.T,952142,Obic Business Consultants Co Ltd,41
4734.T,991837,Being Co Ltd,41
4735.T,991838,Kyoshin Co Ltd,41
4736.T,991839,Nippon Rad Inc,41
4739.T,946164,Itochu Techno Solutions,41
4743.T,952143,ITFOR Inc,41
4745.T,952144,Tokyo Individualized Educational Institute Inc,41
4746.T,952145,Toukei Computer Co Ltd,41
4748.T,991840,Kozo Keikaku Engineering Inc,41
4750.T,991841,Daisan Co Ltd,41
4751.T,952146,CyberAgent Inc,41
4752.T,991842,Showa System Engineering Corp,41
4754.T,991843,Tosnet Corp,41
4755.T,952147,Rakuten Inc,41
4760.T,991844,Alpha Co Ltd,41
4761.T,991845,Sakura KCS Corp,41
4762.T,952148,XNET Corp,41
4763.T,991846,Creek & River Co Ltd,41
4764.T,991847,Digital Design Co Ltd,41
4765.T,991848,Morningstar Japan KK,41
4766.T,991849,PA Co Ltd,41
4767.T,952149,TOW Co Ltd,41
4768.T,946165,Otsuka Corp,41
4769.T,991850,Information Creative Co Ltd,41
4770.T,991851,Zuken Elmic Inc,41
4771.T,991852,F&M Co Ltd,41
4772.T,991853,Digital Adventure Inc,41
4776.T,952151,Cybozu Inc,41
4777.T,991854,Gala Inc,41
4779.T,952152,Softbrain Co Ltd,41
4781.T,991855,Nihon Housing Co Ltd,41
4783.T,991856,Nippon Computer Dynamics Co Ltd,41
4784.T,991857,GMO AD Partners Inc,41
4792.T,991858,Yamada Consulting Group Co Ltd,41
4800.T,991860,Oricon Inc,41
4801.T,952153,Central Sports Co Ltd,41
4809.T,952154,Paraca Inc,41
4812.T,952155,Information Services International-Dentsu Ltd,41
4813.T,1056371,Access Co Ltd,41
4814.T,991861,Nextware Ltd,41
4816.T,991862,Toei Animation Co Ltd,41
4819.T,991863,Digital Garage Inc,41
4820.T,952156,EM Systems Co Ltd,41
4824.T,1096321,Mediaseek Inc,41
4825.T,952157,Weathernews Inc,41
4826.T,952158,Computer Institute of Japan Ltd,41
4828.T,952159,Toyo Business Engineering Corp,41
4829.T,952160,Nihon Enterprise Co Ltd,41
4832.T,991864,JFE Systems Inc,41
4833.T,991865,Pado Corp,41
4837.T,991866,Shidax Corp,41
4838.T,991867,Space Shower Networks Inc,41
4839.T,952161,Wowow Inc,41
4840.T,991868,Triis Inc,41
4845.T,952162,Fusion Partners Co,41
4847.T,991870,Intelligent Wave Inc,41
4848.T,952163,Fullcast Holdings Co Ltd,41
4849.T,991871,En-Japan Inc,41
4875.T,1122733,MediciNova Inc,41
4880.T,1152960,Cellsource Co Ltd,41
4883.T,1163499,Modalis Therapeutics Corp,41
4901.T,44205,Fujifilm Holdings Corp.,41
4902.T,44210,Konica Minolta,41
4911.T,44215,Shiseido Co.,41
4912.T,946166,Lion Corp,41
4914.T,952164,Takasago International Corp,41
4917.T,952165,Mandom Corp,41
4918.T,991872,Ivy Cosmetics Corp,41
4919.T,952166,Milbon Co Ltd,41
4920.T,991873,Nippon Shikizai Inc,41
4921.T,952167,Fancl Corp,41
4922.T,952168,Kose Corp,41
4923.T,952169,Cota Co Ltd,41
4925.T,991874,Haba Laboratories Inc,41
4926.T,952171,C Bon Cosmetics Co Ltd,41
4927.T,952172,Pola Orbis Holdings Inc,41
4928.T,952173,Noevir Holdings Co Ltd,41
4929.T,952174,Adjuvant Cosme Japan Co Ltd,41
4930.T,1166026,Graphico Inc,41
4931.T,1131563,Shinnihonseiyaku Co Ltd,41
4933.T,1166252,I Ne Co Ltd,41
4934.T,1167050,Premier Anti Aging Co Ltd,41
4951.T,952175,ST Corporation,41
4952.T,991875,SDS Biotech KK,41
4955.T,952176,Agro-Kanesho Co Ltd,41
4956.T,952177,Konishi Co Ltd,41
4957.T,991876,Yasuhara Chemical Co Ltd,41
4958.T,952178,T.Hasegawa Co Ltd,41
4960.T,991877,Chemipro Kasei Kaisha Ltd,41
4962.T,991878,Goo Chemical Co Ltd,41
4963.T,952179,Seiko PMC Corp,41
4966.T,991880,C.Uyemura & Co Ltd,41
4967.T,952180,Kobayashi Pharmaceutical Co Ltd,41
4968.T,952181,Arakawa Chemical Industries Ltd,41
4970.T,991881,Toyo Gosei Co Ltd,41
4971.T,952182,MEC Co Ltd,41
4972.T,991882,Soken Chemical & Engineering Co Ltd,41
4973.T,952183,Japan Pure Chemical Co Ltd,41
4974.T,976137,Takara Bio Inc,41
4975.T,952184,JCU Corp,41
4976.T,991883,Toyo Drilube Co Ltd,41
4977.T,952185,Nitta Gelatin Inc,41
4978.T,991884,ReproCell Inc,41
4979.T,976138,OAT Agrio Co Ltd,41
4980.T,976139,Dexerials Corp,41
4985.T,952186,Earth Chemical Co Ltd,41
4987.T,991885,Teraoka Seisakusho Co Ltd,41
4990.T,991886,Showa Chemical Industry Co Ltd,41
4992.T,952188,Hokko Chemical Industry Co Ltd,41
4994.T,952189,Taisei Lamick Co Ltd,41
4996.T,952190,Kumiai Chemical Industry Co Ltd,41
4997.T,952191,Nihon Nohyaku Co Ltd,41
4998.T,991887,Fumakilla Ltd,41
4999.T,991888,Cemedine Co Ltd,41
5008.T,991889,Toa Oil Co Ltd,41
5009.T,952192,Fuji Kosan Co Ltd,41
5010.T,991890,Nippon Seiro Co Ltd,41
5011.T,952193,Nichireki Co Ltd,41
5013.T,952194,Yushiro Chemical Industry Co Ltd,41
5015.T,952195,BP Castrol KK,41
5017.T,952196,Fuji Oil Co Ltd,41
5018.T,952197,MORESCO Corp,41
5019.T,946169,Idemitsu Kosan Co Ltd,41
5020.T,44225,JX Holdings,41
5021.T,962543,Cosmo Energy Holdings Co Ltd,41
5070.T,1156794,Draft Inc,41
5071.T,1158937,Vis Co Ltd,41
5101.T,44230,The Yokohama Rubber Co.,41
5103.T,991891,Showa Holdings Co Ltd,41
5104.T,991892,Nitto Kako Co Ltd,41
5105.T,946170,Toyo Tire & Rubber Co Ltd,41
5108.T,44235,Bridgestone Corp.,41
5110.T,946171,Sumitomo Rubber Ind Ltd,41
5121.T,952198,Fujikura Rubber Ltd,41
5122.T,952199,Okamoto Industries Inc,41
5142.T,952200,Achilles Corp,41
5161.T,991893,Nishikawa Rubber Co Ltd,41
5162.T,991894,Asahi Rubber Inc,41
5184.T,991895,Nichirin Co Ltd,41
5185.T,952201,Fukoku Co Ltd,41
5186.T,952202,Nitta Corp,41
5187.T,952203,Create Medic Co Ltd,41
5189.T,991896,Sakura Rubber Co Ltd,41
5191.T,952204,Sumitomo Riko Co Ltd,41
5192.T,952205,Mitsuboshi Belting Ltd,41
5194.T,991897,Sagami Rubber Industries Co Ltd,41
5195.T,952206,Bando Chemical Industries Ltd,41
5199.T,991898,Fuji Latex Co Ltd,41
5201.T,44240,Asahi Glass Co.,41
5202.T,44245,Nippon Sheet Glass Co.,41
5204.T,952207,Ishizuka Glass Co Ltd,41
5208.T,952208,Arisawa Mfg Co Ltd,41
5210.T,952209,Nihon Yamamura Glass Co Ltd,41
5212.T,991899,Fuji Glass Co Ltd,41
5214.T,44250,Nippon Electric Glass Co.,41
5216.T,991900,Kuramoto Co Ltd,41
5217.T,991901,Techno Quartz Inc,41
5218.T,952210,Ohara Inc,41
5232.T,44255,Sumitomo Osaka Cement Co.,41
5233.T,44260,Taiheiyo Cement Corp.,41
5237.T,991902,Nozawa Corp,41
5261.T,952212,Resort Solution Co Ltd,41
5262.T,952213,Nippon Hume Corp,41
5268.T,991903,Asahi Concrete Works Co Ltd,41
5269.T,952214,Nippon Concrete Industries Co Ltd,41
5271.T,991904,Toyo Asano Foundation Co Ltd,41
5273.T,952215,Mitani Sekisan Co Ltd,41
5277.T,991905,Spancrete Corp,41
5279.T,991906,Nihon Kogyo Co Ltd,41
5280.T,991907,Yoshicon Co Ltd,41
5282.T,991908,Geostr Corp,41
5283.T,991909,Takamisawa Co Ltd,41
5284.T,991910,Yamau Co Ltd,41
5285.T,991911,Yamax Corp,41
5287.T,991912,Ito Yogyo Co Ltd,41
5288.T,952216,Japan Pile Corp,41
5290.T,991913,Vertex Corp,41
5301.T,44265,Tokai Carbon Co.,41
5302.T,952217,Nippon Carbon Co Ltd,41
5304.T,991914,SEC Carbon Ltd,41
5310.T,952218,Toyo Tanso Co Ltd,41
5331.T,952219,Noritake Co Ltd,41
5332.T,44270,TOTO Ltd.,41
5333.T,44275,NGK Insulators,41
5334.T,946173,Ngk Spark Plug Co Ltd,41
5337.T,952220,Danto Holdings Corp,41
5341.T,991915,Asahi Eito Co Ltd,41
5344.T,952221,Maruwa Co Ltd,41
5351.T,952222,Shinagawa Refractories Co Ltd,41
5352.T,952223,Krosaki Harima Corp,41
5355.T,991916,Nippon Crucible Co Ltd,41
5357.T,952224,Yotai Refractories Co Ltd,41
5358.T,952225,Isolite Insulating Products Co Ltd,41
5363.T,952226,TYK Corp,41
5367.T,952227,Nikkato Corp,41
5368.T,1156797,Japan Insulation Co Ltd,41
5380.T,991917,Shinto Co Ltd,41
5381.T,991918,Mipox Corp,41
5384.T,952228,Fujimi Inc,41
5386.T,991919,Tsuruya Co Ltd,41
5387.T,991920,Chiyoda Ute Co Ltd,41
5388.T,991921,Kunimine Industries Co Ltd,41
5391.T,952229,A&A Material Corp,41
5393.T,952230,Nichias Corp,41
5395.T,991922,Riken Corundum Co Ltd,41
5401.T,44280,Nippon Steel Corp,41
5406.T,44285,Kobe Steel,41
5408.T,952231,Nakayama Steel Works Ltd,41
5410.T,952232,Godo Steel Ltd,41
5411.T,44290,JFE Holdings,41
5423.T,946174,Tokyo Steel Mfg Co Ltd,41
5440.T,952233,Kyoei Steel Ltd,41
5444.T,946175,Yamato Kogyo Co Ltd,41
5445.T,952234,Tokyo Tekko Co Ltd,41
5446.T,991923,Hokuetsu Metal Co Ltd,41
5449.T,952235,Osaka Steel Co Ltd,41
5451.T,952236,Yodogawa Steel Works Ltd,41
5458.T,991925,Takasago Tekko KK,41
5463.T,946176,Maruichi Steel Tube Ltd,41
5464.T,952238,Mory Industries Inc,41
5471.T,946177,Daido Steel Co Ltd,41
5476.T,952239,Nippon Koshuha Steel Co Ltd,41
5480.T,952240,Nippon Yakin Kogyo Co Ltd,41
5481.T,946178,Sanyo Special Steel Co Ltd,41
5482.T,946179,Aichi Steel Corp,41
5484.T,991926,Tohoku Steel Co Ltd,41
5486.T,946180,Hitachi Metals Ltd,41
5491.T,952241,Nippon Kinzoku Co Ltd,41
5541.T,44300,Pacific Metals Co.,41
5542.T,991927,Shinhokoku Steel Corp,41
5563.T,952242,Nippon Denko Co Ltd,41
5602.T,952243,Kurimoto Ltd,41
5603.T,952244,Kogi Corp,41
5609.T,991928,Nippon Chuzo KK,41
5610.T,991929,Daiwa Heavy Industry Co Ltd,41
5612.T,952245,Nippon Chutetsukan KK,41
5614.T,991930,Kawakin Holdings Co Ltd,41
5631.T,44305,The Japan Steel Works,41
5632.T,952246,Mitsubishi Steel Mfg. Co Ltd,41
5644.T,991931,Metalart Corp,41
5658.T,952247,Nichia Steel Works Ltd,41
5659.T,952248,Nippon Seisen Co Ltd,41
5660.T,991932,Shinko Wire Co Ltd,41
5690.T,1156860,Rever Holdings Corp,41
5695.T,991933,Powdertech Co Ltd,41
5697.T,991934,Sanyu Co Ltd,41
5698.T,991935,Envipro Holdings Inc,41
5699.T,1084928,IBOKIN Co Ltd,41
5702.T,952249,Daiki Aluminium Industry Co Ltd,41
5703.T,44310,Nippon Light Metal Holdings Co.,41
5704.T,993290,JMC Corp,41
5706.T,44315,Mitsui Mining and Smelting Co.,41
5707.T,44320,Toho Zinc Co.,41
5711.T,44325,Mitsubishi Materials Corp.,41
5713.T,44330,Sumitomo Metal Mining Co.,41
5714.T,44111,DOWA Holdings Co.,41
5715.T,44116,Furukawa Co.,41
5721.T,952250,S Science Co Ltd,41
5724.T,991936,Asaka Riken Co Ltd,41
5726.T,946181,Osaka Titanium Tech Co Ltd,41
5727.T,952251,Toho Titanium Co Ltd,41
5729.T,991937,Nihon Seiko Co Ltd,41
5741.T,946182,Uacj Corp,41
5742.T,991938,NIC Autotec Inc,41
5753.T,991939,Nippon Shindo Co Ltd,41
5757.T,998071,CK San-Etsu Co Ltd,41
5781.T,991941,Toho Kinzoku Co Ltd,41
5801.T,44121,Furukawa Electric Co.,41
5802.T,44126,Sumitomo Electric Industries Ltd.,41
5803.T,44131,Fujikura Ltd.,41
5805.T,952252,SWCC Showa Holdings Co Ltd,41
5807.T,952253,Totoku Electric Co Ltd,41
5809.T,952254,Tatsuta Electric Wire and Cable Co Ltd,41
5816.T,991942,Onamba Co Ltd,41
5817.T,991943,JMACS Japan Co Ltd,41
5819.T,952256,Canare Electric Co Ltd,41
5820.T,991944,Mitsuboshi Co Ltd,41
5821.T,952257,Hirakawa Hewtech Corp,41
5851.T,952258,Ryobi Ltd,41
5852.T,952259,Ahresty Corp,41
5856.T,991945,Tori Holdings Co Ltd,41
5857.T,952260,Asahi Holdings Inc,41
5900.T,991946,Daiken Co Ltd,41
5901.T,44136,Toyo Seikan Group Holdings,41
5902.T,952261,Hokkan Holdings Ltd,41
5903.T,991947,Shinpo Co Ltd,41
5905.T,991948,Nihon Seikan KK,41
5906.T,991949,MK Seiko Co Ltd,41
5907.T,991950,JFE Container Co Ltd,41
5909.T,952262,Corona Corp,41
5911.T,952263,Yokogawa Bridge Holdings Corp,41
5912.T,952264,OSJB Holdings Corp,41
5915.T,952265,Komaihaltec Inc,41
5918.T,991951,Takigami Steel Construction Co Ltd,41
5921.T,991952,Kawagishi Bridge Works Co Ltd,41
5922.T,991953,Nasu Denki Tekko Co Ltd,41
5923.T,952266,Takadakiko Steel Construction Co Ltd,41
5928.T,991954,Almetax Manufacturing Co Ltd,41
5929.T,946183,Sanwa Holdings Corp,41
5930.T,952267,Bunka Shutter Co Ltd,41
5932.T,952268,Sankyo Tateyama Inc,41
5933.T,952269,Alinco Inc,41
5935.T,991955,Gantan Beauty Industry Co Ltd,41
5936.T,952270,Toyo Shutter Co Ltd,41
5938.T,946184,Lixil Group,41
5939.T,991956,Otani Kogyo Co Ltd,41
5940.T,991957,Fujisash Co Ltd,41
5941.T,991958,Nakanishi MFG Co Ltd,41
5942.T,952271,Nippon Filcon Co Ltd,41
5943.T,952272,Noritz Corp,41
5945.T,991959,Tenryu Saw Mfg. Co Ltd,41
5946.T,952273,Chofu Seisakusho Co Ltd,41
5947.T,946185,Rinnai Corp,41
5949.T,946186,Unipres Corp,41
5950.T,991960,Japan Power Fastening Co Ltd,41
5951.T,952274,Dainichi Co Ltd,41
5952.T,991961,Amatei Inc,41
5955.T,991962,Yamashina Corp,41
5956.T,991963,Toso Co Ltd,41
5957.T,952275,Nitto Seiko Co Ltd,41
5958.T,952276,Sanyo Industries Ltd,41
5959.T,952277,Okabe Co Ltd,41
5962.T,991964,Asaka Industrial Co Ltd,41
5964.T,991965,Toyo Knife Co Ltd,41
5965.T,991966,Fujimak Corp,41
5966.T,991967,Kyoto Tool Co Ltd,41
5967.T,991968,Tone Co Ltd,41
5969.T,991969,Lobtex Co Ltd,41
5970.T,952278,G-Tekt Corp,41
5971.T,991970,Kyowakogyosyo Co Ltd,41
5973.T,991971,Toami Corp,41
5974.T,952279,ChugokuKogyo Co Ltd,41
5975.T,952280,Topre Corp,41
5976.T,952281,Neturen Co Ltd,41
5981.T,952282,Tokyo Rope Mfg Co Ltd,41
5982.T,991972,Maruzen Co Ltd,41
5983.T,991973,Iwabuchi Corp,41
5984.T,991974,Kanefusa Corp,41
5985.T,952283,Suncall Corp,41
5986.T,952284,Molitec Steel Co Ltd,41
5987.T,991975,Onex Corp,41
5988.T,952285,Piolax Inc,41
5989.T,991976,H-One Co Ltd,41
5990.T,991977,Super Tool Co Ltd,41
5991.T,946187,Nhk Spring Co Ltd,41
5992.T,952286,Chuo Spring Co Ltd,41
5994.T,991978,Fine Sinter Co Ltd,41
5997.T,991979,Kyoritsu Air Tech Inc,41
5998.T,952287,Advanex Inc,41
5999.T,991980,Ihara Science Corp,41
6005.T,952288,Miura Co Ltd,41
6013.T,952289,Takuma Co Ltd,41
6016.T,991981,Kobe Diesel Co Ltd,41
6018.T,991982,Hanshin Diesel Works Ltd,41
6022.T,991983,Akasaka Diesels Ltd,41
6023.T,991984,Daihatsu Diesel Mfg Co Ltd,41
6026.T,1012003,Gmo Tech Inc,41
6027.T,1012004,Bengo4 Com Inc,41
6028.T,952290,TechnoPro Holdings Inc,41
6029.T,991985,Artra Corp,41
6030.T,1012005,Adventure Inc,41
6031.T,1012006,Scigineer Inc,41
6032.T,976140,Interworks Inc,41
6033.T,1012007,Extreme Co Ltd,41
6034.T,1012008,Mrt Inc,41
6035.T,991986,IR Japan Holdings Ltd,41
6036.T,976141,KeePer Technical Laboratory Co Ltd,41
6037.T,976142,Firstlogic Inc,41
6038.T,1012009,Iid Inc,41
6039.T,1012010,Japan Animal Referral Medical Center Co Ltd,41
6040.T,1012011,Nippon Ski Resort Development Co Ltd,41
6042.T,991987,Nikki Co Ltd,41
6044.T,991988,Sanki Service Corp,41
6045.T,1012012,Rentracks Co Ltd,41
6046.T,1012013,Linkbal Inc,41
6047.T,1012014,Gunosy Inc,41
6048.T,991989,DesignOne Japan Inc,41
6049.T,1012015,Itokuro Inc,41
6050.T,991990,E-Guardian Inc,41
6054.T,952291,Livesense Inc,41
6055.T,952292,Japan Material Co Ltd,41
6058.T,952293,Vector Inc,41
6059.T,952294,Uchiyama Holdings Co Ltd,41
6060.T,991991,Cocolonet Co Ltd,41
6061.T,991992,Universal Engeisha Co Ltd,41
6062.T,991993,Charm Care Corp,41
6063.T,991994,Emergency Assistance Japan Co Ltd,41
6064.T,1096322,Actcall Inc,41
6067.T,1096323,Mediaflag Inc,41
6069.T,1096324,Trenders Inc,41
6070.T,952296,Careerlink Co Ltd,41
6071.T,976143,IBJ Inc,41
6072.T,1096325,Jibannet Holdings Co Ltd,41
6073.T,952297,Asante Inc,41
6074.T,991995,JSS Corp,41
6077.T,952298,N Field Co Ltd,41
6078.T,991996,Value HR Co Ltd,41
6080.T,952299,M&A Capital Partners Co Ltd,41
6081.T,1012017,Allied Architects Inc,41
6082.T,976144,Ride on Express Co Ltd,41
6083.T,952300,ERI Holdings Co Ltd,41
6085.T,1012019,Architects Studio Japan Inc,41
6086.T,1012020,Shin Pro Maint Inc,41
6087.T,952301,Abist Co Ltd,41
6088.T,1012021,Sigmaxyz Inc,41
6089.T,952302,Will Group Inc,41
6090.T,1012022,Human Metabolome Technologies Inc,41
6091.T,991997,Wesco Holdings Inc,41
6092.T,1012023,Enbio Holdings Inc,41
6093.T,991998,Escrow Agent Japan Inc,41
6094.T,1012024,Freakout Inc,41
6095.T,1012025,Medpeer Inc,41
6096.T,1012026,Rarejob Inc,41
6098.T,952303,Recruit Holdings Co Ltd,41
6099.T,976146,Elan Corp,41
6101.T,946188,Tsugami Corp,41
6103.T,44141,Okuma Corp.,41
6104.T,946189,Toshiba Machine Co Ltd,41
6113.T,44146,Amada Co.,41
6118.T,952304,Aida Engineering Ltd,41
6121.T,952305,Takisawa Machine Tool Co Ltd,41
6125.T,992000,Okamoto Machine Tool Works Ltd,41
6131.T,992001,Hamai Co Ltd,41
6134.T,952306,Fuji Machine Mfg. Co Ltd,41
6135.T,946190,Makino Milling Machine Co Ltd,41
6136.T,946191,OSG Corp,41
6137.T,992002,Koike Sanso Kogyo Co Ltd,41
6138.T,952307,Dijet Industrial Co Ltd,41
6140.T,946192,Asahi Diamond Ind Co Ltd,41
6141.T,946193,Dmg Mori Seiki Co Ltd,41
6143.T,952308,Sodick Co Ltd,41
6144.T,992003,Seibu Electric & Machinery Co Ltd,41
6145.T,992004,Nittoku Engineering Co Ltd,41
6146.T,946194,Disco Corp,41
6147.T,992005,Yamazaki Co Ltd,41
6149.T,992006,Odawara Engineering Co Ltd,41
6150.T,992007,Takeda Machinery Co Ltd,41
6151.T,952309,Nitto Kohki Co Ltd,41
6155.T,992008,Takamatsu Machinery Co Ltd,41
6156.T,992009,A-One Seimitsu Inc,41
6157.T,992010,NS Tool Co Ltd,41
6158.T,992011,Waida MFG. Co Ltd,41
6159.T,992012,Micron Machinery Co Ltd,41
6161.T,992013,Estic Corp,41
6164.T,992015,Taiyo Koki Co Ltd,41
6165.T,952310,Punch Industry Co Ltd,41
6166.T,1012027,Nakamura Choukou Co Ltd,41
6167.T,992016,Fuji Die Co Ltd,41
6171.T,992017,CE Management Integrated Laboratory Co Ltd,41
6172.T,1012028,Metaps Inc,41
6173.T,1012029,Aqualine Ltd,41
6175.T,998072,Net Marketing Co Ltd,41
6176.T,1012030,Brangista Inc,41
6177.T,1012031,Appbank Inc,41
6178.T,959213,Japan Post Holdings Co Ltd,41
6180.T,1012032,Gmo Media Inc,41
6181.T,1012033,Partner Agent Inc,41
6182.T,1012034,Rozetta Corporation,41
6183.T,976147,BELLSYSTEM24 Holdings Inc,41
6184.T,961977,Kamakura Shinsho Ltd,41
6185.T,962382,So-net Media Networks Corp,41
6186.T,962383,Ichikura Co Ltd,41
6187.T,969041,Litalico Inc,41
6188.T,969042,Fuji Soft Service Bureau Inc,41
6189.T,969043,Global Group Corp,41
6190.T,969044,PhoenixBio Co Ltd,41
6191.T,976148,Evolable Asia Corp,41
6192.T,976149,HyAS&Co. Inc,41
6193.T,985821,Virtualex Consulting Inc,41
6194.T,985195,Atrae Inc,41
6195.T,985196,Hope Inc,41
6196.T,985822,Strike Company Ltd,41
6197.T,985823,Solasto Corp,41
6198.T,985824,Career Co Ltd,41
6199.T,985825,Seraku Co Ltd,41
6200.T,986001,Insource Co Ltd,41
6201.T,946195,Toyota Industries Corp,41
6203.T,952311,Howa Machinery Ltd,41
6205.T,952312,OKK Corp,41
6208.T,952313,Ishikawa Seisakusho Ltd,41
6210.T,952314,Toyo Machinery Metal Co Ltd,41
6217.T,952315,Tsudakoma Corp,41
6218.T,952316,Enshu Ltd,41
6222.T,952317,Shima Seiki Mfg. Ltd,41
6231.T,1156767,Kimura Kohki Co Ltd,41
6232.T,1097911,Autonomous Control Systems Laboratory Ltd,41
6233.T,1094239,Kyokuto Sanki Co Ltd,41
6235.T,1056473,Optorun Co Ltd,41
6236.T,976150,NC Holdings Co Ltd,41
6237.T,969045,Iwaki Co Ltd,41
6238.T,962384,FuRyu Corp,41
6239.T,992018,Nagaoka International Corp,41
6240.T,976151,Yamashin-Filter Corp,41
6245.T,992019,Hirano Tecseed Co Ltd,41
6246.T,992020,Techno Smart Corp,41
6247.T,952318,Hisaka Works Ltd,41
6248.T,992021,Yokota Manufacturing Co Ltd,41
6249.T,992022,Gamecard Joyco Holdings Inc,41
6250.T,952319,Yamabiko Corp,41
6254.T,992023,Nomura Micro Science Co Ltd,41
6255.T,1052085,NPC Inc Japan,41
6257.T,992025,Fujishoji Co Ltd,41
6258.T,992026,Hirata Corp,41
6262.T,952320,Pegasus Sewing Machine Mfg Co Ltd,41
6264.T,1050144,Marumae Co Ltd,41
6265.T,992027,Myotoku Ltd,41
6266.T,992028,Tazmo Co Ltd,41
6267.T,992029,General Packer Co Ltd,41
6268.T,946196,Nabtesco Corp,41
6269.T,952321,Modec Inc,41
6271.T,992030,Nissei Corp,41
6272.T,952322,Rheon Automatic Machinery Co Ltd,41
6273.T,946197,SMC Corp,41
6276.T,992031,Navitas Co Ltd,41
6277.T,952324,Hosokawa Micron Corp,41
6278.T,952325,Union Tool Co,41
6279.T,992032,Zuiko Corp,41
6281.T,992033,Maeda Seisakusho Co Ltd,41
6282.T,952326,Oiles Corp,41
6284.T,952327,Nissei ASB Machine Co Ltd,41
6286.T,992034,Seiko Corp,41
6287.T,952328,Sato Holdings Corp,41
6289.T,992035,Giken Ltd,41
6291.T,952329,Airtech Japan Ltd,41
6292.T,992036,Kawata Mfg. Co Ltd,41
6293.T,952330,Nissei Plastic Industrial Co Ltd,41
6294.T,976152,Okada Aiyon Corp,41
6297.T,992037,Koken Boring Machine Co Ltd,41
6298.T,952331,Y.A.C. Co Ltd,41
6299.T,992038,Kobelco Eco-Solutions Co Ltd,41
6301.T,44151,Komatsu Ltd.,41
6302.T,44156,Sumitomo Heavy Industries,41
6303.T,992040,Sasakura Engineering Co Ltd,41
6305.T,44161,Hitachi Construction Machinery Co,41
6306.T,952332,Nikko Co Ltd,41
6307.T,992041,Sansei Co Ltd,41
6309.T,952333,Tomoe Engineering Co Ltd,41
6310.T,946198,Iseki & Co Ltd,41
6312.T,992042,Freund Corp,41
6315.T,952334,Towa Corp,41
6316.T,952335,Maruyama MFG Co Inc,41
6317.T,952336,Kitagawa Iron Works Co Ltd,41
6319.T,952337,SNT Corp,41
6322.T,992044,Tacmina Corp,41
6323.T,992045,Rorze Corp,41
6324.T,992046,Harmonic Drive Systems Inc,41
6325.T,976153,Takakita Co Ltd,41
6326.T,44166,Kubota Corp.,41
6327.T,992047,Kitagawa Seiki Co Ltd,41
6328.T,952338,Ebara Jitsugyo Co Ltd,41
6330.T,946199,Toyo Engineering Corp,41
6331.T,952339,Mitsubishi Kakoki Kaisha Ltd,41
6332.T,952340,Tsukishima Kikai Co Ltd,41
6333.T,952341,Teikoku Electric Mfg. Co Ltd,41
6334.T,992048,Meiji Machine Co Ltd,41
6335.T,952342,Tokyo Kikai Seisakusho Ltd,41
6336.T,992049,Ishii Hyoki Co Ltd,41
6337.T,992050,Tesec Corp,41
6338.T,992051,Takatori Corp,41
6339.T,952343,Sintokogio Ltd,41
6340.T,952344,Shibuya Kogyo Co Ltd,41
6342.T,992052,Taihei Machinery Works Ltd,41
6343.T,992053,Freesia Macross Corp,41
6345.T,952345,Aichi Corp,41
6346.T,992054,Kikukawa Enterprise Inc,41
6347.T,992055,Placo Co Ltd,41
6349.T,952346,Komori Corp,41
6351.T,952347,Tsurumi Manufacturing Co Ltd,41
6355.T,952348,Sumitomo Precision Products Co Ltd,41
6356.T,992056,Nippon Gear Co Ltd,41
6357.T,992057,Sansei Technologies Inc,41
6358.T,952349,Sakai Heavy Industries Ltd,41
6360.T,992058,Tokyo Automatic Machinery Works Ltd,41
6361.T,44171,Ebara Corp.,41
6362.T,952350,Ishii Iron Works Co Ltd,41
6363.T,952351,Torishima Pump Mfg Co Ltd,41
6364.T,952352,Hokuetsu Industries Co Ltd,41
6365.T,992059,DMW Corp,41
6366.T,44176,Chiyoda Corp.,41
6367.T,44181,Daikin Industries,41
6368.T,952353,Organo Corp,41
6369.T,952354,Toyo Kanetsu KK,41
6370.T,946200,Kurita Water Industries Ltd,41
6371.T,946201,Tsubakimoto Chain Co,41
6373.T,952355,Daido Kogyo Co Ltd,41
6376.T,952357,Nikkiso Co Ltd,41
6378.T,952358,Kimura Chemical Plants Co Ltd,41
6379.T,952359,Shinko Plantech Co Ltd,41
6380.T,992060,Oriental Chain Mfg Co Ltd,41
6381.T,952360,Anest Iwata Corp,41
6382.T,992061,Trinity Industrial Corp,41
6383.T,946202,Daifuku Co Ltd,41
6384.T,992062,Showa Shinku Co Ltd,41
6387.T,952361,Samco Inc,41
6390.T,952362,Kato Works Co Ltd,41
6391.T,992063,Kaji Technology Corp,41
6392.T,992064,Yamada Corp,41
6393.T,952363,Yuken Kogyo Co Ltd,41
6395.T,952364,Tadano Ltd,41
6396.T,992065,Unozawa-gumi Iron Works Ltd,41
6400.T,992067,Fuji Seiki Co Ltd,41
6402.T,992068,Kanematsu Engineering Co Ltd,41
6403.T,992069,Suido Kiko Kaisha Ltd,41
6405.T,992070,Suzumo Machinery Co Ltd,41
6406.T,952365,Fujitec Co Ltd,41
6407.T,952366,CKD Corp,41
6408.T,992071,Ogura Clutch Co Ltd,41
6409.T,952367,Kito Corp,41
6411.T,992072,Nakano Refrigerators Co Ltd,41
6412.T,946203,Heiwa Corp,41
6413.T,952368,Riso Kagaku Corp,41
6414.T,992982,Kawasaki Thermal Engineering Co Ltd,41
6416.T,992073,Katsuragawa Electric Co Ltd,41
6417.T,946204,Sankyo Co Ltd,41
6418.T,952369,Japan Cash Machine Co Ltd,41
6419.T,952370,Mars Engineering Corp,41
6420.T,952371,Fukushima Industries Corp,41
6424.T,992074,Takamisawa Cybernetics Co Ltd,41
6425.T,992075,Universal Entertainment Corp,41
6428.T,952372,Oizumi Corp,41
6430.T,952373,Daikoku Denki Co Ltd,41
6432.T,952374,Takeuchi Mfg Co Ltd,41
6433.T,992076,Hephaist Seiko Co Ltd,41
6436.T,952375,Amano Corp,41
6440.T,952376,Juki Corp,41
6444.T,946205,Sanden Corp,41
6445.T,952377,Janome Sewing Machine Co Ltd,41
6448.T,946206,Brother Industries Ltd,41
6454.T,952378,Max Co Ltd,41
6455.T,952379,Morita Holdings Corp,41
6457.T,952380,Glory Ltd,41
6458.T,952381,Sinko Industries Ltd,41
6459.T,952382,Daiwa Industries Ltd,41
6460.T,946207,Sega Sammy Holdings,41
6461.T,952383,Nippon Piston Ring Co Ltd,41
6462.T,952384,Riken Corp,41
6463.T,952385,TPR Co Ltd,41
6464.T,962385,Tsubaki Nakashima Co Ltd,41
6465.T,952386,Hoshizaki Electric Co Ltd,41
6466.T,992077,Toa Valve Engineering Inc,41
6467.T,992078,Nichidai Corp,41
6469.T,992079,Hoden Seimitsu Kako Kenkyusho Co Ltd,41
6470.T,952387,Taiho Kogyo Co Ltd,41
6471.T,44186,NSK Ltd.,41
6472.T,44191,NTN Corp.,41
6473.T,44196,JTEKT Corp.,41
6474.T,946208,Nachi-Fujikoshi Corp,41
6479.T,44201,Minebea Mitsumi Inc,41
6480.T,952388,Nippon Thompson Co Ltd,41
6481.T,946209,THK Ltd,41
6482.T,952389,Yushin Precision Equipment Co Ltd,41
6484.T,992081,KVK Corp,41
6485.T,952390,Maezawa Kyuso Industries Co Ltd,41
6486.T,952391,Eagle Industry Co Ltd,41
6488.T,992082,Yoshitake Inc,41
6489.T,952392,Maezawa Industries Inc,41
6490.T,952393,Nippon Pillar Packing Co Ltd,41
6492.T,992083,Okano Valve Mfg. Co Ltd,41
6493.T,992084,Nittan Valve Co Ltd,41
6494.T,992085,NFK Holdings Co Ltd,41
6495.T,992086,Miyairi Valve MFG Co Ltd,41
6496.T,992087,Nakakita Seisakusho Co Ltd,41
6497.T,992088,Hamai Industries Ltd,41
6498.T,952394,Kitz Corp,41
6501.T,44206,Hitachi Ltd,41
6502.T,44211,Toshiba Corp.,41
6503.T,44216,Mitsubishi Electric Corp,41
6504.T,44221,Fuji Electric Co.,41
6505.T,952395,Toyo Denki Seizo KK,41
6506.T,44226,Yaskawa Electric Corp.,41
6507.T,952396,Sinfonia Technology Co Ltd,41
6508.T,44231,Meidensha Corp.,41
6513.T,952397,Origin Electric Co Ltd,41
6516.T,952398,Sanyo Denki Co Ltd,41
6517.T,952399,Denyo Co Ltd,41
6518.T,992089,Sanso Electric Co Ltd,41
6531.T,986107,Refinverse Inc,41
6532.T,987115,BayCurrent Consulting Inc,41
6533.T,989481,Digital Identity Inc,41
6535.T,992792,I-mobile Co Ltd,41
6537.T,993291,Washhouse Co Ltd,41
6538.T,994241,CareerIndex Inc,41
6539.T,994242,Matching Service Japan Co Ltd,41
6540.T,994243,Semba Corp,41
6541.T,994244,Grace Technology Inc,41
6542.T,994494,Founder s Consultants Holdings Inc,41
6543.T,996161,Nissen Inc,41
6544.T,997445,Japan Elevator Service Holdings Co Ltd,41
6545.T,998073,internet infinity Inc,41
6546.T,998074,Fulltech Co Ltd,41
6547.T,998075,Greens Co Ltd,41
6548.T,1006186,Tabikobo Co Ltd,41
6549.T,1010724,DM Solutions Co Ltd,41
6550.T,1010868,Fringe81 Co Ltd,41
6551.T,1011055,Tsunagu Solutions Inc,41
6552.T,1011056,GameWith Inc,41
6553.T,1012047,SoldOut Inc,41
6554.T,1031383,SUS Co Ltd,41
6555.T,1050755,Ms&Consulting Co Ltd,41
6556.T,1050756,Welbe Inc,41
6557.T,1155740,Global Bridge Holdings Co Ltd,41
6558.T,1055284,Cookbiz Co Ltd,41
6560.T,1056466,LTS Inc,41
6561.T,1056468,Hanatour Japan Co Ltd,41
6562.T,1056469,Geniee Inc,41
6563.T,1056470,Mirai Works Inc,41
6564.T,1056476,Midac Co Ltd,41
6565.T,1056477,ABHOTEL CO LTD,41
6566.T,1056478,KANAME KOGYO CO LTD,41
6567.T,1066604,SERIO Holdings,41
6568.T,1072218,KNC Laboratories Co Ltd,41
6569.T,1072220,Nisso Corporation,41
6570.T,1072309,KyOwa Corporation,41
6571.T,1072313,QB Net Holdings Co,41
6572.T,1073026,RPA Holdings,41
6573.T,1073027,Agile Media Network,41
6574.T,1073034,Convano Inc,41
6575.T,1073033,Human Associates Holdings Inc,41
6577.T,1073144,Bestone com Co Ltd,41
6578.T,1073142,NLINKS Co Ltd,41
6579.T,1077000,logly Inc,41
6580.T,1076996,Writeup Co Ltd,41
6584.T,952401,Sanoh Industrial Co Ltd,41
6586.T,946210,Makita,41
6588.T,946211,Toshiba Tec Corp,41
6590.T,952402,Shibaura Mechatronics Corp,41
6592.T,946212,Mabuchi Motor Ltd,41
6594.T,946213,Nidec Corp,41
6596.T,1166830,Tsukubaseiko Co Ltd,41
6597.T,1152257,Hpc Systems Inc,41
6599.T,1162805,Ebrains Inc,41
6615.T,969046,UMC Electronics Co Ltd,41
6616.T,992091,Torex Semiconductor Ltd,41
6617.T,952403,Takaoka Toko Co Ltd,41
6618.T,1096326,Ohizumi MFG Co Ltd,41
6619.T,976154,W-Scope Corp,41
6620.T,952404,Miyakoshi Holdings Inc,41
6622.T,952405,Daihen Corp,41
6625.T,992092,Jalco Holdings Inc,41
6626.T,992093,Semitec Corp,41
6627.T,1096327,Tera Probe Inc,41
6628.T,992094,Onkyo Corp,41
6629.T,992095,Techno Horizon Holdings Co Ltd,41
6630.T,952407,Ya-Man Ltd,41
6632.T,946214,JVC Kenwood Corp,41
6633.T,992096,C&G Systems Inc,41
6634.T,992097,NCXX Group Inc,41
6635.T,992098,Di-Nikko Engineering Co Ltd,41
6637.T,992100,Terasaki Electric Co Ltd,41
6638.T,952408,Mimaki Engineering Co Ltd,41
6639.T,992101,Contec Co Ltd,41
6640.T,952409,Dai-Ichi Seiko Co Ltd,41
6641.T,952410,Nissin Electric Co Ltd,41
6643.T,992102,Togami Electric Mfg Co Ltd,41
6644.T,952411,Osaki Electric Co Ltd,41
6645.T,946215,Omron Cor,41
6647.T,992103,Morio Denki Co Ltd,41
6648.T,992104,Kawaden Corp,41
6651.T,952412,Nitto Kogyo Corp,41
6652.T,952413,IDEC Corp,41
6653.T,1055968,Seiko Electric Co Ltd,41
6654.T,952414,Fuji Electric Industry Co Ltd,41
6656.T,1096328,Inspec Inc,41
6658.T,992105,Shirai Electronics Industrial Co Ltd,41
6659.T,992106,Media Global Links Co Ltd,41
6662.T,992108,Ubiteq Inc,41
6663.T,992109,Taiyo Industrial Co Ltd,41
6664.T,992110,OptoElectronics Co Ltd,41
6666.T,992111,River Eletec Corp,41
6668.T,992112,Adtec Plasma Technology Co Ltd,41
6670.T,992114,MCJ Co Ltd,41
6674.T,44236,GS Yuasa Corp.,41
6675.T,952415,SAXA Holdings Inc,41
6676.T,952416,Melco Holdings Inc,41
6677.T,992115,SK-Electronics Co Ltd,41
6678.T,952417,Techno Medica Co Ltd,41
6694.T,998076,Zoom Corp,41
6696.T,1030997,Tranzas Inc,41
6697.T,1046330,Techpoint Inc,41
6698.T,1056381,Visco Technologies Corp,41
6699.T,992159,Diamond Electric Holdings Co Ltd,41
6701.T,44241,NEC Corp.,41
6702.T,44246,Fujitsu Ltd.,41
6703.T,44251,Oki Electric Industry Co.,41
6704.T,952418,Iwatsu Electric Co Ltd,41
6706.T,952419,Denki Kogyo Co Ltd,41
6707.T,946216,Sanken Electric Co Ltd,41
6709.T,992116,Meisei Electric Co Ltd,41
6715.T,952420,Nakayo Inc,41
6718.T,952421,Aiphone Co Ltd,41
6721.T,992119,Wintest Corp,41
6722.T,992120,A&T Corp,41
6723.T,100158,Renesas Electronics Corp,41
6724.T,946217,Seiko Epson Cor,41
6727.T,946218,Wacom Co Ltd,41
6728.T,946219,Ulvac Inc,41
6730.T,952422,Axell Corp,41
6731.T,992121,Pixela Corp,41
6734.T,992122,Newtech Co Ltd,41
6736.T,992123,Sun Corp,41
6737.T,952423,Eizo Corp,41
6740.T,952424,Japan Display Inc,41
6741.T,952425,Nippon Signal Co Ltd,41
6742.T,952426,Kyosan Electric Manufacturing Co Ltd,41
6743.T,992124,Daido Signal Co Ltd,41
6744.T,952427,Nohmi Bosai Ltd,41
6745.T,952428,Hochiki Corp,41
6748.T,992126,Seiwa Electric Mfg. Co Ltd,41
6750.T,952429,Elecom Co Ltd,41
6752.T,44256,Panasonic Corp,41
6753.T,969284,Sharp Corp,41
6754.T,946220,Anritsu Corp,41
6755.T,946221,Fujitsu General Ltd,41
6757.T,992127,OSG Corporation Co Ltd,41
6758.T,44266,Sony Corp,41
6762.T,44271,TDK Corp,41
6763.T,952431,Teikoku Tsushin Kogyo Co Ltd,41
6768.T,952432,Tamura Corp,41
6769.T,992128,Thine Electronics Inc,41
6770.T,44281,Alps Electric Co.,41
6771.T,952433,Ikegami Tsushinki Co Ltd,41
6772.T,992129,Tokyo Cosmos Electric Co Ltd,41
6775.T,992130,TB Group Inc,41
6776.T,992131,Tensho Electric Industries Co Ltd,41
6777.T,992132,Santec Corp,41
6778.T,992133,Artiza Networks Inc,41
6779.T,952434,Nihon Dempa Kogyo Co Ltd,41
6785.T,952435,Suzuki Co Ltd,41
6786.T,992134,RVH Inc,41
6787.T,992135,Meiko Electronics Co Ltd,41
6788.T,952436,Nihon Trim Co Ltd,41
6789.T,952437,Roland DG Corp,41
6794.T,952439,Foster Electric Co Ltd,41
6798.T,952440,SMK Corp,41
6800.T,952441,Yokowo Co Ltd,41
6803.T,952443,TEAC Corp,41
6804.T,952444,Hosiden Corp,41
6806.T,946224,Hirose Electric Co Ltd,41
6807.T,946225,Japan Aviation Electronics Ltd,41
6809.T,952445,TOA Corp,41
6810.T,952446,Hitachi Maxell Ltd,41
6814.T,952447,Furuno Electric Co Ltd,41
6815.T,952448,Uniden Corp,41
6817.T,952450,Sumida Corp,41
6819.T,992136,Izu Shaboten Resort Co Ltd,41
6820.T,952451,Icom Inc,41
6822.T,992137,Oi Electric Co Ltd,41
6823.T,952452,Rion Co Ltd,41
6824.T,992138,New Cosmos Electric Co Ltd,41
6826.T,976155,Honda Tsushin Kogyo Co Ltd,41
6832.T,992139,Aoi Electronics Co Ltd,41
6834.T,992140,Seikoh Giken Co Ltd,41
6835.T,992141,Allied Telesis Holdings KK,41
6836.T,992142,Plat �Home Co L,41
6837.T,992143,Kyosha Co Ltd,41
6838.T,992144,Tamagawa Holdings Co Ltd,41
6839.T,952453,Funai Electric Co Ltd,41
6840.T,992145,Akiba Holdings Co Ltd,41
6841.T,44291,Yokogawa Electric Corp.,41
6844.T,952454,Shindengen Electric Manufacturing Co Ltd,41
6845.T,946226,Azbil Corp,41
6848.T,952455,DKK-Toa Corp,41
6849.T,946227,Nihon Kohden Corp,41
6850.T,952456,Chino Corp,41
6852.T,992146,Technol Seven Co Ltd,41
6853.T,952457,Kyowa Electronic Instruments Co Ltd,41
6855.T,952458,Japan Electronic Materials Corp,41
6856.T,946228,Horiba Ltd,41
6857.T,44296,Advantest Corp.,41
6858.T,952459,Ono Sokki Co Ltd,41
6859.T,952460,Espec Corp,41
6861.T,943426,Keyence,41
6862.T,992147,Minato Holdings Inc,41
6863.T,992148,Nireco Corp,41
6864.T,992149,NF Corp,41
6866.T,952462,Hioki EE Corp,41
6867.T,992150,Leader Electronics Corp,41
6869.T,946229,Sysmex Cor,41
6870.T,992151,Fenwal Controls of Japan Ltd,41
6871.T,976156,Micronics Japan Co Ltd,41
6874.T,992152,Kyoritsu Electric Corp,41
6875.T,952463,MegaChips Corp,41
6877.T,952464,Obara Group Inc,41
6879.T,952465,Imagica Robot Holdings Inc,41
6881.T,992153,Kyoden Co Ltd,41
6882.T,992154,Sansha Electric Manufacturing Co Ltd,41
6888.T,992155,Acmos Inc,41
6890.T,992157,Ferrotec Corp,41
6894.T,992158,Pulstec Industrial Co Ltd,41
6897.T,992160,Twinbird Corp,41
6898.T,992161,Tomita Electric Co Ltd,41
6899.T,992162,Asti Corp,41
6901.T,952466,Sawafuji Electric Co Ltd,41
6902.T,44301,Denso Corp.,41
6904.T,992163,Harada Industry Co Ltd,41
6905.T,952467,Cosel Co Ltd,41
6907.T,992164,Geomatec Co Ltd,41
6908.T,992165,Iriso Electronics Co Ltd,41
6912.T,992166,Kikusui Electronics Corp,41
6914.T,952469,Optex Co Ltd,41
6915.T,952470,Chiyoda Integre Co Ltd,41
6916.T,976157,I-O Data Device Inc,41
6918.T,992167,Aval Data Corp,41
6919.T,992168,Kel Corp,41
6920.T,952471,Lasertec Corp,41
6923.T,946230,Stanley Electric Co Ltd,41
6924.T,952472,Iwasaki Electric Co Ltd,41
6925.T,946231,Ushio Inc,41
6926.T,952473,Okaya Electric Industries Co Ltd,41
6927.T,952474,Helios Techno Holding Co Ltd,41
6928.T,992169,Enomoto Co Ltd,41
6929.T,952475,Nippon Ceramic Co Ltd,41
6930.T,992170,Nippon Antenna Co Ltd,41
6932.T,952476,Endo Lighting Corp,41
6937.T,952478,Furukawa Battery Co Ltd,41
6938.T,952479,Soshin Electric Co Ltd,41
6941.T,952480,Yamaichi Electronics Co Ltd,41
6942.T,992171,Sophia Holdings Co Ltd,41
6943.T,992172,NKK Switches Co Ltd,41
6944.T,992173,Airex Inc,41
6945.T,992174,Fujitsu Frontech Ltd,41
6946.T,992175,Nippon Avionics Co Ltd,41
6947.T,952481,Zuken Inc,41
6951.T,952482,JEOL Ltd,41
6952.T,44306,Casio Computer Co.,41
6954.T,44311,Fanuc Corp.,41
6955.T,992176,FDK Corp,41
6957.T,992177,Shibaura Electronics Co Ltd,41
6958.T,952483,CMK Corp,41
6960.T,992178,Fukuda Denshi Co Ltd,41
6961.T,952484,Enplas Corp,41
6962.T,952485,Daishinku Corp,41
6963.T,946232,Rohm Ltd,41
6964.T,992179,Sanko Co Ltd,41
6965.T,946233,Hamamatsu Photonics KK,41
6966.T,952486,Mitsui High-tec Inc,41
6967.T,946234,Shinko Electric Ind Co Ltd,41
6969.T,992180,Matsuo Electric Co Ltd,41
6971.T,44316,Kyocera Corp.,41
6973.T,952487,Kyoei Sangyo Co Ltd,41
6976.T,44321,Taiyo Yuden Co.,41
6977.T,992182,Japan Resistor Mfg. Co Ltd,41
6981.T,943427,Murata Mfg Co,41
6982.T,992183,Lead Co Inc,41
6986.T,952489,Futaba Corp,41
6988.T,44458,Nitto Denko Co,41
6989.T,952490,Hokuriku Electric Industry Co Ltd,41
6993.T,992184,Daikokuya Holdings Co Ltd,41
6994.T,992185,Shizuki Electric Co Inc,41
6995.T,946235,Tokai Rika Co Ltd,41
6996.T,946236,Nichicon Corp,41
6997.T,946237,Nippon Chemi-Con Corp,41
6998.T,992186,Nippon Tungsten Co Ltd,41
6999.T,952491,Koa Corp,41
7003.T,44326,Mitsui Engineering & Shipbuilding,41
7004.T,44331,Hitachi Zosen Corp.,41
7011.T,44112,Mitsubishi Heavy Industries,41
7012.T,44117,Kawasaki Heavy Industries,41
7013.T,44122,IHI Corp.,41
7014.T,946238,Namura Shipbuild Co Ltd,41
7018.T,992187,Naikai Zosen Corp,41
7021.T,992188,Nitchitsu Co Ltd,41
7022.T,952492,Sanoyas Holdings Corp,41
7030.T,1079291,SPRIX,41
7033.T,1082074,Management Solutions Co Ltd,41
7034.T,1082131,Prored Partners Co Ltd,41
7035.T,1089601,And Factory Inc,41
7036.T,1091201,eMnet Japan Co Ltd,41
7037.T,1091199,teno Holdings Co Ltd,41
7038.T,1094238,Frontier Management Inc,41
7039.T,1095161,Bridge International Corp,41
7040.T,991822,Sun Life Holding Co Ltd,41
7041.T,1096005,CRG Holdings Co Ltd,41
7042.T,1096205,Access Group Holdings Co Ltd,41
7043.T,1097735,Alue Co Ltd,41
7044.T,1097736,PIALA Inc,41
7045.T,1097776,Tsukui Staff Corp,41
7046.T,1097886,Tecnos Data Science Engineering Inc,41
7047.T,1097913,Port Inc,41
7048.T,1099589,Veltra Corp,41
7049.T,1117998,SHIKIGAKU Co Ltd,41
7050.T,1118185,Frontier International Inc,41
7057.T,1122223,New Constructor's Network Co Ltd,41
7058.T,1123308,Kyoei Security Service Co,41
7059.T,1123311,Copro Holdings Co,41
7060.T,1123312,Geechs Inc,41
7061.T,1123808,Japan Hospice Holdings Inc,41
7062.T,1123810,Fureasu Co Ltd,41
7063.T,1123812,A Dot Co Ltd,41
7064.T,1123972,Howtelevision Inc,41
7065.T,1130935,Upr Corp,41
7066.T,1131559,Peers Co Ltd,41
7067.T,1131560,Branding Technology Inc,41
7068.T,1138463,Feedforce Inc,41
7069.T,1152222,CyberBuzz Inc,41
7070.T,991383,SI Holdings Plc,41
7071.T,1152345,Amvis Holdings Inc,41
7072.T,1152821,Intimate Merger Inc,41
7073.T,1152998,Jaic Co Ltd,41
7074.T,1153253,Twenty Four Seven Inc,41
7077.T,1155104,Alink Internet Inc,41
7078.T,1155642,Inclusive Inc,41
7079.T,1155694,Wdb Coco Co Ltd,41
7080.T,1155693,Sportsfield Co Ltd,41
7081.T,1156246,Koyou Rentia Co Ltd,41
7082.T,1156247,Jimoty Inc,41
7083.T,1156577,Ahc Group Inc,41
7084.T,1156643,Kids Smile Holdings Inc,41
7085.T,1156764,Curves Holdings Co Ltd,41
7086.T,1156704,Kizuna Holdings Corp,41
7087.T,1156705,Willtec Co Ltd,41
7088.T,1156765,Forum Engineering Inc,41
7089.T,1156766,For Startups Inc,41
7090.T,1156864,Ligua Inc,41
7091.T,1156863,Living Platform Ltd,41
7093.T,1158935,Adish Co Ltd,41
7094.T,1158938,Nextone Inc,41
7095.T,1158939,Macbee Planet Inc,41
7097.T,1167051,Sakurasaku Plus Co Ltd,41
7102.T,952493,Nippon Sharyo Ltd,41
7105.T,952494,Mitsubishi Nichiyu Forklift Co Ltd,41
7122.T,952495,Kinki Sharyo Co Ltd,41
7148.T,952496,Financial Products Group Co Ltd,41
7150.T,952497,Shimane Bank Ltd,41
7157.T,1096329,Lifenet Insurance Co,41
7161.T,952498,Jimoto Holdings Inc,41
7162.T,992189,Astmax Co Ltd,41
7164.T,952499,Zenkoku Hosho Co Ltd,41
7167.T,952500,Ashikaga Holdings Co Ltd,41
7169.T,992190,Newton Financial Consulting Inc,41
7170.T,1122734,Chuou International Group Co Ltd,41
7172.T,1012035,Japan Investment Adviser Co Ltd,41
7173.T,952501,Tokyo TY Financial Group Inc,41
7175.T,992191,Imamura Securities Co Ltd,41
7177.T,945924,GMO Click Holdings Inc,41
7180.T,976158,Kyushu Financial Group Inc,41
7181.T,959214,Japan Post Insurance Co Ltd,41
7182.T,959212,Japan Post Bank Co Ltd,41
7183.T,1012036,Anshin Guarantor Service Co Ltd,41
7184.T,969047,First Bank of Toyama Ltd,41
7185.T,969048,Hirose Tusyo Inc,41
7186.T,976159,Concordia Financial Group Ltd,41
7187.T,985826,J-Lease Co Ltd,41
7189.T,991187,Nishi-Nippon Financial Holdings Inc,41
7190.T,992793,Mercuria Investment Co Ltd,41
7191.T,994042,Entrust Inc,41
7192.T,994245,Mortgage Service Japan Ltd,41
7196.T,1050745,Casa Inc,41
7198.T,1056382,Aruhi Corp,41
7199.T,1056475,Premium Group Co Ltd,41
7201.T,44127,Nissan Motor Co.,41
7202.T,44132,Isuzu Motors,41
7203.T,985692,Toyota Motor Corp,41
7205.T,44142,Hino Motors,41
7208.T,992192,Kanemitsu Corp,41
7211.T,44147,Mitsubishi Motors Corp.,41
7212.T,952502,F-Tech Inc,41
7213.T,952503,Lecip Holdings Corp,41
7214.T,952504,GMB Corp,41
7215.T,952505,Faltec Co Ltd,41
7217.T,992193,Tein Inc,41
7218.T,992194,Tanaka Seimitsu Kogyo Co Ltd,41
7219.T,992195,HKS Co Ltd,41
7220.T,952506,Musashi Seimitsu Industry Co Ltd,41
7222.T,952507,Nissan Shatai Co Ltd,41
7224.T,946239,Shinmaywa Industries Ltd,41
7226.T,952508,Kyokuto Kaihatsu Kogyo Co Ltd,41
7228.T,992196,Daytona Corp,41
7229.T,992197,Yutaka Giken Co Ltd,41
7231.T,946240,Topy Industries Ltd,41
7235.T,992198,Tokyo Radiator Mfg Co Ltd,41
7236.T,952510,T.RAD Co Ltd,41
7238.T,952511,Akebono Brake Industry Co Ltd,41
7239.T,952512,Tachi-S Co Ltd,41
7240.T,946241,NOK Corp,41
7241.T,952513,Futaba Industrial Co Ltd,41
7242.T,946242,Kayaba Industry Co Ltd,41
7244.T,952515,Ichikoh Industries Ltd,41
7245.T,952516,Daido Metal Co Ltd,41
7246.T,946243,Press Kogyo Co Ltd,41
7247.T,952517,Mikuni Corp,41
7250.T,952518,Pacific Industrial Co Ltd,41
7254.T,992199,Univance Corp,41
7255.T,992200,Sakurai Ltd,41
7256.T,952519,Kasai Kogyo Co Ltd,41
7259.T,946246,Aisin Seiki Ltd,41
7261.T,44152,Mazda Motor Corp,41
7264.T,992201,Muro Corp,41
7265.T,992202,Eiken Industries Co Ltd,41
7266.T,952521,Imasen Electric Industrial Co Ltd,41
7267.T,44157,Honda Motor Co Ltd,41
7268.T,992203,Tatsumi Corp,41
7269.T,44162,Suzuki Motor Corp.,41
7270.T,44167,Subaru Corp,41
7271.T,952522,Yasunaga Corp,41
7272.T,946248,Yamaha Motor Co Ltd,41
7273.T,992204,Ikuyo Co Ltd,41
7276.T,946249,Koito Mfg Co Ltd,41
7277.T,952524,TBK Co Ltd,41
7278.T,946250,Exedy Corp,41
7279.T,992205,Hi-Lex Corp,41
7280.T,952525,Mitsuba Corp,41
7282.T,946251,Toyoda Gosei Co Ltd,41
7283.T,952526,Aisan Industry Co Ltd,41
7284.T,952527,Meiwa Industry Co Ltd,41
7287.T,992206,Nippon Seiki Co Ltd,41
7291.T,992207,Nihon Plast Co Ltd,41
7292.T,992208,Murakami Corp,41
7294.T,952528,Yorozu Corp,41
7296.T,952529,F.C.C. Co Ltd,41
7297.T,992209,Car Mate Mfg Co Ltd,41
7298.T,992210,Yachiyo Industry Co Ltd,41
7299.T,992211,Fuji Oozx Inc,41
7305.T,952530,Araya Industrial Co Ltd,41
7309.T,946252,Shimano Inc,41
7313.T,946254,TS Tech Co Ltd,41
7314.T,992212,Odawara Auto-Machine Mfg Co Ltd,41
7315.T,992213,IJT Technology Holdings Co Ltd,41
7317.T,1159091,Matsuya R And D Co Ltd,41
7320.T,1073030,Japan Living Warranty Inc,41
7321.T,1088713,Kansai Mirai Financial Group Inc,41
7322.T,1088714,San Ju San Financial Group Inc,41
7325.T,1091241,IRRC Corporation,41
7326.T,1093891,SBI Insurance Group Co Ltd,41
7327.T,952780,Daishi Hokuetsu Financial Group Inc,41
7337.T,946290,Hirogin Holdings Inc,41
7338.T,992418,INV Inc,41
7339.T,1073143,ipet Holdings Inc,41
7351.T,1163031,Goodpatch Inc,41
7352.T,1163112,Branding Engineer Co Ltd,41
7353.T,1163258,Kiyo Learning Co Ltd,41
7354.T,1166449,Direct Marketing Mix Inc,41
7356.T,1167075,Retty Inc,41
7357.T,1167431,Geocode Co Ltd,41
7399.T,992214,Nansin Co Ltd,41
7408.T,952531,Jamco Corp,41
7412.T,992216,Atom Corp,41
7413.T,992217,Sokensha Co Ltd,41
7414.T,952532,Onoken Co Ltd,41
7416.T,952533,Haruyama Trading Co Ltd,41
7417.T,1057287,Nanyo Corp,41
7419.T,992218,Nojima Corp,41
7420.T,952534,Satori Electric Co Ltd,41
7421.T,952535,Kappa Create Holdings Co Ltd,41
7422.T,992219,Toho Lamac Co Ltd,41
7425.T,992220,Hatsuho Shouji Co Ltd,41
7426.T,992221,Yamadai Corp,41
7427.T,952536,Echo Trading Co Ltd,41
7433.T,952537,Hakuto Co Ltd,41
7434.T,992223,Otake Corp,41
7435.T,992224,Nadex Co Ltd,41
7438.T,952538,Kondotec Inc,41
7442.T,952539,Nakayamafuku Co Ltd,41
7443.T,992225,Yokohama Gyorui Co Ltd,41
7444.T,992226,Harima-Kyowa Co Ltd,41
7445.T,952540,Right On Co Ltd,41
7446.T,992227,Tohoku Chemical Co Ltd,41
7447.T,952541,Nagaileben Co Ltd,41
7448.T,952542,Jeans Mate Corp,41
7450.T,992228,Sunday Co Ltd,41
7451.T,952543,Mitsubishi Shokuhin Co Ltd,41
7453.T,946255,Ryohin Keikaku Ltd,41
7455.T,952544,Paris Miki Holdings Inc,41
7456.T,952545,Matsuda Sangyo Co Ltd,41
7458.T,976160,Daiichikosho Co Ltd,41
7459.T,946256,Medipal Holdings Corp,41
7460.T,992229,Yagi & Co Ltd,41
7461.T,992230,Kimura Co Ltd,41
7462.T,992231,Daiya Tsusho Co Ltd,41
7463.T,952546,Advan Co Ltd,41
7464.T,992232,Saftec Co Ltd,41
7466.T,952547,SPK Corp,41
7467.T,952548,Hagiwara Electric Co Ltd,41
7472.T,992234,Toba Inc,41
7475.T,952549,Albis Co Ltd,41
7476.T,952550,As One Corp,41
7477.T,992235,Muraki Corp,41
7480.T,952551,Suzuden Corp,41
7481.T,952552,Oie Sangyo Co Ltd,41
7482.T,952553,Shimojima Co Ltd,41
7483.T,952554,Doshisha Co Ltd,41
7486.T,992236,Sanrin Co Ltd,41
7487.T,952555,Ozu Corp,41
7490.T,992237,Nissin Shoji Co Ltd,41
7494.T,952556,Konaka Co Ltd,41
7500.T,992238,Nishikawa Keisoku Co Ltd,41
7501.T,992239,Tiemco Ltd,41
7502.T,992240,Plaza Create Co Ltd,41
7504.T,952557,Kohsoku Corp,41
7505.T,992241,Fuso Dentsu Co Ltd,41
7506.T,952558,House of Rose Co Ltd,41
7508.T,952559,G-7 Holdings Inc,41
7509.T,992242,I.A Group Corp,41
7510.T,952560,Takebishi Corp,41
7512.T,952561,Aeon Hokkaido Corp,41
7513.T,952562,Kojima Co Ltd,41
7514.T,952563,Himaraya Co Ltd,41
7515.T,992243,Maruyoshi Center Inc,41
7516.T,952564,Kohnan Shoji Co Ltd,41
7518.T,952566,Net One Systems Co Ltd,41
7519.T,992244,Goyo Intex Co Ltd,41
7520.T,952567,Eco s Co Ltd,41
7521.T,992245,Musashi Co Ltd,41
7522.T,952568,Watami Co Ltd,41
7523.T,992246,Art Vivant Co Ltd,41
7524.T,952569,Marche Corp,41
7525.T,992247,RIX Corp,41
7527.T,992248,Systemsoft Corp,41
7531.T,992249,Seiwa Chuo Holdings Corp,41
7532.T,946257,Don Quijote Holdings Ltd,41
7537.T,952570,Marubun Corp,41
7538.T,992250,Daisui Co Ltd,41
7539.T,992251,Ainavo Holdings Co Ltd,41
7544.T,992252,Three F Co Ltd,41
7545.T,952571,Nishimatsuya Chain Co Ltd,41
7550.T,946258,Zensho Holdings Co Ltd,41
7551.T,992253,Weds Co Ltd,41
7552.T,952572,Happinet Corp,41
7554.T,952573,Kourakuen Corp,41
7555.T,992254,Ota Floriculture Auction Co Ltd,41
7559.T,992255,Global Food Creators Co Ltd,41
7561.T,952574,Hurxley Corp,41
7562.T,992256,Anrakutei Co Ltd,41
7564.T,992257,Workman Co Ltd,41
7565.T,992258,Mansei Corp,41
7567.T,992259,Sakae Electronics Corp,41
7570.T,952575,Hashimoto Sogyo Co Ltd,41
7571.T,992260,Yamano Holdings Corp,41
7575.T,992261,Japan Lifeline Co Ltd,41
7577.T,992262,Passport Co Ltd,41
7578.T,992263,Nichiryoku Co Ltd,41
7581.T,952576,Saizeriya Co Ltd,41
7585.T,992264,Kan-Nanmaru Corp,41
7587.T,992265,Paltek Corp,41
7590.T,992266,Takasho Co Ltd,41
7593.T,976161,VT Holdings Co Ltd,41
7594.T,952578,Maruka Machinery Co Ltd,41
7595.T,952579,Argo Graphics Inc,41
7596.T,952580,Uoriki Co Ltd,41
7597.T,992267,Tokyo Kiho Co Ltd,41
7599.T,952581,Gulliver International Co Ltd,41
7600.T,952582,Japan Medical Dynamic Marketing Inc,41
7601.T,952583,Poplar Co Ltd,41
7602.T,992268,Carchs Holdings Co Ltd,41
7603.T,992269,Mac House Co Ltd,41
7604.T,992270,Umenohana Co Ltd,41
7605.T,992271,Fuji Corp Miyagi,41
7606.T,952584,United Arrows Ltd,41
7607.T,952585,Shinwa Co Ltd,41
7608.T,952586,SK Japan Co Ltd,41
7609.T,952587,Daito Electron Co Ltd,41
7610.T,992272,Tay Two Co Ltd,41
7611.T,952588,Hiday Hidaka Corp,41
7613.T,952589,SIIX Corp,41
7614.T,992274,OM2 Network Co Ltd,41
7615.T,952590,Kyoto Kimono Yuzen Co Ltd,41
7616.T,952591,Colowide Co Ltd,41
7618.T,976162,PC Depot Corp,41
7619.T,952592,Tanaka Co Ltd,41
7621.T,992275,Ukai Co Ltd,41
7623.T,992276,Sunautas Co Ltd,41
7624.T,992277,Naito & Co Ltd,41
7625.T,992278,Global-Dining Inc,41
7628.T,952593,Ohashi Technica Inc,41
7630.T,952594,Ichibanya Co Ltd,41
7634.T,992279,Hoshi Iryo-Sanki Co Ltd,41
7635.T,992280,Sugita Ace Co Ltd,41
7636.T,992281,Handsman Co Ltd,41
7637.T,952595,Hakudo Co Ltd,41
7638.T,992282,New Art Co Ltd,41
7640.T,952596,Top Culture Co Ltd,41
7643.T,992283,Daiichi Co Ltd,41
7646.T,952597,Plant Co Ltd,41
7647.T,992284,Ontsu Co Ltd,41
7649.T,946259,Sugi Holdings Co Ltd,41
7670.T,1097778,O-Well Corp,41
7671.T,1097914,AmidA Holdings Co Ltd,41
7672.T,1122735,Taka Net Service Co Ltd,41
7673.T,1121796,Daiko Tsusan Co Ltd,41
7674.T,1123809,Natty Swanky Co Ltd,41
7676.T,1123974,Goodspeed Co Ltd,41
7677.T,1131562,Yashima & Co Ltd,41
7678.T,1131564,Asakuma Co Ltd,41
7679.T,951952,Yakuodo Co Ltd,41
7680.T,1166831,Keijidoushakan Co Ltd,41
7681.T,1152308,Leoclan Co Ltd,41
7682.T,1152823,Hamayuu Co Ltd,41
7683.T,1153024,Wa Inc,41
7685.T,1155545,Buysell Technologies Co Ltd,41
7686.T,1155640,Kakuyasu Co Ltd,41
7687.T,1156793,Micreed Co Ltd,41
7688.T,1156795,Miahelsa Corp,41
7689.T,1159090,Copa Corporation Inc,41
7690.T,1161321,Current Motor Corp,41
7691.T,1161322,C Channel Corp,41
7692.T,1166930,Earth Infinity Co Ltd,41
7701.T,946260,Shimadzu Corp,41
7702.T,952598,JMS Co Ltd,41
7705.T,992286,GL Sciences Inc,41
7707.T,1096330,Precision System Science Co Ltd,41
7709.T,952599,Kubotek Corp,41
7711.T,992287,Sukegawa Electric Co Ltd,41
7713.T,992288,Sigma Koki Co Ltd,41
7715.T,952601,Nagano Keiki Co Ltd,41
7716.T,992289,Nakanishi Inc,41
7717.T,952602,V Technology Co Ltd,41
7718.T,952603,Star Micronics Co Ltd,41
7719.T,992290,Tokyo Koki Co Ltd,41
7721.T,952604,Tokyo Keiki Inc,41
7722.T,992291,Kokusai Co Ltd,41
7723.T,952605,Aichi Tokei Denki Co Ltd,41
7725.T,992292,Inter Action Corp,41
7726.T,992293,Kuroda Precision Industries Ltd,41
7727.T,952606,Oval Corp,41
7729.T,952607,Tokyo Seimitsu Co Ltd,41
7730.T,952608,Mani Inc,41
7731.T,44172,Nikon Corp.,41
7732.T,952609,Topcon Corp,41
7733.T,44177,Olympus Corp.,41
7734.T,952610,Riken Keiki Co Ltd,41
7735.T,44182,Dainippon Screen Mfg. Co.,41
7739.T,952611,Canon Electronics Inc,41
7740.T,952612,Tamron Co Ltd,41
7741.T,946261,Hoya Cor,41
7743.T,992294,Seed Co Ltd,41
7744.T,952613,Noritsu Koki Co Ltd,41
7745.T,952614,A&D Co Ltd,41
7746.T,992295,Okamoto Glass Co Ltd,41
7747.T,992296,Asahi Intecc Co Ltd,41
7748.T,992297,Holon Co Ltd,41
7749.T,992298,Medikit Co Ltd,41
7751.T,44187,Canon Inc,41
7752.T,44192,Ricoh Co.,41
7758.T,992299,Sekonic Holdings Corp,41
7760.T,992300,IMV Corp,41
7762.T,44197,Citizen Holdings Co.,41
7768.T,992301,Jeco Co Ltd,41
7769.T,952615,Rhythm Watch Co Ltd,41
7771.T,992302,Nihon Seimitsu Co Ltd,41
7774.T,992303,Japan Tissue Engineering Co Ltd,41
7775.T,952616,Daiken Medical Co Ltd,41
7776.T,992304,CellSeed Inc,41
7777.T,992305,3-D Matrix Ltd,41
7779.T,1012037,Cyberdyne Inc,41
7780.T,976163,Menicon Co Ltd,41
7781.T,992306,Hirayama Corp,41
7782.T,994246,Sincere Co Ltd,41
7790.T,1166832,Barcos Co Ltd,41
7800.T,1152221,Amifa Co Ltd,41
7803.T,1138466,Bushiroad Inc,41
7804.T,1138465,B&P Co Ltd,41
7805.T,1096125,Printnet Inc,41
7806.T,1080043,MTG Co Ltd,41
7807.T,1055286,KOWA CO LTD,41
7808.T,1054965,C.S. Lumber Co Inc,41
7809.T,1034502,Kotobukiya Co Ltd,41
7810.T,1013399,Crossfor Co Ltd,41
7811.T,969049,Nakamoto Packs Co Ltd,41
7812.T,992307,Crestec Inc,41
7813.T,1012038,Platz Co Ltd,41
7814.T,992308,Japan Creative Platform Group Co Ltd,41
7815.T,992309,Tokyo Board Industries Co Ltd,41
7816.T,976164,Snow Peak Inc,41
7817.T,952617,Paramount Bed Holdings Co Ltd,41
7818.T,952618,Transaction Co Ltd,41
7819.T,952619,SHO-BI Corp,41
7820.T,976165,Nihon Flush Co Ltd,41
7821.T,952620,Maeda Kosen Co Ltd,41
7822.T,952621,Eidai Co Ltd,41
7823.T,952622,Artnature Inc,41
7826.T,992310,Furuya Metal Co Ltd,41
7827.T,992311,Orvis Corp,41
7829.T,1096331,Samantha Thavasa Japan Ltd,41
7831.T,992312,Wellco Holdings Corp,41
7832.T,946262,Bandai Namco Holdings Inc,41
7833.T,976166,IFIS Japan Ltd,41
7836.T,992314,AVIX Inc,41
7837.T,992315,R.C.Core Co Ltd,41
7838.T,952624,Kyoritsu Printing Co Ltd,41
7839.T,976167,Shoei Co Ltd,41
7840.T,952625,France Bed Holdings Co Ltd,41
7841.T,992316,Endo Manufacturing Co Ltd,41
7844.T,952626,Marvelous Inc,41
7846.T,952627,Pilot Corp,41
7847.T,992317,Graphite Design Inc,41
7849.T,992318,Starts Publishing Corp,41
7850.T,992319,Sougou Shouken Co Ltd,41
7851.T,992320,Kawase Computer Supplies Co Ltd,41
7855.T,992322,Cardinal Co Ltd,41
7856.T,952628,Hagihara Industries Inc,41
7857.T,992323,Seki Co Ltd,41
7859.T,992324,Almedio Inc,41
7860.T,952629,Avex Group Holdings Inc,41
7862.T,952630,Toppan Forms Co Ltd,41
7863.T,992325,Hiraga Co Ltd,41
7864.T,952631,Fuji Seal International Inc,41
7865.T,992326,People Co Ltd,41
7867.T,952632,Tomy Co Ltd,41
7868.T,952633,Kosaido Co Ltd,41
7869.T,992327,Nihon Form Service Co Ltd,41
7871.T,992328,Fukuvi Chemical Industry Co Ltd,41
7872.T,952634,As-me Estelle Co Ltd,41
7874.T,952636,Lec Inc,41
7875.T,1061419,Takeda Printing Ltd,41
7877.T,992329,Eidai Kako Co Ltd,41
7878.T,992330,Kosaikogei Co Ltd,41
7879.T,992331,Noda Corp,41
7883.T,992332,Sun Messe Co Ltd,41
7885.T,952637,Takano Co Ltd,41
7886.T,992333,Yamato Industry Co Ltd,41
7887.T,992334,Nankai Plywood Co Ltd,41
7888.T,992335,Sanko Gosei Ltd,41
7893.T,952638,Pronexus Inc,41
7895.T,992338,Chuo Kagaku Co Ltd,41
7896.T,992339,Seven Industries Co Ltd,41
7897.T,952639,Hokushin Co Ltd,41
7898.T,952640,Wood One Co Ltd,41
7899.T,992340,Mics Chemical Co Ltd,41
7901.T,992341,Matsumoto Inc,41
7902.T,992342,Sonocom Co Ltd,41
7905.T,952641,Daiken Corp,41
7906.T,992343,Yonex Co Ltd,41
7908.T,952642,Kimoto Co Ltd,41
7911.T,44202,Toppan Printing Co.,41
7912.T,44207,Dai Nippon Printing Co.,41
7914.T,952644,Kyodo Printing Co Ltd,41
7915.T,952645,Nissha Printing Co Ltd,41
7916.T,952646,Mitsumura Printing Co Ltd,41
7917.T,952647,Fujimori Kogyo Co Ltd,41
7918.T,992344,VIA Holdings Inc,41
7919.T,992345,Nozaki Insatsu Shigyo Co Ltd,41
7921.T,952648,Takara Printing Co Ltd,41
7922.T,992347,Sanko Sangyo Co Ltd,41
7923.T,992348,Toin Corp,41
7925.T,952649,Maezawa Kasei Industries Co Ltd,41
7927.T,992349,Muto Seiko Co,41
7928.T,992350,Asahi Kagaku Kogyo Co Ltd,41
7931.T,1115821,Mirai Industry Co Ltd,41
7932.T,992351,Nippi Inc,41
7936.T,946263,Asics Corp,41
7937.T,952650,Tsutsumi Jewelry Co Ltd,41
7938.T,992352,Regal Corp,41
7939.T,992353,Kensoh Co Ltd,41
7940.T,1006187,Wavelock Holdings Co Ltd,41
7942.T,952651,JSP Corp,41
7943.T,952652,Nichiha Corp,41
7945.T,992354,Comany Inc,41
7946.T,992355,Koyosha Inc,41
7947.T,952653,FP Corp,41
7949.T,952654,Komatsu Wall Industry Co Ltd,41
7951.T,44212,Yamaha Corp.,41
7952.T,952655,Kawai Musical Instruments Manufacturing Co Ltd,41
7953.T,992356,Kikusui Chemical Industries Co Ltd,41
7955.T,952656,Cleanup Corp,41
7956.T,952657,Pigeon Corp,41
7957.T,992357,Fujicopian Co Ltd,41
7958.T,952658,Tenma Corp,41
7959.T,1161320,Oliver Corp,41
7961.T,952659,Kanematsu-NNK Corp,41
7962.T,952660,King Jim Co Ltd,41
7963.T,992358,Koken Ltd,41
7965.T,992359,Zojirushi Corp,41
7966.T,946264,Lintec Corp,41
7970.T,952662,Shin-Etsu Polymer Co Ltd,41
7971.T,952663,Toli Corp,41
7972.T,952664,Itoki Corp,41
7974.T,946265,Nintendo Co Ltd,41
7975.T,992360,Lihit Lab Inc,41
7976.T,952665,Mitsubishi Pencil Co Ltd,41
7979.T,952666,Shofu Inc,41
7980.T,992361,Shigematsu Works Co Ltd,41
7981.T,952667,Takara Standard Co Ltd,41
7983.T,992362,Miroku Corp,41
7984.T,952668,Kokuyo Co Ltd,41
7985.T,992363,Nepon Inc,41
7986.T,992364,Nihon ISK Co Ltd,41
7987.T,952669,Nakabayashi Co Ltd,41
7988.T,946266,Nifco Inc,41
7989.T,976168,Tachikawa Corp,41
7990.T,952670,Globeride Inc,41
7991.T,992365,Mamiya-OP Co Ltd,41
7992.T,992366,Sailor Pen Co Ltd,41
7994.T,952671,Okamura Corp,41
7995.T,952672,Nippon Valqua Industries Ltd,41
7997.T,992367,Kurogane Kosakusho Ltd,41
7999.T,952673,Mutoh Holdings Co Ltd,41
8001.T,44217,Itochu Corp.,41
8002.T,44222,Marubeni Corp.,41
8005.T,952674,Scroll Corp,41
8006.T,992368,Yuasa Funashoku Co Ltd,41
8007.T,952675,Takashima & Co Ltd,41
8008.T,952676,Yondoshi Holdings Inc,41
8011.T,952677,Sanyo Shokai Ltd,41
8012.T,952678,Nagase & Co Ltd,41
8013.T,952679,Naigai Co Ltd,41
8014.T,952680,Chori Co Ltd,41
8015.T,44227,Toyota Tsusho Corp.,41
8016.T,946267,Onward Holdings Co Ltd,41
8018.T,952681,Sankyo Seiko Co Ltd,41
8020.T,946268,Kanematsu Corp,41
8022.T,952682,Mizuno Corp,41
8023.T,992369,Daiko Denshi Tsushin Ltd,41
8025.T,952683,Tsukamoto Corporation Co Ltd,41
8029.T,952684,Look Inc,41
8030.T,992370,Chuo Gyorui Co Ltd,41
8031.T,44232,Mitsui & Co.,41
8032.T,952685,Japan Pulp and Paper Co Ltd,41
8035.T,44237,Tokyo Electron Ltd.,41
8037.T,952686,Kamei Corp,41
8038.T,952687,Tohto Suisan Co Ltd,41
8039.T,992371,Tsukiji Uoichiba Co Ltd,41
8040.T,992372,Tokyo Soir Co Ltd,41
8041.T,952688,OUG Holdings Inc,41
8043.T,952689,Starzen Co Ltd,41
8045.T,992374,Yokohama Maruuo Co Ltd,41
8046.T,992375,Marufuji Sheet Piling Co Ltd,41
8050.T,952690,Seiko Holdings Corp,41
8051.T,952691,Yamazen Corp,41
8052.T,952692,Tsubakimoto Kogyo Co Ltd,41
8053.T,44242,Sumitomo Corp.,41
8056.T,946271,Nihon Unisys Ltd,41
8057.T,952693,Uchida Yoko Co Ltd,41
8058.T,44247,Mitsubishi Corp.,41
8059.T,952694,Daiichi Jitsugyo Co Ltd,41
8060.T,946272,Canon Marketing Japan Inc,41
8061.T,952695,Seika Corp,41
8065.T,952696,Sato Sho-Ji Corp,41
8066.T,992376,Mitani Corp,41
8068.T,952697,Ryoyo Electro Corp,41
8070.T,952698,Tokyo Sangyo Co Ltd,41
8072.T,992377,Japan Publications Trading Co Ltd,41
8074.T,952699,Yuasa Trading Co Ltd,41
8075.T,952700,Shinsho Corp,41
8077.T,952701,Kobayashi Metals Ltd,41
8078.T,946273,Hanwa Co Ltd,41
8079.T,992378,Shoei Foods Corp,41
8081.T,952702,Kanaden Corp,41
8084.T,952703,Ryoden Trading Co Ltd,41
8085.T,992379,Narasaki Sangyo Co Ltd,41
8086.T,946274,Nipro Corp,41
8087.T,952704,Furusato Industries Ltd,41
8088.T,952705,Iwatani Corp,41
8089.T,952706,Nice Holdings Inc,41
8090.T,952707,Shoko Co Ltd,41
8091.T,952708,Nichimo Co Ltd,41
8093.T,952709,Kyokuto Boeki Kaisha Ltd,41
8095.T,952710,Iwaki & Co Ltd,41
8096.T,952711,Kanematsu Electronics Ltd,41
8097.T,952712,San-Ai Oil Co Ltd,41
8098.T,952713,Inabata & Co Ltd,41
8101.T,952714,GSI Creos Corp,41
8103.T,952715,Meiwa Corp,41
8104.T,1076546,Kuwazawa Trading Co Ltd,41
8105.T,992380,Marushohotta Co Ltd,41
8107.T,952716,Kimuratan Corp,41
8108.T,1161323,Yamae Hisano Co Ltd,41
8111.T,952717,Goldwin Inc,41
8113.T,946275,Unicharm Co,41
8114.T,952718,Descente Ltd,41
8115.T,992381,Moonbat Co Ltd,41
8117.T,992382,Central Automotive Products Ltd,41
8118.T,952719,King Co Ltd,41
8119.T,992383,Sanyei Corp,41
8123.T,992384,T.Kawabe & Co Ltd,41
8125.T,952720,Wakita & Co Ltd,41
8127.T,952721,Yamato International Inc,41
8129.T,952722,Toho Holdings Co Ltd,41
8130.T,952723,Sangetsu Co Ltd,41
8131.T,952724,Mitsuuroko Group Holdings Co Ltd,41
8132.T,952725,Sinanen Co Ltd,41
8133.T,952726,Itochu Enex Co Ltd,41
8135.T,992385,Zett Corp,41
8136.T,946276,Sanrio Co Ltd,41
8137.T,952727,Sun-Wa Technos Corp,41
8138.T,992386,Sankyo Kasei Corp,41
8139.T,992387,Nagahori Corp,41
8140.T,952728,Ryosan Co Ltd,41
8141.T,952729,Shinko Shoji Co Ltd,41
8142.T,952730,Toho Co Ltd,41
8143.T,992388,Lapine Co Ltd,41
8144.T,992389,Denkyosha Co Ltd,41
8147.T,992390,Tomita Co Ltd,41
8150.T,952731,Sanshin Electronics Co Ltd,41
8151.T,952732,Toyo Corp,41
8152.T,992392,Somar Corp,41
8153.T,952733,Mos Food Services Inc,41
8154.T,952734,Kaga Electronics Co Ltd,41
8155.T,952735,Mimasu Semiconductor Industry Co Ltd,41
8157.T,992393,Tsuzuki Denki Co Ltd,41
8158.T,952736,Soda Nikka Co Ltd,41
8159.T,952737,Tachibana Eletech Co Ltd,41
8160.T,952738,Kisoji Co Ltd,41
8163.T,952739,Sato Restaurant Systems Co Ltd,41
8165.T,952740,Senshukai Co Ltd,41
8166.T,952741,Taka-Q Co Ltd,41
8167.T,992394,Retail Partners Co Ltd,41
8168.T,952742,Keiyo Co Ltd,41
8173.T,952744,Joshin Denki Co Ltd,41
8174.T,952745,Nippon Gas Co Ltd,41
8179.T,952747,Royal Holdings Co Ltd,41
8181.T,952748,Totenko Co Ltd,41
8182.T,952749,Inageya Co Ltd,41
8184.T,952750,Shimachu Co Ltd,41
8185.T,952751,Chiyoda Co Ltd,41
8186.T,992395,Otsuka Kagu Ltd,41
8194.T,952752,Life Corp,41
8198.T,992397,Maxvalu Tokai Co Ltd,41
8200.T,952753,Ringer Hut Co Ltd,41
8202.T,992398,Laox Co Ltd,41
8203.T,952755,Mr Max Corp,41
8207.T,952756,Ten Allied Co Ltd,41
8208.T,992400,Encho Co Ltd,41
8209.T,992401,Friendly Corp,41
8214.T,952757,Aoki Holdings Inc,41
8215.T,992402,Ginza Yamagataya Co Ltd,41
8217.T,952758,Okuwa Co Ltd,41
8218.T,952759,Komeri Co Ltd,41
8219.T,952760,Aoyama Trading Co Ltd,41
8225.T,992403,Takachiho Co Ltd,41
8226.T,992404,Rikei Corp,41
8227.T,946277,Shimamura Co Ltd,41
8230.T,952762,Hasegawa Co Ltd,41
8233.T,44252,Takashimaya Co.,41
8237.T,952763,Matsuya Co Ltd,41
8242.T,946278,H2O Retailing Corp,41
8244.T,952764,Kintetsu Department Store Co Ltd,41
8247.T,992405,Daiwa Co Ltd,41
8249.T,992406,Techno Associe Co Ltd,41
8252.T,44257,Marui Group Co.,41
8253.T,44262,Credit Saison Co.,41
8254.T,992407,Saikaya Department Store Co Ltd,41
8255.T,952768,Axial Retailing Inc,41
8256.T,992408,Marumitsu Co Ltd,41
8257.T,992983,Sanyo Department Store Co Ltd,41
8260.T,952769,Izutsuya Co Ltd,41
8267.T,44267,Aeon Co.,41
8273.T,946279,Izumi Co Ltd,41
8275.T,952771,Forval Corp,41
8276.T,952772,Heiwado Co Ltd,41
8278.T,952773,Fuji Co Ltd,41
8279.T,952774,Yaoko Co Ltd,41
8281.T,952775,Xebio Co Ltd,41
8282.T,946280,K'S Holdings Corp,41
8283.T,952776,Paltac Corp,41
8285.T,952777,Mitani Sangyo Co Ltd,41
8287.T,992409,Maxvalu Nishinihon Co Ltd,41
8289.T,952778,Olympic Group Corp,41
8291.T,952779,Nissan Tokyo Sales Holdings Co Ltd,41
8298.T,992410,Family Inc,41
8301.T,1097905,Bank of Japan,41
8303.T,44277,Shinsei Bank,41
8304.T,44282,Aozora Bank,41
8306.T,44287,Mitsubishi UFJ Financial Group Inc,41
8308.T,44292,Resona Holdings,41
8309.T,969280,Sumitomo Mitsui Trust Holdings,41
8316.T,44302,Sumitomo Mitsui Financial,41
8331.T,44307,The Chiba Bank,41
8334.T,946283,The Gunma Bank Ltd,41
8336.T,946284,The Musashino Bank Ltd,41
8337.T,952782,Chiba Kogyo Bank Ltd,41
8338.T,952783,Tsukuba Bank Ltd,41
8341.T,946285,The 77 Bank Ltd,41
8342.T,952784,Aomori Bank Ltd,41
8343.T,952785,Akita Bank Ltd,41
8344.T,952786,Yamagata Bank Ltd,41
8345.T,952787,Bank of Iwate Ltd,41
8346.T,952788,Toho Bank Ltd,41
8349.T,952789,Tohoku Bank Ltd,41
8350.T,952790,Michinoku Bank Ltd,41
8354.T,44317,Fukuoka Financial Group,41
8355.T,44322,The Shizuoka Bank,41
8356.T,952791,Juroku Bank Ltd,41
8358.T,946286,Suruga Bank Ltd,41
8359.T,946287,The Hachijuni Bank Ltd,41
8360.T,952792,Yamanashi Chuo Bank Ltd,41
8361.T,952793,Ogaki Kyoritsu Bank Ltd,41
8362.T,952794,Fukui Bank Ltd,41
8363.T,952795,Hokkoku Bank Ltd,41
8364.T,952796,Shimizu Bank Ltd,41
8365.T,976169,Bank of Toyama Ltd,41
8366.T,952797,Shiga Bank Ltd,41
8367.T,952798,Nanto Bank Ltd,41
8368.T,952799,Hyakugo Bank Ltd,41
8369.T,946288,The Bank Of Kyoto Ltd,41
8370.T,952800,Kiyo Bank Ltd,41
8377.T,946289,Hokuhoku Financial Group Inc,41
8381.T,952802,San-in Godo Bank Ltd,41
8382.T,946291,The Chugoku Bank Ltd,41
8383.T,952803,Tottori Bank Ltd,41
8385.T,946292,The Iyo Bank Ltd,41
8386.T,952804,Hyakujushi Bank Ltd,41
8387.T,952805,Shikoku Bank Ltd,41
8388.T,952806,Awa Bank Ltd,41
8392.T,952808,Oita Bank Ltd,41
8393.T,952809,Miyazaki Bank Ltd,41
8395.T,952811,Bank of Saga Ltd,41
8397.T,952813,Bank of Okinawa Ltd,41
8399.T,952814,Bank of The Ryukyus Ltd,41
8410.T,952815,Seven Bank Ltd,41
8411.T,44327,Mizuho Financial Group Inc,41
8416.T,952816,Bank of Kochi Ltd,41
8418.T,946293,Yamaguchi Financial Group Inc,41
8421.T,1066560,Shinkin Central Bank Pref,41
8424.T,952818,Fuyo General Lease Co Ltd,41
8425.T,952819,Mizuho Leasing Co Ltd,41
8439.T,952820,Century Tokyo Leasing Corp,41
8462.T,992411,Future Venture Capital Co Ltd,41
8473.T,946294,SBI Holdings Inc,41
8508.T,992412,J Trust Co Ltd,41
8511.T,952821,Japan Securities Finance Co Ltd,41
8515.T,969276,Aiful Corp,41
8518.T,952822,Japan Asia Investment Co Ltd,41
8521.T,952824,Nagano Bank Ltd,41
8522.T,952825,Bank of Nagoya Ltd,41
8524.T,946296,North Pacific Bank Ltd,41
8527.T,952826,Aichi Bank Ltd,41
8530.T,952828,Chukyo Bank Ltd,41
8537.T,952830,Taiko Bank Ltd,41
8541.T,952831,Ehime Bank Ltd,41
8542.T,952832,Tomato Bank Ltd,41
8544.T,952834,Keiyo Bank Ltd,41
8550.T,952836,Tochigi Bank Ltd,41
8551.T,952837,Kita-Nippon Bank Ltd,41
8558.T,952838,Towa Bank Ltd,41
8562.T,952839,Fukushima Bank Ltd,41
8563.T,952840,Daito Bank Ltd,41
8566.T,952841,Ricoh Leasing Co Ltd,41
8570.T,946297,Aeon Financial Service Co Ltd,41
8572.T,946298,Acom Co Ltd,41
8584.T,952842,JACCS Co Ltd,41
8585.T,946299,Orient Corp,41
8586.T,946300,Hitachi Capital Corp,41
8591.T,943425,Orix T,41
8593.T,946302,Mitsubishi Ufj Lease Fin Ltd,41
8595.T,946303,Jafco Co Ltd,41
8596.T,993292,Kyushu Leasing Service Co Ltd,41
8600.T,952843,Tomony Holdings Inc,41
8601.T,44332,Daiwa Securities Group Inc.,41
8604.T,44113,Nomura Holdings Inc,41
8609.T,952844,Okasan Securities Group Inc,41
8613.T,952845,Marusan Securities Co Ltd,41
8614.T,952846,Toyo Securities Co Ltd,41
8616.T,946304,Tokai Tokyo Finan Holdings Inc,41
8617.T,952847,Kosei Securities Co Ltd,41
8622.T,952848,Mito Securities Co Ltd,41
8624.T,952849,Ichiyoshi Securities Co Ltd,41
8628.T,44118,Matsui Securities Co.,41
8630.T,44123,Sompo Holdings Inc,41
8697.T,952851,Japan Exchange Group Inc,41
8698.T,946305,Monex Group Inc,41
8699.T,992414,Sawada Holdings Co Ltd,41
8700.T,992415,Maruhachi Securities Co Ltd,41
8704.T,992416,Traders Holdings Co Ltd,41
8705.T,992417,Okato Holdings Inc,41
8706.T,952852,Kyokuto Securities Co Ltd,41
8707.T,952853,IwaiCosmo Holdings Inc,41
8708.T,952854,Aizawa Securities Co Ltd,41
8713.T,952855,Fidea Holdings Co Ltd,41
8714.T,946307,Senshu Ikeda Holdings Inc,41
8715.T,952856,Anicom Holdings Inc,41
8725.T,44128,MS&AD Insurance Group Holdings,41
8732.T,952858,Money Partners Group Co Ltd,41
8737.T,992419,Akatsuki Corp,41
8739.T,992420,Sparx Group Co Ltd,41
8740.T,992421,Fujitomi Co Ltd,41
8742.T,952859,Kobayashi Yoko Co Ltd,41
8746.T,992422,Daiichi Commodities Co Ltd,41
8747.T,992423,Yutaka Shoji Co Ltd,41
8750.T,44138,Dai-ichi Life Holdings Inc,41
8766.T,44143,Tokio Marine Holdings,41
8769.T,992424,Advantage Risk Management Co Ltd,41
8771.T,952860,eGuarantee Inc,41
8772.T,952861,Asax Co Ltd,41
8783.T,992425,GFA Co Ltd,41
8789.T,1096332,FinTech Global Inc,41
8793.T,952862,NEC Capital Solutions Ltd,41
8795.T,44148,T&D Holdings,41
8798.T,992427,Advance Create Co Ltd,41
8801.T,44153,Mitsui Fudosan Co.,41
8802.T,44158,Mitsubishi Estate Co Ltd,41
8803.T,44163,Heiwa Real Estate Co.,41
8804.T,44168,Tokyo Tatemono Co.,41
8806.T,952863,Daibiru Corp,41
8818.T,952864,Keihanshin Building Co Ltd,41
8830.T,44178,Sumitomo Realty & Development Co.,41
8835.T,952865,Taiheiyo Kouhatsu Incorporated,41
8836.T,992428,Rise Inc,41
8841.T,952866,TOC Co Ltd,41
8842.T,952867,Tokyo Rakutenchi Co Ltd,41
8844.T,992429,Cosmos Initia Co Ltd,41
8848.T,946309,Leopalace21 Corp,41
8850.T,952868,Starts Corp Inc,41
8854.T,992431,Japan Living Service Co Ltd,41
8860.T,952869,Fuji Corp Ltd,41
8864.T,952870,Airport Facilities Co Ltd,41
8869.T,952871,Meiwa Estate Co Ltd,41
8871.T,952873,Goldcrest Co Ltd,41
8876.T,952874,Relo Holdings Inc,41
8877.T,952875,Nihon Eslead Corp,41
8881.T,952876,Nisshin Fudosan Co Ltd,41
8886.T,992433,Wood Friends Co Ltd,41
8887.T,992434,Riberesute Corp,41
8889.T,992435,Apamanshop Holdings Co Ltd,41
8890.T,992436,Raysum Co Ltd,41
8891.T,992437,MG Home Co Ltd,41
8892.T,992438,Es-con Japan Ltd,41
8893.T,992439,Shin-Nihon Tatemono Co Ltd,41
8894.T,992440,Harakosan Co Ltd,41
8897.T,952877,Takara Leben Co Ltd,41
8898.T,992441,Century 21 Real Estate of Japan Ltd,41
8903.T,992442,Sunwood Corp,41
8904.T,952878,Sanyo Housing Nagoya Co Ltd,41
8905.T,946310,Aeon Mall Co Ltd,41
8908.T,992443,Mainichi Comnet Co Ltd,41
8909.T,992444,Shinoken Group Co Ltd,41
8912.T,992445,Area Quest Inc,41
8914.T,1096333,Arealink Co Ltd,41
8917.T,952879,First Juken Co Ltd,41
8918.T,952880,Land Co Ltd,41
8919.T,1056360,Katitas Co Ltd,41
8920.T,952881,Tosho Co Ltd,41
8922.T,1056318,Japan Asset Marketing Co Ltd,41
8923.T,952882,Tosei Corp,41
8925.T,992446,Ardepro Co Ltd,41
8927.T,992447,Meiho Enterprise Co Ltd,41
8928.T,952883,Anabuki Kosan Inc,41
8929.T,992448,Aoyama Zaisan Networks Co Ltd,41
8931.T,992449,Wadakohsan Corp,41
8934.T,952884,Sun Frontier Fudousan Co Ltd,41
8935.T,952885,FJ Next Co Ltd,41
8938.T,992450,LC Holdings Inc,41
8940.T,992451,Intellex Co Ltd,41
8944.T,952886,Land Business Co Ltd,41
8945.T,992984,Japan Corporate Housing Service Inc,41
8946.T,992452,Asian Star Co,41
8951.T,1036819,Nippon Building Fund Inc,41
8952.T,1036820,Japan Real Estate Investment Corp,41
8953.T,1056319,Japan Retail Fund Investment Corp,41
8954.T,1056320,Orix JREIT Inc,41
8955.T,1056321,Japan Prime Realty Investment Corp,41
8956.T,1056322,Premier Investment Corp,41
8957.T,1056323,Tokyu Reit Inc,41
8958.T,1056324,Global One Real Estate Investment Corp,41
8960.T,1056325,United Urban Investment Corp,41
8961.T,1056326,Mori Trust Sogo Reit Inc,41
8963.T,1056327,Invincible Investment Corp,41
8964.T,1056328,Frontier Real Estate Investment Corp,41
8966.T,1056329,Heiwa Real Estate REIT Inc,41
8967.T,1056330,Japan Logistics Fund Inc,41
8968.T,1056331,Fukuoka Reit Corp,41
8972.T,1056332,Kenedix Office Investment Corp,41
8975.T,1056334,Ichigo Office REIT Investment Corp,41
8976.T,1056335,Daiwa Office Investment Corp,41
8977.T,1056336,Hankyu REIT Inc,41
8979.T,1056372,Starts Proceed Investment Corp,41
8984.T,1056337,Daiwa House Reit Investment Corp,41
8985.T,1056338,Japan Hotel Reit Investment Corp,41
8986.T,1056339,Japan Rental Housing Investments Inc,41
8987.T,1056340,Japan Excellent Inc,41
8995.T,992453,Makoto Construction Co Ltd,41
8999.T,952887,Grandy House Corp,41
9001.T,44183,Tobu Railway Co.,41
9003.T,946312,Sotetsu Holdings Inc,41
9005.T,44188,Tokyu Corp.,41
9006.T,946313,Keikyu Corp,41
9007.T,44193,Odakyu Electric Railway Co.,41
9008.T,44198,Keio Corp.,41
9009.T,44203,Keisei Electric Railway Co.,41
9010.T,952888,Fuji Kyuko Co Ltd,41
9012.T,992454,Chichibu Railway Co Ltd,41
9014.T,952889,Shin-Keisei Electric Railway Co Ltd,41
9017.T,992455,Niigata Kotsu Co Ltd,41
9020.T,44208,East Japan Railway Co.,41
9021.T,44213,West Japan Railway Co.,41
9022.T,44218,Central Japan Railway Co.,41
9024.T,952890,Seibu Holdings Inc,41
9025.T,952891,Konoike Transport Co Ltd,41
9028.T,992456,Zero Co Ltd,41
9029.T,992457,Higashi Twenty One Co Ltd,41
9031.T,952892,Nishi-Nippon Railroad Co Ltd,41
9033.T,992458,Hiroshima Electric Railway Co Ltd,41
9034.T,992459,Nanso Transport Co Ltd,41
9036.T,992460,Tohbu Network Co Ltd,41
9037.T,952893,Hamakyorex Co Ltd,41
9039.T,952894,Sakai Moving Service Co Ltd,41
9041.T,946314,Kintetsu Corp,41
9042.T,946315,Hankyu Hanshin Holdings Inc,41
9044.T,952895,Nankai Electric Railway Co Ltd,41
9045.T,952896,Keihan Electric Railway Co Ltd,41
9046.T,952897,Kobe Electric Railway Co Ltd,41
9048.T,946316,Nagoya Railroad Co Ltd,41
9049.T,992461,Keifuku Electric Railroad Co Ltd,41
9051.T,992462,Senkon Logistics Co Ltd,41
9052.T,952899,Sanyo Electric Railway Co Ltd,41
9055.T,992463,Alps Logistics Co Ltd,41
9057.T,992464,Enshu Truck Co Ltd,41
9058.T,952900,Trancom Co Ltd,41
9059.T,992465,Kanda Holdings Co Ltd,41
9060.T,992466,Japan Logistic Systems Corp,41
9062.T,44223,Nippon Express Co.,41
9063.T,992467,Okayamaken Freight Transportation Co Ltd,41
9064.T,44228,Yamato Holdings Co.,41
9065.T,946317,Sankyu Inc,41
9066.T,952901,Nissin Corp,41
9067.T,952902,Maruwn Corp,41
9068.T,952903,Maruzen Showa Unyu Co Ltd,41
9069.T,952904,Senko Co Ltd,41
9070.T,952905,Tonami Holdings Co Ltd,41
9072.T,952906,Nippon Konpo Unyu Soko Co Ltd,41
9073.T,992468,Kyogoku Unyu Shoji Co Ltd,41
9074.T,952907,Japan Oil Transportation Co Ltd,41
9075.T,952908,Fukuyama Transporting Co Ltd,41
9076.T,946318,Seino Holdings Co Ltd,41
9078.T,997446,S Line Co Ltd,41
9081.T,952909,Kanagawa Chuo Kotsu Co Ltd,41
9082.T,992985,Daiwa Motor Transportation Co Ltd,41
9083.T,992469,Shinki Bus Co Ltd,41
9086.T,946319,Hitachi Transport Sys Ltd,41
9087.T,992470,Takase Corp,41
9090.T,952910,Maruwa Unyu Kikan Co Ltd,41
9099.T,976170,Chilled & Frozen Logistics Holdings Co Ltd,41
9101.T,44233,Nippon Yusen K.K,41
9104.T,44238,Mitsui O.S.K. Lines,41
9107.T,44243,Kawasaki Kisen Kaisha,41
9110.T,952911,NS United Kaiun Kaisha Ltd,41
9115.T,952912,Meiji Shipping Co Ltd,41
9119.T,952913,Iino Kaiun Kaisha Ltd,41
9127.T,992471,Tamai Steamship Co Ltd,41
9130.T,952914,Kyoei Tanker Co Ltd,41
9142.T,992794,Kyushu Railway Co,41
9143.T,1056361,SG Holdings Co Ltd,41
9171.T,992473,Kuribayashi Steamship Co Ltd,41
9173.T,992474,Tokai Kisen Co Ltd,41
9176.T,992475,Sado Steam Ship Co Ltd,41
9179.T,992476,Kawasaki Kinkai Kisen Kaisha Ltd,41
9193.T,992477,Tokyo Kisen Co Ltd,41
9201.T,940785,Japan Airlines Co Ltd,41
9202.T,44248,ANA Holdings Inc,41
9206.T,992478,Star Flyer Inc,41
9232.T,946321,Pasco Corp,41
9233.T,992479,Asia Air Survey Co Ltd,41
9260.T,1034505,Nishimoto Wismettac HD Co Ltd,41
9262.T,1050742,Silver Life Co Ltd,41
9263.T,1055969,Visionaryholdings Co Ltd,41
9264.T,1055285,Puequ CO LTD,41
9265.T,1057288,Yamashita Health Care Holdings Inc,41
9266.T,1056362,IKKA Dining Project Co Ltd,41
9267.T,1057289,Genky Drugstores Co Ltd,41
9268.T,1057080,Optimus Group Co Ltd.,41
9270.T,1072311,SOU Inc,41
9271.T,1073029,Wagokoro Co,41
9272.T,1073031,Boutiques Inc,41
9273.T,1076998,Koa Shoji Holdings Co Ltd,41
9274.T,1077180,Kokusai Pulp & Paper Co Ltd,41
9275.T,1089749,Narumiya International Co Ltd,41
9278.T,951945,Bookoff Group Holdings Ltd,41
9279.T,1096123,Gift Inc,41
9281.T,1097906,Takara Leben Infrastructure Fund Inc,41
9282.T,1097907,Ichigo Green Infrastructure Investment Corp,41
9283.T,1097908,Renewable Japan Energy Infrastructure Fund Inc,41
9284.T,1097909,Canadian Solar Infrastructure Fund Inc,41
9285.T,1097910,Tokyo Infrastructure Energy Investment Corp,41
9286.T,1122737,Enex Infrastructure Investment Corp,41
9287.T,1161324,Japan Infrastructure Fund Investment Corp,41
9301.T,44253,Mitsubishi Logistics Corp.,41
9302.T,952915,Mitsui Soko Holdings Co Ltd,41
9303.T,946322,The Sumitomo Warehouse Co Ltd,41
9304.T,952916,Shibusawa Warehouse Co Ltd,41
9305.T,952917,Yamatane Corp,41
9306.T,952918,Toyo Logistics Co Ltd,41
9307.T,992480,Sugimura Warehouse Co Ltd,41
9308.T,952919,Inui Global Logistics Co Ltd,41
9310.T,952920,Japan Transcity Corp,41
9311.T,992481,Asagami Corp,41
9312.T,952921,Keihin Co Ltd,41
9313.T,992482,Maruhachi Warehouse Co Ltd,41
9318.T,992483,Asia Development Capital Co Ltd,41
9319.T,952922,Chuo Warehouse Co Ltd,41
9322.T,992484,Kawanishi Warehouse Co Ltd,41
9324.T,952923,Yasuda Logistics Corp,41
9325.T,996162,PHYZ inc,41
9326.T,1156862,Kantsu Co Ltd,41
9351.T,952924,Toyo Wharf & Warehouse Co Ltd,41
9353.T,992485,Sakurajima Futo Kaisha Ltd,41
9355.T,992486,Rinko Corp,41
9358.T,952925,Utoc Corp,41
9360.T,992487,Suzuyo Shinwart Corp,41
9361.T,992488,Fushiki Kairiku Unso Co Ltd,41
9362.T,992489,Hyoki Kaiun Kaisha Ltd,41
9363.T,992490,Daiun Co Ltd,41
9364.T,946323,Kamigumi Co Ltd,41
9365.T,992491,Tradia Corp,41
9366.T,952926,Sanritsu Corp,41
9367.T,992492,Daito Koun Co Ltd,41
9368.T,952927,Kimura Unity Co Ltd,41
9369.T,952928,KRS Corp,41
9375.T,952930,Kintetsu World Express Inc,41
9376.T,992494,Eurasia Travel Co Ltd,41
9377.T,992495,AGP Corp,41
9380.T,952931,Azuma Shipping Co Ltd,41
9381.T,952932,AIT Corp,41
9384.T,952933,Naigai Trans Line Ltd,41
9385.T,992496,Shoei Corp,41
9386.T,992497,Nippon Concept Corp,41
9399.T,1122738,Beat Holdings Ltd,41
9401.T,946324,Tokyo Broadcasting System Inc,41
9404.T,946325,Nippon Television Holdings Inc,41
9405.T,952934,Asahi Broadcasting Corp,41
9408.T,992498,Broadcasting System of Niigata Inc,41
9409.T,946326,TV Asahi Holdings Corp,41
9412.T,44258,SKY Perfect JSAT Holdings Inc.,41
9413.T,952935,TV TOKYO Holdings Corp,41
9414.T,952936,Nippon BS Broadcasting Corp,41
9416.T,962386,Vision Inc,41
9417.T,992499,Smartvalue Co Ltd,41
9418.T,976171,U-Next Corp,41
9419.T,976172,WirelessGate Inc,41
9421.T,992500,NJ Holdings Inc,41
9422.T,952937,Conexio Corp,41
9423.T,992501,Forval Realstraight Inc,41
9424.T,976173,Japan Communications Inc,41
9425.T,992502,Nippon Telephone Inc,41
9428.T,952938,Crops Corp,41
9432.T,44263,Nippon Telegraph & Telephone Corp,41
9433.T,44268,KDDI Corp.,41
9434.T,1116052,SoftBank Corp,41
9435.T,946327,Hikari Tsushin Inc,41
9436.T,992503,Okinawa Cellular Telephone Co,41
9437.T,44273,NTT Docomo,41
9438.T,952939,MTI Ltd,41
9439.T,992504,M H Group Ltd,41
9441.T,992505,Bell-Park Co Ltd,41
9444.T,992506,Toshin Corp,41
9445.T,992507,Forval Telecom Inc,41
9446.T,992508,SKI Corp,41
9449.T,946328,Gmo Internet Inc,41
9450.T,1072312,Fibergate Inc,41
9466.T,969050,Aidma Marketing Communication Corp,41
9467.T,1012039,Alphapolis Co Ltd,41
9468.T,946329,Kadokawa Dwango Corp,41
9470.T,952940,Gakken Holdings Co Ltd,41
9474.T,952941,Zenrin Co Ltd,41
9475.T,952942,Shobunsha Publications Inc,41
9476.T,992509,Chuokeizai Sha Holdings Inc,41
9478.T,992510,SE Holdings and Incubations Co Ltd,41
9479.T,952943,Impress Holdings Inc,41
9501.T,44278,Tokyo Electric Power Co.,41
9502.T,44283,Chubu Electric Power Co.,41
9503.T,44288,The Kansai Electric Power Co.,41
9504.T,946330,The Chugoku Electric Power Inc,41
9505.T,946331,Hokuriku Electric Power Co,41
9506.T,946332,Tohoku Electric Power Co Inc,41
9507.T,946333,Shikoku Electric Power Co Inc,41
9508.T,102043,Kyushu Electric Power Co Inc,41
9509.T,946334,Hokkaido Electric Power Co Inc,41
9511.T,952944,Okinawa Electric Power Co Inc,41
9513.T,946335,Electric Power Development Ltd,41
9514.T,976174,First Energy Service Co Ltd,41
9517.T,976175,eREX Co Ltd,41
9519.T,996163,Renova Inc,41
9531.T,44293,Tokyo Gas Co.,41
9532.T,44298,Osaka Gas Co.,41
9533.T,946336,Toho Gas Co Ltd,41
9534.T,952945,Hokkaido Gas Co Ltd,41
9535.T,952946,Hiroshima Gas Co Ltd,41
9536.T,952947,Saibu Gas Co Ltd,41
9537.T,992511,Hokuriku Gas Co Ltd,41
9539.T,992512,Keiyo Gas Co Ltd,41
9543.T,952948,Shizuoka Gas Co Ltd,41
9551.T,952949,Metawater Co Ltd,41
9600.T,952950,I Net Corp,41
9601.T,952951,Shochiku Co Ltd,41
9602.T,44303,Toho Co.,41
9603.T,952952,H.I.S. Co Ltd,41
9605.T,952953,Toei Co Ltd,41
9610.T,992514,Wilson Learning Worldwide Inc,41
9612.T,976176,Luckland Co Ltd,41
9613.T,44308,NTT Data Corp.,41
9616.T,952955,Kyoritsu Maintenance Co Ltd,41
9619.T,952956,Ichinen Holdings Co Ltd,41
9621.T,952957,CTI Engineering Co Ltd,41
9622.T,952958,Space Co Ltd,41
9624.T,992515,Chodai Co Ltd,41
9625.T,992516,Cerespo Co Ltd,41
9627.T,952959,Ain Pharmaciez Inc,41
9628.T,952960,San Holdings Inc,41
9629.T,952961,PCA Corp,41
9631.T,992517,Tokyu Recreation Co Ltd,41
9632.T,952962,Subaru Enterprise Co Ltd,41
9633.T,952963,Tokyo Theatres Co Inc,41
9635.T,992518,Musashino Kogyo Co Ltd,41
9636.T,992519,Kin-Ei Corp,41
9637.T,992520,OS Co Ltd,41
9639.T,992521,Sankyo Frontier Co Ltd,41
9640.T,992522,Saison Information Systems Co Ltd,41
9641.T,992523,Sacos Corp,41
9644.T,992524,Tanabe Management Consulting Co Ltd,41
9647.T,992525,Kyowa Engineering Consultants Co Ltd,41
9651.T,992526,Japan Process Development Co Ltd,41
9656.T,992527,Greenland Resort Co Ltd,41
9658.T,976177,Business Brain Showa Ota Inc,41
9661.T,992528,Kabuki-Za Co Ltd,41
9663.T,976178,Nagawa Co Ltd,41
9671.T,952964,Yomiuri Land Co Ltd,41
9672.T,952965,Tokyotokeiba Co Ltd,41
9675.T,952966,Joban Kosan Co Ltd,41
9678.T,952967,Kanamoto Co Ltd,41
9679.T,992530,Horai Co Ltd,41
9681.T,44313,Tokyo Dome Corp.,41
9682.T,952968,DTS Corp,41
9684.T,946337,Square Enix Holdings Co Ltd,41
9685.T,992531,Kycom Holdings Co Ltd,41
9686.T,992532,Toyo Tec Co Ltd,41
9687.T,992533,KSK Co Ltd,41
9691.T,992534,Ryomo Systems Co Ltd,41
9692.T,952969,Computer Engineering & Consulting Ltd,41
9695.T,992535,Kamogawa Grand Hotel Ltd,41
9696.T,992536,With us Corp,41
9697.T,946338,Capcom Co Ltd,41
9698.T,992537,Creo Co Ltd,41
9699.T,952970,Nishio Rent All Co Ltd,41
9701.T,992538,Tokyo Kaikan Co Ltd,41
9702.T,952971,ISB Corp,41
9704.T,952972,Agora Hospitality Group Co Ltd,41
9706.T,952973,Japan Airport Terminal Co Ltd,41
9707.T,992539,Unimat Retirement Community Co Ltd,41
9708.T,992540,Imperial Hotel Ltd,41
9709.T,992541,NCS&A Co Ltd,41
9713.T,992542,Royal Hotel Ltd,41
9715.T,952974,Transcosmos Inc,41
9716.T,952975,Nomura Co Ltd,41
9717.T,952976,Jastec Co Ltd,41
9719.T,946339,SCSK Corp,41
9720.T,992543,Hotel Newgrand Co Ltd,41
9722.T,952977,Fujita Kanko Inc,41
9723.T,992544,Kyoto Hotel Ltd,41
9726.T,952978,KNT-CT Holdings Co Ltd,41
9728.T,952979,Nippon Kanzai Co Ltd,41
9729.T,952980,Tokai Corp,41
9731.T,952981,Hakuyosha Co Ltd,41
9733.T,992545,Nagase Brothers Inc,41
9734.T,992546,KK Seiyoken,41
9735.T,44318,Secom Co.,41
9739.T,952982,Nippon Systemware Co Ltd,41
9740.T,952983,Central Security Patrols Co Ltd,41
9742.T,952984,Ines Corp,41
9743.T,952985,Tanseisha Co Ltd,41
9744.T,952986,Meitec Corp,41
9746.T,952987,TKC Corp,41
9749.T,952989,Fuji Soft Inc,41
9753.T,992547,I X Knowledge Inc,41
9755.T,952990,Oyo Corp,41
9757.T,952991,Funai Soken Holdings Inc,41
9758.T,992548,Japan Systems Co Ltd,41
9759.T,952992,NSD Co Ltd,41
9760.T,952993,Shingakukai Co Ltd,41
9761.T,992549,Tokai Lease Co Ltd,41
9763.T,952994,Marubeni Construction Material Lease Co Ltd,41
9765.T,976179,Ohba Co Ltd,41
9766.T,44323,Konami Corp.,41
9767.T,992551,Nikken Kogaku Co Ltd,41
9768.T,992552,Idea Consultants Inc,41
9769.T,976180,Gakkyusha Co Ltd,41
9776.T,992553,Sapporo Clinical Laboratory Inc,41
9778.T,992554,Subaru Co Ltd,41
9780.T,992555,Harima B.Stem Corp,41
9782.T,992556,DMS Inc,41
9783.T,946340,Benesse Holdings,41
9787.T,952995,Aeon Delight Co Ltd,41
9788.T,952996,Nac Co Ltd,41
9790.T,952997,Fukui Computer Holdings Inc,41
9791.T,992557,Biken Techno Corp,41
9793.T,952999,Daiseki Co Ltd,41
9795.T,953000,Step Co Ltd,41
9797.T,992558,Nippon Engineering Consultants Co Ltd,41
9799.T,992559,Asahi Intelligence Service Co Ltd,41
9810.T,953001,Nippon Steel Trading,41
9812.T,992560,T.O.Ogasawara Co Ltd,41
9816.T,992561,Striders Corp,41
9818.T,992562,Daimaru Enawin Co Ltd,41
9820.T,992563,MT Genex Corp,41
9823.T,992564,Mammy Mart Corp,41
9824.T,992565,Senshu Electric Co Ltd,41
9827.T,992567,Lilycolor Co Ltd,41
9828.T,953002,Genki Sushi Co Ltd,41
9829.T,992568,Nagano Tokyu Department Store Co Ltd,41
9830.T,953003,Trusco Nakayama Corp,41
9831.T,946341,Yamada Denki Co Ltd,41
9832.T,953004,Autobacs Seven Co Ltd,41
9835.T,992569,Juntendo Co Ltd,41
9837.T,992571,Morito Co Ltd,41
9842.T,953005,Arcland Sakamoto Co Ltd,41
9843.T,946342,Nitori Holdings Co Ltd,41
9845.T,992572,Parker Corp,41
9846.T,992573,Tenmaya Store Co Ltd,41
9849.T,992574,Kyodo Paper Holdings,41
9850.T,953006,Gourmet Kineya Co Ltd,41
9852.T,992575,CB Group Management Co Ltd,41
9853.T,992576,Ginza Renoir Co Ltd,41
9854.T,953007,Aigan Co Ltd,41
9856.T,953008,KU Holdings Co Ltd,41
9857.T,992578,Eiwa Corp,41
9861.T,953009,Yoshinoya Holdings Co Ltd,41
9867.T,992579,Solekia Ltd,41
9869.T,953010,Kato Sangyo Co Ltd,41
9872.T,992580,Kitakei Co Ltd,41
9873.T,992581,KFC Holdings Japan Ltd,41
9876.T,992582,Cox Co Ltd,41
9878.T,992583,Sekido Co Ltd,41
9880.T,953011,Innotech Corp,41
9882.T,953012,Yellow Hat Ltd,41
9885.T,992584,Charle Co Ltd,41
9887.T,953013,Matsuya Foods Co Ltd,41
9888.T,992585,UEX Ltd,41
9889.T,953014,JBCC Holdings Inc,41
9890.T,992586,Makiya Co Ltd,41
9895.T,992587,Consec Corp,41
9896.T,953015,JK Holdings Co Ltd,41
9900.T,953016,Sagami Chain Co Ltd,41
9902.T,953017,Nichiden Corp,41
9903.T,992589,Kanseki Co Ltd,41
9904.T,992590,Verite Co Ltd,41
9906.T,992591,Fujii Sangyo Corp,41
9908.T,992592,Nihon Denkei Co Ltd,41
9909.T,992593,Aiko Corp,41
9913.T,992594,Nippo Ltd,41
9914.T,992595,Uematsu Shokai Co Ltd,41
9919.T,953018,Kansai Super Market Ltd,41
9927.T,992596,Watt Mann Co Ltd,41
9928.T,953019,Miroku Jyoho Service Co Ltd,41
9929.T,992597,Heiwa Paper Co Ltd,41
9930.T,953020,Kitazawa Sangyo Co Ltd,41
9932.T,953021,Sugimoto & Co Ltd,41
9934.T,953022,Inaba Denki Sangyo Co Ltd,41
9936.T,953023,Ohsho Food Service Corp,41
9941.T,992598,Taiyo Bussan Kaisha Ltd,41
9945.T,953024,Plenus Co Ltd,41
9946.T,953025,Ministop Co Ltd,41
9948.T,953026,Arcs Co Ltd,41
9950.T,992600,Hachi-Ban Co Ltd,41
9955.T,992601,Yonkyu Co Ltd,41
9956.T,953027,Valor Co Ltd,41
9959.T,992602,Aseed Holdings Co Ltd,41
9960.T,992603,Totech Corp,41
9962.T,946343,Misumi Group Inc,41
9964.T,992604,Itec Corp,41
9966.T,953029,Fujikyu Corp,41
9967.T,992605,Sakai Trading Co Ltd,41
9969.T,992606,Shokubun Co Ltd,41
9972.T,953030,Altech Co Ltd,41
9973.T,992607,Kozosushi Co Ltd,41
9974.T,953031,Belc Co Ltd,41
9976.T,992608,Sekichu Co Ltd,41
9977.T,992609,Aoki Super Co Ltd,41
9978.T,992610,Bunkyodo Group Holdings Co Ltd,41
9979.T,953032,Daisyo Corp,41
9980.T,992611,Maruko Co Ltd,41
9982.T,953033,Takihyo Co Ltd,41
9983.T,44328,Fast Retailing Co.,41
9984.T,44333,Softbank Group Corp.,41
9986.T,953034,Zaoh Co Ltd,41
9987.T,946344,Suzuken Co Ltd,41
9989.T,946345,Sundrug Co Ltd,41
9990.T,953035,Sac s Bar Holdings Inc,41
9991.T,953036,Gecoss Corp,41
9993.T,953037,Yamazawa Co Ltd,41
9994.T,953038,Yamaya Corp,41
9995.T,953039,Renesas Easton Co Ltd,41
9996.T,992613,Satoh&Co Ltd,41
9997.T,953040,Belluna Co Ltd,41
NIKKEI225.T,8859,Nikkei225 Futures,41
TOPIX.T,941609,TOPIX Futures,41
TOPX.T,41042,TOPIX index,41
N225.T,178,Nikkei225,41

#BK THAILAND
AWC.BK,1156878,Asset World Corp PLC,44
SAAM.BK,1152839,SAAM Energy Development PCL,44
CAZ.BK,1152835,CAZ Thailand PCL,44
SPRIME.BK,1122220,S Prime Growth Leasehold REIT,44
ZEN.BK,1122745,Zen Corporation Group Co Ltd,44
GSC.BK,1152836,Global Service Center PCL,44
VRANDA.BK,1129477,Veranda Resort PCL,44
VL.BK,1152843,V L Enterprise PCL,44
MITSIB.BK,1152838,Mitsib Leasing PCL,44
ACG.BK,1152834,Autocorp Holding PCL,44
ARIN.BK,1152833,Arinsiri Land PCL,44
AIMCG.BK,1156196,Aim Comm Growth Freehold And Lease,44
ILM.BK,1152797,Index Living Mall PCL,44
KUMWEL.BK,1152837,Kumwell PCL,44
DOHOME.BK,1152796,Dohome PCL,44
CPW.BK,1153257,Copperwired Public Company Ltd,44
RBF.BK,1153457,R And B Food Supply Public Co Ltd,44
SHR.BK,1155485,S Hotels And Resorts Public Co Ltd,44
ACE.BK,1155551,Absolute Clean Energy Public Co Ltd,44
BKER.BK,1155991,Bualuang K E Retail Leasehold Reit,44
SFLEX.BK,1156093,Starflex Public Co Ltd,44
AIMIRT.BK,1057999,AIM Industrial Growth Freehold and Leasehold REIT,44
BOFFICE.BK,1061422,Bhiraj Office Leasehold REIT,44
ABM.BK,1067180,Asia Biomass PCL,44
B-WORK.BK,1072225,Bualuang Office Leasehold REIT,44
CMAN.BK,1072980,Chememan PCL,44
CHAYO.BK,1073015,Chayo Group PCL,44
DOD.BK,1097731,DOD Biotech PCL,44
TEAMG.BK,1088690,TEAM Consulting Engineering and Management PLC,44
MVP.BK,1089911,M Vision PCL,44
TPLAS.BK,1152842,Thai Plastic Industrial 1994 PCL,44
KWM.BK,1096525,K.W. Metal Work PCL,44
OSP.BK,1116649,Osotspa PCL,44
BGC.BK,1097397,BG Container Glass Public Company Ltd,44
SONIC.BK,1152840,Sonic Interfreight PCL,44
TIGER.BK,1152841,Thai Enger Holding PCL,44
PR9.BK,1097645,Praram 9 Hospital Public Company Ltd,44
TFFIF.BK,1130978,Thailand Future,44
NER.BK,1097774,North East Rubbers PCL,44
CMC.BK,1099586,Chaopraya Mahanakorn PCL,44
SISB.BK,1115209,SISB PCL,44
STI.BK,1116148,Stonehenge Inter PCL,44
BAM.BK,1156026,Bangkok Commercial Asset Management,44
TQM.BK,1116147,TQM Corporation PCL,44
MONTRI.BK,102392,101 Montri Storage Property Fund,44
2S.BK,103806,2S Metal PCL,44
AH.BK,102394,AAPICO Hitech PCL,44
ABICO.BK,945730,Abico Holdings PCL,44
ADAM.BK,103813,Adamas Incorporation PCL,44
ACC.BK,986135,Advanced Connection Corp PCL,44
ADVANC.BK,102396,Advanced Info Service PCL,44
ADVANCF.BK,986136,Advanced Info Service PCL,44
ADVANCN.BK,996186,Advanced Info Service PCL DRC,44
AIT.BK,102395,Advanced Information Technology PCL,44
AITF.BK,102858,Advanced Information Technology PCL F,44
AEC.BK,102397,AEC Securities PCL,44
AEONTS.BK,102398,Aeon Thana Sinsap 44 PCL,44
AU.BK,994632,After You Public Co Ltd,44
AUN.BK,994634,After You Public Co Ltd Not Voting,44
APURE.BK,102399,Agripure Holdings PCL,44
AIE.BK,103817,AI Energy PCL,44
AHC.BK,102400,Aikchol Hospital PCL,44
AIMIRT.BK,1057999,AIM Industrial Growth Freehold and Leasehold REIT,44
AIRA.BK,941021,Aira Capital PCL,44
AF.BK,103829,Aira Factoring PCL,44
AOTF.BK,986140,Airports of 44 PCL,44
AOT.BK,102401,Airports of 44 PCL,44
AOTN.BK,996187,Airports of 44 PCL DRC,44
AJA.BK,102480,AJ Advance Technology PCL,44
AJ.BK,102393,AJ Plast PCL,44
AKP.BK,103818,Akkhie Prakarn Public Company Limited,44
ALLA.BK,993209,Alla PCL,44
ALLAN.BK,993308,Alla PCL Non voting,44
ALT.BK,986137,ALT Telecom PCL,44
ALUCON.BK,102402,Alucon PCL,44
AMA.BK,994629,AMA Marine PCL,44
AMAN.BK,994631,AMA Marine PCL Non Voting,44
AMANAH.BK,102403,Amanah Leasing PCL,44
AMARIN.BK,102404,Amarin Printing and Publishing PCL,44
ABPIF.BK,102406,Amata B Grimm Power Plant Infrastructure Fund,44
AMATA.BK,102405,Amata Corporation PCL,44
AMATAF.BK,986138,Amata Corporation PCL F,44
AMATAR.BK,986267,Amata Summit Growth Freehold and Leasehold Real Estate Investment Trust,44
AMATAV.BK,986139,Amata VN PCL,44
ANAN.BK,102407,Ananda Development PCL,44
AP.BK,102408,AP 44 PCL,44
APEX.BK,1046291,Apex Development PCL,44
ADB.BK,1054859,Applied DB PCL,44
ADBN.BK,1056022,Applied DB PCL DRC,44
AQ.BK,102409,AQ Estate PCL,44
AQUA.BK,102410,Aqua Corporation PCL,44
A.BK,102411,Areeya Property PCL,44
ARIP.BK,103814,ARIP PCL,44
ARROW.BK,103816,Arrow Syndicate PCL,44
ASEFA.BK,986141,Asefa PCL,44
AAV.BK,102412,Asia Aviation PCL,44
ACAP.BK,103833,Asia Capital Group PCL,44
AFC.BK,941251,Asia Fiber PCL,44
AGE.BK,103815,Asia Green Energy PCL,44
ASIA.BK,102414,Asia Hotel PCL,44
AMC.BK,102415,Asia Metal PCL,44
ASP.BK,102416,Asia Plus Group Holdings PCL,44
APCS.BK,102417,Asia Precision PCL,44
ASK.BK,102418,Asia Sermkij Leasing PCL,44
AI.BK,102419,Asian Insulators PCL,44
ASIMAR.BK,102420,Asian Marine Services PCL,44
APCO.BK,103824,Asian Phytoceuticals PCL,44
ASIAN.BK,102421,Asian Seafoods Coldstorage PCL,44
AS.BK,102422,Asiasoft Corporation PCL,44
ASN.BK,986142,ASN Broker PCL,44
DIGI.BK,102423,Asset Bright Public PCL,44
ATP30.BK,986143,ATP30 PCL,44
BROCK.BK,102424,Baan Rock Garden PCL,44
BCP.BK,102425,Bangchak Petroleum PCL,44
BA.BK,942605,Bangkok Airways PCL,44
BAFS.BK,102426,Bangkok Aviation Fuel Services PCL,44
BBL.BK,102427,Bangkok Bank PCL,44
BBLF.BK,986145,Bangkok Bank PCL,44
BCH.BK,102428,Bangkok Chain Hospital PCL,44
BKKCP.BK,102446,Bangkok Commercial Property Fund,44
BKD.BK,103831,Bangkok Dec-Con PCL,44
BDMS.BK,102447,Bangkok Dusit Medical Services PCL,44
BDMSN.BK,996189,Bangkok Dusit Medical Services PCL DRC,44
BDMSF.BK,986146,Bangkok Dusit Medical Services PCL F,44
BEMN.BK,996191,Bangkok Expressway and Metro PCL DRC,44
BEM.BK,986147,Bangkok Expressway and Metro PCL,44
BEMF.BK,986148,Bangkok Expressway and Metro PCL F,44
BFIT.BK,102430,Bangkok First Investment & Trust PCL,44
BKI.BK,102431,Bangkok Insurance PCL,44
BLAND.BK,102432,Bangkok Land PCL,44
BLA.BK,102433,Bangkok Life Assurance PCL,44
BR.BK,986151,Bangkok Ranch PCL,44
BM.BK,986150,Bangkok Sheet Metal PCL,44
BUI.BK,102435,Bangkok Union Insurance PCL,44
BTC.BK,102436,Bangpakong Terminal PCL,44
BSBM.BK,102437,Bangsaphan Barmill PCL,44
BAY.BK,102438,Bank of Ayudhya PCL,44
BANPU.BK,102439,Banpu PCL,44
BANPUN.BK,996188,Banpu PCL DRC,44
BANPUF.BK,986144,Banpu PCL F,44
BPP.BK,993044,Banpu Power PCL,44
BCPG.BK,991140,BCPG PCL,44
BEAUTY.BK,102440,Beauty Community PCL,44
BEC.BK,102441,BEC World PCL,44
BECN.BK,996190,BEC World PCL DRC,44
BECF.BK,941252,BEC World PCL F,44
BJC.BK,102442,Berli Jucker PCL,44
BJCN.BK,996193,Berli Jucker PCL DRC,44
BWG.BK,102443,Better World Green PCL,44
BGRIM.BK,1025098,BGrimm Power PCL,44
BGT.BK,103819,BGT Corporation PCL,44
BIG.BK,986149,BIG Camera Corporation PCL,44
BJCHI.BK,102445,BJC Heavy Industries PCL,44
BTNC.BK,941688,Boutique Newcity PCL,44
BROOK.BK,103821,Brooker Group PCL,44
BTW.BK,986152,BT Wealth Industries PCL,44
BTS.BK,102448,BTS Group Holdings PCL,44
BTSF.BK,102728,BTS Group Holdings PCL F,44
BTSN.BK,996194,BTS Group Holdings PCL DRC,44
BTSGIFU.BK,102449,BTS Rail Mass Transit Growth Infrastructure Fund,44
BSM.BK,103825,BuilderSmart PCL,44
BH.BK,102450,Bumrungrad Hospital PCL,44
BHN.BK,996192,Bumrungrad Hospital PCL DRC,44
BRR.BK,942606,Buriram Sugar PCL,44
BRRGIF.BK,1031338,Buriram Sugar Group Power Plant Infrastructure Unit,44
BIZ.BK,986268,Business Alignment PCL,44
BOL.BK,103820,Business Online PCL,44
CCET.BK,102451,Cal-Comp Electronics 44 PCL,44
CEN.BK,941253,Capital Engineering Network PCL,44
CNS.BK,102452,Capital Nomura Securities PCL,44
CBG.BK,942849,Carabao Group PCL,44
CPH.BK,102453,Castle Peak Holdings PCL,44
CTARAF.BK,102454,Centara Hotels & Resorts Leasehold Property Fund,44
CPN.BK,102455,Central Pattana PCL,44
CPNN.BK,996197,Central Pattana PCL DRC,44
CPNF.BK,986158,Central Pattana PCL F,44
CENTEL.BK,102456,Central Plaza Hotel PCL,44
CENTELF.BK,986153,Central Plaza Hotel PCL F,44
CK.BK,102457,CH Karnchang PCL,44
CWT.BK,102458,Chai Watana Tannery Group PCL,44
CHARAN.BK,102459,Charan Insurance PCL,44
CI.BK,102460,Charn Issara Development PCL,44
CPF.BK,102461,Charoen Pokphand Foods PCL,44
CPFF.BK,986157,Charoen Pokphand Foods PCL,44
CPFN.BK,996196,Charoen Pokphandoods PCL DRC,44
CTW.BK,102462,Charoong Thai Wire & Cable PCL,44
CHEWA.BK,986154,Chewathai PCL,44
CMR.BK,102463,Chiang Mai Ram Medical Business PCL,44
CM.BK,102464,Chiangmai Frozen Foods PCL,44
CRD.BK,1052235,Chiangmai Rimdoi PCL,44
CHO.BK,103827,Cho Thavee PCL,44
CCP.BK,102465,Chonburi Concrete Product PCL,44
CHOW.BK,103823,Chow Steel Industries PCL,44
CNT.BK,102466,Christiani and Nielsen Thai PCL,44
CRANE.BK,103826,Chu Kai PCL,44
CHG.BK,102467,Chularat Hospital PCL,44
CPI.BK,102468,Chumporn Palm Oil Industry PCL,44
CHUO.BK,103832,Chuo Senko 44 PCL,44
CIG.BK,103822,CI Group PCL,44
CIMBT.BK,102469,CIMB Thai Bank PCL,44
CSR.BK,102470,City Sports and Recreation PCL,44
CITY.BK,102471,City Steel PCL,44
CKP.BK,102472,CK Power PCL,44
CKPF.BK,102474,CK Power PCL F,44
CMO.BK,103811,CMO PCL,44
COL.BK,102639,COL PCL,44
COM7.BK,986155,Com7 PCL,44
COMANN.BK,993999,Comanche International PCL DRC,44
COMAN.BK,993257,Comanche International PCL,44
CSS.BK,102473,Communication & System Solution PCL,44
CGD.BK,103828,Country Group Development PCL,44
CGH.BK,950592,Country Group Holdings PCL,44
CPALLN.BK,996195,CP All PCL DRC,44
CPALL.BK,102475,CP All PCL,44
CPALLF.BK,986156,CP All PCL F,44
CPTGFU.BK,986269,CP Tower Growth Leasehold Property Fund,44
CPL.BK,102476,CPL Group PCL,44
CPNCGU.BK,102477,CPN Commercial Growth Leasehold Property Fund,44
CPR.BK,103809,CPR Gomu Industrial PCL,44
CPT.BK,1056979,CPT Drives And Power PCL,44
CPTN.BK,1057318,CPT Drives And Power PCL DRC,44
CSC.BK,102479,Crown Seal PCL,44
CRYSTAL.BK,941689,Crystal Retail Growth Leasehold Property Fund,44
CSL.BK,102481,CS Loxinfo PCL,44
CSP.BK,102482,CSP Steel Center PCL,44
DCON.BK,102483,DCON Products PCL,44
DELTA.BK,102484,Delta Electronics 44 PCL,44
DELTAN.BK,996198,Delta Electronics 44 PCL DRC,44
DEMCO.BK,102485,Demco PCL,44
DCORP.BK,103830,Demeter Corporation PCL,44
D.BK,1006200,Dental Corporation PCL,44
DN.BK,1006202,Dental Corporation PCL DRC,44
DF.BK,1006201,Dental Corporation PCL F,44
TIP.BK,102486,Dhipaya Insurance PCL,44
DRT.BK,102487,Diamond Building Products PCL,44
DRTF.BK,102413,Diamond Building Products PCL F,44
DIFU.BK,986270,Digital Telecommunications Infrastructure Fund,44
DIMET.BK,103808,Dimet Siam PCL,44
DNA.BK,103810,DNA 2002 PCL,44
DDD.BK,1057143,Do Day Dream PCL,44
DDDN.BK,1057319,Do Day Dream PCL DRC,44
DRACO.BK,102488,Draco PCB PCL,44
DTCI.BK,941261,DTC Industries PCL,44
DTC.BK,102490,Dusit Thani PCL,44
DREIT.BK,102491,Dusit Thani Freehold and Leasehold Real Estate Investment Trust,44
DCC.BK,102492,Dynasty Ceramic PCL,44
EFORL.BK,103812,E for L Aim PCL,44
EASON.BK,102493,Eason Paint PCL,44
ECF.BK,103834,East Coast Furnitech PCL,44
ECL.BK,102494,Eastern Commercial Leasing PCL,44
EPG.BK,943699,Eastern Polymer Group PCL,44
EPCO.BK,102495,Eastern Printing PCL,44
ESTAR.BK,102496,Eastern Star Real Estate PCL,44
ETE.BK,996201,Eastern Technical Engineering Co Ltd,44
ETEN.BK,996202,Eastern Technical Engineering Co Ltd DRC,44
EASTW.BK,102497,Eastern Water Resources Development and Management PCL,44
EKH.BK,986161,Ekachai Medical Care PCL,44
EKHF.BK,986162,Ekachai Medical Care PCL F,44
AKR.BK,102498,Ekarat Engineering PCL,44
EGCO.BK,102499,Electricity Generating PCL,44
EGCON.BK,996200,Electricity Generating PCL DRC,44
EIC.BK,102500,Electronics Industry PCL,44
EMC.BK,102501,EMC PCL,44
EA.BK,103835,Energy Absolute PCL,44
EAN.BK,996199,Energy Absolute PCL DRC,44
EARTH.BK,102502,Energy Earth PCL,44
ERW.BK,102503,Erawan Group PCL,44
ERWPF.BK,102504,Erawan Hotel Growth Property Fund,44
ESSO.BK,102505,Esso 44 PCL,44
EE.BK,102506,Eternal Energy PCL,44
UREKA.BK,103836,Eureka Design PCL,44
EVER.BK,102507,Everland PCL,44
XO.BK,950602,Exotic Food PCL,44
FANCY.BK,102508,Fancy Wood Industries PCL,44
FE.BK,102509,Far East DDB PCL,44
FER.BK,102588,Ferrum PCL,44
FVC.BK,103838,Filter Vision PCL,44
FNS.BK,102510,Finansa PCL,44
FSS.BK,102511,Finansia Syrus Securities PCL,44
FTE.BK,1030964,Firetrade Engineering PCL,44
FLOYD.BK,1054669,Floyd PCL,44
FN.BK,993258,FN Factory Outlet PCL,44
FNN.BK,993309,FN Factory Outlet PCL Non voting,44
FOCUS.BK,103839,Focus Development and Construction PCL,44
FND.BK,102512,Food and Drinks PCL,44
FC.BK,986163,Food Capitals PCL,44
FORTH.BK,102513,Forth Corporation PCL,44
FSMART.BK,950594,Forth Smart Service PCL,44
FPI.BK,103840,Fortune Parts Industry PCL,44
FMT.BK,102514,Furukawa Metal 44 PCL,44
FUTUREPFU.BK,102515,Future Park Leasehold Property Fund,44
GCAP.BK,103841,G Capital PCL,44
GJS.BK,941690,G J Steel PCL,44
GSTEL.BK,941691,G Steel PCL,44
GEL.BK,102516,General Engineering PCL,44
GENCO.BK,102517,General Environmental Conservation PCL,44
GTB.BK,986167,Getabec PCL,44
GFPT.BK,102518,GFPT PCL,44
GLANDRT.BK,1008999,GLAND Office Leasehold REIT,44
GC.BK,102519,Global Connections PCL,44
GGC.BK,1009375,Global Green Chemicals PCL,44
GGCN.BK,1009377,Global Green Chemicals PCL DRC,44
GGCF.BK,1009376,Global Green Chemicals PCL F,44
GPSC.BK,986165,Global Power Synergy PCL,44
GBX.BK,102520,Globlex Holding Management PCL,44
GLOW.BK,102521,Glow Energy PCL,44
GLOWN.BK,996203,Glow Energy PCL DRC,44
GRAMMY.BK,102522,GMM Grammy PCL,44
GOLDPFU.BK,102523,Gold Property Fund Lease Hold,44
GOLD.BK,102524,Golden Land Property Development PCL,44
SUTHA.BK,102525,Golden Lime PCL,44
GVREITU.BK,986168,Golden Ventures Leasehold Real Estate Investment Trust,44
GYT.BK,102526,Goodyear 44 PCL,44
GLAND.BK,102527,Grand Canal Land PCL,44
GPI.BK,1055836,Grand Prix International PCL,44
GPIN.BK,1057320,Grand Prix International PCL DRC,44
GRAND.BK,102528,Grande Asset Hotels and Property PCL,44
GAHREIT.BK,1054816,Grande Hospitality REIT,44
GIFT.BK,103896,Gratitude Infinite PCL,44
GREEN.BK,986166,Green Resources PCL,44
GL.BK,102529,Group Lease PCL,44
GLF.BK,986164,Group Lease PCL F,44
GULF.BK,1056130,Gulf Energy Development PCL,44
GULFN.BK,1057321,Gulf Energy Development PCL DRC,44
GUNKUL.BK,102530,Gunkul Engineering PCL,44
HTC.BK,102531,Haad Thip PCL,44
HTECH.BK,103845,Halcyon Technology PCL,44
HANA.BK,102532,Hana Microelectronics PCL,44
HARN.BK,993210,Harn Engineering Solutions PCL,44
HPF.BK,102533,Hemaraj Industrial Property and Leasehold Fund,44
HREITU.BK,994000,Hemaraj Leasehold Real Estate Investment Trust,44
HPT.BK,986170,Home Pottery PCL,44
HMPRO.BK,102535,Home Product Center PCL,44
HMPROF.BK,986169,Home Product Center PCL F,44
HMPRON.BK,996204,Home Product Center PCL DRC,44
HOTPOT.BK,103843,Hot Pot PCL,44
HUMAN.BK,1056157,Humanica PCL,44
HUMANN.BK,1057322,Humanica PCL DRC,44
HFT.BK,102536,Hwa Fong Rubber 44 PCL,44
HYDRO.BK,103844,Hydrotek PCL,44
ICC.BK,102537,ICC International PCL,44
ICHI.BK,102538,Ichitan Group PCL,44
ICN.BK,1050109,Information and Communication Networks PCL,44
ICNN.BK,1052755,Information and Communication Networks PCL DRC,44
IFS.BK,102539,IFS Capital 44 PCL,44
IMPACT.BK,986272,IMPACT Growth Real Estate Investment Trust,44
INSURE.BK,102582,Indara Insurance PCL,44
IVL.BK,102540,Indorama Ventures PCL,44
IVLN.BK,996206,Indorama Ventures PCL DRC,44
INGRSN.BK,1043314,Ingress Industrial 44 PCL DRC,44
INGRS.BK,1031389,Ingress Industrial 44 PCL,44
IRC.BK,102541,Inoue Rubber 44 PCL,44
IFEC.BK,102543,Inter Far East Energy Corporation PCL,44
IHL.BK,102544,Interhides PCL,44
ILINK.BK,103849,Interlink Communication PCL,44
ITEL.BK,989494,Interlink Telecom PCL,44
IEC.BK,102542,International Engineering PCL,44
IRCP.BK,103846,International Research Corporation PCL,44
INET.BK,102545,Internet 44 PCL,44
INTUCH.BK,102546,Intouch Holdings PCL,44
INTUCHF.BK,986171,Intouch Holdings PCL F,44
IRPCN.BK,996205,IRPC PCL DRC,44
IRPC.BK,102547,IRPC PCL,44
IRPCF.BK,102811,IRPC PCL F,44
IT.BK,102548,IT City PCL,44
ITD.BK,102549,Italian Thai Development PCL,44
JCT.BK,102550,Jack Chia Industries 44 PCL,44
J.BK,986172,JAS Asset PCL,44
JASIF.BK,986273,Jasmine Broadband Internet Infrastructure Fund,44
JAS.BK,102551,Jasmine International PCL,44
JTS.BK,102552,Jasmine Telecom Systems PCL,44
JMART.BK,102553,Jay Mart PCL,44
JKN.BK,1055307,JKN Global Media PCL,44
JKNN.BK,1056023,JKN Global Media PCL DRC,44
JMT.BK,102554,JMT Network Services PCL,44
JSP.BK,942852,JSP Property PCL,44
JUBILE.BK,103847,Jubilee Enterprise PCL,44
JUTHA.BK,102555,Jutha Maritime PCL,44
JWD.BK,986173,JWD InfoLogistics PCL,44
KYE.BK,102557,Kang Yong Electric PCL,44
KAMART.BK,102558,Karmarts PCL,44
KTIS.BK,102559,Kaset Thai International Sugar Corporation PCL,44
KBANK.BK,102560,Kasikornbank PCL,44
KBANKN.BK,996207,Kasikornbank PCL DRC,44
KBANKF.BK,986174,Kasikornbank PCL F,44
KCM.BK,950595,KC Metalsheet PCL,44
KC.BK,102556,KC Property PCL,44
KCE.BK,102561,KCE Electronics PCL,44
KCEN.BK,996208,KCE Electronics PCL DRC,44
KCEF.BK,102847,KCE Electronics PCL F,44
KGI.BK,102563,KGI Securities 44 PCL,44
KSL.BK,102564,Khon Kaen Sugar Industry PCL,44
KSLF.BK,986178,Khon Kaen Sugar Industry PCL F,44
KBS.BK,102565,Khonburi Sugar PCL,44
CHOTI.BK,102566,Kiang Huat Sea Gull Trading Frozen Food PCL,44
KKP.BK,102567,Kiatnakin Bank PCL,44
KKPF.BK,986175,Kiatnakin Bank PCL F,44
KIAT.BK,103848,Kiattana Transport PCL,44
KWG.BK,986179,King Wai Group 44 PCL,44
K.BK,986176,Kingsmen CMTI PCL,44
KPNPF.BK,102568,KPN Property Fund,44
KTB.BK,102569,Krung Thai Bank PCL,44
KTBN.BK,996209,Krung Thai Bank PCL DRC,44
KWC.BK,941254,Krungdhep Sophon PCL,44
KCAR.BK,102570,Krungthai Car Rent and Lease PCL,44
KTC.BK,102571,Krungthai Card PCL,44
KTCF.BK,102808,Krungthai Card PCL F,44
KKC.BK,102572,Kulthorn Kirby PCL,44
LPH.BK,986181,Ladprao General Hospital PCL,44
LRH.BK,102574,Laguna Resorts and Hotels PCL,44
LALIN.BK,102575,Lalin Property PCL,44
LST.BK,102576,Lam Soon 44 PCL,44
LH.BK,102577,Land and Houses PCL,44
LHF.BK,986180,Land and Houses PCL F,44
LHPFU.BK,102578,Land and Houses Freehold and Leasehold Property Fund,44
LANNA.BK,102579,Lanna Resources PCL,44
LDC.BK,950596,LDC Dental PCL,44
LIT.BK,103850,Lease IT PCL,44
LEE.BK,102580,Lee Feed Mill PCL,44
LHBANK.BK,102581,LH Financial Group PCL,44
LHHOTELU.BK,986274,LH Hotel Leasehold Real Estate Investment Trust,44
LHSCU.BK,986275,LH Shopping Centers Leasehold Real Estate Investment Trust,44
LNE.BK,103851,Lighting and Equipment PCL,44
LHK.BK,102583,Lohakit Metal PCL,44
LOXLEY.BK,102584,Loxley PCL,44
LPN.BK,102573,LPN Development PCL,44
LTX.BK,102585,Luckytex 44 PCL,44
LUXFU.BK,102586,Luxury Real Estate Investment Fund,44
MPIC.BK,102587,M Pictures Entertainment PCL,44
M-CHAI.BK,102591,Mahachai Hospital PCL,44
MAJOR.BK,102593,Major Cineplex Group PCL,44
MAJORF.BK,986182,Major Cineplex Group F,44
MJLFU.BK,102592,Major Cineplex Lifestyle Leasehold Property Fund,44
MJD.BK,102594,Major Development PCL,44
MALEE.BK,102595,Malee Group PCL,44
MANRIN.BK,102596,Mandarin Hotel PCL,44
MACO.BK,102597,Master Ad PCL,44
KOOL.BK,986177,Masterkool International PCL,44
MATCH.BK,102598,Matching Maximize Solution PCL,44
MATI.BK,102599,Matichon PCL,44
MAX.BK,102600,Max Metal Corporation PCL,44
MBKET.BK,102601,Maybank Kim Eng Securities 44 PCL,44
MBK.BK,102602,MBK PCL,44
MC.BK,102603,MC Group PCL,44
MCF.BK,986183,MC Group PCL F,44
MCOT.BK,102604,MCOT PCL,44
MCS.BK,941255,MCS Steel PCL,44
MDX.BK,102589,MDX PCL,44
MEGA.BK,102605,Mega Lifesciences PCL,44
MGT.BK,997137,Megachem 44 PCL,44
MGTN.BK,997138,Megachem 44 PCL DRC,44
MSC.BK,102606,Metro Systems Corporation PCL,44
MFC.BK,102608,MFC Asset Management PCL,44
MITU.BK,986277,MFC Industrial Real Estate Investment Trust,44
M-IIU.BK,102609,MFC Industrial Investment Property and Leasehold Fund,44
MNIT.BK,102610,MFC Nichada Thani Property Fund,44
M-PAT.BK,941692,MFC Patong Heritage Property Fund,44
M-STOR.BK,102611,MFC Strategic Storage Fund,44
MNIT2.BK,102631,MFC-Nichada Thani Property Fund 2,44
MFEC.BK,102612,MFEC PCL,44
MIDA.BK,102613,Mida Assets PCL,44
ML.BK,102614,Mida Leasing PCL,44
MILL.BK,102615,Millcon Steel PCL,44
MIPF.BK,986276,Millionaire Property Fund,44
MINTF.BK,102812,Minor International PCL F,44
MINT.BK,102616,Minor International PCL,44
MINTN.BK,996210,Minor International PCL DRC,44
MK.BK,102590,MK Real Estate Development PCL,44
M.BK,102617,MK Restaurant Group PCL,44
MODERN.BK,102618,Modernform Group PCL,44
MONO.BK,103852,Mono Technology PCL,44
MOONG.BK,103853,Moong Pattana International PCL,44
MPG.BK,941019,MPG Corp PCL,44
MTI.BK,102619,Muang Thai Insurance PCL,44
MTLS.BK,942850,Muangthai Leasing PCL,44
MM.BK,1008689,Mudman PCL,44
MMN.BK,1008690,Mudman PCL DRC,44
MNRF.BK,102620,Multi National Residence Fund,44
MBAX.BK,103854,Multibax PCL,44
METCO.BK,102621,Muramoto Electron 44 PCL,44
NSI.BK,102623,Nam Seng Insurance PCL,44
NYT.BK,102624,Namyong Terminal PCL,44
NBC.BK,103855,Nation Broadcasting Corporation PCL,44
NINE.BK,103856,Nation International Edutainment PCL,44
NMG.BK,102625,Nation Multimedia Group PCL,44
NNCL.BK,102627,Nava Nakorn PCL,44
NKI.BK,102628,Navakij Insurance PCL,44
NWR.BK,102629,Nawarat Patanakarn PCL,44
NCH.BK,102622,NC Housing PCL,44
NCL.BK,942851,NCL International Logistics PCL,44
NDR.BK,945190,ND Rubber PCL,44
NEP.BK,102630,NEP Realty and Industry PCL,44
NETBAY.BK,986184,Netbay PCL,44
NPK.BK,103857,New Plus Knitting PCL,44
NC.BK,941249,Newcity Bangkok PCL,44
NEWS.BK,103875,News Network Corp PCL,44
NPP.BK,102632,Nippon Pack 44 PCL,44
NVD.BK,986159,Nirvana Daii PCL,44
NOBLE.BK,102633,Noble Development PCL,44
NOK.BK,102634,Nok Airlines PCL,44
NTV.BK,102635,Nonthavej Hospital PCL,44
EGATIFU.BK,986271,North Bangkok Power Plant Block 1 Infrastructure Fund Electricity Generating Aut,44
NUSA.BK,102636,Nusasiri PCL,44
OCC.BK,102637,OCC PCL,44
OCEAN.BK,103858,Ocean Commerce PCL,44
OGC.BK,102638,Ocean Glass PCL,44
OHTL.BK,986185,OHTL PCL,44
OISHI.BK,102640,Oishi Group PCL,44
OTO.BK,103859,One to One Contacts PCL,44
ORI.BK,986186,Origin Property PCL,44
PACE.BK,102642,Pace Development Corporation PCL,44
PAP.BK,102643,Pacific Pipe PCL,44
PDI.BK,102644,Padaeng Industry PCL,44
PDIF.BK,102534,Padaeng Industry PCL F,44
PAE.BK,102645,PAE 44 PCL,44
PAF.BK,102646,Pan Asia Footwear PCL,44
PJW.BK,103860,Panjawattana Plastic PCL,44
PK.BK,986188,Patkol PCL,44
PATO.BK,102647,Pato Chemical Industry PCL,44
PRG.BK,941257,Patum Rice Mill and Granary PCL,44
PCSGH.BK,102641,PCS Machine Group Holding PCL,44
PG.BK,102648,Peoples Garment PCL,44
PERM.BK,102649,Permsin Steel Works PCL,44
PL.BK,102650,Phatra Leasing PCL,44
PHOL.BK,103861,Phol Dhanya PCL,44
PICO.BK,103862,Pico 44 PCL,44
PPFU.BK,941256,Pinthong Industrial Park Property Fund,44
PIMO.BK,986187,Pioneer Motor PCL,44
PLANB.BK,945731,Plan B Media PCL,44
PLANET.BK,104384,Planet Communications Asia PCL,44
PLAT.BK,948396,Platinum Group PCL,44
PMTA.BK,953127,PM Thoresen Asia Holdings PCL,44
POLAR.BK,102866,Polaris Capital PCL,44
PTL.BK,102651,Polyplex 44 PCL,44
PPM.BK,103863,Porn Prom Metal PCL,44
INOX.BK,102652,POSCO Thainox PCL,44
POST.BK,102653,Post Publishing PCL,44
PLE.BK,102654,Power Line Engineering PCL,44
PSTC.BK,950597,Power Solution Technologies PCL,44
PRAKIT.BK,102655,Prakit Holdings PCL,44
PRANDA.BK,102656,Pranda Jewelry PCL,44
PREB.BK,102657,Pre-Built PCL,44
PSL.BK,102658,Precious Shipping PCL,44
PRECHA.BK,102659,Preecha Group PCL,44
PE.BK,102660,Premier Enterprise PCL,44
PM.BK,102661,Premier Marketing PCL,44
PPP.BK,102662,Premier Products PCL,44
PT.BK,102663,Premier Technology PCL,44
PB.BK,102664,President Bakery PCL,44
PRM.BK,1050056,Prima Marine PCL,44
PRMN.BK,1052792,Prima Marine PCL DRC,44
POPFU.BK,102666,Prime Office Leasehold Property Fund,44
PRINC.BK,102667,Principal Capital PCL,44
PRIN.BK,102668,Prinsiri PCL,44
PDG.BK,941020,Prodigy PCL,44
PPS.BK,103866,Project Planning Service PCL,44
PF.BK,102669,Property Perfect PCL,44
PSH.BK,994065,Pruksa Holding PCL,44
PSHN.BK,994066,Pruksa Holding PCL Non voting,44
PTG.BK,102671,PTG Energy PCL,44
PTTN.BK,996213,PTT PCL DRC,44
PTTEP.BK,102673,PTT Exploration and Production PCL,44
PTTEPF.BK,986190,PTT Exploration and Production F,44
PTTEPN.BK,996211,PTT Exploration and Production PCL DRC,44
PTTGC.BK,102674,PTT Global Chemical PCL,44
PTTGCN.BK,996212,PTT Global Chemical PCL DRC,44
PTTGCF.BK,986191,PTT Global Chemical PCL F,44
PTT.BK,102672,PTT PCL,44
PTTF.BK,102607,PTT PCL F,44
PYLON.BK,103864,Pylon PCL,44
QTC.BK,103865,QTC Energy PCL,44
QLT.BK,103867,Qualitech PCL,44
Q-CON.BK,102677,Quality Construction Products PCL,44
QHOPU.BK,102678,Quality Hospitality Leasehold Property Fund,44
QH.BK,102679,Quality Houses PCL,44
QHHR.BK,102675,Quality Houses Hotel and Residence Freehold and Leasehold Property Fund,44
QHPF.BK,102676,Quality Houses Leasehold Property Fund,44
RML.BK,102680,Raimon Land PCL,44
RMLF.BK,986192,Raimon Land PCL F,44
RP.BK,986193,Raja Ferry Port PCL,44
RJH.BK,987187,Rajthanee Hospital PCL,44
RAM.BK,102681,Ramkhamhaeng Hospital PCL,44
RATCH.BK,102683,Ratchaburi Electricity Generating Holding PCL,44
RPH.BK,997139,Ratchaphruek Hospital PCL,44
RPHN.BK,997140,Ratchaphruek Hospital PCL DRC,44
THANI.BK,102684,Ratchthani Leasing PCL,44
RWI.BK,950598,Rayong Wire Industries PCL,44
RCL.BK,102685,Regional Container Lines PCL,44
TITLE.BK,1054773,Rhom Bho Property PCL,44
TITLEN.BK,1056028,Rhom Bho Property PCL DRC,44
RICH.BK,102686,Rich Asia Corporation PCL,44
RSP.BK,1054860,Rich Sport PCL,44
RSPN.BK,1056025,Rich Sport PCL DRC,44
RICHY.BK,941266,Richy Place 2002 PCL,44
ROBINSN.BK,996214,Robinson Department Store PCL DRC,44
ROBINS.BK,102687,Robinson Department Store PCL,44
ROCK.BK,102688,Rockworth PCL,44
ROJNA.BK,102689,Rojana Industrial Park PCL,44
RCI.BK,102690,Royal Ceramic Industry PCL,44
ROH.BK,102691,Royal Orchid Hotel 44 PCL,44
RPC.BK,102692,RPCG PCL,44
RS.BK,102693,RS PCL,44
SNJ.BK,102694,S & J International Enterprises PCL,44
S11.BK,945939,S 11 Group PCL,44
SORKON.BK,102696,S Khonkaen Foods PCL,44
SKN.BK,1050171,S Kijchai Enterprise PCL,44
SKNN.BK,1052815,S Kijchai Enterprise PCL DRC,44
SPACK.BK,102697,S Pack & Print PCL,44
SNP.BK,102695,S&P Syndicate PCL,44
SABINA.BK,102698,Sabina PCL,44
SPI.BK,102699,Saha Pathana Inter Holding PCL,44
SPC.BK,102700,Saha Pathanapibul PCL,44
SUC.BK,102701,Saha Union PCL,44
SCG.BK,102702,Sahacogen Chonburi PCL,44
SQ.BK,992925,Sahakol Equipment PCL,44
SMIT.BK,102703,Sahamit Machinery PCL,44
SMPC.BK,102704,Sahamitr Pressure Container PCL,44
PORT.BK,1055138,Sahathai Terminal PCL,44
PORTN.BK,1056024,Sahathai Terminal PCL DRC,44
SSI.BK,102705,Sahaviriya Steel Industries PCL,44
SKE.BK,1055140,Sakol Energy PCL,44
SKEN.BK,1056026,Sakol Energy PCL DRC,44
SSPFU.BK,941262,Sala Sathorn Property Fund,44
COLOR.BK,103868,Salee Colour PCL,44
SALEE.BK,103869,Salee Industry PCL,44
SLP.BK,953128,Salee Printing PCL,44
SAMART.BK,102706,Samart Corporation PCL,44
SDC.BK,1052377,Samart Digital PCL,44
SAMTEL.BK,102708,Samart Telcoms PCL,44
SAM.BK,102709,Samchai Steel Industries PCL,44
SVH.BK,102710,Samitivej PCL,44
SAMCO.BK,102711,Sammakorn PCL,44
SPFU.BK,102712,Samui Airport Property Fund Leasehold,44
SBPFU.BK,102713,Samui Buri Property Fund,44
SANKO.BK,103870,Sanko Diecasting 44 PCL,44
SIRI.BK,102714,Sansiri PCL,44
SIRIF.BK,986200,Sansiri PCL F,44
SAPPE.BK,941693,SAPPE PCL,44
SAWANG.BK,102715,Sawang Export PCL,44
SC.BK,102716,SC Asset Corporation PCL,44
SCN.BK,986199,Scan Inter PCL,44
SCI.BK,986198,SCI Electric PCL,44
SE-ED.BK,102718,SE Education PCL,44
SEAOIL.BK,103871,Sea Oil PCL,44
SEAFCO.BK,102719,Seafco PCL,44
CFRESH.BK,102720,Seafresh Industry PCL,44
ZMICO.BK,102721,Seamico Securities PCL,44
SELIC.BK,992924,Selic Corp PCL,44
SENA.BK,102722,Sena Development PCL,44
SSP.BK,1050611,Sermsang Power Corporation PCL,44
SSPN.BK,1052823,Sermsang Power Corporation PCL DRC,44
SSC.BK,102723,Sermsuk PCL,44
SHANG.BK,102724,Shangri La Hotel PCL,44
SWC.BK,103872,Sherwood Chemicals PCL,44
SCC.BK,102725,Siam Cement PCL,44
SCCN.BK,996216,Siam Cement PCL DRC,44
SCCF.BK,986197,Siam Cement PCL F,44
SCCC.BK,102726,Siam City Cement PCL,44
SCB.BK,102727,Siam Commercial Bank PCL,44
SCBN.BK,996215,Siam Commercial Bank PCL DRC,44
SCBF.BK,986196,Siam Commercial Bank F,44
SCB_P.BK,986194,Siam Commercial Bank PCL Pref,44
SCB_PN.BK,986195,Siam Commercial Bank PCL Pref Not Voting,44
SFP.BK,102729,Siam Food Products PCL,44
SF.BK,102730,Siam Future Development PCL,44
SGF.BK,996099,Siam General Factoring PCL,44
GLOBAL.BK,102731,Siam Global House PCL,44
SMM.BK,102732,Siam Inter Multimedia PCL,44
MAKRO.BK,102733,Siam Makro PCL,44
SPG.BK,102734,Siam Pan Group PCL,44
SPORT.BK,102735,Siam Sport Syndicate PCL,44
SIAM.BK,102737,Siam Steel International PCL,44
SSSC.BK,102736,Siam Steel Service Center PCL,44
SPA.BK,942604,Siam Wellness Group PCL,44
SPAN.BK,986202,Siam Wellness Group PCL Non-listing,44
SE.BK,996217,SiamEast Solutions PCL,44
SEN.BK,996218,SiamEast Solutions PCL DRC,44
SGP.BK,102738,Siamgas and Petrochemicals PCL,44
SR.BK,986204,Siamraj PCL,44
SKR.BK,102739,Sikarin PCL,44
SIMAT.BK,103873,Simat Technologies PCL,44
SINGER.BK,102740,Singer 44 PCL,44
S.BK,102682,Singha Estate PCL,44
SPPT.BK,102741,Single Point Parts 44 PCL,44
STECF.BK,986205,Sino Thai Engineering and Construction PCL F,44
STEC.BK,102742,Sino Thai Engineering and Construction PCL,44
SIRIPU.BK,941267,Siri Prime Office Property Fund,44
SIS.BK,102743,SIS Distribution 44 PCL,44
SKY.BK,950591,SKY ICT,44
SMART.BK,950599,Smart Concrete PCL,44
SNC.BK,102744,SNC Former PCL,44
SOLAR.BK,102745,Solartron PCL,44
SAT.BK,102746,Somboon Advance Technology PCL,44
SCP.BK,102747,Southern Concrete Pile PCL,44
SPCG.BK,102748,SPCG PCL,44
SPVI.BK,103876,SPVI PCL,44
AYUD.BK,102749,Sri Ayudhya Capital PCL,44
SRIPANWAU.BK,994635,Sri Panwa Hospitality REIT,44
STA.BK,102751,Sri Trang Agro Industry PCL,44
SRICHA.BK,102752,Sriracha Construction PCL,44
SAWAD.BK,102753,Srisawad Power 1979 PCL,44
SAWADF.BK,102434,Srisawad Power 1979 PCL F,44
SITHAI.BK,102754,Srithai Superware PCL,44
VIH.BK,102755,Srivichaivejvivat PCL,44
SPRC.BK,986203,Star Petroleum Refining PCL,44
STAR.BK,103877,Star Sanitaryware PCL,44
SMT.BK,102756,Stars Microelectronics 44 PCL,44
THE.BK,102814,Steel PCL,44
STPI.BK,102757,STP&I PCL,44
SHREITU.BK,1057235,Strategic Hospitality Extendable Freehold and Leasehold Real Estate Investment Trust,44
SST.BK,102758,Sub Sri Thai PCL,44
SSTPF.BK,941268,Sub Sri Thai Property Fund,44
SSTRT.BK,1057144,Sub Sri Thai Real Estate Investment Trust Unit,44
SUN.BK,1057203,Sun Sweet PCL,44
SUNN.BK,1057323,Sun Sweet PCL DRC,44
SPALIF.BK,986201,Supalai PCL F,44
SPALI.BK,102759,Supalai PCL,44
SUPER.BK,102760,Superblock PCL,44
SSF.BK,102761,Surapon Foods PCL,44
SUSCO.BK,102762,Susco PCL,44
SVI.BK,102763,SVI PCL,44
SVOA.BK,102764,SVOA PCL,44
SYMC.BK,102765,Symphony Communication PCL,44
SMK.BK,941258,Syn Mun Kong Insurance PCL,44
ASAP.BK,1006199,Synergetic Auto Performance PCL,44
SYNEX.BK,102766,Synnex 44 PCL,44
SYNTEC.BK,102767,Syntec Construction PCL,44
TMILL.BK,103874,T S Flour Mill PCL,44
TACC.BK,986206,TAC Consumer PCL,44
TAKUNI.BK,950600,Takuni Group PCL,44
TTLPFU.BK,102772,Talaad Thai Leasehold Property Fund,44
TKN.BK,986211,Taokaenoi Food & Marketing PCL,44
TAPAC.BK,103880,Tapaco PCL,44
TSTH.BK,102773,Tata Steel 44 PCL,44
TCJ.BK,102774,TCJ Asia PCL,44
TEAM.BK,102775,Team Precision PCL,44
TM.BK,986636,Techno Medical PCL,44
TMI.BK,103881,Teera Mongkol Industry PCL,44
TLGFU.BK,102776,Tesco Lotus Retail Growth Freehold and Leasehold Property Fund,44
TPCORP.BK,102777,Textile Prestige PCL,44
TAE.BK,103902,Thai Agro Energy PCL,44
THAIF.BK,102717,Thai Airways International PCL,44
THAI.BK,102778,Thai Airways International PCL,44
TBSP.BK,986207,Thai British Security Printing PCL,44
TCC.BK,102779,Thai Capital Corporation PCL,44
TCCF.BK,103837,Thai Capital Corporation PCL F,44
TCB.BK,102780,Thai Carbon Black PCL,44
TCCC.BK,102781,Thai Central Chemical PCL,44
TCOAT.BK,102782,Thai Coating Industrial PCL,44
TFD.BK,102783,Thai Factory Development PCL,44
TFI.BK,102784,Thai Film Industries PCL,44
TFG.BK,986209,Thai Foods Group PCL,44
TGPRO.BK,102815,Thai German Products PCL,44
KASET.BK,103882,Thai Ha PCL,44
T.BK,103878,Thai Industrial & Engineering Service PCL,44
TIF1U.BK,102785,Thai Industrial Fund 1,44
TIC.BK,102786,Thai Insurance PCL,44
TLUXE.BK,102820,Thai Luxe Enterprises PCL,44
TMD.BK,102787,Thai Metal Drum Manufacturing PCL,44
TMT.BK,102788,Thai Metal Trade PCL,44
TMTF.BK,986212,Thai Metal Trade PCL F,44
TMW.BK,103879,Thai Mitsuwa PCL,44
THMUI.BK,1055139,Thai Mui Corporation PCL,44
THMUIN.BK,1056027,Thai Mui Corporation PCL DRC,44
TNH.BK,103883,Thai Nakarin Hospital PCL,44
TNPC.BK,102789,Thai Nam Plastic PCL,44
TNR.BK,994001,Thai Nippon Rubber Industry PCL,44
TNRN.BK,994067,Thai Nippon Rubber Industry PCL Non Voting,44
TNDT.BK,103884,Thai Nondestructive Testing PCL,44
TOP.BK,102790,Thai Oil PCL,44
TOPN.BK,996220,Thai Oil PCL DRC,44
TOPF.BK,986214,Thai Oil PCL F,44
TOPP.BK,102791,Thai OPP PCL,44
TOG.BK,102792,Thai Optical Group PCL,44
TPP.BK,102793,Thai Packaging and Printing PCL,44
TPAC.BK,103886,Thai Plaspac PCL,44
TPA.BK,102795,Thai Poly Acrylic PCL,44
TPOLY.BK,102796,Thai Polycons PCL,44
TFMAMA.BK,1052856,Thai President Foods PCL,44
TR.BK,102798,Thai Rayon PCL,44
THRE.BK,102799,Thai Reinsurance PCL,44
TRUBB.BK,102801,Thai Rubber Latex Corporation 44 PCL,44
TRU.BK,102822,Thai Rung Union Car PCL,44
TSI.BK,102802,Thai Setakij Insurance PCL,44
TSE.BK,950601,Thai Solar Energy PCL,44
STANLY.BK,102803,Thai Stanley Electric PCL,44
TSC.BK,102804,Thai Steel Cable PCL,44
BAT-3K.BK,102805,Thai Storage Battery PCL,44
TSTE.BK,941265,Thai Sugar Terminal PCL,44
TTI.BK,102806,Thai Textile Industry PCL,44
TTTM.BK,102807,Thai Toray Textile Mills PCL,44
TU.BK,986220,Thai Union Group PCL,44
TUN.BK,996222,Thai Union Group PCL DRC,44
TVO.BK,102809,Thai Vegetable Oil PCL,44
WACOAL.BK,102810,Thai Wacoal PCL,44
TWPC.BK,986222,Thai Wah PCL,44
TWP.BK,102813,Thai Wire Products PCL,44
TGCI.BK,102816,Thai-German Ceramic Industry PCL,44
THCOM.BK,102817,Thaicom PCL,44
TCMC.BK,102818,44 Carpet Manufacturing PCL,44
TLHPF.BK,986278,44 Hospitality Property Fund,44
TIW.BK,102819,44 Iron Works PCL,44
TPRIME.BK,993045,44 Prime Property Freehold and Leasehold Real Estate Investment Trust,44
THREL.BK,102821,Thaire Life Assurance PCL,44
SAUCE.BK,102823,Thaitheparos PCL,44
TVI.BK,102824,Thaivivat Insurance PCL,44
TCAP.BK,102825,Thanachart Capital PCL,44
TCAPF.BK,986208,Thanachart Capital PCL F,44
TNP.BK,986213,Thanapiriya PCL,44
THANA.BK,103885,Thanasiri Group PCL,44
THIP.BK,102826,Thantawan Industry PCL,44
TNL.BK,103842,Thanulux PCL,44
TSR.BK,941259,Thiensurat PCL,44
TK.BK,102827,Thitikorn PCL,44
THG.BK,1056352,Thonburi Healthcare Group PCL,44
THGN.BK,1057324,Thonburi Healthcare Group PCL DRC,44
KDH.BK,102828,Thonburi Medical Centre PCL,44
TTA.BK,102829,Thoresen Thai Agencies PCL,44
TSF.BK,103887,Three Sixty Five PCL,44
TICON.BK,102830,TICON Industrial Connection PCL,44
TREITU.BK,986279,TICON Freehold and Leasehold Real Estate Investment Trust,44
TASCO.BK,102833,TIPCO Asphalt PCL,44
TIPCO.BK,102834,Tipco Foods PCL,44
TASCOF.BK,102429,TIPCO Asphalt PCL F,44
TRT.BK,103888,Tirathai PCL,44
TISCO.BK,102835,TISCO Financial Group PCL,44
TISCOF.BK,986210,TISCO Financial Group PCL F,44
TKT.BK,102770,TKrungthai Industries PCL,44
TKS.BK,102769,TKS Technologies PCL,44
TMB.BK,102836,TMB Bank PCL,44
TMBN.BK,996219,TMB Bank PCL DRC,44
TMC.BK,103889,TMC Industrial PCL,44
TOA.BK,1052357,TOA Paint 44 PCL,44
TH.BK,102837,Tong Hua Holding PCL,44
DTAC.BK,102838,Total Access Communication PCL,44
DTACF.BK,986160,Total Access Communication PCL F,44
TPBI.BK,986215,TPBI PCL,44
TPCH.BK,986216,TPC Power Holding PCL,44
TPIPL.BK,102841,TPI Polene PCL,44
TPIPP.BK,1006203,TPI Polene Power PCL,44
TPIPPN.BK,1006205,TPI Polene Power PCL DRC,44
TPIPPF.BK,1006204,TPI Polene Power PCL F,44
TRC.BK,102842,TRC Construction PCL,44
TNPFU.BK,102843,Trinity Freehold and Leasehold Property Fund,44
TNITY.BK,102844,Trinity Watthana PCL,44
III.BK,1043086,Triple i Logistics PCL,44
IIIN.BK,1043313,Triple i Logistics PCL DRC,44
TRITN.BK,986217,Triton Holding PCL,44
TC.BK,102845,Tropical Canning 44 PCL,44
TRUE.BK,102846,True Corporation PCL,44
TRUEN.BK,996221,True Corporation PCL DRC,44
TRUEF.BK,986218,True Corporation PCL,44
TTCL.BK,102839,TTCL PCL,44
TTL.BK,102768,TTL Industries PCL,44
TTW.BK,102848,TTW PCL,44
TTWF.BK,986219,TTW PCL F,44
TU-PFU.BK,102771,TU Dome Residential Complex Leasehold Property Fund,44
TVD.BK,103890,TV Direct PCL,44
TVDN.BK,986221,TV Direct PCL Non-Voting,44
TVT.BK,953129,TV Thunder PCL,44
TWZ.BK,102849,TWZ Corporation PCL,44
TYCN.BK,102850,Tycoons Worldwide Group 44 PCL,44
U.BK,102626,U City PCL,44
UWC.BK,103891,Ua Withya PCL,44
UAC.BK,103895,UAC Global PCL,44
UBIS.BK,103892,UBIS Asia PCL,44
UEC.BK,103893,Unimit Engineering PCL,44
AUCT.BK,103894,Union Auction PCL,44
UMI.BK,102851,Union Mosaic Industry PCL,44
UKEM.BK,103897,Union Petrochemical PCL,44
UPF.BK,941260,Union Pioneer PCL,44
UP.BK,102852,Union Plastic PCL,44
UT.BK,941250,Union Textile Industries PCL,44
UNIQ.BK,102853,Unique Engineering and Construction PCL,44
UNIQF.BK,102562,Unique Engineering and Construction PCL F,44
UMS.BK,103898,Unique Mining Services PCL,44
UPOIC.BK,102854,United Palm Oil Industry PCL,44
UTP.BK,102855,United Paper PCL,44
UPA.BK,103807,United Power of Asia PCL,44
UVAN.BK,102856,Univanich Palm Oil PCL,44
UV.BK,102857,Univentures PCL,44
UOBKH.BK,102859,UOB Kay Hian Securities 44 PCL,44
URBNPFU.BK,102860,Urbana Property Fund Lease hold,44
VNG.BK,102861,Vanachai Group PCL,44
VARO.BK,102862,Varopakorn PCL,44
VGI.BK,102863,VGI Global Media PCL,44
VIBHA.BK,102864,Vibhavadi Medical Center PCL,44
VPO.BK,942853,Vichitbhan Palmoil PCL,44
VTE.BK,103899,Vintage Engineering PCL,44
VCOMN.BK,1057325,Vintcom Technology PCL DRC,44
VCOM.BK,1057019,Vintcom Technology PCL,44
VNT.BK,102865,Vinythai PCL,44
NEW.BK,102867,Wattana Karnpaet PCL,44
WPH.BK,1052096,Wattanapat Hospital Trang Co Ltd,44
WAVE.BK,102868,Wave Entertainment PCL,44
WHABTU.BK,986280,WHA Business Complex Freehold and Leasehold Real Estate Investment Trust,44
WHA.BK,102869,WHA Corporation PCL,44
WHAF.BK,986223,WHA Corporation PCL F,44
WHART.BK,986281,WHA Premium Growth Freehold and Leasehold Real Estate Investment Trust,44
WHAUP.BK,1008691,Wha Utilities and Power PCL,44
WHAUPF.BK,1009000,Wha Utilities and Power PCL F,44
WHAUPN.BK,1008692,Wha Utilities and Power PCL DRC,44
WG.BK,102871,White Group PCL,44
WICE.BK,958374,WICE Logistics PCL,44
WIIK.BK,102872,Wiik & Hoeglund PCL,44
WINNER.BK,103900,Winner Group Enterprise PCL,44
WORK.BK,102873,Workpoint Entertainment PCL,44
WIN.BK,102874,Wyncoast Industrial Park PCL,44
YUASA.BK,103901,Yuasa Battery 44 PCL,44
ZIGA.BK,1031717,Ziga Innovation PCL,44
ZIGAN.BK,1043315,Ziga Innovation PCL DRC,44
COTTO.BK,1089910,SCG Ceramics PCL,44
CPNREIT.BK,1130942,Cpn Retail Growth Leasehold REIT,44
CRC.BK,1156938,Central Retail Corp,44
DHOUSE.BK,1167159,Dhouse Pattana Plc,44
EGATIF.BK,1128335,North Bangkok Power Plant Block 1 Infrastructure Fund Electricity Generating Authority Of Thailand,44
FTREIT.BK,1121708,Frasers Property Thailand Industrial Freehold & Leasehold REIT,44
FUTUREPF.BK,1128101,Future Park Property Fund,44
GOLDPF.BK,1128102,Gold Property Fund (lease Hold),44
IMH.BK,1162303,Intermedical Care and Lab Hospital PCL,44
INSET.BK,1162301,Infraset PCL,44
JR.BK,1167777,J R W Utility Pcl,44
KBSPIF.BK,1165536,Khonburi Sugar Power Plant Infra,44
KUN.BK,1162304,Villa Kunalai Co Ltd,44
LEO.BK,1167253,Leo Global Logistics Co Ltd,44
M-II.BK,1128291,Mfc Industrial Investment P&l Fund,44
MTC.BK,1075456,Muangthai Capital PCL,44
NCAP.BK,1167326,Next Capital Plc,44
NFC.BK,1095117,NFC PCL,44
PRAPAT.BK,1167208,Peerapat Technology Plc,44
PROSPECT.BK,1165537,Prospect Logistics and Industrial,44
SABUY.BK,1167327,Sabuy Technology Plc,44
SAK.BK,1168058,Saksiam Leasing Pcl,44
SCGP.BK,1167078,Scg Packaging Plc,44
SCM.BK,1165988,Successmore Being Public Co Ltd,44
SEG.BK,1152829,Thai Group Holdings PCL,44
SFT.BK,1167197,Shrinkflex Thailand PLC,44
SICT.BK,1167290,Silicon Craft Technology PCL,44
SSPF.BK,1128378,Sala @ Sathorn Property Fund,44
STGT.BK,1163265,Sri Trang Gloves Thailand Plc,44
SUPEREIF.BK,1159098,Super Energy Power Plant Infra,44
TLGF.BK,1128458,Tesco Lotus Ret Growth F&l Prp,44
TNPF.BK,1128619,Trinity Freehold & Leasehold Prp Fund,44
TPS.BK,1162306,Practical Solution PCL,44
TTT.BK,1152831,Toray Textiles Thailand PCL,44
TU-PF.BK,1128620,T.u.dome Residential Complex Property Fund,44
WGE.BK,1167252,Well Graded Engineering Co Ltd,44
YGG.BK,1162308,YGGDRAZIL Group PCL,44
SET.BK,38015,SET Index,44
SET100.BK,41047,SET100,44
SET50.BK,41049,SET50,44

#MC SPAIN ALL STOCK
IKM.MC,49930,1nkemia IUCT Group SA,57
ABBO.MC,49931,Ab-Biotics S.A,57
ABG.MC,443,Abengoa,57
ABGEK.MC,40331,Abengoa B,57
ABE.MC,441,Abertis Infr,57
ANA.MC,32243,Acciona,57
ACX.MC,445,Acerinox,57
ACS.MC,442,ACS Actividades de Construccion y Servicios SA,57
ADZ.MC,32225,Adolfo Dominguez SA,57
ADVGR.MC,32193,Adveo,57
AEDAS.MC,1052410,Aedas Homes SL,57
AENA.MC,1009336,Aena Aeropuertos SA,57
AGIL.MC,961658,Agile Content SA,57
AIR.MC,32302,Airbus Group SE,57
ALNTA.MC,32185,Alantra Partners SA,57
ALB.MC,32186,Corporacion Financiera Alba SA,57
ALFAA.MC,48607,Alfa S.A.B. De C.V,57
ALM.MC,32279,Almirall,57
ALC.MC,49932,Altia Consultores S.A,57
YAML.MC,1029197,AM Locales Property Socimi,57
AMA.MC,32261,Amadeus IT,57
AMXL.MC,48595,America Movil SAB de CV,57
APE.MC,32301,Amper,57
APAM.MC,32288,Aperam SA,57
APPS.MC,101934,Applus Services SA,57
MTS.MC,32439,ArcelorMittal SA,57
ELZZ.MC,1013384,Asturiana de Laminados SA,57
YAST.MC,985714,Asturias Retail and Leisure SOCIMI SAU,57
A3M.MC,444,Atresmedia,57
ATRY.MC,985976,Atrys Health SL,57
ADXR.MC,32191,Audax Renovables SA,57
YARE.MC,958861,Autonomy 57 Real Estate Socimi SA,57
AXIA.MC,103908,Axiare Patrimonio SOCIMI SA,57
AZK.MC,32287,Azkoyen,57
SABE.MC,32216,B. Sabadell,57
BKIA.MC,14616,Bankia SA,57
BKT.MC,447,Bankinter,57
BDL.MC,32245,Baron De Ley,57
YBAY.MC,1025130,Bay Hotels & Leisure Socimi,57
BAYG.MC,32295,Bayer AG NA,57
BBVA.MC,32289,BBVA,57
BNT.MC,49933,Bionaturis,57
BIOS.MC,32268,Biosearch SA,57
BME.MC,448,Bolsas y Mercados Espanoles,57
BRIO.MC,32224,Bodegas Riojanas,57
BAINS.MC,1025131,Borges Agricultural & Industrial Nuts SA,57
BBDC.MC,48614,Banco Bradesco SA Pref,57
BRPO.MC,48597,Bradespar SA,57
BRPP.MC,48598,Bradespar SA,57
BRKM3.MC,48599,Braskem SA,57
CABK.MC,452,Caixabank SA,57
CRBE.MC,49935,Carbures Europe S.A,57
CATN.MC,49936,Catenon S.A,57
CLNX.MC,951681,Cellnex Telecom SA,57
CMIG4.MC,48613,CEMIG - Companhia Energetica Minas Gerais Pref,57
CIEA.MC,32232,Cie Automotive,57
CLRE.MC,968993,Clerhp Estructuras SA,57
CLE.MC,994270,Clever Global SA,57
CBAV.MC,32229,Clinica Baviera,57
CCE.MC,980157,Coca-Cola European Partners PLC,57
CDRE.MC,32293,Codere SA,57
CCMC.MC,32282,Corporacion Empresarial de Materiales de Construccion SA,57
YCOL.MC,1024661,Colon Viviendas SOCIMI SA,57
CMM.MC,993678,CommCenter SA,57
CAF.MC,32199,Construcciones y Auxiliar de Ferrocarriles SA,57
CPLE6.MC,48600,Cia Paranaense de Energia,57
YPR3.MC,976081,Corpfin Capital Prime Retail III SOCIMI SA,57
GEOB.MC,978750,Corporacion Geo SAB de CV,57
OLEO.MC,32305,Deoleo,57
DIDA.MC,18893,Distribuidora Intl de Aliment,57
DGI.MC,32190,Dogi International Fabrics SA,57
YDOM.MC,1050163,Domo Activos Socimi SA,57
MDF.MC,32238,Duro Felguera,57
EBI.MC,44452,Ebioss Energy AD,57
EBRO.MC,13815,Ebro Foods,57
ECG.MC,993679,Euroconsult Engineering Consulting Group SA,57
EDRE.MC,100241,eDreams Odigeo SA,57
ENOR.MC,32286,Elecnor SA,57
ELTO.MC,48601,Centrais Eletricas Brasileiras SA,57
ELTB.MC,48602,Centrais Eletricas Brasileiras SA,57
GSJ.MC,32189,Grupo Empresarial San Jose SA,57
ENAG.MC,32272,Enagas,57
ENC.MC,32198,ENCE,57
ELE.MC,32271,Endesa,57
YENT.MC,44453,Entre Cua Socimi,57
ECR.MC,32292,Ercros,57
EESP.MC,49937,Euroespes S.A,57
EUWT.MC,49938,Eurona Wireless Telecom S.A,57
EKTL.MC,955670,Euskaltel SA,57
FACE.MC,103907,Facephi Biometria SA,57
FAE.MC,32258,Faes Farma SA,57
FCC.MC,455,FCC,57
FER.MC,459,Ferrovial,57
YFID.MC,955671,Fidere Patrimonio SOCIMI SA,57
FLUI.MC,32285,Fluidra,57
BFR.MC,48612,BBVA Banco Frances SA,57
FUNE.MC,32267,Funespana SA,57
SGREN.MC,32270,Siemens Gamesa Renewable Energy SA,57
GAS.MC,456,Gas Natural,57
GALQ.MC,32179,General de Alquiler de Maquinaria SA,57
S4187_DEP.MC,32177,Compania General de Inversiones SA,57
GGBR4.MC,48615,Gerdau SA Pref,57
GEST.MC,1006174,Gestamp Automocion SA,57
YGGC.MC,1024614,General De Galerias Comerciales SOCIMI SA,57
GIGAH.MC,960710,Gigas Hosting SA,57
DOMI.MC,976471,Global Dominion Access SA,57
YGMP.MC,986096,GMP Property SOCIMI SA,57
GRN.MC,1055914,Greenalia,57
GREG.MC,955882,Grenergy Renovables SA,57
GRLS.MC,32260,Grifols SA,57
GRLSBN.MC,32266,Grifols SA Pref,57
GRIE.MC,49939,Grino Ecologic S.A,57
GCO.MC,32196,Grupo Catalana Occidente,57
ELEKTRA.MC,48608,Grupo Elektra S.A.B. De C.V,57
EZEN.MC,32237,Grupo Ezentis SA,57
XNOR.MC,48609,Grupo Financiero Banorte,57
YGOP.MC,1030978,Grupo Ortiz Properties Socimi,57
HIS.MC,100243,Hispania Activos Inmobiliarios SAU,57
HMR.MC,942718,Home Meal,57
ICAG.MC,13809,International Consolidated Airlines Group S.A,57
IBE.MC,32246,Iberdrola,57
IBG.MC,32218,Iberpapel Gestion SA,57
IMGI.MC,49941,Imaginarium S.A,57
INC.MC,958276,Inclam CO2 SA,57
ITX.MC,32259,Inditex,57
IDR.MC,32221,Indra A,57
COL.MC,9060,Inmobiliaria Colonial SA,57
ISUR.MC,32203,Inmobiliaria del Sur SA,57
INY.MC,32184,Inypsa Informes y Proyectos SA,57
YISC.MC,985943,Isc Fresh Water Investment SOCIMI SA,57
YKIB.MC,1024887,Kingbook Inversiones Socimi SA,57
ROVI.MC,32178,Laboratorios Farmaceuticos ROVI,57
RJFE.MC,32236,Laboratorio Reig Jofre SA,57
LRES.MC,100242,Lar Espana Real Estate SOCIMI SA,57
GOW.MC,32440,Let's Gowex SA,57
LBK.MC,40902,Liberbank SA,57
LGT.MC,32208,Lingotes,57
LLN.MC,958860,Lleidanetworks Serveis Telematics SA,57
LOG.MC,104388,Logista,57
MAP.MC,466,Mapfre,57
MASM.MC,49940,Masmovil Ibercom SA,57
MEDC.MC,49942,Medcom Tech S.A,57
TL5.MC,471,Mediaset ESP,57
MEL.MC,32188,Melia Hotels,57
MRL.MC,102931,Merlin Properties SA,57
MCM.MC,32195,Miquel Cost,57
MONIB.MC,994271,Mondo TV Iberoamerica SA,57
MTBA.MC,32249,Montebalito SA,57
NATR.MC,32299,Natra,57
NTH.MC,949749,Naturhouse Health SA,57
NBIB.MC,949224,NBI Bearings Europe SA,57
HOME.MC,999061,Neinor Homes SLU,57
NEOL.MC,960711,Neol Biosolutions SA,57
NTX.MC,1053093,Netex Knowledge Factory SL,57
NEUB.MC,49943,Neuron Bio S.A,57
NHH.MC,32256,NH Hoteles,57
NEA.MC,32231,Nicolas Correa SA,57
YNUM.MC,1025089,Numulae Gestion de Servicios SL,57
YOSO.MC,958862,Obsido Socimi SA,57
OHL.MC,13808,Obrascon Huarte Lain SA,57
ONLA.MC,940784,Only-apartments SA,57
YOVA.MC,1010687,Optimum III Value Added Residential SOCIMI SA,57
YORS.MC,990008,Optimum Re 57 Socimi SA,57
YORE.MC,996540,Olimpo Real Estate SA,57
ORY.MC,962024,Oryzon Genomics SA,57
PANGO.MC,994484,Pangaea Oncology SA,57
PYCE.MC,32183,Papeles Y Cartones De Europa SA,57
PQR.MC,976553,Parques Reunidos SERVICIOS CENTRALES SAU,57
PVA.MC,32265,Pescanova SA,57
PETR3.MC,48603,Petroleo Brasileiro SA,57
PETR4.MC,48594,Petroleo Brasileiro SA PN,57
PHMR.MC,959215,Pharma Mar SAU,57
PRIM.MC,32303,Prim,57
PRS.MC,32187,Promotora de Informaciones SA,57
PSG.MC,32276,Prosegur,57
CASHP.MC,997807,Prosegur Cash SA,57
QBT.MC,32207,Quabit Inmobiliaria,57
YQUO.MC,985944,Quonia SOCIMI SA,57
RLIA.MC,32227,Realia,57
REE.MC,32226,Red Electrica Corporacion SA,57
RDM.MC,32230,Reno De Medici,57
RTA4.MC,32235,Renta 4 Banco SA,57
REN.MC,32284,Renta Corp,57
REP.MC,32240,Repsol,57
REYU.MC,32275,Reyal Urbis,57
SCYR.MC,32234,Sacyr,57
SAY.MC,945691,Saeta Yield SA,57
SAN.MC,32212,Banco Santander,57
SARE.MC,48610,Sare Holding S.A.B. De C.V,57
SECU.MC,49944,Secuoya Grupo de Comunicacion S.A,57
SPSL.MC,32197,Service Point Solutions SA,57
YSCI.MC,980156,Silvercode Investments SOCIMI SA,57
SNCE.MC,32291,Sniace,57
SLRS.MC,32180,Solaria,57
YSPS.MC,1057278,Student Properties 57 SOCIMI SA,57
TLGO.MC,951682,Talgo SA,57
TRE.MC,10526,Tecnicas Reunidas,57
TQT.MC,962349,Tecnoquark Trust SA,57
TEF.MC,32239,Telefonica,57
TPZ.MC,976472,Telepizza Group SA,57
THK.MC,961659,Think Smart SA,57
YTRA.MC,958277,Trajano Iberia Socimi SA,57
TUBA.MC,32283,Tubacex,57
TUR.MC,32264,Tubos Reunid,57
TVAZ.MC,48611,TV Azteca Cpo S.A.B. De C.V,57
UNI.MC,1013395,Unicaja Banco SA,57
UBS.MC,32200,Urbas Grupo Financiero SA,57
YURO.MC,946356,Uro Property Holdings,57
USIO.MC,48604,Usinas Siderurgicas de Minas Gerais,57
USIM5.MC,48605,Usinas Siderurgicas de Minas Gerais,57
VALO.MC,48606,Vale SA,57
YVBA.MC,994781,VBARE Iberian Properties SOCIMI SA,57
VTSG.MC,32176,Vertice Trescientos Sesenta Grados,57
VID.MC,32281,Vidrala SA,57
VIS.MC,32274,Viscofan,57
YVIT.MC,985794,Vitruvio Real Estate Socimi,57
VOC.MC,32280,Vocento,57
VOLB.MC,48618,Volcan Cmp Min,57
VOU.MC,49945,Vousse Corp,57
VOZ.MC,986094,Voztelecom Oigaa360 SA,57
YZBL.MC,961773,Zambal 57 Socimi SA,57
ZOT.MC,32244,Zardoya Otis,57
ZNK.MC,49946,Zinkia Entertainment S.A,57

#PSI PHILIPPINES ALL STOCK 
KPPI.PSI,1152251,Kepwealth Property Phils,17
2GO.PSI,102355,2GO Group Inc,17
HOUSE.PSI,102366,8990 Holdings Inc,17
8990P.PSI,1056516,8990 Holdings Inc Pref,17
BRN.PSI,102204,A Brown Company Inc,17
ANS.PSI,102178,A Soriano Corp,17
ABA.PSI,102168,Abacore Capital Holdings Inc,17
AEV.PSI,102172,Aboitiz Equity Ventures Inc,17
AP.PSI,102175,Aboitiz Power Corp,17
AR.PSI,102183,Abra Mining and Industrial Corp,17
ABS.PSI,102169,ABS CBN Corp,17
ABSP.PSI,969149,ABS-CBN Holdings Corp,17
ACE.PSI,102220,Acesite Hotel Corp,17
AGF.PSI,102379,AG Finance Incorporated,17
ANI.PSI,102358,AgriNurture Inc,17
AGI.PSI,102173,Alliance Global Group Inc,17
FOOD.PSI,102344,Alliance Select Foods International Inc,17
ACR.PSI,102171,Alsons Consolidated Resources Inc,17
ALHI.PSI,102347,Anchor Land Holdings Inc,17
APO.PSI,102181,Anglo Philippine Holdings Corp,17
APC.PSI,102179,APC Group Inc,17
APX.PSI,102182,Apex Mining Co Inc,17
APL.PSI,102185,Apollo Global Capital Inc,17
ARA.PSI,102186,Araneta Properties Inc,17
ALCO.PSI,102224,ArthaLand Corp,17
ALCPB.PSI,994060,ArthaLand Corp Pref B,17
AAA.PSI,102164,Asia Amalgamated Holdings Corp,17
AUB.PSI,102380,Asia United Bank Corp,17
ABG.PSI,102174,Asiabest Group International Inc,17
ATI.PSI,102188,Asian Terminals Inc,17
AT.PSI,102187,Atlas Consolidated Mining and Development Corp,17
ATN.PSI,102189,ATN Holdings Inc,17
ATNB.PSI,102190,ATN Holdings Inc B,17
AB.PSI,102167,Atok Big Wedge Co Inc,17
AC.PSI,102170,Ayala Corp,17
ALI.PSI,102177,Ayala Land Inc,17
ACPB1.PSI,969150,Ayala Corp Pref,17
ACPB2.PSI,969151,Ayala Corp Pref B,17
BPI.PSI,102203,Bank of the Philippine Islands,17
BSC.PSI,102205,Basic Energy Corp,17
BLFI.PSI,102289,BDO Leasing and Finance Inc,17
BDO.PSI,102197,BDO Unibank Inc,17
BEL.PSI,102198,Belle Corp,17
BC.PSI,102194,Benguet Corp A,17
BCB.PSI,102195,Benguet Corp B,17
BCOR.PSI,102296,Berjaya Philippines Inc,17
BH.PSI,104363,BHI Holdings Inc,17
BLOOM.PSI,102165,Bloomberry Resorts Corp,17
BMM.PSI,102201,Bogo Medellin Milling Co Inc,17
BHI.PSI,102199,Boulevard Holdings Inc,17
BKR.PSI,102200,Bright Kindle Resources & Investments Inc,17
CHI.PSI,102211,Cebu Holdings Inc,17
CEB.PSI,102359,Cebu Air Inc,17
CLI.PSI,1011866,Cebu Landmasters Inc,17
CPVB.PSI,102217,Cebu Property Ventures And Development Corp B,17
CPV.PSI,102216,Cebu Property Ventures And Development Corp,17
CHP.PSI,986052,Cemex Holdings Philippines Inc,17
CAT.PSI,102207,Central Azucarera de Tarlac Inc,17
CEU.PSI,102210,Centro Escolar University,17
CNPF.PSI,102388,Century Pacific Food Inc,17
CPM.PSI,102360,Century Peak Metals Holdings Corp,17
CPG.PSI,102305,Century Properties Group Inc,17
CLC.PSI,1031294,Chelsea Logistics Holdings Corp,17
CIP.PSI,104357,Chemical Industries of the Philippines Inc,17
CHIB.PSI,102212,China Banking Corp,17
TECH.PSI,102365,Cirtek Holdings Philippines Corp,17
LAND.PSI,102256,City and Land Developers Inc,17
CDC.PSI,102208,Cityland Development Corp,17
CSB.PSI,104360,Citystate Savings Bank Inc,17
COAL.PSI,102184,Coal Asia Holdings Inc,17
COL.PSI,102215,COL Financial Group Inc,17
CIC.PSI,102381,Concepcion Industrial Corp,17
CA.PSI,969153,Concrete Aggregates Corp,17
COSCO.PSI,102180,Cosco Capital Inc,17
CROWN.PSI,951043,Crown Asia Chemicals Corp,17
CEI.PSI,102209,Crown Equities Inc,17
CYBR.PSI,102218,Cyber Bay Corp,17
DNL.PSI,102163,D&L Industries Inc,17
DAVIN.PSI,102277,Da Vinci Capital Holdings Inc,17
DMPL.PSI,102382,Del Monte Pacific Ltd,17
DMPA1.PSI,1008745,Del Monte Pacific Ltd Pref,17
DMPA2.PSI,1057316,Del Monte Pacific Ltd Pref,17
DFNN.PSI,102219,DFNN Inc,17
DWC.PSI,102383,Discovery World Corp,17
DIZ.PSI,102221,Dizon Copper Silver Mines Inc,17
DMC.PSI,102222,DMCI Holdings Inc,17
DD.PSI,942603,DoubleDragon Properties Corp,17
DDPR.PSI,986428,DoubleDragon Properties Corp Pref,17
EAGLE.PSI,1011028,EAGLE CEMENT CORP,17
EW.PSI,102376,East West Banking Corp,17
ECP.PSI,953715,Easycall Communications Philippines Inc,17
EEI.PSI,102223,EEI Corp,17
EMP.PSI,102372,Emperador Inc,17
ELI.PSI,102225,Empire East Land Holdings Inc,17
EDC.PSI,102346,Energy Development Corp,17
EURO.PSI,104364,Euro-Med Laboratories Phils Inc,17
EVER.PSI,102227,Ever Gotesco Resources and Holdings Inc,17
FJP.PSI,102235,F&J Prince Holdings Corp,17
FJPB.PSI,104356,F&J Prince Holdings Corp B,17
FEU.PSI,102230,Far Eastern University Inc,17
FDC.PSI,102231,Filinvest Development Coproration,17
FLI.PSI,102236,Filinvest Land Inc,17
FFI.PSI,102233,Filipino Fund Inc,17
FAF.PSI,102228,First Abacus Financial Holdings Corp,17
FGEN.PSI,102234,First Gen Corp,17
FGENF.PSI,986429,First Gen Corp F,17
FGENG.PSI,969154,First Gen Corp Pref,17
FMETF.PSI,102389,First Metro Philippine Equity,17
FPH.PSI,102237,First Philippine Holdings Corp,17
FPHPC.PSI,969155,First Philippine Holdings Corp Pref,17
FPI.PSI,104359,Forum Pacific Inc,17
GEO.PSI,102238,Geograce Resources Philippines Inc,17
GSMI.PSI,102240,Ginebra San Miguel Inc,17
FNI.PSI,102213,Global Ferronickel Holdings Inc,17
GERI.PSI,102262,Global-Estate Resorts Inc,17
GLO.PSI,102239,Globe Telecom Inc,17
GLOPP.PSI,969156,Globe Telecom Inc Pref,17
GMAP.PSI,969157,GMA Holdings Inc,17
GMA7.PSI,102354,GMA Network Inc,17
HVN.PSI,985857,Golden Haven Memorial Park Inc,17
GPH.PSI,969158,Grand Plaza Hotel Corp,17
GREEN.PSI,102280,Greenergy Holdings Inc,17
GTCAP.PSI,102377,GT Capital Holdings Inc,17
GTPPA.PSI,993039,GT Capital Holdings Inc Pref A,17
GTPPB.PSI,993040,GT Capital Holdings Inc Pref B,17
TUGS.PSI,102387,Harbor Star Shipping Services Inc,17
HLCM.PSI,102241,Holcim Philippines Inc,17
HI.PSI,102242,House of Investments Inc,17
IMP.PSI,941015,Imperial Resources Inc,17
IMI.PSI,102363,Integrated Micro-Electronics Inc,17
ICT.PSI,102243,International Container Terminal Services Inc,17
ION.PSI,102245,Ionics Inc,17
EG.PSI,102361,IP E-Game Ventures Inc,17
IPO.PSI,102246,iPeople Inc,17
IPM.PSI,102275,IPM Holdings Inc,17
IRC.PSI,102248,IRC Properties Inc,17
I.PSI,102348,IRemit Inc,17
IS.PSI,102249,Island Information and Technology Inc,17
ISM.PSI,102250,ISM Communications Corp,17
IDC.PSI,962006,Italpinas Development Corp,17
JAS.PSI,102374,Jackstones Inc,17
JGS.PSI,102253,JG Summit Holdings Inc,17
JFC.PSI,102252,Jollibee Foods Corp,17
JOH.PSI,104361,Jolliville Holdings Corp,17
KPH.PSI,102254,Keppel Philippines Holdings Inc,17
KPHB.PSI,102255,Keppel Philippines Holdings Inc B,17
KEP.PSI,104365,Keppel Philippines Properties Inc,17
LBC.PSI,102232,LBC Express Holdings Inc,17
LRW.PSI,102391,Leisure -Wts,17
LRP.PSI,102390,Leisure and Resorts World Corp B,17
LR.PSI,102263,Leisure and Resorts World Corp,17
LC.PSI,102257,Lepanto Consolidated Mining Co,17
LCB.PSI,102258,Lepanto Consolidated Mining Co B,17
LFM.PSI,102259,Liberty Flour Mills Inc,17
LMG.PSI,102261,LMG Chemicals Corp,17
LIHC.PSI,102345,Lodestar Investment Holdings Corp,17
LPZ.PSI,102202,Lopez Holdings Corp,17
LSC.PSI,104362,Lorenzo Shipping Corp,17
LTG.PSI,102328,LT Group Inc,17
MHC.PSI,102273,Mabuhay Holdings Corp,17
MVC.PSI,102281,Mabuhay Vinyl Corp,17
MACAY.PSI,102191,Macay Holdings Inc,17
MAC.PSI,102266,MacroAsia Corp,17
MFIN.PSI,969160,Makati Finance Corp,17
MBC.PSI,969159,Manila Broadcasting Co,17
MB.PSI,102267,Manila Bulletin Publishing Corp,17
MER.PSI,102271,Manila Electric Co,17
MJC.PSI,102276,Manila Jockey Club Inc,17
MA.PSI,102264,Manila Mining Corp,17
MAB.PSI,102265,Manila Mining Corp b,17
MWC.PSI,102268,Manila Water Company Inc,17
MFC.PSI,102272,Manulife Financial Corp,17
MARC.PSI,102176,Marcventures Holdings Inc,17
MAXS.PSI,102290,Maxb s Group Inc,17
MED.PSI,102373,Medco Holdings Inc,17
MWIDE.PSI,102368,Megawide Construction Corp,17
MWP.PSI,969161,Megawide Construction Corp Pref,17
MEG.PSI,102270,Megaworld Corp,17
PHILIPPINES.PSI,102244,Melco Resorts and Entertainment,17
MPI.PSI,102278,Metro Pacific Investments Corp,17
MRSGI.PSI,961709,Metro Retail Stores Group Inc,17
MBT.PSI,102269,Metropolitan Bank and Trust Co,17
MG.PSI,102247,Millennium Global Holdings Inc,17
MJIC.PSI,941014,MJC Investments Corp,17
MRC.PSI,102279,MRC Allied Inc,17
NRCP.PSI,102353,National Reinsurance Corporation of the Philippines,17
NIKL.PSI,102369,Nickel Asia Corp,17
NI.PSI,102274,NiHAO Mineral Resources International Inc,17
NOW.PSI,102362,Now Corp,17
OM.PSI,102282,Omico Corp,17
ORE.PSI,102364,Oriental Peninsula Resources Group Inc,17
OPM.PSI,102283,Oriental Petroleum and Minerals Corp,17
OPMB.PSI,102284,Oriental Petroleum and Minerals Corp B,17
PA.PSI,102357,Pacifica Inc,17
LOTO.PSI,102352,Pacificonline Systems Inc,17
PAL.PSI,102193,PAL Holdings Inc,17
PMPC.PSI,102287,Panasonic Manufacturing Philippines Corp,17
PAX.PSI,102286,Paxys Inc,17
PIP.PSI,102192,Pepsi Cola Products Phils Inc,17
PERC.PSI,102292,PetroEnergy Resources Corp,17
PCOR.PSI,102291,Petron Corp,17
PRF2A.PSI,969166,Petron Corp Pref A,17
PRF2B.PSI,969167,Petron Corp Pref B,17
DNA.PSI,969152,Philab Holdings Corp,17
PX.PSI,102306,Philex Mining Corp,17
PXP.PSI,102371,Philex Petroleum Corp,17
PBC.PSI,102288,Philippine Bank of Communications,17
PBB.PSI,102166,Philippine Business Bank Inc A Savings Bank,17
PHES.PSI,102297,Philippine Estates Corp,17
H2O.PSI,102367,Philippine H2O Ventures Corp,17
PNB.PSI,102298,Philippine National Bank,17
PRC.PSI,102301,Philippine Racing Club Inc,17
RLT.PSI,102312,Philippine Realty and Holdings Corp,17
PSB.PSI,102304,Philippine Savings Bank,17
SEVN.PSI,102316,Philippine Seven Corp,17
PSE.PSI,102293,Philippine Stock Exchange Inc,17
OV.PSI,102285,Philodrill Corp,17
PTC.PSI,986431,Philtrust Bank,17
WEB.PSI,102339,PhilWeb Corp,17
PHEN.PSI,102326,Phima Energy Corporation,17
PHN.PSI,102196,PHINMA Corp,17
PPG.PSI,946580,Phinma Petroleum and Geothermal Inc,17
PNX.PSI,102351,Phoenix Petroleum Philippines Inc,17
PNX3A.PSI,969163,Phoenix Petroleum Philippines Inc Pref A,17
PNX3B.PSI,969164,Phoenix Petroleum Philippines Inc Pref B,17
SHLPH.PSI,993041,Pilipinas Shell Petroleum Corp,17
TEL.PSI,102329,PLDT Inc,17
PHA.PSI,102294,Premiere Entertainment Inc,17
PLC.PSI,102319,Premium Leisure Corp,17
PRIM.PSI,102302,Prime Media Holdings Inc,17
POPI.PSI,102300,Prime Orion Phils Inc,17
PRMX.PSI,102303,Primex Corp,17
PPC.PSI,969165,Pryce Corp,17
TFC.PSI,986435,PTFC Redevelopment Corp,17
PGOLD.PSI,102370,Puregold Price Club Inc,17
REG.PSI,102309,Republic Glass Holdings Corp,17
RFM.PSI,102310,RFM Corp,17
RCB.PSI,102307,Rizal Commercial Banking Corp,17
RLC.PSI,102311,Robinsons Land Corp,17
RRHI.PSI,102384,Robinsons Retail Holdings Inc,17
ROCK.PSI,102378,Rockwell Land Corp,17
RCI.PSI,102206,Roxas and Co Inc,17
ROX.PSI,102313,Roxas Holdings Inc,17
PF.PSI,102295,San Miguel Pure Foods Company Inc,17
SMC.PSI,102321,San Miguel Corp,17
SMC2G.PSI,986432,San Miguel Corp Pref,17
SMC2H.PSI,986433,San Miguel Corp Pref 2,17
SMC2I.PSI,986434,San Miguel Corp Pref 3,17
SMC2B.PSI,969169,San Miguel Corp Pref B,17
SMC2C.PSI,969170,San Miguel Corp Pref C,17
SMC2D.PSI,969171,San Miguel Corp Pref D,17
SMC2E.PSI,969172,San Miguel Corp Pref E,17
SMC2F.PSI,969173,San Miguel Corp Pref F,17
PFP2.PSI,969162,San Miguel Pure Foods Company Inc Pref,17
SBS.PSI,958371,SBS Philippines Corp,17
SPM.PSI,102325,Seafront Resources Corp,17
SECB.PSI,102315,Security Bank Corp,17
SCC.PSI,102314,Semirara Mining Corp,17
SSP.PSI,942848,SFA Semicon Philippines Corp,17
SHNG.PSI,102226,Shang Properties Inc,17
SM.PSI,102322,SM Investments Corp,17
SMPH.PSI,102323,SM Prime Holdings Inc,17
SOC.PSI,102324,SOCResources Inc,17
SGI.PSI,102318,Solid Group Inc,17
SPC.PSI,104355,SPC Power Corp,17
SSI.PSI,942846,SSI Group Inc,17
SLI.PSI,102343,Sta Lucia Land Inc,17
STR.PSI,102299,Starmalls Inc,17
STI.PSI,102251,STI Education Systems Holdings Inc,17
SLF.PSI,102320,Sun Life Financial Inc,17
SUN.PSI,102229,Suntrust Home Developers Inc,17
SFI.PSI,102317,Swift Foods Inc,17
SFIP.PSI,969168,Swift Foods Inc Pref,17
SGP.PSI,104358,Synergy Grid and Development Phils Inc,17
T.PSI,102356,TKC Metals Corp,17
TFHI.PSI,102386,Top Frontier Investment Holdings Inc,17
TBGI.PSI,102327,Transpacific Broadband Group International Inc,17
RWM.PSI,102385,Travellers International Hotel Group Inc,17
UNI.PSI,102331,Unioil Resources and Holdings Co Inc,17
UBP.PSI,102330,Union Bank of the Philippines,17
UPM.PSI,102332,United Paragon Mining Corp,17
URC.PSI,102333,Universal Robina Corp,17
V.PSI,102334,Vantage Equities Inc,17
VMC.PSI,102336,Victorias Milling Company Inc,17
VLL.PSI,102349,Vista Land and Lifescapes Inc,17
VITA.PSI,102335,Vitarich Corp,17
VVT.PSI,102338,Vivant Corp,17
VUL.PSI,102337,Vulcan Industrial and Mining Corp,17
WPI.PSI,102341,Waterfront Philippines Inc,17
WIN.PSI,102340,Wellex Industries Inc,17
WLCON.PSI,1006198,Wilcon Depot Inc,17
X.PSI,942847,Xurpas Inc,17
ZHI.PSI,102342,Zeus Holdings Inc,17

#ST NORWAY
AASB-ME.ST,962515,Aasen Sparebank,37
ASC.ST,40252,ABG Sundal Collier Holding ASA,37
AFGRA.ST,49866,Af Gruppen,37
AFPC.ST,990003,African Petroleum Corporation Ltd,37
AKAS.ST,8999,Akastor ASA,37
AKER.ST,40248,Aker ASA,37
AKERBP.ST,40260,Aker BP ASA,37
AKSOL.ST,949736,Aker Solutions OL,37
AKVA.ST,49870,Akva Group,37
AMSCA.ST,44449,American Shipping Company ASA,37
APPT.ST,49895,Apptix,37
ATBT.ST,993642,Aqua Bio Technology ASA,37
AQUA.ST,949737,Aqualis,37
ARCHER.ST,40251,Archer Limited,37
ARCUS.ST,994028,Arcus ASA,37
AFK.ST,49882,Arendals F.Kom,37
ASETEK.ST,49850,Asetek,37
ATEA.ST,40253,Atea ASA,37
ATLA.ST,50689,Atla Petroleum,37
ATLU-ME.ST,962517,Atlantic Lumpus AS,37
AURG.ST,993643,Aurskog Sparebank,37
AUSS.ST,40254,Austevoll Seafood ASA,37
AVANCE.ST,949738,Avance Gas Holding Ltd,37
AVM.ST,49851,Avocet Mining PLC,37
AWDR.ST,993645,Awilco Drilling PLC,37
ALNG.ST,993641,Awilco LNG ASA,37
AXAC.ST,49926,Axactor AB,37
B2H.ST,985166,B2holding ASA,37
HUNTG.ST,993646,Badger Explorer ASA,37
BELS.ST,49868,Belships,37
BERGEN.ST,49914,Bergen Group,37
BGBIO.ST,1008652,Bergenbio ASA,37
BIOTEC.ST,49891,Biotec Pharmacon ASA,37
BSP-ME.ST,962518,Black Sea Property AS,37
BON.ST,49873,Bonheur,37
BOR.ST,50688,Borgestad A,37
BDRILL.ST,1036848,Borr Drilling Ltd,37
BRGD.ST,49922,Borregaard,37
BOUVET.ST,49911,Bouvet,37
BWLPG.ST,49841,BW LPG Ltd,37
BWO.ST,49840,BW Offshore Ltd,37
BYGG.ST,50686,Byggma,37
COVI.ST,49924,Contextvision,37
CRAYON.ST,1054857,Crayon Group Holding ASA,37
CXEN.ST,986625,Cxense ASA,37
DAT.ST,49862,Data Respons,37
DNB.ST,13140,DnB ASA,37
DNO.ST,363,DNO International ASA,37
DOF.ST,49892,Dof ASA,37
EAM.ST,993647,EAM Solar ASA,37
EIOF.ST,49902,Eidesvik Offshore ASA,37
EKO.ST,40262,Ekornes ASA,37
EMGS.ST,40264,Electromagnetic Geoservices ASA,37
EMASL.ST,49927,Emas Offshore Construction Pte Ltd,37
ENTRA.ST,942516,Entra ASA,37
EPIC-ME.ST,994261,Epic Gas Ltd,37
EPRI.ST,954901,Europris ASA,37
EVRY.ST,40265,EVRY ASA,37
FJORD.ST,1043087,Fjord1 AS,37
FLNG.ST,993648,FLEX LNG Ltd,37
FOE.ST,368,Fred. Olsen Energy ASA,37
FRO.ST,370,Frontline Ltd,37
FUNCOM.ST,49857,Funcom,37
GAMIG.ST,49928,Gaming Innovation Group,37
RISH.ST,49901,Gc Rieber Ship,37
GENT-ME.ST,994262,Gentian Diagnostics AS,37
GJFS.ST,40266,Gjensidige Forsikring ASA,37
GOGLT.ST,366,Golden Ocean Group Ltd,37
GOD.ST,49886,Goodtech,37
GSFO.ST,49912,Grieg Seafood,37
GRONG-ME.ST,1031112,Grong Sparebank,37
GYL.ST,50691,Gyldendal,37
HAVI.ST,49900,Havila Shipping ASA,37
HYARD.ST,949739,Havyard Group ASA,37
HELG.ST,993649,Helgeland Sparebank,37
HEX.ST,49863,Hexagon Composites ASA,37
HIDDNS.ST,49871,Hiddn Solutions ASA,37
HLNGH.ST,49842,Hoegh LNG Holdings Ltd,37
HOFBC.ST,993650,Hofseth Biocare ASA,37
HSPG.ST,993651,Holand og Setskog Sparebank,37
HUGOG.ST,955664,Hugo Games A/S,37
IMSK.ST,49864,I.M. Skaugen A,37
IDEX.ST,953537,Idex ASA,37
INCU.ST,49860,Incus Investor ASA,37
ISSG.ST,993652,Indre Sogn Sparebank,37
INDUCT-ME.ST,962519,Induct AS,37
INFRNT.ST,1050759,Infront ASA,37
INSRI.ST,949742,Insr Insurance Group,37
IOX.ST,49905,Interoil Exploration and Production ASA,37
ELEM.ST,49861,Intex Resources ASA,37
ITER.ST,49890,Itera,37
JAEREN.ST,993653,Jaeren Sparebank,37
JINS.ST,49843,Jinhui Shipping and Transportation,37
KID.ST,960703,Kid ASA,37
KP5.ST,50682,Kitron,37
KOMPBK.ST,1054981,Komplett Bank ASA,37
KOG.ST,40243,Kongsberg Gruppen ASA,37
KOA.ST,40269,Kongsberg Automotive Holding ASA,37
KVAER.ST,40270,Kværner ASA,37
LSG.ST,40271,Leroy Seafood Group ASA,37
LINK.ST,993654,Link Mobility Group ASA,37
MSEIS.ST,993657,Magseis ASA,37
MHG.ST,369,Marine Harvest ASA,37
MEDS.ST,50684,Medistim,37
MELG.ST,993656,Melhus Sparebank,37
MONO-ME.ST,997806,Monobank ASA,37
MULTIC.ST,953846,Multiconsult AS,37
NAPAT.ST,50687,Napatech,37
NATTO.ST,993658,Nattopharma ASA,37
NAVA.ST,49898,Navamedic,37
NEL.ST,49893,Nel ASA,37
NEXT.ST,976467,Next Biometrics Group ASA,37
NGT.ST,49897,NextGenTel Holding ASA,37
AEGA.ST,962516,Nordic Financials ASA,37
NOMIN.ST,993659,Nordic Mining ASA,37
NANOV.ST,948354,Nordic Nanovector ASA,37
NOD.ST,40274,Nordic Semiconductor ASA,37
NHY.ST,367,Norsk Hydro ASA,37
NSG.ST,371,Norske Skogindustrier ASA,37
NORTH.ST,993660,North Energy ASA,37
NRSM.ST,49908,37 Royal S,37
NWC.ST,40277,Norwegian Air Shuttle ASA,37
NOR.ST,49913,Norwegian Ener,37
NOFI.ST,985792,Norwegian Finans Holding ASA,37
NPRO.ST,40275,Norwegian Property ASA,37
NRC.ST,49883,NRC Group ASA,37
NTSAS.ST,50690,NTS ASA,37
OCY.ST,49921,Ocean Yield,37
OTS.ST,49906,Oceanteam ASA,37
ODF.ST,40278,Odfjell SE,37
ODFB.ST,49881,Odfjell B,37
ODLL.ST,49845,Odfjell Drilli,37
OLT.ST,49888,Olav Thon Eien,37
OTELLO.ST,40279,Opera Software ASA,37
ORK.ST,373,Orkla ASA,37
BAKKA.ST,40255,P/f Bakkafrost,37
PENO.ST,49918,Panoro Energy,37
PARB.ST,994263,Pareto Bank ASA,37
PCIB.ST,993662,PCI Biotech Holding ASA,37
PGS.ST,375,Petroleum Geo - Services ASA,37
PDR.ST,49849,Petrolia,37
PHLYS.ST,961770,Philly Shipyard ASA,37
PHO.ST,49889,Photocure,37
PIOPGPREF.ST,994264,Pioneer Property Group ASA Pref,37
PLCS.ST,44448,Polarcus Ltd,37
POLME.ST,50685,Polaris Media,37
PRSO.ST,372,Prosafe,37
PROTCT.ST,49899,Protector Fors,37
QFR.ST,40283,Q-Free ASA,37
QEC.ST,40282,Questerre Energy Corporation,37
RAKP.ST,942714,RAK Petroleum PLC,37
REACH.ST,49874,Reach Subsea,37
REC.ST,374,REC Silicon ASA,37
ROMR.ST,993665,RomReal Ltd,37
SAFER.ST,1010885,Saferoad Holding ASA,37
SAGT.ST,993667,Saga Tankers ASA,37
SALM.ST,40285,SalMar ASA,37
SADG.ST,993666,Sandnes Sparebank,37
SASNOK.ST,49925,SAS AB,37
SSHIP.ST,993675,Scanship Holding ASA,37
SSOL.ST,942434,Scatec Solar OL,37
SBSTA.ST,40286,Schibsted ASA A,37
SBSTB.ST,953847,Schibsted ASA B,37
SSCOM.ST,49853,Scottish Salmo,37
SDSD.ST,993669,SD Standard Drilling PLC,37
SBX.ST,49848,Seabird Explor,37
SDRL.ST,382,Seadrill Limited,37
SBOO.ST,49919,Selvaag Bolig,37
SEVDRL.ST,49917,Sevan Drilling Ltd,37
SEVAN.ST,40287,Sevan Marine ASA,37
SIOFF.ST,49854,Siem Offshore,37
SIAF-ME.ST,962521,Sino Agro Food Inc,37
SBANK.ST,960704,Skandiabanken ASA,37
SKUE.ST,993671,Skue Sparebank,37
SOLON.ST,40256,Solon Eiendom ASA,37
SOFF.ST,49867,Solstad Offsho,37
SOLV.ST,49880,Solvang,37
SBULK.ST,994265,Songa Bulk AS,37
SONG.ST,40288,Songa Offshore SE,37
SPOLT.ST,1031111,Sparebank 1 Ostlandet,37
SBVGV.ST,993668,Sparebank 1 BV,37
NONG.ST,990004,Sparebank 1 Nord-Norge,37
SNORD.ST,1056135,Sparebank 1 Nordvest,37
SOAG.ST,993672,Sparebank 1 Ostfold Akershus,37
RING.ST,993664,Sparebank 1 Ringerike Hadeland,37
MING.ST,989454,Sparebank 1 SMN,37
SRBANK.ST,49920,Sparebank 1Sr,37
SPMO.ST,993674,Sparebanken More,37
SPOG.ST,990005,Sparebanken Ost,37
SORR.ST,993673,Sparebanken Sor,37
SVEG.ST,990006,Sparebanken Vest,37
SPU.ST,49916,Spectrum,37
STL.ST,376,Statoil ASA,37
SNI.ST,40244,Stolt-Nielsen Limited,37
STB.ST,379,Storebrand ASA,37
STORM.ST,49910,Storm Real,37
STRONG.ST,49894,Strongpoint ASA,37
SUBC.ST,383,Subsea 7 SA,37
TRVX.ST,985890,Targovax ASA,37
TEAM.ST,946352,Team Tankers International Ltd,37
TECHS.ST,49869,Techstep ASA,37
TEL.ST,380,Telenor ASA,37
TGS.ST,384,TGS-NOPEC Geophysical Company ASA,37
THIN.ST,949741,Thin Film Electronics ASA,37
TOM.ST,378,Tomra Systems ASA,37
TOTG.ST,993677,Totens Sparebank,37
TREAS.ST,985168,Treasure ASA,37
TTSM.ST,49859,Tts Group Asa,37
TYSB-ME.ST,1057226,Tysnes Sparebank,37
UMES.ST,994777,Unified Messaging Systems ASA,37
VEI.ST,40292,Veidekke ASA,37
VISTIN.ST,954902,Vistin Pharma ASA,37
VVL.ST,49858,Voss Veksel La,37
WSTEP.ST,1052379,Webstep ASA,37
WRLT.ST,49846,Wentworth Resources Ltd,37
WWLO.ST,40293,Wilh Wilhelmsen ASA,37
WWI.ST,40294,Wilh Wilhelmsen Holding ASA,37
WWIB.ST,40295,Wilhelm Wilhelmsen Holding ASA B,37
WILS.ST,994267,Wilson ASA,37
WRE-ME.ST,962522,WR Entertainment ASA,37
XXLA.ST,942435,XXL ASA,37
YAR.ST,381,Yara International ASA,37
ZAL.ST,949743,Zalaris ASA,37
OMXS30.ST,25685,OMX Stockholm 30,37

#BIT ITALY 
4AIM.BIT,986086,4Aim Societa di Investimento per Azioni a Capitale Fisso,21
A2.BIT,7010,A2A,21
ABIT.BIT,976079,Abitare In SpA,21
ACE.BIT,18926,ACEA,21
ACO.BIT,29765,Acotel Group,21
ACAG.BIT,29764,ACSM-Agam,21
ADSGN.BIT,985964,Adidas AG,21
AEDI.BIT,18927,Aedes,21
AEF.BIT,29769,Aeffe,21
AEGN.BIT,29424,Aegon NV,21
ADB.BIT,958266,Aeroporto Guglielmo Marconi di Bologna SpA,21
AGAT.BIT,942700,Agatos SpA,21
AGES.BIT,29586,Ageas,21
AD.BIT,29525,Koninklijke Ahold Delhaize NV,21
AIRP.BIT,25409,Air Liquide SA,21
AIR.BIT,985965,Airbus Group SE,21
ARN.BIT,29776,Alerion Cleanpower,21
ABTG.BIT,1031008,Alfio Bardolla Training Group SpA,21
ALKE.BIT,1056349,Alkemy SpA,21
ALV.BIT,29438,Allianz SE VNA O.N,21
ALPI.BIT,1061903,Alp.I SpA,21
AMZN.BIT,1055958,Amazon.com Inc,21
ATH.BIT,29925,Ambienthesis,21
AMBA.BIT,29773,Ambromobiliare SpA,21
AMPF.BIT,18928,Amplifon,21
ABI.BIT,987102,Anheuser Busch Inbev SA NV,21
ANIM.BIT,942431,Anima Holding SpA,21
STS.BIT,13377,Ansaldo STS,21
ASCI.BIT,18929,Ascopiave,21
ASML.BIT,989451,ASML Holding NV,21
ASSI.BIT,958267,Assiteca SpA Internazionale di Brokeraggio Assicurativo,21
AST.BIT,18931,Astaldi,21
ATMI.BIT,18932,ASTM SpA,21
ATL.BIT,7011,Atlantia,21
AGL.BIT,7025,Autogrill,21
AUMI.BIT,29777,Autostrade Meridionali,21
AVI.BIT,958271,Avio SpA,21
AXA.BIT,29445,AXA SA,21
AXEL.BIT,943211,Axelero Srl,21
AZMT.BIT,13378,Azimut Holding,21
37B.BIT,29763,B&C Speakers,21
CRGI.BIT,18939,Banca Carige,21
CRGIN.BIT,29821,Banca Carige RSP,21
BFF.BIT,1006171,Banca Farmafactoring SpA,21
BFE.BIT,29783,Banca Finnat,21
BGN.BIT,18934,Banca Generali,21
IF.BIT,29858,Banca IFIS,21
BIM.BIT,29788,Banca Intermobiliare,21
BMED.BIT,6956,Banca Mediolanum SpA,21
PCVI.BIT,29897,Banca Piccolo Credito Valtellinese SpA,21
BPSI.BIT,18936,Banca Popolare Sondrio,21
PRO.BIT,18959,Banca Profilo,21
BSTA.BIT,955662,Banca Sistema Spa,21
BAMI.BIT,7029,Banco Bpm,21
DESI.BIT,29826,Banco Di Desio E Brianza,21
DESIN.BIT,29827,Banco Di Desio E Brianza RSP,21
SARIN.BIT,29928,Banco Di Sardegna RSP,21
EPRC.BIT,945678,Banzai SpA,21
BASF.BIT,29436,BASF SE NA O.N,21
BCNT.BIT,29779,Basicnet,21
BTGI.BIT,29797,Bastogi,21
BAYG.BIT,29437,Bayer AG NA,21
BIO.BIT,29587,BB Biotech AG,21
BMPS.BIT,6988,Banca Monte dei Paschi di Siena SpA,21
BET.BIT,29782,BE,21
BE.BIT,29781,Beghelli,21
BEIG.BIT,986087,Beiersdorf AG O.N,21
BNSI.BIT,18935,Beni Stabili SpA,21
BSTU.BIT,29796,Best Union Company,21
BFG.BIT,1012044,BF Holding SpA,21
BIA.BIT,29785,Bialetti Industrie,21
BIAN.BIT,29786,Biancamano,21
BSS.BIT,29795,Biesse,21
ON.BIT,942514,BIO ON,21
BIO2.BIT,953844,Biodue SpA,21
BIE.BIT,29787,Bioera,21
BBLUE.BIT,961767,Blue Financial Communication SpA,21
BMW.BIT,29486,Bayerische Motoren Werke AG,21
BNPP.BIT,29449,BNP Paribas SA,21
BOEI.BIT,29790,Boero Bartolomeo,21
BOMI.BIT,955661,Bomi Italia SpA,21
BRGI.BIT,29792,Borgosesia,21
BRGIN.BIT,29793,Borgosesia RSP,21
EMII.BIT,14608,Bper Banca SpA,21
BRUI.BIT,29794,Brioschi,21
BCU.BIT,29780,Brunello Cucinelli,21
BZU.BIT,7008,Buzzi Unicem,21
BZUN.BIT,29799,Buzzi Unicem RSP,21
CAD.BIT,29800,Cad It,21
CAI.BIT,29801,Cairo Communication,21
CLFF.BIT,29814,Caleffi,21
CALG.BIT,948342,Caleido Group,21
CALI.BIT,29802,Caltagirone,21
CED.BIT,29808,Caltagirone Editore,21
CPRI.BIT,13579,Davide Campari Milano SpA,21
CFP2.BIT,1031124,Capital for Progress 2 SpA,21
CARRA.BIT,14159,Carraro,21
CRR.BIT,29456,Carrefour SA,21
CDGI.BIT,942691,Casta Diva Group SpA,21
CASS.BIT,29804,Cattolica Assicurazioni,21
CEMB.BIT,29809,Cembre,21
CEMI.BIT,29810,Cementir Holding,21
CLII.BIT,29815,Centrale del Latte Di Italia SpA,21
CERV.BIT,102929,Cerved Information Solutions SpA,21
CHL.BIT,29811,CHL,21
CIAZ.BIT,29812,Compagnia Immobiliare Azionaria,21
CIRX.BIT,13381,CIR,21
CLAB.BIT,949733,Clabo SPA,21
CLED.BIT,29813,Class Editori SpA,21
CNHI.BIT,42603,CNH Industrial NV,21
COFI.BIT,18938,Cofide,21
CRES.BIT,978748,Coima Res SpA,21
CBKG.BIT,985887,Commerzbank AG O.N,21
CDRU.BIT,29807,Compagnia della Ruota SpA,21
COPR.BIT,29818,Conafi Prestito',21
CONG.BIT,985966,Continental AG O.N,21
COV.BIT,953069,Cover 50 SpA,21
CAGR.BIT,29457,Credit Agricole SA,21
EMBI.BIT,29838,Credito Emiliano,21
CRSA.BIT,997805,Crescita SpA,21
CSP.BIT,29822,CSP International,21
CULT.BIT,1024884,Culti Milano SpA,21
B7C.BIT,29778,D'Amico International Shipping,21
DA.BIT,29824,Dada,21
DAI.BIT,29441,Daimler AG NA O.N,21
DMN.BIT,29830,Damiani,21
DANI.BIT,18941,Danieli & C,21
DANIN.BIT,29825,Danieli & C RSP,21
DNN.BIT,29446,Danone SA,21
DAL.BIT,18940,Datalogic,21
DBA.BIT,1056383,DBA Group SpA,21
DLG.BIT,18943,De Longhi SpA,21
DEA.BIT,18942,DeA Capital,21
DBK.BIT,29440,Deutsche Bank AG NA O.N,21
DB1GN.BIT,987103,Deutsche Boerse AG,21
DPWGN.BIT,985967,Deutsche Post AG NA O.N,21
DTE.BIT,29487,Deutsche Telekom AG Na,21
DIAS.BIT,14609,Diasorin,21
DIB.BIT,29828,Digital Bros,21
DMG.BIT,942706,Digital Magics,21
DIGT.BIT,1013377,Digital360 SPA,21
DGT.BIT,948343,Digitouch SPA,21
DOB.BIT,1024871,doBank SPA,21
DHH.BIT,986088,Dominion Hosting Holding SpA,21
EOA.BIT,29584,E.ON SE NA,21
ECKS.BIT,948344,Ecosuntek SpA,21
EDNN.BIT,29833,Edison RSP,21
EEMS.BIT,18945,EEMS,21
EIT.BIT,29834,EI Towers,21
ELEN.BIT,29836,El En,21
ELIN.BIT,951011,Elettra Investimenti SpA,21
ELC.BIT,29835,Elica,21
EM.BIT,29837,Emak,21
ENAV.BIT,985968,Enav SpA,21
ENEI.BIT,6963,Enel,21
EMCC.BIT,968991,Energica Motor Company SpA,21
ELAB.BIT,948345,Energy Lab SpA,21
ENER.BIT,942688,Enertronica,21
ENVT.BIT,29840,Enervit,21
ENGIE.BIT,29448,Engie SA,21
ENI.BIT,6974,ENI,21
EPSE.BIT,1031009,Eps Equita Pep Spac SpA,21
EQUI.BIT,1055158,Equita Group SpA,21
ERG.BIT,18946,ERG,21
PRT.BIT,29911,Esprinet,21
ESSI.BIT,989452,Essilor International Compagnie Generale d’Optique SA,21
EUKE.BIT,29841,Eukedos,21
E5T.BIT,29831,Eurotech,21
EVKN.BIT,992777,Evonik Industries AG,21
EXOR.BIT,13380,Exor NV,21
EXSY.BIT,942689,Expert System,21
XPR.BIT,29961,Exprivia,21
AA4.BIT,18947,Falck Renewables,21
RACE.BIT,962346,Ferrari NV,21
FCHA.BIT,307,Fiat Chrysler Automobiles NV,21
FDA.BIT,29844,Fidia,21
FIMI.BIT,29847,Fiera Milano,21
FILA.BIT,942699,Fila SpA,21
FCT.BIT,941181,Fincantieri SpA,21
FBK.BIT,103940,FinecoBank Banca Fineco SpA,21
FNL.BIT,1012043,Finlogic SpA,21
FTL.BIT,29850,Fintel Energia Group SpA,21
FICP.BIT,29846,First Capital SpA,21
FNMI.BIT,29848,FNM,21
FOPE.BIT,994027,Fope SpA,21
FDE.BIT,29845,Frendy Energy,21
BRBI.BIT,18937,Freni Brembo SpA,21
FREG.BIT,986089,Fresenius SE & Co KGAA O.N,21
FMEG.BIT,987104,Fresenius Medical Care KGAA ST,21
FUL.BIT,29851,Fullsix,21
GABI.BIT,29852,Gabetti Property Solutions,21
GAMB.BIT,961650,Gambero Rosso SpA,21
GAME.BIT,1056091,Gamenet SpA,21
GSP.BIT,29856,Gas Plus,21
GEDI.BIT,8791,GEDI Gruppo Editoriale SpA,21
GFRN.BIT,29855,Gefran,21
GELE.BIT,1056996,Gel SpA,21
GASI.BIT,308,Generali,21
GEO.BIT,13379,Geox,21
GEQ.BIT,29857,Gequity SpA,21
GGTV.BIT,958269,Giglio Group SpA,21
GIMA.BIT,1050739,Gima TT SpA,21
FDOP.BIT,943212,Giorgio Fedon & Figli,21
GLN.BIT,1025080,Glenalta SPA,21
GO.BIT,942704,GO internet,21
GPI.BIT,994718,GPI SpA,21
RICC.BIT,29920,Gruppo Ceramiche Ricchetti,21
GGPW.BIT,948346,Gruppo Green Power SpA,21
WIGG.BIT,29872,Gruppo Waste Italia SpA,21
HFARM.BIT,961652,H-Farm SpA,21
HIA.BIT,996151,Health Italia SpA,21
HEIG.BIT,986090,Heidelbergcement AG O.N,21
HNKG_P.BIT,989453,Henkel & Co KGaA AG Pref,21
HRA.BIT,18949,Hera,21
IGV.BIT,29860,I Grandi Viaggi SpA,21
IDEAM.BIT,1056350,Ideami SpA,21
IGD.BIT,18950,IGD - Immobiliare Grande Distribuzione,21
S24.BIT,29923,Il Sole 24 Ore SpA,21
ILLA.BIT,1057077,ILLA SpA,21
IMAI.BIT,18951,Industria Macchine Automatiche,21
IMSI.BIT,29863,IMMSI,21
SALIN.BIT,29865,Impregilo RSP,21
YIV.BIT,942701,Imvest,21
INDB.BIT,1010716,Indel B SPA,21
IIND.BIT,29861,Industria E Innovazione,21
IN3.BIT,1052905,Industrial Stars of Italy 3 SpA,21
IFXGN.BIT,985969,Infineon Technologies AG NA O.N,21
INWT.BIT,954900,Infrastrutture Wireless Italiane SPA,21
INGA.BIT,29423,ING Groep NV,21
IB.BIT,948348,Iniziative Bresciane Inbre,21
II1.BIT,992778,Innova Italy 1 SpA,21
INCI.BIT,942694,Innovatec,21
IKG.BIT,18955,Intek Group,21
IKGN.BIT,29873,Intek Group RSP,21
ITPG.BIT,18953,Interpump Group,21
ISP.BIT,6951,Intesa Sanpaolo,21
ISPN.BIT,29543,Intesa Sanpaolo RSP,21
IRC.BIT,29866,IRCE,21
IREE.BIT,18954,Iren,21
IGS.BIT,29859,Isagro,21
IGS_P.BIT,1050142,Isagro SpA Pref,21
ITWY.BIT,29869,It Way,21
IG.BIT,993186,Italgas SpA,21
IINT.BIT,942690,Italia IG,21
ITWB.BIT,945098,Italian Wine Brands SpA,21
IOL.BIT,6945,Italiaonline SpA,21
IOLN.BIT,29900,Italiaonline RSP,21
ITMI.BIT,29867,Italmobiliare SpA,21
IVS.BIT,41348,IVS Group SA,21
JUVE.BIT,29870,Juventus Football Club,21
SDFGN.BIT,986092,K+S AG NA O.N,21
PRTP.BIT,29491,Kering SA,21
KI.BIT,942695,KI Group,21
KAIT.BIT,29871,KREnergy SpA,21
OR.BIT,29453,L’Oreal SA,21
LDO.BIT,29875,La Doria,21
LR.BIT,18956,Landi Renzo,21
LAZI.BIT,29874,Lazio,21
LDOF.BIT,6961,Leonardo SpA,21
LFG.BIT,948350,Leone Film Group SpA,21
LING.BIT,985970,Linde AG O.N,21
LVMH.BIT,29451,LVMH Moet Hennessy Louis Vuitton SE,21
LUVE.BIT,998050,LU-VE SpA,21
LCMG.BIT,948349,Lucisano Media Group,21
LHAG.BIT,985888,Deutsche Lufthansa AG,21
LUX.BIT,7045,Luxottica Group,21
LVEN.BIT,29876,Lventure Group,21
MACA.BIT,31085,M&C,21
MAIL.BIT,942696,MailUp,21
MTCM.BIT,18957,Maire Tecnimont SpA,21
MARR.BIT,29878,Marr,21
MASIA.BIT,955663,Masi Agricola SpA,21
MZB.BIT,953845,Massimo Zanetti Beverage Group SpA,21
MCH.BIT,29879,Mediacontech,21
MS.BIT,7030,Mediaset,21
MDBI.BIT,7024,Mediobanca,21
MRCG.BIT,985971,Merck KGaA,21
MTTI.BIT,29889,Mittel,21
MBRA.BIT,942687,Modelleria Brambilla SpA,21
MLMD.BIT,29885,Molecular Medicine SpA,21
MONC.BIT,48565,Moncler SpA,21
MOED.BIT,8805,Mondadori Editore,21
MTV.BIT,29890,Mondo TV,21
MTFR.BIT,942707,Mondo TV France,21
MSU.BIT,949734,Mondo TV Suisse SA,21
EDII.BIT,29832,Monrif,21
MUV2.BIT,29488,Muench. Rueckvers. VNA O.N,21
MOL.BIT,29887,Mutuionline,21
NDT.BIT,1050174,Neodecortech SpA,21
NTW.BIT,29829,Netweek SpA,21
NRST.BIT,29894,Neurosoft Software Production,21
NICE.BIT,29891,Nice,21
NOKIA.BIT,29485,Nokia Oyj,21
NPI.BIT,942697,Notorious,21
NR.BIT,29893,Nova Re,21
OLI.BIT,29895,Olidata,21
OJM.BIT,961768,Openjobmetis SpA Agenzia per il Lavoro,21
ORAN.BIT,29458,Orange SA,21
ORSO.BIT,961651,Orsero SpA,21
OVS.BIT,945907,OVS SPA,21
PAGR.BIT,29896,Panariagroup Industrie Ceramiche,21
PLT.BIT,6950,Parmalat,21
PHNU.BIT,1031038,Pharmanutra SpA,21
PHIA.BIT,29425,Koninklijke Philips NV,21
PIA.BIT,18958,Piaggio & C,21
PRL.BIT,29909,Pierrel,21
PNNI.BIT,29902,Pininfarina,21
PQ.BIT,29905,Piquadro,21
PIRC.BIT,310,Pirelli & C SPA,21
PITE.BIT,958270,PiteCo SpA,21
PLTEN.BIT,942708,PLT Energia,21
PSF.BIT,29912,Poligrafica S Faustino,21
POLI.BIT,29903,Poligrafici Editoriale,21
POPR.BIT,29904,Poligrafici Printing SpA,21
PSAR.BIT,1055049,Portale Sardegna SpA,21
PST.BIT,959218,Poste Italiane SpA,21
PCRE.BIT,18960,Prelios SpA,21
PRII.BIT,29908,Prima Industrie,21
PRSM.BIT,985941,Primi Sui Motori SpA,21
PSMGN.BIT,987105,Prosiebensat 1 Media AG,21
PRY.BIT,6949,Prysmian,21
RWAY.BIT,942686,Rai Way SpA,21
RATI.BIT,29913,Ratti,21
RCSM.BIT,18961,RCS MediaGroup,21
RECI.BIT,18962,Recordati,21
RENA.BIT,29469,Renault SA,21
RDM.BIT,29917,Reno De Medici,21
REY.BIT,29918,Reply SpA,21
LIT.BIT,29877,Retelit,21
RN.BIT,29921,Risanamento,21
ASR.BIT,18930,Roma,21
ROSS.BIT,29922,ROSSS,21
RWE.BIT,29492,RWE AG ST O.N,21
SABF.BIT,29924,Sabaf,21
SAEI.BIT,29926,Saes Getters,21
SAEIN.BIT,29927,Saes Getters RSP,21
SBG.BIT,942698,Safe Bag,21
SFLG.BIT,18963,Safilo Group,21
SAF.BIT,23531,Safran SA,21
SGOB.BIT,987106,Compagnie de Saint Gobain SA,21
SPMIR.BIT,29936,Saipem SpA,21
SPMI.BIT,7037,Saipem SpA,21
SALI.BIT,7018,Salini Impregilo,21
SFER.BIT,14611,Salvatore Ferragamo,21
SANF.BIT,29463,Sanofi SA,21
SANT.BIT,29480,Banco Santander,21
SAP.BIT,29489,SAP SE,21
SRS.BIT,14161,Saras,21
SCHN.BIT,986259,Schneider Electric SE,21
SERIT.BIT,29931,Servizi Italia,21
SES.BIT,29884,SESA,21
SIS.BIT,18964,Societa Iniziative Autostradali e Servizi SpA,21
SIE.BIT,29439,Siemens AG Class N,21
SII.BIT,29932,Sintesi,21
SITT.BIT,1028150,SIT SpA,21
SITI.BIT,976080,Siti B&T Group SpA,21
SMRR.BIT,976466,SMRE SpA,21
SNAI.BIT,29933,Snai,21
SRG.BIT,309,Snam,21
GLE.BIT,29460,Societe Generale,21
YSFT.BIT,942703,Softec,21
SGFI.BIT,18965,Sogefi,21
SOLS.BIT,29934,Sol,21
SCM.BIT,986091,Solutions Capital Management SIM SpA,21
ECNL.BIT,1006464,Space3 SpA,21
SPA4.BIT,1057040,Space4 SpA,21
SPTV.BIT,1050666,Spactiv SpA,21
SPAX.BIT,1061904,Spaxs SpA,21
SPRT.BIT,1027145,Sprintitaly,21
STEP.BIT,29938,Stefanel,21
STEPN.BIT,29939,Stefanel RSP,21
STM.BIT,22185,STMicroelectronics,21
TIP.BIT,29948,Tamburi Investment Partners,21
TAS.BIT,29940,TAS,21
TPSG.BIT,999058,Technical Publications Service SpA,21
TGYM.BIT,977682,Technogym SpA,21
TECNO.BIT,942711,Tecnoinvestimenti SpA,21
TLIT.BIT,306,Telecom Italia,21
TLITN.BIT,29949,Telecom Italia RSP,21
TEF.BIT,29476,Telefonica,21
TLSA.BIT,996537,Telesia SpA,21
TENR.BIT,6968,Tenaris,21
TRN.BIT,7020,Terna,21
TRNI.BIT,29950,Ternienergia,21
TES.BIT,29947,Tesmec,21
TKAG.BIT,990000,Thyssenkrupp AG O.N,21
TIS.BIT,13124,Tiscali,21
TOD.BIT,14612,Tod’s SpA,21
TYA.BIT,29929,Toscana Aeroporti SpA,21
TOT.BIT,29468,Total SA,21
TFI.BIT,18967,Trevi Fin Industriale,21
TB.BIT,942710,Triboo SpA,21
TXTS.BIT,29951,TXT,21
UBI.BIT,342,Unione di Banche Italiane SpA,21
UNBP.BIT,991178,Unibail Rodamco SE,21
CRDI.BIT,6955,UniCredit SpA,21
CRDIN.BIT,29820,Unicredit RSP,21
UNIR.BIT,999206,UniEuro SpA,21
UNA.BIT,29524,Unilever NV DRC,21
UN01.BIT,990001,Uniper SE,21
UNPI.BIT,6985,Unipol Gruppo Finanziario Spa,21
US.BIT,7023,UnipolSai Assicurazioni SpA,21
VALS.BIT,29954,Valsoia,21
VTY.BIT,986093,Vetrya SpA,21
VINI.BIT,29956,Vianini SpA,21
SGEF.BIT,985889,Vinci SA,21
VE.BIT,29901,Visibilia Editor,21
VITI.BIT,29959,Vittoria Assicurazioni,21
VIV.BIT,29465,Vivendi SA,21
VOWG_P.BIT,985972,Volkswagen AG VZO O.N,21
VNAN.BIT,990002,Vonovia SE,21
WIIT.BIT,1011050,Wiit SpA,21
WMC.BIT,994719,WM Capital SpA,21
YNAP.BIT,18969,Yoox Net-A-Porter Group SpA,21
ESCO.BIT,948347,Zephyro SpA,21
ZV.BIT,29964,Zignago Vetro,21
ZUCI.BIT,29962,Zucchi,21
ZUCIN.BIT,29963,Zucchi RSP,21
NEXII.BIT,1128905,Nexi SpA,21


#CNS CANADIAN ALL STOCK
AP_U.CNS,24452,Allied Properties REIT,7
REI_U.CNS,24637,RioCan Real Estate Investment Trust,7
A.CNS,25108,Armor Minerals Inc,7
AAB.CNS,42691,Aberdeen International Inc,7
AAG.CNS,49128,Aftermath Silver Ltd,7
AAJCP.CNS,1167632,AAJ Capital 2 Corp,7
AAN.CNS,48680,Aton Resources Inc,7
AAPH.CNS,978231,Alpha Peak Leisure Inc,7
AAT.CNS,978232,ATI AirTest Technologies Inc,7
AAV.CNS,24442,Advantage Oil & Gas Ltd.,7
AAX.CNS,48674,Advance Gold Corp,7
AAZ.CNS,49027,Azincourt Uranium Inc,7
ABI.CNS,49427,Abcourt Mines Inc,7
ABN.CNS,48991,Aben Resources Ltd,7
ABR.CNS,978706,Vela Minerals Ltd,7
ABRA.CNS,1073535,AbraPlata Resource Corp,7
ABST.CNS,24697,Absolute Software Corporation,7
ABX.CNS,24443,Barrick Gold Corp,7
ABZ.CNS,976218,Asiabasemetals Inc,7
AC.CNS,24698,Air Canada,7
ACB.CNS,978804,Aurora Cannabis Inc,7
ACCP.CNS,1152341,Abigail Capital Corporation,7
ACD.CNS,42693,Accord Financial Corp.,7
ACDC.CNS,25115,Extreme Vehicle Battery Technologies Corp,7
ACG.CNS,978805,Alliance Growers Corp,7
ACOX.CNS,24445,Atco Ltd,7
ACOY.CNS,977735,Atco Ltd,7
ACP.CNS,993950,ArcPacific Resources Corp,7
ACQ.CNS,42725,Autocanada Inc,7
ACS.CNS,24699,Archon Minerals Ltd,7
ACST.CNS,40473,Acasti Pharma Inc,7
ACU.CNS,48989,ACT Aurora Control Technologies,7
ACZ.CNS,977736,American Core Sectors Dividend Fund,7
ADCO.CNS,1156659,Adcore Inc,7
ADD.CNS,49007,Arctic Star Exploration Corp,7
ADE.CNS,24700,Adex Mining Inc,7
ADG.CNS,49008,Arcus Development Group Inc,7
ADK.CNS,48754,Diagnos Inc,7
ADN.CNS,42692,Acadian Timber Corp,7
ADWA.CNS,977738,Andrew Peller Ltd A,7
ADWB.CNS,977739,Andrew Peller Ltd B,7
ADX.CNS,978807,Advantex Marketing International Inc,7
ADYA.CNS,978439,Adya Inc,7
ADZ.CNS,48994,Adamera Minerals Corp.,7
ADZN.CNS,996291,Adventus Mining Corp,7
AEC.CNS,49004,Anfield Resources Inc,7
AEG.CNS,43066,Aegis Brands Inc,7
AELH.CNS,49002,Amseco Exploration Ltd,7
AEM.CNS,24446,Agnico Eagle Mines Limited,7
AEP.CNS,48693,Atlas Engineered Products Ltd,7
AEX.CNS,1162476,AEX Gold Inc,7
AEZS.CNS,24704,Aeterna Zentaris Inc,7
AFCC.CNS,951598,Automotive Finco Corp,7
AFD.CNS,978809,Ansar Financial And Development Corp,7
AFE.CNS,48812,Africa Energy Corp,7
AFF.CNS,48673,Affinity Metals Corp,7
AFI.CNS,978810,Affinor Growers Inc,7
AFM.CNS,50543,Alphamin Res,7
AFN.CNS,24705,Ag Growth International Inc,7
AGC.CNS,24707,Amarillo Gold Corporation,7
AGD.CNS,24708,Antioquia Gold Inc,7
AGFB.CNS,24447,AGF Management Ltd,7
AGG.CNS,24710,African Gold Group Inc,7
AGHH.CNS,978236,Canadian Silver Hunter Inc,7
AGI.CNS,24448,Alamos Gold Inc,7
AGL.CNS,978237,Aguila American Gold Ltd,7
AGLD.CNS,986644,Austral Gold Ltd,7
AGN.CNS,978835,Algernon Pharmaceuticals Inc Class A,7
AGO.CNS,49018,AurCrest Gold Inc,7
AGRA.CNS,978952,Agraflora Organics International Inc,7
AGRO.CNS,1111728,Agrios Global Holdings Ltd,7
AH.CNS,49017,Aleafia Health Inc,7
AHC.CNS,977740,Apollo Healthcare Corp,7
AHEH.CNS,48826,American Helium Inc,7
AHG.CNS,995734,Alternate Health Corp,7
AHP.CNS,1163860,Allied Hotel Properties Inc,7
AHR.CNS,24714,Amarc Resources Ltd.,7
AHU.CNS,978241,Arctic Hunter Energy Inc,7
AI.CNS,42724,Atrium Mortgage Investment Corp,7
AIF.CNS,40471,Altus Group Limited,7
AII.CNS,945160,Almonty Industries Inc,7
AIM.CNS,24450,Aimia Inc,7
AIMEP.CNS,1167525,Aim5 Ventures Inc,7
AIML.CNS,978392,Firebird Resources Inc,7
AION.CNS,1166261,Aion Therapeutic Inc,7
AIR.CNS,1162472,Clean Air Metals Inc,7
AIS.CNS,1061402,AIS Resources Ltd,7
AJN.CNS,1093874,Ajn Resources Inc,7
AJX.CNS,42698,AgJunction Inc,7
AKHH.CNS,48997,Alaska Hydro Corp,7
AKR.CNS,48993,Ackroo Inc,7
AKTA.CNS,977745,AKITA Drilling Ltd A,7
AKTB.CNS,977746,AKITA Drilling Ltd B,7
AL.CNS,978244,ALX Uranium Corp,7
ALA.CNS,24451,AltaGas Ltd,7
ALB.CNS,977752,Allbanc Split Corp II,7
ALC.CNS,42702,Algoma Central Corporation,7
ALDE.CNS,1115815,Aldebaran Resources Inc,7
ALFA.CNS,1131161,Accelerate Private Equity Alpha,7
ALG.CNS,958342,Algold Resources Ltd,7
ALLI.CNS,978707,Voltaic Minerals Corp,7
ALM.CNS,978247,Alliance Mining Corp,7
ALS.CNS,24717,Altius Minerals Corporation,7
ALT.CNS,48685,Alturas Minerals Corp,7
ALTA.CNS,49109,Altamira Gold Corp,7
ALTS.CNS,1093914,Altus Strategies PLC,7
ALV.CNS,943903,Alvopetro Energy,7
ALY.CNS,951596,AnalytixInsight Inc,7
ALYA.CNS,1097732,Alithya Group inc Class A,7
AM.CNS,25227,Academy Metals Inc,7
AMC.CNS,1162473,Arizona Metals Corp,7
AME.CNS,24719,Abacus Mining and Exploration Corp,7
AMH.CNS,1096025,Wonderfilm Media Corp,7
AMI.CNS,48695,Athabasca Minerals Inc,7
AMK.CNS,48687,American Creek Resources Ltd,7
AMM.CNS,24720,Almaden Minerals Ltd,7
AMO.CNS,978252,Altan Rio Minerals Ltd,7
AMPD.CNS,1166262,Ampd Ventures Inc,7
AMR.CNS,49219,AM Resources Corp,7
AMSX.CNS,978817,Alchemist Mining Inc,7
AMV.CNS,1162478,AMV Capital Corp,7
AMX.CNS,49116,Amex Exploration Inc,7
AMY.CNS,978254,American Manganese Inc,7
AMZ.CNS,978255,Azucar Minerals Ltd,7
AN.CNS,50544,Arena Minerals,7
AND.CNS,1156939,Andlauer Healthcare Gr,7
ANE.CNS,993910,Altan Nevada Minerals Ltd,7
ANG.CNS,49416,Angel Gold Corp,7
ANK.CNS,49005,Angkor Resources Corp,7
ANTL.CNS,989511,Antler Gold Inc,7
ANTVP.CNS,1163859,Antalis Ventures Corp,7
ANX.CNS,42712,Anaconda Mining Inc,7
ANZ.CNS,978257,Alianza Minerals Ltd,7
AOC.CNS,1073545,Advantagewon Oil Corp,7
AOI.CNS,977755,Africa Oil Corp,7
AORO.CNS,978725,Aloro Mining Corp,7
AOT.CNS,24724,Ascot Resources Ltd.,7
APC.CNS,24726,Advanced Proteome Therapeutics Corp,7
APGO.CNS,978458,Apollo Gold Corp,7
APHA.CNS,962577,Aphria Inc,7
API.CNS,978818,Appia Energy Corp,7
APL.CNS,978259,Appulse Corp,7
APLI.CNS,1162471,Appili Therapeutics Inc,7
APN.CNS,976494,Altiplano Metals Inc,7
APP.CNS,978868,Global Cannabis Applications Corp,7
APS.CNS,42942,Aptose Biosciences Inc,7
APX.CNS,49342,Sultan Minerals Inc,7
APY.CNS,42714,Anglo Pacific Group,7
AQA.CNS,42715,Aquila Resources Inc,7
AQN.CNS,24453,Algonquin Power & Utilities Corp,7
AQS.CNS,976538,Aequus Pharmaceuticals Inc,7
AQUA.CNS,1073489,Good Life Networks Inc,7
AR.CNS,24730,Argonaut Gold Inc,7
ARCH.CNS,976537,Arch Biopartners Inc,7
ARD.CNS,978261,Armada Data Corporation,7
ARE.CNS,24454,Aecon Group Inc,7
AREDBB.CNS,997170,Aecon Group Inc Deb,7
AREV.CNS,1118152,AREV Brands International Ltd,7
ARG.CNS,42709,Amerigo Resources Ltd.,7
ARH.CNS,48999,Altima Resources Ltd,7
ARIC.CNS,978653,Awale Resources Ltd,7
ARJN.CNS,1162479,Aranjin Resources Ltd,7
ARM.CNS,978819,Armada Mercantile Ltd,7
ARQ.CNS,978808,Argo Gold Inc,7
ART.CNS,49380,ARHT Media Inc,7
ARTG.CNS,1162470,Artemis Gold Inc,7
ARU.CNS,978264,Aurania Resources Ltd,7
ARX.CNS,24455,ARC Resources Ltd.,7
ASE.CNS,49012,Asante Gold Corp,7
ASG.CNS,49021,Aurora Spine Corporation,7
ASI.CNS,978253,AMI Resources Inc,7
ASIA.CNS,1118153,Asia Cannabis Corp,7
ASL.CNS,978265,Argentum Silver Corp,7
ASM.CNS,24733,Avino Silver & Gold Mines Ltd,7
ASND.CNS,49216,Ascendant Resources Inc,7
ASP.CNS,43111,Acerus Pharmaceuticals Corporation,7
ASTI.CNS,1166263,Aquarius Surgical Technologies Inc,7
AT.CNS,960788,AcuityAds Holdings Inc,7
ATA.CNS,24735,ATS Automation Tooling Systems Inc,7
ATC.CNS,24737,ATAC Resources Ltd.,7
ATDA.CNS,977759,Alimentation Couchen Tard Inc A,7
ATDB.CNS,24458,Alimentation Couche-Tard Inc,7
ATE.CNS,48689,Antibe Therapeutics Inc,7
ATH.CNS,24459,Athabasca Oil Corp,7
ATHR.CNS,1166264,Aether Catalyst Solutions Inc,7
ATI.CNS,48998,Altai Resources Inc,7
ATP.CNS,24460,Atlantic Power Corp,7
ATSX.CNS,1131162,Accelerate Enhanced Canadian Benchmark Alternative,7
ATT.CNS,978820,Abattis Bioceuticals Corp,7
ATU.CNS,48877,Altura Energy Inc,7
ATW.CNS,978266,ATW Tech Inc,7
ATX.CNS,978319,Colombia Crest Gold Corp,7
ATY.CNS,48696,Atico Mining Corporation,7
ATZ.CNS,991199,Aritzia Inc,7
AU.CNS,978267,Aurion Resources Ltd,7
AUAG.CNS,1054785,Auxico Resources Canada Inc,7
AUAU.CNS,1062564,Allegiant Gold Ltd,7
AUCU.CNS,1165857,Inflection Resources Ltd,7
AUEN.CNS,1097542,Golden Sky Minerals Corp,7
AUGBF.CNS,1162653,First Trust Cboe Vest U.S. Equity Buffer ETF - August,7
AUL.CNS,1158947,Aurelius Minerals Inc,7
AUMB.CNS,42930,1911 Gold Corp,7
AUMN.CNS,31116,Golden Minerals Company,7
AUN.CNS,24739,Aurcana Corp,7
AUP.CNS,49020,Aurinia Pharmaceuticals Inc,7
AUQ.CNS,978635,AuQ Gold Mining Inc,7
AURX.CNS,978327,Canadian Platinum Corp,7
AUSA.CNS,1096059,Australis Capital Inc,7
AUTH.CNS,993912,Austin Resources Ltd,7
AUU.CNS,24741,Gold79 Mines Ltd,7
AUX.CNS,978268,Auramex Resource Corp,7
AVCN.CNS,1156272,Avicanna Inc,7
AVCR.CNS,960812,Avricore Health Inc,7
AVG.CNS,1162475,Avidian Gold Corp,7
AVL.CNS,24743,Avalon Advanced Materials Ltd,7
AVMX.CNS,24744,Avarone Metals Inc,7
AVN.CNS,943911,Avanti Energy Inc,7
AVP.CNS,42727,Avcorp Industries Inc,7
AVU.CNS,49025,Avrupa Minerals Ltd,7
AVX.CNS,978270,Altair Resources Inc,7
AWE.CNS,978271,Thunderstruck Resources Ltd,7
AWI.CNS,48995,Advent Wireless Inc,7
AWR.CNS,978976,Shamrock Enterprises Inc,7
AWX.CNS,1072045,Sojourn Exploration Inc,7
AXE.CNS,978272,Acceleware Ltd,7
AXIS.CNS,1052966,Axis Auto Finance Inc,7
AXL.CNS,24845,Arrow Exploration Corp,7
AXM.CNS,24747,AXMIN Inc,7
AXU.CNS,24748,Alexco Resource Corp,7
AXV.CNS,978796,Axion Ventures Inc,7
AYA.CNS,48847,Aya Gold & Silver Inc,7
AYL.CNS,978822,Aylen Capital Inc,7
AYM.CNS,31120,Atalaya Mining Ltd,7
AYRA.CNS,1131381,AYR Strategies Inc Class A,7
AZ.CNS,1161493,A2Z Technologies Canada Corp,7
AZM.CNS,48778,Azimut Exploration Inc,7
AZR.CNS,978382,Azarga Metals Corp,7
AZS.CNS,1135868,Arizona Silver Exploration Inc,7
AZT.CNS,1010650,Aztec Minerals Corp,7
AZZ.CNS,43032,Azarga Uranium Corp,7
B.CNS,978275,BCM Resources Corp,7
BABY.CNS,1156555,Else Nutrition Holdings Inc,7
BAC.CNS,978823,BacTech Environmental Corp,7
BAD.CNS,24750,Badger Daylighting Ltd.,7
BAG.CNS,993914,Blind Creek Resources Ltd,7
BAMA.CNS,24466,Brookfield Asset Management Inc,7
BAMM.CNS,1096649,Body and Mind Inc,7
BARU.CNS,24861,Baru Gold Corp,7
BASE.CNS,1138376,Evolve Global Materials & Mining Enhanced Yield Hedged,7
BASEB.CNS,1138377,Evolve Global Materials & Mining Enhanced Yield Unhedged,7
BAT.CNS,24751,Batero Gold Corp,7
BAU.CNS,49388,Blue Star Gold Corp,7
BAVH.CNS,25069,Bravern Ventures Ltd,7
BAY.CNS,978276,Aston Bay Holdings Ltd,7
BB.CNS,24639,BlackBerry Ltd,7
BBB.CNS,49046,Brixton Metals Corporation,7
BBDA.CNS,977783,Bombardier Inc A,7
BBDB.CNS,24467,Bombardier Inc,7
BBLA.CNS,977784,Brampton Brick Ltd,7
BBM.CNS,1122741,Blueberries Medical Corp,7
BBR.CNS,1118168,KORP Point Ventures Inc,7
BBT.CNS,978477,Kaiyue International Inc,7
BCA.CNS,978824,Bucephalus Capital Corp,7
BCE.CNS,24469,BCE Inc,7
BCF.CNS,951599,Builders Capital Mortgage Corp,7
BCFN.CNS,1084830,Blockchain Foundry Inc,7
BCI.CNS,42991,New Look Vision Group Inc,7
BCM.CNS,24752,Bear Creek Mining Corporation,7
BCT.CNS,962579,Briacell Therapeutics Corp,7
BCU.CNS,1163810,Bespoke Capital Acquisition Corp,7
BDGC.CNS,1052967,Boundary Gold and Copper Mining Ltd,7
BDI.CNS,24754,Black Diamond Group Limited,7
BDIV.CNS,1162656,Brompton Global Dividend Growth ETF,7
BDR.CNS,978826,Bird River Resources Inc,7
BDT.CNS,24755,Bird Construction Inc,7
BE.CNS,978827,Beleave Inc,7
BEA.CNS,49408,Belmont Resources Inc,7
BEAN.CNS,1072046,Peekaboo Beans Inc,7
BEE.CNS,49375,Bee Vectoring Technologies International Inc,7
BEKB.CNS,977799,Becker Milk Co Ltd,7
BEPC.CNS,1165324,Brookfield Renewable Corp,7
BES.CNS,978506,Braille Energy Systems Inc,7
BETR.CNS,1057209,BetterLife Pharma Inc,7
BETS.CNS,1163876,i3 Interactive Inc,7
BEV.CNS,1161150,Bevcanna Enterprises Inc,7
BEW.CNS,978277,Bewhere Holdings Inc,7
BEX.CNS,48706,Benton Resources Inc,7
BFG.CNS,1166266,Bullfrog Gold Corp,7
BFIN.CNS,1162655,Brompton North American Financials Dividend ETF,7
BFINU.CNS,1152272,Brompton North American Financials Dividend,7
BGA.CNS,978280,BioNeutra Global Corp,7
BGC.CNS,1072056,Bristol Gate Concentrated Canadian Equity,7
BGDH.CNS,978281,Bullion Gold Resources Corp,7
BGF.CNS,1123420,Beauce Gold Fields Inc,7
BGRDX.CNS,1117877,Braingrid Ltd,7
BGS.CNS,1162483,Baroyeca Gold & Silver Inc,7
BGU.CNS,1072058,Bristol Gate Concentrated US Equity,7
BHC.CNS,24683,Bausch Health Companies Inc,7
BHNG.CNS,24911,Bhang Inc,7
BHR.CNS,49040,Blackheath Resources Inc,7
BHS.CNS,978284,Bayhorse Silver Inc,7
BHSC.CNS,978977,Bioharvest Sciences Inc,7
BHT.CNS,49283,Braveheart Resources Inc,7
BIGG.CNS,978806,BIG Blockchain Intelligence Group Inc,7
BILZ.CNS,978248,Ignite International Brands Ltd,7
BIO.CNS,978941,Biome Grow Inc,7
BIOV.CNS,1166851,Biovaxys Technology Corp,7
BIPC.CNS,1159411,Brookfield Infrastructure Corp,7
BIR.CNS,24472,Birchcliff Energy Ltd.,7
BITF.CNS,1156202,Bitfarms Ltd,7
BITK.CNS,48996,Blockchaink2 Corp,7
BJB.CNS,1131237,Bond Resources Inc,7
BK.CNS,977809,Canadian Banc Corp,7
BKI.CNS,42739,Black Iron Inc,7
BKLC.CNS,1162659,Invesco Senior Loan Index ETF CAD,7
BKLF.CNS,48285,PowerShares Senior Loan (CAD Hedged),7
BKLU.CNS,1162658,Invesco Senior Loan Index ETF USD,7
BKM.CNS,24760,Pacific Booker Minerals Inc,7
BKMT.CNS,1162485,BlockMint Technologies Inc,7
BKS.CNS,978830,Berkley Renewables Inc,7
BLCH.CNS,977717,Black Lion Capital Corp,7
BLCK.CNS,1073072,First Trust Indxx Innovative Transaction and Process ETF,7
BLDP.CNS,31094,Ballard Power Systems Inc,7
BLGV.CNS,42903,Belgravia Capital International Inc,7
BLLG.CNS,1166265,Blue Lagoon Resources Inc,7
BLM.CNS,978286,BluMetric Environmental Inc,7
BLN.CNS,50533,Blackline Gps,7
BLO.CNS,978832,Cannabix Technologies Inc,7
BLR.CNS,978287,Blackhawk Resource Corp,7
BLTCP.CNS,1163862,Baltic I Acquisition Corp,7
BLU.CNS,42734,BELLUS Health Inc,7
BLUE.CNS,1162482,Blue Thunder Mining Inc,7
BLX.CNS,42741,Boralex Inc,7
BME.CNS,978289,Barsele Minerals Corp,7
BMET.CNS,1162481,BeMetals Corp,7
BMEX.CNS,1162523,BMEX Gold Inc,7
BMH.CNS,978288,Bc Moly Ltd,7
BMK.CNS,24763,MacDonald Mines Exploration Ltd,7
BMM.CNS,976219,Black Mammoth Metals Corp,7
BMO.CNS,24473,Bank of Montreal,7
BMVH.CNS,49253,Bathurst Metals Corp,7
BNAU.CNS,24640,Battle North Gold Corp,7
BNC.CNS,1162657,Purpose Canadian Financial Income Fund Series ETF,7
BNCH.CNS,978313,Benchmark Metals Inc,7
BND.CNS,976794,Purpose Global Bond Fund Series ETF,7
BNE.CNS,24474,Bonterra Energy Corp,7
BNG.CNS,42735,Bengal Energy Ltd.,7
BNK.CNS,24475,Big Banc Split Corp,7
BNKR.CNS,1010865,Bunker Hill Mining Corp,7
BNS.CNS,24477,Bank of Nova Scotia,7
BOL.CNS,49042,Bold Ventures Inc,7
BOLT.CNS,1054769,Pacific Rim Cobalt Corp,7
BOS.CNS,42700,AirBoss of America Corp.,7
BP.CNS,978292,Backstageplay Inc,7
BPLI.CNS,978293,Bluedrop Performance Learning Inc,7
BPRF.CNS,1162654,Brompton Flaherty & Crumrine Investment Grade Preferred ETF,7
BPRFU.CNS,1152273,Brompton Flaherty & Crumrine Investment Grade Preferred,7
BQE.CNS,42737,BQE Water Inc,7
BR.CNS,42736,Big Rock Brewery Inc,7
BRAG.CNS,49332,Bragg Gaming Group Inc,7
BRAU.CNS,48684,Big Ridge Gold Corp,7
BRC.CNS,978260,Blackrock Gold Corp,7
BRCKU.CNS,1123488,Bellrock Brands Inc,7
BRE.CNS,42749,Brookfield Real Estate Services Inc,7
BRG.CNS,48715,Brigadier Gold Ltd,7
BRH.CNS,978834,BitRush Corp,7
BRLH.CNS,993916,Bearclaw Capital Corp,7
BRM.CNS,960789,Biorem Inc,7
BRO.CNS,986063,Barksdale Resources Corp,7
BRUH.CNS,978295,Brunswick Resources Inc,7
BRW.CNS,951616,Komet Resources Inc,7
BRY.CNS,42744,Bri-Chem Corp.,7
BRZ.CNS,49034,Bearing Lithium Corp,7
BSH.CNS,1162484,Bayshore Petroleum Corp,7
BSIH.CNS,978303,Blue Sky Energy Inc,7
BSK.CNS,978296,Blue Sky Uranium Corp,7
BSR.CNS,993918,Bluestone Resources Inc,7
BST.CNS,25222,Bessor Minerals Inc,7
BSX.CNS,40466,Belo Sun Mining Corp.,7
BTE.CNS,24479,Baytex Energy Corp,7
BTECH.CNS,996140,RewardStream Solutions Inc,7
BTI.CNS,49036,biOasis Technologies Inc,7
BTO.CNS,24480,B2Gold Corp,7
BTR.CNS,24772,BonTerra Resources Inc,7
BTRU.CNS,1057383,betterU Education Corp,7
BTT.CNS,48710,Bitterroot Resources Ltd,7
BTU.CNS,1162480,BTU Metals Corp,7
BTV.CNS,978299,BLUERUSH Media Group Corp,7
BU.CNS,31124,Burcon NutraScience Corporation,7
BUD.CNS,48923,Satori Resources Inc,7
BUF.CNS,42859,Buffalo Coal Corp,7
BUI.CNS,42752,Buhler Industries Inc,7
BULL.CNS,978907,21C Metals Inc,7
BUS.CNS,978301,Grande West Transportation Group Inc,7
BUX.CNS,978836,BioMark Diagnostics Inc,7
BUZP.CNS,1043354,Buzz Capital Inc,7
BUZZ.CNS,978482,Aura Health Inc,7
BVA.CNS,49044,Bravada Gold Corporation,7
BWELU.CNS,49149,Bluma Wellness Inc,7
BWLK.CNS,1093915,Boardwalktech Software Corp,7
BWR.CNS,48711,BWR Exploration Inc,7
BXF.CNS,976637,First Asset 1-5 Year Laddered Government Strip Bond Common,7
BXR.CNS,49041,Blue River Resources Ltd,7
BXV.CNS,1073365,Bexar Ventures Inc,7
BXXX.CNS,978910,Block X Capital Corp,7
BYD.CNS,24777,Boyd Group Income Fund,7
BYL.CNS,977847,Baylin Technologies Inc,7
BYN.CNS,49031,Banyan Gold Corp,7
BYRN.CNS,48928,Security Devices International Inc,7
BZ.CNS,978304,Benz Mining Corp,7
BZBZP.CNS,1163861,Buzbuz Capital Corp,7
C.CNS,1031143,Contact Gold Corp,7
CACB.CNS,1121216,CIBC Active Investment Grade Corporate Bond,7
CACP.CNS,1163864,Cinaport Acquisition Corp III,7
CAE.CNS,24481,CAE Inc,7
CAF.CNS,48724,Canaf Investments Inc,7
CAG.CNS,1162490,Composite Alliance Group Inc,7
CAGG.CNS,1162673,CI Yield Enhanced Canada Aggregate Bond Index ETF,7
CAGR.CNS,978533,Central African Gold Inc,7
CALI.CNS,1057242,Fincanna Capital Corp,7
CALL.CNS,1162679,Evolve US Banks Enhanced Yield Fund Hedged Units,7
CALLB.CNS,1162680,Evolve US Banks Enhanced Yield Fund UnHedged Units,7
CALLU.CNS,1162687,Evolve US Banks Enhanced Yield Fund UnHedged Units USD,7
CAMP.CNS,1052086,Canadian Goldcamps Corp,7
CANA.CNS,1097385,Cannamerica Brands Corp,7
CAND.CNS,976220,Candelaria Mining Corp,7
CANN.CNS,49374,Heritage Cannabis Holdings Corp,7
CANX.CNS,978523,CANEX Metals Inc,7
CAP.CNS,978305,Castle Peak Mining Ltd,7
CAPT.CNS,1167633,Capitan Mining Inc,7
CARS.CNS,1052305,Evolve Automobile Innovation Hedged,7
CARSB.CNS,1162671,Evolve Automobile Innovation Index Fund - UnHedged Units,7
CAS.CNS,24781,Cascades Inc,7
CASA.CNS,1111729,Casa Minerals Inc,7
CAT.CNS,1093875,CAT Strategic Metals Corp,7
CAV.CNS,42732,Camrova Resources Inc,7
CAY.CNS,49051,Cache Exploration Inc,7
CBA.CNS,49415,Champion Bear Resources Ltd.,7
CBDN.CNS,1166268,Cbd Global Sciences Inc,7
CBDT.CNS,1080118,Empower Clinics Inc,7
CBDX.CNS,1167663,Canbud Distribution Corp,7
CBE.CNS,49050,Cabo Drilling Corp.,7
CBG.CNS,978307,Chibougamau Independent Mines Inc,7
CBH.CNS,48172,iShares 1-10Yr Laddered Corporate Bond Common Class,7
CBI.CNS,48739,Colibri Resource Corp,7
CBK.CNS,978842,Copperbank Resources Corp,7
CBLT.CNS,978423,Green Swan Capital Corp,7
CBLU.CNS,1093916,Clear Blue Technologies International Inc,7
CBO.CNS,48176,iShares 1-5Yr Laddered Corporate Bond Common Class,7
CBP.CNS,978843,Certive Solutions Inc,7
CBR.CNS,978625,Cabral Gold Inc,7
CBV.CNS,978308,Cobra Venture Corp,7
CC.CNS,1166270,Core Assets Corp,7
CCA.CNS,24483,Cogeco Communications Inc,7
CCB.CNS,48722,Canada Carbon Inc,7
CCC.CNS,1097765,Delrey Metals Corp,7
CCCM.CNS,978341,C3 Metals Inc,7
CCD.CNS,978310,Cascadero Copper Corp,7
CCE.CNS,24783,Commerce Resources Corp.,7
CCHW.CNS,1129444,Columbia Care Inc,7
CCIIP.CNS,1168036,Cuspis Capital II Ltd,7
CCKH.CNS,978311,Canada Coal Inc,7
CCLA.CNS,977850,CCL Industries Inc,7
CCLB.CNS,24484,CCL Industries Inc,7
CCM.CNS,42765,Canarc Resource Corp.,7
CCO.CNS,24485,Cameco Corp,7
CCR.CNS,1118154,Green River Gold Corp,7
CCW.CNS,49348,Canada Cobalt Works Inc,7
CD.CNS,24786,Cantex Mine Development Corp,7
CDA.CNS,978312,Canuc Resources Corp,7
CDAY.CNS,1091236,Ceridian HCM Holding Inc,7
CDB.CNS,49079,Cordoba Minerals Corp,7
CDC.CNS,48720,Cadillac Ventures Inc,7
CDG.CNS,42767,Candente Gold Corp.,7
CDN.CNS,1166271,Caelan Capital Inc,7
CDPR.CNS,978877,Cerro De Pasco Resources Inc,7
CDU.CNS,31127,Cardero Resource Corp,7
CDV.CNS,24789,Cardinal Resources Ltd,7
CDVA.CNS,1096018,CordovaCann Corp,7
CDZ.CNS,48194,iShares S&P TSX Canadian Dividend Aristocrats Common Class,7
CEE.CNS,42776,Centamin PLC,7
CEFU.CNS,31129,Sprott Physical Gold and Silver Trust,7
CEG.CNS,978844,Cerro Grande Mining Corp,7
CEH.CNS,24790,Canada Energy Partners Inc,7
CEM.CNS,24791,Constantine Metal Resources Ltd,7
CEN.CNS,951633,Claren Energy Corp,7
CEP.CNS,985935,Cliffside Capital Ltd,7
CERV.CNS,42780,Cervus Equipment Corp,7
CET.CNS,24792,Cathedral Energy Services Ltd,7
CEU.CNS,24793,CES Energy Solutions Corp,7
CF.CNS,24795,Canaccord Genuity Group Inc,7
CFE.CNS,978845,Cartier Iron Corp,7
CFF.CNS,48746,Conifex Timber Inc,7
CFLX.CNS,1162676,CIBC Flexible Yield ETF (CAD-Hedged),7
CFP.CNS,24486,Canfor Corporation,7
CFW.CNS,24487,Calfrac Well Services Ltd.,7
CFX.CNS,24798,Canfor Pulp Products Inc,7
CFY.CNS,49065,Changfeng Energy Inc,7
CG.CNS,24488,Centerra Gold Inc,7
CGAA.CNS,1152295,CI First Asset Global Asset Allocation,7
CGC.CNS,1162489,Caldas Gold Corp,7
CGD.CNS,48732,Carlin Gold Corporation,7
CGG.CNS,24489,China Gold International Resources,7
CGI.CNS,42759,Canadian General Investments Ltd,7
CGL.CNS,48233,iShares Gold Bullion (CAD Hedged),7
CGLC.CNS,48234,iShares Gold Bullion (Non Hedged),7
CGM.CNS,48721,California Gold Mining Inc,7
CGN.CNS,1118155,Cognetivity Neurosciences Ltd,7
CGO.CNS,42794,Cogeco Inc,7
CGOC.CNS,1061756,Cannabis Growth Opportunity Corp,7
CGP.CNS,49081,Cornerstone Capital Resources Inc,7
CGR.CNS,48119,iShares Global Real Estate Common Class,7
CGX.CNS,24490,Cineplex Inc,7
CGXF.CNS,39055,CI First Asset Gold+ Covered Call ETF Common,7
CGY.CNS,42755,Calian Technologies Ltd,7
CHB.CNS,48274,iShares US High Yield Fixed Income (CAD Hedged) Common Class,7
CHCH.CNS,951602,CHC Student Housing Corp,7
CHM.CNS,49030,Chemistree Technology Inc,7
CHN.CNS,49066,China Education Resources Inc,7
CHNAB.CNS,1162678,CI ICBCCS S&P China 500 Index ETF Non-Hedged,7
CHOO.CNS,48947,Choom Holdings Inc,7
CHR.CNS,24491,Chorus Aviation Inc,7
CHTAH.CNS,49061,Cheetah Canyon Resources Corp,7
CHV.CNS,978803,Canada House Wellness Group Inc,7
CHW.CNS,42781,Chesswood Group Limited,7
CIA.CNS,977857,Champion Iron Ltd,7
CIC.CNS,959575,CI First Asset CanBanc Income Class ETF,7
CIF.CNS,48117,iShares Global Infrastructure Common Class,7
CIG.CNS,49270,Camarico Investment Group Ltd,7
CIGI.CNS,24541,Colliers International Group Inc Bats,7
CIM.CNS,978849,CIM International Group Inc,7
CINF.CNS,1162677,CI Global Infrastructure Private Pool - ETF C$ Series,7
CIO.CNS,978317,Central Iron Ore Ltd,7
CIX.CNS,24492,CI Financial Corp,7
CJ.CNS,943922,Cardinal Energy Ltd,7
CJRB.CNS,24493,Corus Entertainment Inc,7
CJT.CNS,42771,Cargojet Inc,7
CK.CNS,1161156,Cascadia Blockchain Group Corp,7
CKG.CNS,24806,Chesapeake Gold Corp.,7
CKI.CNS,42787,Clarke Inc,7
CKK.CNS,49080,Cordy Oilfield Services Inc,7
CL.CNS,1115770,Cresco Labs Inc,7
CLAR.CNS,1163877,Clarity Gold Corp,7
CLC.CNS,1166852,Christina Lake Cannabis Corp,7
CLF.CNS,48177,iShares 1-5Yr Laddered Government Bond Common Class,7
CLG.CNS,48173,iShares 1-10Yr Laddered Government Bond Common Class,7
CLI.CNS,958345,Clearford Water Systems Inc,7
CLIQ.CNS,24981,Alcanna Inc,7
CLR.CNS,42788,Clearwater Seafoods Incorporated,7
CLS.CNS,24495,Celestica Inc,7
CLSH.CNS,1166273,CLS Holdings USA Inc,7
CLV.CNS,978320,Canoe Mining Ventures Corp,7
CLZ.CNS,49058,Canasil Resources Inc,7
CM.CNS,24497,Canadian Imperial Bank Of Commerce,7
CMAG.CNS,1162672,CI Munro Alternative Global Growth ETF Common Units,7
CMAR.CNS,1162675,CI Marret Alternative Absolute Return Bond ETF Common Units,7
CMARU.CNS,1162686,CI Marret Alternative Absolute Return Bond ETF US$ Common Units,7
CMB.CNS,978321,CMC Metals Ltd,7
CMC.CNS,978850,Cielo Waste Solutions Corp,7
CMCE.CNS,1121217,CIBC Multifactor Canadian Equity,7
CMD.CNS,48744,Commander Resources Ltd,7
CME.CNS,978851,Canadian Metals Inc,7
CMEY.CNS,1162683,CI Marret Alternative Enhanced Yield Fund - ETF C$ Series,7
CMG.CNS,42796,Computer Modelling Group Ltd.,7
CMI.CNS,48718,C-Com Satellite Systems Inc,7
CMIL.CNS,48864,Capella Minerals Ltd,7
CML.CNS,42769,CaNickel Mining Ltd,7
CMMC.CNS,24829,Copper Mountain Mining Corp,7
CMOH.CNS,49070,Cliffmont Resources Ltd,7
CMR.CNS,48192,iShares Premium Money Market Common Class,7
CMU.CNS,978322,Comet Industries Ltd,7
CMX.CNS,25067,Chilean Metals Inc,7
CN.CNS,24810,Condor Resources Inc,7
CNC.CNS,1162486,Canada Nickel Company Inc,7
CNE.CNS,24811,Canacol Energy Ltd.,7
CNFA.CNS,1161476,Canafarma Hemp Products Corp,7
CNI.CNS,994080,Cloud Nine Education Group Ltd,7
CNNA.CNS,1117808,Cannaone Technologies Inc,7
CNO.CNS,978323,California Nanotechnologies Corp,7
CNQ.CNS,24498,Canadian Natural Resources Ltd,7
CNR.CNS,24499,Canadian National Railway Co,7
CNS.CNS,960790,Contagious Gaming Inc,7
CNT.CNS,42778,Century Global Commodities Corp,7
CNTR.CNS,1161154,Centr Brands Corp,7
CNU.CNS,42790,CNOOC Ltd ADR,7
CNX.CNS,50534,Callinex Mines,7
CO.CNS,978837,International Cobalt Corp,7
COBC.CNS,49419,Cobalt Blockchain Inc,7
CODE.CNS,978990,Codebase Ventures Inc,7
COG.CNS,1162028,Condor Gold Plc,7
COIN.CNS,24995,Coin Hodl Inc,7
COMM.CNS,1077017,BMO Global Communications,7
CONE.CNS,978698,Anglo-Canadian Mining Corp,7
COO.CNS,978326,NatureBank Asset Management Inc,7
COOL.CNS,978908,LIFESTYLE DELIVERY SYSTEMS Inc,7
COPS.CNS,943906,Focus Ventures Ltd,7
COR.CNS,48727,Camino Minerals Corporation,7
CORP.CNS,1162682,Exemplar Investment Grade Fund ETF units,7
COT.CNS,49085,Cotinga Pharmaceuticals Inc,7
COV.CNS,49084,Covalon Technologies Ltd.,7
COVE.CNS,978916,Cover Technologies Inc,7
COW.CNS,48116,iShares Global Agriculture Common Class,7
CP.CNS,24501,Canadian Pacific Railway Ltd,7
CPAU.CNS,993933,Copaur Minerals Inc,7
CPD.CNS,39024,iShares S&P/TSX Canadian Preferred Share Common Class,7
CPG.CNS,24502,Crescent Point Energy Corp.,7
CPH.CNS,42785,Cipher Pharmaceuticals Inc,7
CPI.CNS,42797,Condor Petroleum Inc,7
CPL.CNS,978328,Copper Lake Resources Ltd,7
CPMH.CNS,49095,Crystal Peak Minerals Inc,7
CPS.CNS,49068,Claim Post Resources Inc,7
CPTR.CNS,1055261,Captor Capital Corp,7
CPX.CNS,24503,Capital Power Corporation,7
CQR.CNS,978331,Conquest Resources Ltd,7
CR.CNS,24504,Crew Energy Inc,7
CRB.CNS,978332,Cariboo Rose Resources Ltd,7
CRBK.CNS,1163881,Carebook Technologies Inc,7
CRDL.CNS,1116662,Cardiol Therapeutics Inc Class A,7
CRE.CNS,24818,Critical Elements Corporation,7
CRED.CNS,1162674,CI Lawrence Park Alternative Investment Grade Credit ETF Common Units,7
CREDU.CNS,1162685,CI Lawrence Park Alternative Investment Grade Credit ETF US$ Common Units,7
CRES.CNS,1117879,Crest Resources Inc,7
CRFT.CNS,1153613,Pasha Brands Ltd,7
CRH.CNS,42807,CRH Medical Corp,7
CRL.CNS,978853,Carl Data Solutions Inc,7
CRON.CNS,962584,Cronos Group Inc,7
CROWP.CNS,1166436,Stormcrow Holdings Corp,7
CRP.CNS,977869,Ceres Global Ag Corp,7
CRRX.CNS,42777,Centric Health Corporation,7
CRS.CNS,1166269,Crestview Exploration Inc,7
CRTS.CNS,1167634,Cortus Metals Inc,7
CRU.CNS,978335,Cameo Industries Corp,7
CRUZ.CNS,48716,Cruz Cobalt Corp,7
CRV.CNS,978336,Cresval Capital Corp,7
CRVC.CNS,1166267,Cross River Ventures Corp,7
CRWN.CNS,955945,Crown Capital Partners Inc,7
CRXH.CNS,978337,Cerro Mining Corp,7
CRY.CNS,945717,Vogogo Inc,7
CS.CNS,24505,Capstone Mining Corp.,7
CSAV.CNS,1140505,CI First Asset High Interest Savings ETF,7
CSD.CNS,48272,iShares Short Duration High Income Common Class,7
CSIU.CNS,1089469,Chemesis International Inc,7
CSL.CNS,48745,Comstock Metals Ltd,7
CSM.CNS,43116,ClearStream Energy Services Inc,7
CSO.CNS,24825,Corsa Coal Corp,7
CSOCB.CNS,1163866,Canso Select Opportunities Fund,7
CSQ.CNS,49057,Canamex Gold Corp,7
CSTH.CNS,49049,CO2 Solutions Inc,7
CSTLP.CNS,1163865,Castlecap Capital Inc,7
CSTR.CNS,1137485,CryptoStar Corp,7
CSU.CNS,40463,Constellation Software Inc,7
CSWA.CNS,977872,Corby Spirit and Wine Ltd A,7
CSWB.CNS,977873,Corby Spirit and Wine Ltd B,7
CSX.CNS,49069,Clean Seed Capital Group Ltd,7
CSY.CNS,962273,First Asset Core Canadian Equity Income,7
CTA.CNS,25020,Centaurus Energy Inc,7
CTC.CNS,42760,Canadian Tire Corporation Limited,7
CTCA.CNS,24508,Canadian Tire Corp Ltd,7
CTM.CNS,48729,Canterra Minerals Corporation,7
CTN.CNS,24827,Centurion Minerals Ltd,7
CTO.CNS,978339,Circa Enterprises Inc,7
CTOC.CNS,978983,Taku Gold Corp,7
CTS.CNS,1123081,Converge Technology Solutions Corp,7
CTUH.CNS,977875,Le Chateau Inc,7
CTX.CNS,969129,Crescita Therapeutics Inc,7
CTZ.CNS,978340,NamSys Inc,7
CU.CNS,24509,Canadian Utilities Limited,7
CUB.CNS,1141770,Cubicfarm Systems Corp,7
CUBE.CNS,978974,CellCube Energy Storage Systems Inc,7
CUD.CNS,48278,iShares US Dividend Growers (CAD Hedged) Common Class,7
CUDA.CNS,24963,Cuda Oil and Gas Inc,7
CUI.CNS,24828,Currie Rose Resources Inc,7
CUPU.CNS,977880,Caribbean Utilities Co Ltd,7
CUR.CNS,1073467,NxGold Ltd,7
CURA.CNS,1097607,Curaleaf Holdings Inc,7
CURE.CNS,1118156,Biocure Technology Inc,7
CUSN.CNS,25139,Cornish Metals Inc,7
CUSPP.CNS,1163863,Cuspis Capital Ltd,7
CUU.CNS,24831,Copper Fox Metals Inc,7
CUX.CNS,977881,Canadian Utilities Ltd,7
CVB.CNS,978343,Compass Gold Corp,7
CVD.CNS,39025,iShares Convertible Bond Common Class,7
CVE.CNS,24512,Cenovus Energy Inc,7
CVG.CNS,42786,Clairvest Group Inc,7
CVGR.CNS,49161,Icon Exploration Inc,7
CVM.CNS,991157,Big Bar Resources Corp,7
CVR.CNS,978345,Canadian Oil Recovery & Remediation Enterprises Ltd,7
CVV.CNS,42763,CanAlaska Uranium Ltd,7
CVX.CNS,49064,Cematrix Corporation,7
CWB.CNS,24513,Canadian Western Bank,7
CWC.CNS,24833,CWC Well Services Corp.,7
CWEB.CNS,1096017,Charlotte's Web Holdings Inc,7
CWL.CNS,42754,Caldwell Partners International Inc,7
CWM.CNS,48749,Crown Gold Corporation,7
CWRK.CNS,1115818,ICOX Innovations Inc,7
CWV.CNS,24834,Crown Point Energy Inc,7
CWW.CNS,48101,iShares Global Water Common Class,7
CWX.CNS,24835,CanWel Building Materials Group Ltd,7
CXAH.CNS,993688,Consolidated HCI Holdings Corp,7
CXB.CNS,49052,Calibre Mining Corp,7
CXC.CNS,978854,CMX Gold and Silver Corp,7
CXF.CNS,39026,First Asset Canadian Convertible Bond Common Class,7
CXI.CNS,42812,Currency Exchange International Corp,7
CXXI.CNS,1093876,C21 Investments Inc,7
CYB.CNS,42815,Cymbria Corporation,7
CYBR.CNS,1052306,Evolve Cyber Security Hedged,7
CYBRB.CNS,1162688,Evolve Cyber Security Index Fund - UnHedged Units,7
CYBRU.CNS,1162681,Evolve Cyber Security Index Fund ETF,7
CYF.CNS,978350,Canyon Creek Food Company Ltd,7
CYH.CNS,48118,iShares Global Monthly Dividend (CAD Hedged) Common Class,7
CYL.CNS,1052089,Ceylon Graphite Corp,7
CYM.CNS,42814,Cymat Technologies Ltd.,7
CYON.CNS,1167635,Cyon Exploration Ltd,7
CYP.CNS,48751,Cypress Development Corp.,7
CYX.CNS,49053,Calyx Bio-Ventures Inc,7
CZO.CNS,943850,Ceapro,7
CZZ.CNS,1162487,Cleghorn Minerals Ltd,7
DAC.CNS,978689,3TL Technologies Corp,7
DAL.CNS,993923,Dalmac Energy Inc,7
DAN.CNS,24842,Arianne Phosphate Inc,7
DANC.CNS,1121225,Desjardins Alt Long/Short Eq Market Neutral,7
DAU.CNS,978352,Desert Gold Ventures Inc,7
DB.CNS,1162491,Decibel Cannabis Company Inc,7
DBG.CNS,49092,Doubleview Capital Corp.,7
DBO.CNS,42817,D-Box Technologies Inc,7
DCA.CNS,24516,Dundee Corp,7
DCBO.CNS,1162029,Docebo Inc,7
DCC.CNS,1162692,Desjardins 1-5 Year Laddered Canadian Corporate Bond Index ETF,7
DCG.CNS,1162691,Desjardins 1-5 Year Laddered Canadian Government Bond Index ETF,7
DCM.CNS,24846,Data Communications Management Ltd,7
DCMC.CNS,1162494,Dore Copper Mining Corp,7
DCOP.CNS,978348,District Copper Corp,7
DCP.CNS,1162700,Desjardins Canadian Preferred Share Index ETF,7
DCS.CNS,1162696,Desjardins Canadian Short Term Bond Index ETF,7
DCSI.CNS,1166276,Direct Communication Solutions Inc,7
DCU.CNS,1162701,Desjardins Canadian Universe Bond Index ETF,7
DCY.CNS,49090,Discovery-Corp Enterprises Inc,7
DDI.CNS,978857,Debut Diamonds Inc,7
DE.CNS,960793,Decisive Dividend Corp,7
DEAL.CNS,986284,Playgon Games Inc,7
DEC.CNS,48752,Decade Resources Ltd,7
DEEP.CNS,1117880,DeepRock Minerals Inc,7
DEF.CNS,978354,Defiance Silver Corp,7
DEFN.CNS,1162492,Defense Metals Corp,7
DELC.CNS,1167664,Delic Holdings Inc,7
DELX.CNS,1162493,DelphX Capital Markets Inc,7
DEX.CNS,1079935,Almadex Minerals Ltd,7
DF.CNS,977892,Dividend 15 Split Corp II,7
DFC.CNS,1162698,Desjardins Canada Multifactor - Controlled Volatility ETF,7
DFE.CNS,1162702,Desjardins Emerging Markets Multifactor-Controlled Volatility ETF,7
DFLY.CNS,1166274,Draganfly Inc,7
DFN.CNS,977894,Dividend 15 Split Corp,7
DFR.CNS,48756,Diamond Fields Resources Inc,7
DFU.CNS,1162703,Desjardins USA Multifactor - Controlled Volatility ETF,7
DG.CNS,49015,Dixie Gold Inc,7
DGC.CNS,24517,Detour Gold Corporation,7
DGHI.CNS,1057141,Digihost Technology Inc,7
DGO.CNS,48761,Durango Resources Inc,7
DGR.CNS,1072333,WisdomTree U.S. Quality Dividend Growth,7
DGRB.CNS,1162704,CI WisdomTree U.S. Quality Dividend Growth Index ETF Non-Hedged,7
DGRC.CNS,1161799,CI WisdomTree Canada Quality Dividend Growth Index ETF,7
DGS.CNS,977896,Dividend Growth Split Corp,7
DGTL.CNS,1152255,DGTL Holdings Inc,7
DHC.CNS,978858,Deer Horn Capital Inc,7
DHR.CNS,978355,Discovery Harbour Resources Corp,7
DIA.CNS,978356,Margaret Lake Diamonds Inc,7
DIAM.CNS,43071,Shore Gold Inc,7
DIGI.CNS,1131236,Digicrypts Blockchain Solutions Inc,7
DIIA.CNS,977899,Dorel Industries Inc,7
DIIB.CNS,24519,Dorel Industries Inc,7
DISC.CNS,1162693,BMO Global Consumer Discretionary Hedged to CAD Index ETF,7
DIV.CNS,942593,Diversified Royalty Corp,7
DIVS.CNS,1162690,Evolve Active Canadian Preferred Share Fund,7
DJI.CNS,960794,Dajin Resources Corp,7
DKL.CNS,960787,Decklar Resources Inc,7
DLP.CNS,1163867,MG Capital Corp,7
DLR.CNS,39027,Horizons U.S. Dollar Currency ETF,7
DLRU.CNS,48096,Horizons U.S. Dollar Currency ETF,7
DLTA.CNS,24917,Delta Resources Ltd,7
DLVH.CNS,978357,DV Resources Ltd,7
DM.CNS,1052632,Datametrex AI Ltd,7
DME.CNS,24729,Desert Mountain Energy Corp,7
DMGI.CNS,1062861,Dmg Blockchain Solutions Inc,7
DMI.CNS,50521,Diamcor Mining,7
DML.CNS,24520,Denison Mines Corp,7
DMR.CNS,978358,Damara Gold Corp,7
DMX.CNS,49142,Mk2 Ventures Ltd,7
DN.CNS,978802,Delta 9 Cannabis Inc,7
DND.CNS,1164007,Dye & Durham Ltd,7
DNG.CNS,42827,Dynacor Gold Mines Inc,7
DNI.CNS,49087,DNI Metals Inc,7
DNT.CNS,24851,Candente Copper Corp,7
DOC.CNS,1118172,CloudMD Software & Services Inc,7
DOL.CNS,24521,Dollarama Inc,7
DOO.CNS,42751,BRP Inc,7
DOS.CNS,49089,Dios Exploration Inc,7
DOSE.CNS,1117881,Rapid Dose Therapeutics Corp,7
DPM.CNS,24522,Dundee Precious Metals Inc,7
DQD.CNS,1162689,CI WisdomTree U.S. Quality Dividend Growth Variably Hedged Index ETF,7
DQI.CNS,1162699,CI WisdomTree International Quality Dividend Growth Variably Hedged Index ETF,7
DR.CNS,24854,Medical Facilities Corporation,7
DRFE.CNS,1123708,Desjardins RI Emerging Markets Multifactor - Low CO2,7
DRFG.CNS,1123707,Desjardins RI Global Multifactor FFR Free,7
DRM.CNS,40901,Dream Unlimited Corp,7
DRT.CNS,44477,Dirtt Environmen,7
DRX.CNS,42694,ADF Group Inc,7
DS.CNS,977902,Dividend Select 15 Corp,7
DSG.CNS,24856,Descartes Systems Group Inc,7
DSM.CNS,24857,Deep South Resources Inc,7
DST.CNS,978859,Dundee Sustainable Technologies Inc,7
DSV.CNS,32455,Discovery Metals Corp,7
DSY.CNS,978361,Destiny Media Technologies Inc,7
DUROP.CNS,1155948,Duro Metals Inc,7
DURP.CNS,1152993,Daura Capital Corp,7
DV.CNS,48758,Dolly Varden Silver Corporation,7
DVG.CNS,958346,Divergent Energy Services Corp,7
DWR.CNS,1166275,Dominion Water Reserves Corp,7
DWS.CNS,48755,Diamond Estates Wines & Spirits Inc,7
DXA.CNS,978366,Doxa Energy Ltd,7
DXB.CNS,1073080,Dynamic iShares Active Tactical Bond,7
DXC.CNS,1073075,Dynamic Active Canadian Dividend ETF,7
DXF.CNS,1073077,Dynamic iShares Active Global Fincl Services,7
DXG.CNS,1163039,Dynamic Active Global Dividend ETF,7
DXIH.CNS,31131,Dxi Energy Inc,7
DXM.CNS,48146,First Asset Morningstar Canada Dividend Target 30 Common Class,7
DXN.CNS,1162695,Dynamic Active Global Infrastructure ETF,7
DXO.CNS,1073079,Dynamic Active Crossover Bond ETF,7
DXP.CNS,1029221,Dynamic iShares Active Preferred Shares,7
DXT.CNS,42898,Dexterra Group Inc,7
DXU.CNS,1073076,Dynamic Active U.S. Dividend ETF,7
DXV.CNS,1073151,Dynamic Active Investment Grade Floating Rate ETF,7
DXW.CNS,1162694,Dynamic Active International Dividend ETF,7
DXX.CNS,978367,DXSTORM.com Inc,7
DXZ.CNS,1073078,Dynamic iShares Active U.S. Mid-Cap,7
DYA.CNS,49094,DynaCERT Inc,7
DYG.CNS,978368,Dynasty Gold Corp,7
E.CNS,42840,Enterprise Group Inc,7
EAC.CNS,978861,Earth Alive Clean Technologies Inc,7
EAM.CNS,48764,East Africa Metals Inc,7
EARN.CNS,1162710,Evolve Active Global Fixed Income Fund,7
EAST.CNS,997930,Harbour Star Capital Inc,7
EASY.CNS,978884,Speakeasy Cannabis Club Ltd,7
EAT.CNS,978862,Nutritional High International Inc,7
EATS.CNS,1167666,Eat Beyond Global Holdings Inc,7
EAU.CNS,1093917,Engineer Gold Mines Ltd,7
EBM.CNS,960795,Eastwood Bio-Medical Canada Inc,7
ECC.CNS,24862,Ethos Gold Corp,7
ECM.CNS,980225,Ecolomondo Corp,7
ECN.CNS,991134,ECN Capital Corp,7
ECO.CNS,40483,EcoSynthetix Inc,7
ECR.CNS,48733,Cartier Resources Inc,7
ECT.CNS,1072007,Ellipsiz Communications Ltd,7
EDDY.CNS,978714,Edison Cobalt Corp,7
EDG.CNS,978370,Endurance Gold Corp,7
EDGE.CNS,1075517,Evolve Innovation Index Fund,7
EDGM.CNS,1166277,Edgemont Gold Corp,7
EDR.CNS,24524,Endeavour Silver Corp.,7
EDT.CNS,43081,Spectral Med Inc,7
EDV.CNS,40484,Endeavour Mining Corp,7
EDWH.CNS,24865,Edgewater Exploration Ltd,7
EFH.CNS,42831,Echelon Financial Holdings Inc,7
EFL.CNS,42833,Electrovaya Inc,7
EFN.CNS,40485,Element Fleet Management Corp,7
EFR.CNS,42838,Energy Fuels Inc,7
EFX.CNS,24525,Enerflex Ltd.,7
EGA.CNS,49424,Eagle Graphite Inc,7
EGDH.CNS,24866,Energold Drilling Corp.,7
EGIF.CNS,1162708,Exemplar Growth and Income Ser ETF,7
EGLD.CNS,1162495,Eclipse Gold Mining Corp,7
EGLX.CNS,1118113,Enthusiast Gaming Holdings Inc,7
EGM.CNS,24933,Engold Mines Inc,7
EGTI.CNS,1167900,EYEFI Group Technologies Inc,7
EHC.CNS,1093873,Eviana Health Corp,7
EHE.CNS,1030956,WisdomTree Europe Hedged Equity,7
EHEB.CNS,1162711,CI WisdomTree Europe Hedged Equity Index ETF Non-Hedged,7
EHT.CNS,960796,Enerdynamic Hybrid Technologies Corp,7
EI.CNS,1166278,Eurogas International Inc,7
EIF.CNS,40486,Exchange Income Corporation,7
EIL.CNS,48770,Empire Industries Ltd,7
EKG.CNS,49062,CardioComm Solutions Inc,7
EL.CNS,951605,Engagement Labs Inc,7
ELC.CNS,48676,Elysee Development Corp,7
ELD.CNS,24527,Eldorado Gold Corp,7
ELE.CNS,50522,Elemental Royalties Corp,7
ELEC.CNS,1163868,Electric Royalties Ltd,7
ELEF.CNS,43035,Silver Elephant Mining Corp,7
ELF.CNS,42832,E-L Financial Corporation Limited,7
ELM.CNS,978372,Element Lifestyle Retirement Inc,7
ELN.CNS,49425,El Nino Ventures Inc,7
ELO.CNS,978373,Eloro Resources Ltd,7
ELR.CNS,31132,Eastern Platinum Limited,7
ELV.CNS,976780,PowerShares S&P Emerging Markets Low Volatility,7
ELXR.CNS,986069,Elixxer Ltd,7
ELY.CNS,48767,Ely Gold Royalties Inc,7
EMA.CNS,24528,Emera Incorporated,7
EMER.CNS,1118157,Emergia Inc,7
EMH.CNS,49103,Emerald Health Therapeutics Inc,7
EMM.CNS,25243,Giyani Metals Corp,7
EMN.CNS,1097539,Euro Manganese Inc,7
EMO.CNS,49102,Emerita Resources Corp,7
EMPA.CNS,24529,Empire Company Ltd,7
EMR.CNS,48768,Emgold Mining Corp,7
EMVB.CNS,1162713,CI WisdomTree Emerging Markets Dividend Index ETF,7
EMX.CNS,24868,EMX Royalty Corp,7
ENA.CNS,24869,Enablence Technologies Inc,7
ENB.CNS,24530,Enbridge Inc,7
ENBI.CNS,1167665,Entheon Biomedical Corp,7
ENDR.CNS,50525,Enduro Metals Corp,7
ENGH.CNS,42839,Enghouse Systems Ltd,7
ENRG.CNS,1162498,New Energy Metals Corp,7
ENS.CNS,1091237,E Split Corp Class A,7
ENTHH.CNS,978720,Waterfront Capital Corp,7
ENW.CNS,49107,EnWave Corporation,7
EOG.CNS,50535,Eco Atlantic Oil & Gas Ltd,7
EOM.CNS,24873,Eco Oro Minerals Corp,7
EOX.CNS,24875,Euromax Resources Ltd,7
EP.CNS,978375,Empire Metals Corp,7
EPIC.CNS,978508,Morgan Resources Corp,7
EPL.CNS,24876,Eagle Plains Resources Ltd.,7
EPOH.CNS,24877,Encanto Potash Corp,7
EPY.CNS,978936,ePlay Digital Inc,7
EQ.CNS,42841,EQ Inc,7
EQB.CNS,42842,Equitable Group Inc,7
EQL.CNS,1162706,Invesco S&P 500 Equal Weight Index ETF CAD Units,7
EQLF.CNS,1162717,Invesco S&P 500 Equal Weight Index ETF CAD Hedged Units,7
EQLU.CNS,1162718,Invesco S&P 500 Equal Weight Index ETF USD Units,7
EQTY.CNS,969134,Equity Metals Corp,7
EQX.CNS,951615,Equinox Gold Corp,7
ERA.CNS,943853,Elcora Advanced Materials Corp,7
ERD.CNS,42844,Erdene Resource Development Corp,7
ERF.CNS,24531,Enerplus Corporation,7
ERO.CNS,1096521,Ero Copper Corp,7
ERTH.CNS,49411,EarthRenew Inc,7
ESG.CNS,1162705,Invesco S&P 500 ESG Index ETF,7
ESGA.CNS,1162714,BMO MSCI Canada ESG Leaders Index ETF,7
ESGB.CNS,1162707,BMO ESG Corporate Bond Index ETF,7
ESGE.CNS,1162709,BMO MSCI EAFE ESG Leaders Index ETF,7
ESGF.CNS,1162712,BMO ESG US Corporate Bond Hedged to CAD Index ETF,7
ESGG.CNS,1162715,BMO MSCI Global ESG Leaders Index ETF,7
ESGW.CNS,978384,ESG Global Impact Capital Inc,7
ESGY.CNS,1162716,BMO MSCI USA ESG Leaders Index ETF,7
ESI.CNS,24532,Ensign Energy Services Inc,7
ESN.CNS,24880,Essential Energy Services Ltd.,7
ESNR.CNS,1167667,E79 Resources Corp,7
ESR.CNS,24983,Esrey Energy Ltd,7
ESU.CNS,25263,EEStor Corporation,7
ESVH.CNS,48763,ESI Environmental Sensors Inc,7
ESX.CNS,1162496,Essex Minerals Inc,7
ET.CNS,42847,Evertz Technologies Limited,7
ETF.CNS,978380,Eastfield Resources Ltd,7
ETG.CNS,31134,Entree Resources Ltd,7
ETHI.CNS,1123324,Horizons Global Sustainability Leaders Index ETF,7
ETI.CNS,1052604,Enviroleach Technologies Inc,7
ETMC.CNS,1162497,Savannah Gold Corp,7
ETP.CNS,976699,First Trust Global Risk Managed Income Common,7
ETPA.CNS,976698,First Trust Global Risk Managed Income Advisor,7
ETR.CNS,1130830,Etruscus Resources Corp,7
ETX.CNS,42846,Etrion Corporation,7
EU.CNS,48986,enCore Energy Corp,7
EUR.CNS,976689,First Trust AlphaDEX European Dividend Common,7
EV.CNS,49111,Erin Ventures Inc,7
EVE.CNS,978344,Eve & Co Inc,7
EVER.CNS,1153097,Evergold Corp,7
EVG.CNS,42848,Evolving Gold Corp,7
EVT.CNS,977936,Economic Investment Trust Ltd,7
EVX.CNS,25221,European Electric Metals Inc,7
EW.CNS,49097,East West Petroleum Corp,7
EWK.CNS,962580,Earthworks Industries Inc,7
EWS.CNS,24884,Environmental Waste International,7
EXE.CNS,24533,Extendicare Inc,7
EXF.CNS,24885,EXFO Inc,7
EXG.CNS,24776,ExGen Resources Inc,7
EXM.CNS,1127192,Exmceuticals Inc,7
EXN.CNS,42850,Excellon Resources Inc,7
EXP.CNS,978511,Viridium Pacific Group Ltd,7
EXRO.CNS,1043358,Exro Technologies Inc,7
F.CNS,986070,Fiore Gold Ltd,7
FA.CNS,998169,Fountain Asset Corp,7
FAF.CNS,1123109,Fire & Flower Holdings Corp,7
FAI.CNS,976641,First Asset Active Utility and Infrastructure Common,7
FANS.CNS,1163099,Fansunite Entertainment Inc,7
FAO.CNS,976639,CI First Asset Active Credit ETF Common Units,7
FAOU.CNS,976640,First Asset Active Credit Common USD,7
FAP.CNS,42690,Aberdeen Asia-Pacific Income Investment Company Ltd,7
FAR.CNS,42858,Foraco International SA,7
FARM.CNS,986072,Deveron UAS Corp,7
FAT.CNS,978865,Far Resources Ltd,7
FBE.CNS,1162738,CI First Asset Canadian Buyback Index ETF,7
FBF.CNS,978387,Fab Form Industries Ltd,7
FBU.CNS,1162731,CI First Asset U.S. Buyback Index ETF,7
FC.CNS,42855,Firm Capital Mortgage Invest Corp,7
FCAU.CNS,978364,Firm Capital American Realty Partners Corp,7
FCC.CNS,991158,First Cobalt Corp,7
FCCB.CNS,1162726,Fidelity Systematic Canadian Bond Index ETF,7
FCCD.CNS,1096224,Fidelity Canadian High Dividend Index ETF,7
FCCM.CNS,1162747,Fidelity Canadian Momentum Index ETF,7
FCCV.CNS,1162743,Fidelity Canadian Value Index ETF,7
FCF.CNS,951601,FCF Capital Inc,7
FCGB.CNS,1162720,Fidelity Global Core Plus Bond ETF,7
FCGI.CNS,1162736,Fidelity Global Monthly High Income ETF,7
FCHH.CNS,1162734,Fidelity Systematic U.S. High Yield Bond Currency Neutral ETF,7
FCHY.CNS,1162725,Fidelity Systematic U.S. High Yield Bond ETF,7
FCID.CNS,1096221,Fidelity International High Dividend Index ETF,7
FCIG.CNS,1162751,Fidelity Global Investment Grade Bond ETF,7
FCIM.CNS,1162750,Fidelity International Momentum Index ETF,7
FCIV.CNS,1162746,Fidelity International Value Index ETF,7
FCMH.CNS,1162749,Fidelity U.S. Momentum Currency Neutral Index ETF,7
FCMI.CNS,1162735,Fidelity Canadian Monthly High Income ETF,7
FCMO.CNS,1162748,Fidelity U.S. Momentum Index ETF,7
FCO.CNS,1162501,Fabled Copper Corp,7
FCRH.CNS,1162733,Fidelity U.S. Dividend for Rising Rates Currency Neutral Index ETF,7
FCRR.CNS,1096218,Fidelity U.S. Dividend for Rising Rates Index ETF,7
FCSB.CNS,1162721,Fidelity Canadian Short Term Corporate Bond ETF,7
FCU.CNS,49124,Fission Uranium Corp,7
FCUD.CNS,1096219,Fidelity U.S. High Dividend Index ETF,7
FCUH.CNS,1096220,Fidelity U.S. High Dividend Currency Neutral Index ETF,7
FCUL.CNS,1121250,Fidelity U.S. Low Volatility Index,7
FCUQ.CNS,1121249,Fidelity U.S. High Quality Index,7
FCUV.CNS,1162744,Fidelity U.S. Value Index ETF,7
FCVH.CNS,1162745,Fidelity U.S. Value Currency Neutral Index ETF,7
FD.CNS,1158838,Facedrive Inc,7
FDE.CNS,976687,First Trust AlphaDEX Emerging Market Dividend CAD Hedged Common,7
FDI.CNS,25205,Findev Inc,7
FDM.CNS,978882,Fandom Sports Media,7
FDV.CNS,976638,CI First Asset Active Canadian Dividend ETF Common,7
FE.CNS,48675,First Energy Metals Ltd,7
FEC.CNS,24625,Frontera Energy Corp,7
FENX.CNS,1118158,FenixOro Gold Corp,7
FEO.CNS,49246,Oceanic Iron Ore Corp,7
FEX.CNS,49418,Fjordland Exploration Inc,7
FF.CNS,962581,First Mining Gold Corp,7
FFH.CNS,24536,Fairfax Financial Holdings Limited,7
FFN.CNS,948389,North American Financial 15,7
FFNT.CNS,978262,Cannex Capital Holdings Inc,7
FFOX.CNS,1117809,Firefox Gold Corp,7
FFP.CNS,978389,Consolidated Firstfund Capital Corp,7
FFT.CNS,978812,Future Farm Technologies Inc,7
FG.CNS,978390,Falcon Gold Corp,7
FGB.CNS,976682,First Asset Short Term Government Bond Class Redeemable,7
FGC.CNS,49127,Frontline Gold Corporation,7
FGD.CNS,943930,First Global Data,7
FGFL.CNS,1163879,First Growth Funds Ltd,7
FGO.CNS,1162722,CI First Asset Enhanced Government Bond ETF,7
FHB.CNS,976653,First Asset European Bank,7
FHC.CNS,976691,First Trust AlphaDEX US Consumer Staples,7
FHD.CNS,976690,First Trust AlphaDEX US Consumer Discretionary,7
FHE.CNS,976693,First Trust AlphaDEX US Energy,7
FHF.CNS,976694,First Trust AlphaDEX US Financial,7
FHG.CNS,976696,First Trust AlphaDEX US Industrials,7
FHH.CNS,976695,First Trust AlphaDEX US Health Care,7
FHHF.CNS,1162753,First Trust AlphaDEX � U.S. Health Care Sector Index ETF Hedg,7
FHI.CNS,1162737,CI First Asset Health Care Giants Covered Call ETF Common Units,7
FHM.CNS,997300,First Trust Emerging Markets Small Cap AlphaDEX  Fund,7
FHQ.CNS,976697,First Trust AlphaDEX US Technology,7
FIE.CNS,48242,iShares Canadian Financial Monthly Income Common Class,7
FIG.CNS,978040,First Asset Investment Grade Bond,7
FIGU.CNS,1057107,First Asset Investment Grade Bond,7
FIHU.CNS,945162,Fairfax India Holdings Corp,7
FIND.CNS,1162500,Baselode Energy Corp,7
FINT.CNS,1162740,First Trust International Capital Strength ETF,7
FIOR.CNS,978917,Citation Growth Corp,7
FIRE.CNS,978971,Supreme Cannabis Company Inc,7
FISH.CNS,1057352,Sailfish Royalty Corp,7
FKM.CNS,978393,Fokus Mining Corp,7
FL.CNS,951609,Frontier Lithium Inc,7
FLAM.CNS,1123168,Franklin FTSE U.S.,7
FLB.CNS,1162739,CI First Asset Long Duration Fixed Income ETF,7
FLBA.CNS,1162742,Franklin Liberty Core Balanced ETF,7
FLCD.CNS,1123167,Franklin FTSE Canada All Cap,7
FLCI.CNS,1162729,Franklin Liberty Canadian Investment Grade Corporate ETF,7
FLCP.CNS,1141829,Franklin Liberty Core Plus Bond ETF,7
FLDM.CNS,1162727,Franklin LibertyQT International Equity Index ETF,7
FLEM.CNS,1062020,Franklin LibertyQT Emerging Markets Index ETF,7
FLGA.CNS,1162728,Franklin Liberty Global Aggregate Bond ETF (CAD-Hedged),7
FLGD.CNS,1062019,Franklin LibertyQT Global Dividend Index ETF,7
FLI.CNS,976685,CI First Asset U.S. & Canada Lifeco Income ETF Common,7
FLJA.CNS,1123170,Franklin FTSE Japan ETF,7
FLOT.CNS,978010,Redwood Floating Rate Income Fund Class A,7
FLOTU.CNS,978011,Purpose Floating Rate Income Fund Class U,7
FLRM.CNS,1162730,Franklin Liberty Risk Managed Canadian Equity ETF,7
FLSD.CNS,1141830,Franklin Liberty Short Duration Bond ETF,7
FLT.CNS,1057353,Drone Delivery Canada Corp,7
FLUI.CNS,1162732,Franklin Liberty U.S. Investment Grade Corporate ETF (CAD-Hedged),7
FLUR.CNS,1123169,Franklin FTSE Europe ex U.K.,7
FLUS.CNS,1162724,Franklin LibertyQT U.S. Equity Index ETF,7
FLWR.CNS,1096196,Flowr Corp,7
FLY.CNS,24718,FLYHT Aerospace Solutions Ltd,7
FLYY.CNS,978230,Intellaequity Inc,7
FM.CNS,24537,First Quantum Minerals Ltd,7
FMAN.CNS,1166279,Freeman Gold Corp,7
FMC.CNS,24889,Forum Energy Metals Corp,7
FMM.CNS,24894,Full Metal Minerals Ltd,7
FMN.CNS,49339,Fidelity Minerals Corp,7
FMS.CNS,24895,Focus Graphite Inc,7
FN.CNS,42856,First National Financial Corp,7
FNAU.CNS,1043356,Four Nines Gold Inc,7
FNC.CNS,24896,Fancamp Exploration Ltd.,7
FNQ.CNS,974366,Fineqia International Inc,7
FNR.CNS,24897,49 North Resources Inc,7
FNV.CNS,24538,Franco-Nevada Corporation,7
FO.CNS,24898,Falcon Oil & Gas Ltd.,7
FOGX.CNS,1118159,FogChain Corp,7
FOM.CNS,24899,Foran Mining Corporation,7
FONE.CNS,978675,Flower One Holdings Inc,7
FOOD.CNS,978518,Goodfood Market Corp,7
FOR.CNS,1162499,Fortune Bay Corp,7
FORT.CNS,1130888,Fortress Blockchain Corp,7
FORZ.CNS,43007,Oryx Petroleum Corporation Limited,7
FOUR.CNS,1104659,Horizons Industry 4.0 Index ETF,7
FOX.CNS,978867,Fox River Resources Corp,7
FP.CNS,42863,FP Newspapers Inc,7
FPC.CNS,49119,Falco Resources Ltd,7
FPR.CNS,1030934,First Asset Preferred Share,7
FPX.CNS,24900,FPX Nickel Corp,7
FQC.CNS,980360,First Asset MSCI Canada Quality,7
FR.CNS,24539,First Majestic Silver Corp,7
FRE.CNS,978583,Palisades Ventures Inc,7
FRI.CNS,978395,Freeport Resources Inc,7
FRII.CNS,996061,Freshii Inc,7
FRMP.CNS,1163869,Freeform Capital Partners Inc,7
FRU.CNS,24540,Freehold Royalties Ltd.,7
FRX.CNS,42695,Fennec Pharmaceuticals Inc,7
FSB.CNS,1052307,First Asset Enhanced Short Duration Bond,7
FSBU.CNS,1052384,CI First Asset Enhanced Short Duration Bond ETF USD,7
FSF.CNS,980361,First Asset Global Financial Sector,7
FSL.CNS,976700,First Trust Senior Loan Common,7
FSLA.CNS,1162754,First Trust Senior Loan ETF (CAD-Hedged) Advisor,7
FSR.CNS,1162723,First Trust Dorsey Wright US Sector Rotation Hedged,7
FST.CNS,1031015,First Trust Canadian Capital Strength,7
FSTA.CNS,1162752,First Trust Canadian Capital Strength Advisor,7
FSV.CNS,953907,FirstService Corp,7
FSX.CNS,1161061,Fosterville South Exploration Ltd,7
FSY.CNS,42861,Forsys Metals Corp.,7
FSZ.CNS,42853,Fiera Capital Corporation,7
FT.CNS,42862,Fortune Minerals Limited,7
FTB.CNS,976703,First Trust Tactical Bond,7
FTEC.CNS,48930,SelectCore Ltd,7
FTG.CNS,42854,Firan Technology Group Corporation,7
FTI.CNS,49118,FTI Foodtech International Inc,7
FTJ.CNS,986064,Fort St James Nickel Corp,7
FTN.CNS,977955,Financial 15 Split Corp,7
FTRP.CNS,1166853,Field Trip Health Ltd,7
FTS.CNS,24542,Fortis Inc,7
FTT.CNS,24543,Finning International Inc,7
FTU.CNS,977960,US Financial 15 Split Corp,7
FUD.CNS,976692,First Trust AlphaDEX US Dividend Common,7
FUM.CNS,997581,First Asset US Equity Multi Factor,7
FUND.CNS,1056047,Katipult Technology Corp,7
FURY.CNS,951597,Fury Gold Mines Ltd,7
FUSE.CNS,49395,Fuse Cobalt Inc,7
FUU.CNS,50523,Fission 3.0 Corp,7
FV.CNS,48780,Firestone Ventures Inc,7
FVAN.CNS,978309,First Vanadium Corp,7
FVI.CNS,24544,Fortuna Silver Mines Inc,7
FVL.CNS,42864,Freegold Ventures Limited,7
FW.CNS,24713,LOGiQ Asset Management Inc,7
FWM.CNS,1163878,Flow Metals Corp,7
FWZ.CNS,1011878,Fireweed Zinc Ltd,7
FXC.CNS,978876,Fax Capital Corp,7
FXM.CNS,48149,First Asset Morningstar Canada Value Common Class,7
FYL.CNS,993927,Finlay Minerals Ltd,7
GABY.CNS,1097386,Gaby Inc,7
GAIA.CNS,1166286,Gaia Grow Corp,7
GAL.CNS,960797,Galantas Gold Corp,7
GAME.CNS,993227,Engine Media Holdings Inc,7
GARH.CNS,978398,Green Arrow Resources Inc,7
GASX.CNS,25083,Ngx Energy International Corp,7
GAU.CNS,24967,Galiano Gold Inc,7
GB.CNS,993928,Ginger Beef Corp,7
GBC.CNS,978870,GreenBank Capital Inc,7
GBE.CNS,978400,Goldbelt Empires Ltd,7
GBLC.CNS,1117883,Graph Blockchain Inc,7
GBLT.CNS,978329,GBLT Corp,7
GBML.CNS,43048,Global Battery Metals Ltd,7
GBR.CNS,978402,Great Bear Resources Ltd,7
GBRC.CNS,25033,Gold Bull Resources Corp,7
GBRX.CNS,1166287,Golden Birch Resources Inc,7
GBT.CNS,977963,BMTC Group Inc,7
GBU.CNS,24547,Gabriel Resources Ltd,7
GC.CNS,24908,Great Canadian Gaming Corporation,7
GCA.CNS,1118160,Gencan Capital Inc,7
GCC.CNS,1167638,Golden Cariboo Resources Ltd,7
GCCC.CNS,993922,CWN Mining Acquisition Corp,7
GCG.CNS,42882,Guardian Capital Group Limited,7
GCGA.CNS,42883,Guardian Capital Group Ltd,7
GCL.CNS,24909,Colabor Group Inc,7
GCM.CNS,42879,Gran Colombia Gold Corp,7
GCN.CNS,978403,Goldcliff Resource Corp,7
GCR.CNS,978404,Gespeg Copper Resources Inc,7
GCT.CNS,42885,GVIC Communications Corp.,7
GCTC.CNS,993689,GVIC Communications Corp,7
GCX.CNS,48800,Granite Creek Copper Ltd,7
GDBO.CNS,993921,Gold Rush Cariboo Corp,7
GDC.CNS,42869,Genesis Land Development Corp.,7
GDI.CNS,49205,GDI Integrated,7
GDL.CNS,42878,Goodfellow Inc,7
GDM.CNS,49148,Goldstar Minerals Inc,7
GDNP.CNS,978632,Solegear Bioplastic Technologies Inc,7
GDP.CNS,978651,Golden Pursuit Resources Ltd,7
GDV.CNS,1091238,Global Dividend Growth Split Corp Class A,7
GDX.CNS,978405,Goldex Resources Corp,7
GEI.CNS,40487,Gibson Energy Inc,7
GEM.CNS,48707,Goldcore Resources Ltd,7
GEMC.CNS,997553,Global Energy Metals Corp,7
GENEH.CNS,978891,Invictus MD Strategies Corp,7
GENI.CNS,1117884,Genius Metals Inc,7
GENM.CNS,1118161,Generation Mining Ltd,7
GENX.CNS,48682,Alta Natural Herbs & Supplements,7
GEO.CNS,42870,Geodrill Ltd,7
GER.CNS,48791,Glen Eagle Resources Inc,7
GFG.CNS,993065,GFG Resources Inc,7
GFI.CNS,978872,Gravitas Financial Inc,7
GFL.CNS,1159533,Gfl Environmental Holdings Inc,7
GG.CNS,978407,Galane Gold Ltd,7
GGA.CNS,24912,Goldgroup Mining Inc,7
GGAU.CNS,48723,Canadian Energy Materials Corp,7
GGB.CNS,1080120,Green Growth Brands Inc,7
GGC.CNS,1166283,Generic Gold Corp,7
GGD.CNS,42876,GoGold Resources Inc,7
GGG.CNS,960799,Graphene 3D Lab Inc,7
GGI.CNS,48787,Garibaldi Resources Corp.,7
GGL.CNS,49129,GGL Resources Corp,7
GGM.CNS,24905,Granada Gold Mine Inc,7
GGO.CNS,43037,Galleon Gold Corp,7
GGX.CNS,49298,GGX Gold Corp,7
GH.CNS,42866,Gamehost Inc,7
GHG.CNS,978873,Global Hemp Group Inc,7
GHL.CNS,992947,Greatbanks Resources Ltd,7
GHR.CNS,978410,Golden Harp Resources Inc,7
GIBA.CNS,24549,CGI Inc,7
GIGA.CNS,42889,Giga Metals Corp,7
GIII.CNS,49251,Gen III Oil Corp,7
GIL.CNS,24550,Gildan Activewear Inc,7
GIS.CNS,49105,Genesis Metals Corp,7
GIT.CNS,49140,Gitennes Exploration Inc,7
GKO.CNS,1167637,Geekco Technologies Corp,7
GL.CNS,1163238,Gold Lion Resources Inc,7
GLB.CNS,978412,Goldbank Mining Corp,7
GLD.CNS,49147,GoldOn Resources Ltd,7
GLDL.CNS,1167636,Gold Line Resources Ltd,7
GLDN.CNS,978371,Golden Ridge Resources Ltd,7
GLDX.CNS,25178,Gold X Mining Corp,7
GLG.CNS,24914,GLG Life Tech Corporation,7
GLH.CNS,978875,Golden Leaf Holdings Ltd,7
GLI.CNS,1122742,Glacier Lake Resources Inc,7
GLKH.CNS,48932,Great Lakes Graphite Inc,7
GLL.CNS,978839,Hilltop Cybersecurity Inc,7
GLM.CNS,1166282,Golden Lake Exploration Inc,7
GLO.CNS,48935,Global Atomic Corp,7
GLW.CNS,48785,Galway Gold Inc,7
GLXY.CNS,1130828,Galaxy Digital Holdings Ltd,7
GMA.CNS,49137,Geomega Resources Inc,7
GMC.CNS,978543,Gaia Metals Corp,7
GMN.CNS,24915,GobiMin Inc,7
GMO.CNS,31118,General Moly Inc,7
GMV.CNS,49131,GMV Minerals Inc,7
GMX.CNS,42875,Globex Mining Enterprises Inc,7
GNC.CNS,48784,Gainey Capital Corp,7
GNG.CNS,48797,Golden Goliath Resources Ltd.,7
GNOM.CNS,979000,Vodis Pharmaceuticals Inc,7
GNT.CNS,978415,Gentor Resources Inc,7
GOCO.CNS,1057355,Go Metals Corp,7
GOE.CNS,49146,Goldeneye Resources Corp,7
GOG.CNS,24922,Golden Tag Resources Ltd.,7
GOH.CNS,1163880,Goldhaven Resources Corp,7
GOK.CNS,978416,Ginsms Inc,7
GOLD.CNS,48714,GoldMining Inc,7
GOM.CNS,960800,Golden Dawn Minerals Inc,7
GOOS.CNS,998086,Canada Goose Holdings Inc,7
GOPH.CNS,978417,Gourmet Ocean Products Inc,7
GOR.CNS,48798,Goldrea Resources Corp,7
GOT.CNS,1073022,Goliath Resources Ltd,7
GPG.CNS,49151,Grande Portage Resources Ltd,7
GPH.CNS,49152,Graphite One Inc,7
GPK.CNS,1072274,Grand Peak Capital Corp,7
GPM.CNS,24924,GPM Metals Inc,7
GPMI.CNS,1166285,Gold Plus Mining Inc,7
GPO.CNS,1166284,Gold Port Corp,7
GPR.CNS,24925,Great Panther Silver Ltd,7
GPV.CNS,962582,GreenPower Motor Company Inc,7
GPY.CNS,25042,Golden Predator Mining Cor,7
GQ.CNS,24926,Great Quest Metals Ltd.,7
GQC.CNS,24927,GoldQuest Mining Corp.,7
GR.CNS,978419,Great Atlantic Resources Corp,7
GRA.CNS,1054767,NanoXplore Inc,7
GRAT.CNS,48731,Gratomic Inc,7
GRAY.CNS,1166281,Graycliff Exploration Ltd,7
GRB.CNS,49153,Greenbriar Capital Corp,7
GRC.CNS,25136,Gold Springs Resource Corp,7
GRDM.CNS,978517,Mustang Minerals Corp,7
GREX.CNS,1073012,Graphite Energy Corp,7
GRF.CNS,1056045,Green Rise Capital Corp,7
GRG.CNS,48795,Golden Arrow Resources Corp,7
GRI.CNS,978420,Galore Resources Inc,7
GRIN.CNS,994007,Grown Rogue International Inc,7
GRN.CNS,1153661,Greenlane Renewables Inc,7
GRO.CNS,24766,GrowMax Resources Corp,7
GROW.CNS,49327,CO2 Gro Inc,7
GRSL.CNS,996141,GR Silver Mining Ltd,7
GRZ.CNS,30781,Gold Reserve Inc,7
GSC.CNS,24551,Golden Star Resources Ltd,7
GSD.CNS,1162503,Devonian Health Group Inc,7
GSGSP.CNS,1163870,Greenstone Capital Corp,7
GSH.CNS,49145,Golden Share Resources Corp,7
GSI.CNS,960801,Gatekeeper Systems Inc,7
GSK.CNS,1166288,Goldseek Resources Inc,7
GSP.CNS,49138,Gensource Potash Corporation,7
GSPR.CNS,1115817,GSP Resource Corp,7
GSQ.CNS,1167668,Gamesquare Esports Inc,7
GSR.CNS,951608,Goldstrike Resources Ltd,7
GSS.CNS,978422,Gossan Resources Ltd,7
GSV.CNS,31136,Gold Standard Ventures Corp,7
GSY.CNS,42830,goeasy Ltd,7
GTC.CNS,48790,Getty Copper Inc,7
GTCH.CNS,979003,Getchell Gold Corp,7
GTE.CNS,31137,Gran Tierra Energy Inc,7
GTG.CNS,978424,Great Thunder Gold Corp,7
GTII.CNS,48703,Green Thumb Industries Inc,7
GTIX.CNS,978880,Glenbriar Technologies Inc,7
GTMS.CNS,1097535,Greenbrook TMS Inc,7
GTOO.CNS,1057268,G2 Technologies Corp,7
GTR.CNS,1097540,Gatling Exploration Inc,7
GTT.CNS,1045831,GT Gold Corp,7
GTWO.CNS,978480,G2 Goldfields Inc,7
GUD.CNS,962431,Knight Therapeutics Inc,7
GUF.CNS,993929,Gulf & Pacific Equities Corp,7
GUG.CNS,24734,Gungnir Resources Inc,7
GUN.CNS,978427,Gunpoint Exploration Ltd,7
GURU.CNS,1167491,Guru Organic Energy Corp,7
GUS.CNS,1162504,Angus Ventures Inc,7
GVC.CNS,42873,Glacier Media Inc,7
GVR.CNS,993930,Grosvenor Resource Corp,7
GWA.CNS,24931,Gowest Gold Ltd,7
GWM.CNS,48786,Galway Metals Inc,7
GWO.CNS,24553,Great-West Lifeco Inc,7
GWR.CNS,42886,Global Water Resources Inc,7
GX.CNS,978431,Guardian Exploration Inc,7
GXE.CNS,943932,Gear Energy,7
GXS.CNS,943933,Goldsource Mines,7
GXU.CNS,978881,GoviEx Uranium Inc,7
GXX.CNS,1166280,Gold Basin Resources Corp,7
GYA.CNS,1129306,Guyana Goldstrike Inc,7
GYSR.CNS,1162505,Geyser Brands Inc,7
GZD.CNS,48802,Grizzly Discoveries Inc,7
GZZ.CNS,24937,Golden Valley Mines Ltd.,7
H.CNS,960802,Hydro One Limited,7
HAB.CNS,39029,Horizons Active Corporate Bond Common Class,7
HAC.CNS,48239,Horizons Seasonal Rotation,7
HAD.CNS,48157,Horizons Active Cdn Bond Common Class,7
HAF.CNS,39031,Horizons Active Global Fixed Income Common Class,7
HAJ.CNS,976708,Horizons Active Emerging Markets Dividend,7
HAL.CNS,48110,Horizons Active Cdn Dividend ETF Common,7
HAN.CNS,978501,Hannan Metals Ltd,7
HAND.CNS,978433,Handa Mining Corp,7
HANS.CNS,1167639,Hanstone Gold Corp,7
HAPB.CNS,1167640,Hapbee Technologies Inc,7
HAR.CNS,1162506,Harfang Exploration Inc,7
HARC.CNS,1162758,Horizons Absolute Return Global Currency ETF,7
HARV.CNS,49301,Harvest Health & Recreation Inc,7
HARY.CNS,986235,Harrys Manufacturing Inc,7
HAU.CNS,976715,Horizons Active US Dividend ETF E,7
HAVN.CNS,1166289,HAVN Life Sciences Inc,7
HAWK.CNS,978435,Hawkeye Gold and Diamond Inc,7
HAZ.CNS,48114,Horizons Active Global Dividend Common Class,7
HBAL.CNS,1090661,Horizons Balanced TRI ETF Portfolio,7
HBB.CNS,976718,Horizons CDN Select Universe Bond,7
HBD.CNS,48230,BetaPro Gold Bullion 2x Daily Bear,7
HBE.CNS,993931,Hornby Bay Mineral Exploration Ltd,7
HBF.CNS,977979,Brand Leaders Plus Income Fund,7
HBFB.CNS,1162764,Harvest Brand Leaders Plus Income ETF Class B Unhedged Units,7
HBFU.CNS,1162762,Harvest Brand Leaders Plus Income ETF Class U Units,7
HBGD.CNS,1086965,Horizons Big Data & Hardware Index ETF,7
HBGDU.CNS,1162770,Horizons Big Data & Hardware Index ETF,7
HBK.CNS,49156,Highbank Resources Ltd.,7
HBLK.CNS,1062608,Blockchain Technologies,7
HBM.CNS,24554,HudBay Minerals Inc,7
HBOR.CNS,1072171,Harborside Inc,7
HBP.CNS,42894,Helix BioPharma Corp.,7
HBU.CNS,48231,BetaPro Gold Bullion 2x Daily Bull,7
HCA.CNS,1167009,Hamilton Canadian Bank Mean Reversion Index ETF,7
HCAL.CNS,1167010,Hamilton Canadian Bank 1.25x Leverage ETF,7
HCC.CNS,49235,Nitinat Minerals Corporation,7
HCG.CNS,24555,Home Capital Group Inc,7
HCN.CNS,976719,Horizons China High Dividend Yield,7
HCON.CNS,1090662,Horizons Conservative TRI ETF Portfolio,7
HCOP.CNS,1158990,Hansco Capital Corp,7
HCRE.CNS,1121222,Horizons Equal Weight Canada REIT Index ETF,7
HDGE.CNS,1131163,Accelerate Absolute Return Hedge Fund,7
HDI.CNS,42890,Hardwoods Distribution Inc,7
HE.CNS,42888,Hanwei Energy Services Corp.,7
HEA.CNS,976721,Horizons Enhanced Income US Equity (USD) ETF Common,7
HEAU.CNS,48262,Horizons Enhanced Income US Equity (USD) ETF Common,7
HED.CNS,48166,BetaPro S&P TSX Capped Energy 2x Daily Bear,7
HEE.CNS,48161,Horizons Enhanced Income Energy Common Class,7
HEF.CNS,39036,Horizons Enhanced Income Financials Common Class,7
HEI.CNS,978434,Huntington Exploration Inc,7
HEJ.CNS,48113,Horizons Enhanced Income International Equity Common Class,7
HELX.CNS,24756,Helix Applications Inc,7
HEM.CNS,958349,Hemostemix Inc,7
HEMB.CNS,1162760,Horizons Active Emerging Markets Bond ETF,7
HEO.CNS,48813,H2O Innovation Inc,7
HEP.CNS,48112,Horizons Enhanced Income Gold Producers Common Class,7
HERO.CNS,1140496,Evolve E-Gaming Index Unit (Hedged),7
HEU.CNS,48167,BetaPro S&P TSX Capped Energy 2x Daily Bull,7
HEWB.CNS,1121221,Horizons Equal Weight Canada Banks Index ETF,7
HEX.CNS,48162,Horizons Enhanced Income Equity Common Class,7
HEXO.CNS,978279,Hexo Corp,7
HFD.CNS,48168,BetaPro S&P TSX Capped Financials 2x Daily Bear,7
HFH.CNS,1166292,Hemp for Health Inc,7
HFP.CNS,976711,Horizons Active Floating Rate Preferred Share Class E,7
HFPCU.CNS,996554,Helios Fairfax Partners Corp,7
HFR.CNS,48164,Horizons Active Floating Rate Bond,7
HFU.CNS,48169,BetaPro S&P TSX Capped Financials 2x Daily Bull,7
HGD.CNS,39038,BetaPro Canadian Gold Miners 2x Daily Bear,7
HGGG.CNS,1120052,Harvest Global Gold Giants Index,7
HGR.CNS,1117698,Harvest Global REIT Leaders Income ETF,7
HGRO.CNS,1165320,Horizons Growth TRI ETF Portfolio,7
HGU.CNS,39039,BetaPro Canadian Gold Miners 2x Daily Bull,7
HGY.CNS,39040,Horizons Gold Yield Common Class,7
HHF.CNS,39041,Horizons Morningstar Hedge Fund Common Class,7
HHL.CNS,977984,Healthcare Leaders Income Fund,7
HHLB.CNS,1162767,Harvest Healthcare Leaders Income ETF Class B Unhedged Units,7
HHLU.CNS,1162765,Harvest Healthcare Leaders Income ETF Class U Units,7
HHS.CNS,1055291,Hi Ho Silver Resources Inc,7
HI.CNS,49157,Highland Copper Company Inc,7
HIG.CNS,977986,Global Healthcare Income & Growth Fund,7
HIGH.CNS,1152994,Highgold Mining Inc,7
HIGU.CNS,1152277,Brompton Global Healthcare Income & Growth,7
HIH.CNS,978528,Hylands International Holdings Inc,7
HII.CNS,956439,Horizons CDN Insider,7
HIRE.CNS,1162507,HIRE Technologies Inc,7
HIT.CNS,978436,Hit Technologies Inc,7
HITI.CNS,1117885,High Tide Inc,7
HIU.CNS,48261,BetaPro S&P 500 Daily Inverse,7
HIVE.CNS,1050169,HIVE Blockchain Technologies Ltd,7
HIX.CNS,48160,BetaPro S&P TSX 60 Daily Inverse,7
HLF.CNS,40465,High Liner Foods Incorporated,7
HLPR.CNS,1123379,Horizons Laddered Canadian Preferred Share Index ETF,7
HLS.CNS,42726,HLS Therapeutics Inc,7
HLTH.CNS,993957,Resinco Capital Partners Inc,7
HMAN.CNS,978418,Huntsman Exploration Inc,7
HME.CNS,48807,Hemisphere Energy Corporation,7
HMJI.CNS,1135922,BetaPro Marijuana Companies Inverse ETF,7
HMJU.CNS,1135923,BetaPro Marijuana Companies 2x Daily Bull ETF,7
HMLO.CNS,49055,Hemlo Explorers Inc,7
HMMA.CNS,977987,Hammond Manufacturing Co Ltd,7
HMMJ.CNS,1008791,Horizons Medical Marijuana Life Sciences,7
HMMJU.CNS,1057245,Horizons Marijuana Life Sciences Index ETF,7
HMP.CNS,976707,Horizons Active CDN Municipal Bond Class E,7
HMT.CNS,945163,Halmont Properties Corp,7
HND.CNS,39043,BetaPro Natural Gas 2x Daily Bear,7
HNU.CNS,39044,BetaPro Natural Gas Leveraged Daily Bull ETF,7
HNY.CNS,48247,Horizons Natural Gas Yield Common Class,7
HOC.CNS,24874,Hunter Oil Corp,7
HOD.CNS,39045,BetaPro Crude Oil Inverse Leveraged Daily Bear ETF,7
HODL.CNS,978904,CYPHERPUNK HOLDINGS INC,7
HOG.CNS,976717,Horizons Pipelines & Energy Services Index ETF,7
HOLL.CNS,1166290,Hollister Biosciences Inc,7
HOMU.CNS,1123007,BSR Real Estate Investment Trust,7
HOPEP.CNS,1010651,Hope Well Capital Corp,7
HOU.CNS,39046,BetaPro Crude Oil Daily Bull ETF,7
HP.CNS,978886,Hello Pal International Inc,7
HPF.CNS,977988,Energy Leaders Plus Income Fund,7
HPFU.CNS,1162766,Harvest Energy Leaders Plus Income ETF USD,7
HPI.CNS,978440,Highbury Projects Inc,7
HPL.CNS,976222,Horizon Petroleum Ltd,7
HPQ.CNS,976549,HPQ Silicon Resources Inc,7
HPR.CNS,39047,Horizons Active Preferred Share CommonClass,7
HPSA.CNS,977989,Hammond Power Solutions Inc,7
HPY.CNS,48804,Happy Creek Minerals Ltd,7
HQD.CNS,48265,BetaPro NASDAQ-100 2x Daily Bear,7
HQU.CNS,48266,BetaPro NASDAQ-100 2x Daily Bull,7
HRE.CNS,48948,Stans Energy Corp,7
HRH.CNS,48809,Hillcrest Petroleum Ltd,7
HRL.CNS,978441,Hansa Resources Ltd,7
HRT.CNS,42892,Harte Gold Corp.,7
HRX.CNS,42895,Heroux-Devtek Inc,7
HS.CNS,978887,HealthSpace Data Systems Ltd,7
HSAV.CNS,1162755,Horizons Cash Maximizer ETF,7
HSCP.CNS,1156079,Holly Street Capital Ltd,7
HSD.CNS,48259,BetaPro S&P 500  -2x Daily Bear ETF,7
HSE.CNS,24557,Husky Energy Inc,7
HSH.CNS,1123181,Horizons S&P 500 CAD Hedged Index ETF,7
HSI.CNS,978888,H-Source Holdings Ltd,7
HSL.CNS,976712,Horizons Active Floating Rate Senior Loan Class E,7
HSM.CNS,976496,Helius Medical Technologies Inc Class A,7
HSTR.CNS,49292,Heliostar Metals Ltd,7
HSU.CNS,48260,BetaPro S&P 500  2x Daily Bull ETF,7
HTA.CNS,977996,Tech Achievers Growth & Income Fund,7
HTAB.CNS,1162763,Harvest Tech Achievers Growth & Income ETF Class B Unhedged Units,7
HTAU.CNS,1162756,Harvest Tech Achievers Growth & Income ETF USD,7
HTB.CNS,956443,Horizons US 7-10 Year Treasury Bond ETF,7
HTBU.CNS,976730,Horizons US 7-10 Year Treasury Bond ETF,7
HTC.CNS,49155,HTC Purenergy Inc,7
HTEP.CNS,1163871,Hoist Capital Corp,7
HTH.CNS,1162759,Horizons US 7-10 Year Treasury Bond CAD Hedged ETF,7
HUBL.CNS,1065340,Harvest US Bank Leaders Income ETF Class A,7
HUBLU.CNS,1065337,Harvest US Bank Leaders Income ETF Class U,7
HUC.CNS,976725,Horizons Crude Oil ETF,7
HUD.CNS,24945,Hudson Resources Inc,7
HUF.CNS,976716,Horizons Active Ultra-Short Term US Investment Grade Bond ETF,7
HUFU.CNS,48269,Horizons Active Ultra-Short Term US Investment Grade Bond ETF,7
HUG.CNS,39048,Horizons Gold,7
HUGE.CNS,1080075,FSD Pharma Inc Class B,7
HUIB.CNS,1158863,Harvest US Investment Grade Bond Plus ETF,7
HUL.CNS,977998,US Buyback Leaders Fund,7
HULC.CNS,1162790,Horizons US Large Cap Index ETF,7
HULCU.CNS,1162791,Horizons US Large Cap Index ETF,7
HULU.CNS,1162761,Harvest US Equity Plus Income ETF USD,7
HUN.CNS,48248,Horizons Natural Gas,7
HURA.CNS,1131587,Horizons Global Uranium Index ETF,7
HUT.CNS,1097714,Hut 8 Mining Corp,7
HUTL.CNS,1120051,Harvest Equal Weight Global Utilities Income,7
HUV.CNS,48289,BetaPro S&P 500 VIX Short Term Futures,7
HUZ.CNS,39050,Horizons Silver,7
HVG.CNS,993932,Harvest Gold Corp,7
HVT.CNS,1055120,Harvest One Cannabis Inc,7
HVV.CNS,49158,Highvista Gold Inc,7
HWF.CNS,992819,Middlefield Healthcare & Wellness Dividend Fund,7
HWO.CNS,42896,High Arctic Energy Services Inc,7
HWX.CNS,24787,Headwater Exploration Inc,7
HWY.CNS,978443,Highway 50 Gold Corp,7
HXC.CNS,978444,HFX Holding Corp,7
HXCN.CNS,1162757,Horizons S&P/TSX Capped Composite Index ETF,7
HXD.CNS,48158,BetaPro S&P TSX 60 2x Daily Bear,7
HXDM.CNS,1052309,Horizons Intl Developed Markets Equity,7
HXE.CNS,976727,Horizons S&P TSX Capped Energy,7
HXEM.CNS,1167346,Horizons Emerging Markets Equity Index ETF,7
HXF.CNS,976728,Horizons S&P TSX Capped Financials,7
HXH.CNS,1030935,Horizons Canadian High Dividend,7
HXQ.CNS,1030937,Horizons NASDAQ-100  Index ETF,7
HXQU.CNS,1162768,Horizons NASDAQ-100  Index ETF,7
HXS.CNS,48267,Horizons S&P 500 Index ETF,7
HXSU.CNS,976726,Horizons S&P 500 Index ETF,7
HXT.CNS,39051,Horizons S&P/TSX 60 Index ETF,7
HXTU.CNS,48097,Horizons S&P/TSX 60 Index ETF,7
HXU.CNS,48159,BetaPro S&P TSX 60 2x Daily Bull,7
HXX.CNS,1009229,Horizons EURO STOXX 50 Class A,7
HYI.CNS,39052,Horizons Active High Yield Bond CommonClass,7
HYPR.CNS,1093877,Hyperblock Inc,7
HZ.CNS,994006,Hybrid Minerals Inc,7
HZD.CNS,48249,BetaPro Silver 2x Daily Bear,7
HZM.CNS,978000,Horizonte Minerals,7
HZU.CNS,39053,BetaPro Silver 2x Daily Bull,7
IAG.CNS,24559,iA Financial,7
IAN.CNS,1054765,iAnthus Capital Holdings Inc,7
IB.CNS,24947,IBC Advanced Alloys Corp,7
IBAT.CNS,978957,Rheingold Exploration Corp,7
IBCH.CNS,48818,International Bethlehem Mining Corp,7
IBG.CNS,42902,IBI Group Inc,7
IBT.CNS,48815,IBEX Technologies Inc,7
IC.CNS,48914,International Corona Capital Corp,7
ICAN.CNS,978852,Integrated Cannabis Co Inc,7
ICAU.CNS,48789,Geodex Minerals Ltd,7
ICE.CNS,42770,Canlan Ice Sports Corp.,7
ICIP.CNS,1056046,Inceptus Capital Ltd,7
ICM.CNS,978445,Iconic Minerals Ltd,7
ICO.CNS,49160,iCo Therapeutics Inc,7
ICPB.CNS,1162771,IA Clarington Core Plus Bond Fund Series ETF,7
ID.CNS,980226,Identillect Technologies Corp,7
IDG.CNS,42906,Indigo Books & Music Inc,7
IDI.CNS,978446,Indico Resources Ltd,7
IDK.CNS,978840,ThreeD Capital Inc,7
IDL.CNS,42904,Imaging Dynamics Co Ltd,7
IDVR.CNS,1131209,Cannabis One Holdings Inc,7
IEI.CNS,24951,Imperial Equities Inc,7
IFA.CNS,49162,iFabric Corp,7
IFC.CNS,24560,Intact Financial Corporation,7
IFOS.CNS,24994,Itafos Corp,7
IFP.CNS,24952,Interfor Corp,7
IFR.CNS,48822,International Frontier Resources,7
IFX.CNS,951611,Imaflex Inc,7
IGCF.CNS,1052310,PIMCO Investment Grade Credit Fund,7
IGLD.CNS,1118175,Golden Independence Mining Corp,7
IGM.CNS,24561,IGM Financial Inc,7
IGO.CNS,978448,Independence Gold Corp,7
IGP.CNS,978449,Imperial Ginseng Products Ltd,7
IGX.CNS,978450,Intelgenx Technologs,7
III.CNS,24953,Imperial Metals Corporation,7
ILA.CNS,951612,iLOOKABOUT Corp,7
ILC.CNS,48819,International Lithium Corp,7
ILI.CNS,978242,Infinite Ore Corp,7
ILV.CNS,976781,PowerShares S&P International Developed Low Volatility,7
ILVF.CNS,1162773,Invesco S&P International Developed Low Volatility Index ETF CAD Hedged,7
IM.CNS,1166293,IM Exploration Inc,7
IMA.CNS,943907,I Minerals,7
IMCC.CNS,1155976,Im Cannabis Corp,7
IMCX.CNS,1161157,Imc International Mining Corp,7
IME.CNS,978890,Imagin Medical Inc,7
IMG.CNS,24562,IAMGold Corporation,7
IMI.CNS,48821,International Millennium Mining,7
IMIN.CNS,978579,Parlane Resource Corp,7
IMO.CNS,24564,Imperial Oil Ltd,7
IMP.CNS,42913,Intermap Technologies Corp,7
IMR.CNS,978451,iMetal Resources Inc,7
IMT.CNS,49171,International Montoro Resources Inc,7
IMV.CNS,24954,Imv Inc,7
IN.CNS,978892,InMed Pharmaceuticals Inc,7
INDS.CNS,993942,Indus Holdings Inc,7
INE.CNS,24956,Innergex Renewable Energy Inc,7
INEO.CNS,1162510,INEO Tech Corp,7
INLA.CNS,978333,Interlapse Technologies Corp,7
INNO.CNS,1153092,InnoCan Pharma Corp,7
INOC.CNS,1055115,Horizons Inovestor Canadian Equity Index ETF,7
INP.CNS,49167,Input Capital Corp.,7
INQ.CNS,42910,INSCAPE Corporation,7
INTL.CNS,1073366,Intellabridge Technology Corp,7
INV.CNS,42919,INV Metals Inc,7
INX.CNS,49164,In-Touch Survey Systems Ltd.,7
IO.CNS,960804,Inca One Gold Corp,7
IOM.CNS,1162509,Assure Holdings Corp,7
ION.CNS,1167641,Ion Energy Ltd,7
IONC.CNS,979012,Zara Resources Inc,7
IOT.CNS,978452,Innovotech Inc,7
IOU.CNS,958350,IOU Financial Inc,7
IP.CNS,978894,ImagineAR Inc,7
IPA.CNS,49350,Immunoprecise Antibodies Ltd,7
IPCI.CNS,31140,Intellipharmaceutics International Inc,7
IPCO.CNS,1073410,International Petroleum Corp,7
IPD.CNS,978453,International Parkside Products Inc,7
IPG.CNS,1062566,Imperial Mining Group Ltd,7
IPL.CNS,24565,Inter Pipeline Ltd,7
IPO.CNS,42713,InPlay Oil Corp,7
IPOT.CNS,978814,Isracann Biosciences Inc,7
IPT.CNS,24958,IMPACT Silver Corp.,7
IQ.CNS,978454,AirIQ Inc,7
IQD.CNS,1162772,CI WisdomTree International Quality Dividend Growth Index ETF,7
IQDB.CNS,1162774,CI WisdomTree International Quality Dividend Growth Index ETF Non-Hedged,7
IRI.CNS,978456,Iemr Resources Inc,7
IRO.CNS,978457,Inter Rock Minerals Inc,7
IRV.CNS,978895,Irving Resources Inc,7
ISD.CNS,49176,iSign Media Solutions Inc,7
ISGI.CNS,49196,InsuraGuest Technologies Inc,7
ISH.CNS,1091139,Inner Spirit Holdings Ltd,7
ISM.CNS,42911,Inspiration Mining Corp,7
ISO.CNS,992948,Isoenergy Ltd,7
ISOL.CNS,978905,Isodiol International Inc,7
ISV.CNS,42907,Information Services Corporation,7
ITG.CNS,49123,Intact Gold Corp,7
ITH.CNS,24960,International Tower Hill Mines Ltd,7
ITKO.CNS,978879,Idaho Champion Gold Mines Canada Inc,7
ITM.CNS,49421,Intema Solutions Inc,7
ITP.CNS,40491,Intertape Polymer Group Inc,7
ITR.CNS,978955,Integra Resources Corp,7
IVI.CNS,978461,Ivrnet Inc,7
IVN.CNS,42920,Ivanhoe Mines Ltd.,7
IVOR.CNS,1166294,Ivor Exploration Inc,7
IVQU.CNS,978437,Invesque Inc,7
IVS.CNS,49139,Inventus Mining Corp,7
IVX.CNS,993934,Inventronics Ltd,7
IXI.CNS,49165,Indigo Exploration Inc,7
IZ.CNS,978324,Canadian Zeolite Corp,7
IZN.CNS,48838,InZinc Mining Ltd,7
IZO.CNS,1118163,Izotropic Corp,7
IZZ.CNS,49376,International Prospect Ventures Ltd,7
J.CNS,978898,Lotus Ventures Inc,7
JADE.CNS,978492,Jade Leader Corp,7
JAEG.CNS,48699,Jaeger Resources Corp,7
JAG.CNS,32517,Jaguar Mining Inc,7
JANE.CNS,1075547,High Hampton Holdings Corp,7
JAPN.CNS,1162775,CI WisdomTree Japan Equity Index ETF Hedged,7
JAX.CNS,978462,Jaxon Mining Inc,7
JBR.CNS,978899,James Bay Resources Ltd,7
JCO.CNS,951614,Jericho Oil Corp,7
JDN.CNS,42923,Jayden Resources Inc,7
JE.CNS,24568,Just Energy Group Inc,7
JEC.CNS,42925,Jura Energy Corporation,7
JET.CNS,31130,Canada Jetlines Ltd,7
JFCH.CNS,42922,Jaguar Financial Corp,7
JG.CNS,969138,Japan Gold Corp,7
JJ.CNS,48832,Jackpot Digital Inc,7
JJJX.CNS,1166297,37 Capital Inc,7
JNC.CNS,1166854,JNC Resources Inc,7
JNH.CNS,1167203,Jack Nathan Medical Corp,7
JOR.CNS,1076575,Jourdan Resources Inc,7
JOSE.CNS,25034,Josemaria Resources Inc,7
JOY.CNS,978013,Journey Energy Inc,7
JQ.CNS,1166296,79North Inc,7
JRV.CNS,1155968,Jervois Mining Ltd,7
JSPH.CNS,978463,Jasper Mining Corp,7
JSTP.CNS,1166982,Justify Capital Corp,7
JTC.CNS,993935,JEMTEC Inc,7
JTR.CNS,978464,Greenspace Brands Inc,7
JUB.CNS,978465,Jubilee Gold Exploration Ltd,7
JUGR.CNS,1054786,Juggernaut Exploration Ltd,7
JUSH.CNS,1141617,Jushi Holdings Inc,7
JUVA.CNS,1167669,Juva Life Inc,7
JWEL.CNS,1029161,Jamieson Wellness Inc,7
JZR.CNS,978466,Jazz Resources Inc,7
K.CNS,24569,Kinross Gold Corp,7
KABN.CNS,978989,KABN Systems NA Holdings Corp,7
KAYH.CNS,993936,Karsten Energy Corp,7
KBEV.CNS,978972,Koios Beverage Corp,7
KBGH.CNS,49183,Kings Bay Resources Corp,7
KBL.CNS,42927,K-Bro Linen Inc,7
KBY.CNS,978243,Kona Bay Technologies Inc,7
KC.CNS,951604,Kutcho Copper Corp,7
KCC.CNS,943946,Kincora Copper Ltd,7
KDA.CNS,978258,KDA Group Inc,7
KDK.CNS,48760,Kodiak Copper Corp,7
KDSX.CNS,1167176,Kadestone Capital Corp,7
KEI.CNS,24761,Kolibri Global Energy Inc,7
KEL.CNS,42929,Kelt Exploration Ltd.,7
KEN.CNS,1089438,Kenadyr Mining Corp,7
KER.CNS,42718,Kerr Mines Inc,7
KEY.CNS,24570,Keyera Corp.,7
KFG.CNS,978469,KFG Resources Ltd,7
KG.CNS,48830,Klondike Gold Corp,7
KGC.CNS,1054787,Kestrel Gold Inc,7
KGL.CNS,24966,Kilo Goldmines Ltd,7
KGS.CNS,993911,Astorius Resources Ltd,7
KHRN.CNS,1082073,Khiron Life Sciences Corp,7
KIDZ.CNS,1162513,Kidoz Inc,7
KILO.CNS,1162660,Purpose Gold Bullion Fund,7
KILOB.CNS,1163266,Purpose Gold Bullion Non-FX Hedged,7
KING.CNS,25001,Rosita Mining Corp,7
KIP.CNS,48792,Aldever Resources Inc,7
KKLP.CNS,1117810,Kelly Ventures Ltd,7
KL.CNS,42810,Kirkland Lake Gold Ltd,7
KLM.CNS,978471,Kermode Resources Ltd,7
KLS.CNS,49181,Kelso Technologies Inc,7
KLY.CNS,49312,Kalytera Therapeutics Inc,7
KMAX.CNS,48705,OrganiMax Nutrient Corp,7
KMI.CNS,1166298,Karam Minerals Inc,7
KNC.CNS,997197,K9 Gold Corp,7
KNE.CNS,48825,Kane Biotech Inc,7
KNG.CNS,978472,Kingsmen Resources Ltd,7
KNR.CNS,1054766,Kontrol Energy Corp,7
KNT.CNS,980227,K92 Mining Inc,7
KO.CNS,1167643,Kiaro Holdings Corp,7
KOR.CNS,42804,Corvus Gold Inc,7
KORE.CNS,978381,Kore Mining Ltd,7
KPT.CNS,42931,KP Tissue Inc,7
KRN.CNS,24970,Karnalyte Resources Inc,7
KRR.CNS,43062,Karora Resources Inc,7
KS.CNS,978474,Klondike Silver Corp,7
KSI.CNS,977953,Kneat.com Inc,7
KTN.CNS,24971,Kootenay Silver Inc,7
KTO.CNS,978726,K2 Gold Corporation,7
KTR.CNS,1089439,Kintavar Exploration Inc,7
KUB.CNS,49086,Cub Energy Inc,7
KURH.CNS,48964,Kure Technologies Inc,7
KUT.CNS,978475,Redishred Capital Corp,7
KUU.CNS,42820,Kuuhubb Inc,7
KUYA.CNS,1008700,Kuya Silver Corp,7
KWE.CNS,1167642,Kwesst Micro Systems Inc,7
KWG.CNS,49179,KWG Resources Inc,7
KXS.CNS,959119,Kinaxis Inc,7
KYSH.CNS,48734,Kaymus Resources Inc,7
KZD.CNS,943945,Kaizen Discovery,7
L.CNS,24572,Loblaw Companies Limited,7
LA.CNS,24973,Los Andes Copper Limited,7
LAB.CNS,48869,Labrador Gold Corp,7
LABS.CNS,1072245,Medipharm Labs Corp,7
LAC.CNS,42940,Lithium Americas Corp,7
LAD.CNS,48863,New Carolin Gold Corp,7
LAI.CNS,978906,La Imperial Resources Inc,7
LAM.CNS,42934,Laramide Resources Ltd.,7
LASA.CNS,978015,Lassonde Industries Inc,7
LB.CNS,24573,Laurentian Bank Of Canada,7
LBC.CNS,48940,Libero Copper Corp,7
LBI.CNS,1162518,Lions Bay Capital Inc,7
LBL.CNS,978479,Lattice Biologics Ltd,7
LBS.CNS,978018,Life & Banc Split Corp,7
LBY.CNS,1031090,Liberty One Lithium Corp,7
LCS.CNS,978020,Brompton Lifeco Split Corp,7
LDI.CNS,978346,Lithoquest Diamonds Inc,7
LEAF.CNS,1162515,Leaf Mobile Inc,7
LECR.CNS,1166300,Leocor Gold Inc,7
LEM.CNS,48782,Leading Edge Materials Corp,7
LET.CNS,993938,Letho Resources Corp,7
LEXI.CNS,993953,Lithium Energi Exploration Inc,7
LFE.CNS,978022,Canadian Life Companies Split Corp,7
LGD.CNS,43024,Liberty Gold Corp,7
LGO.CNS,24978,Largo Resources Ltd,7
LGTA.CNS,978024,Logistec Corp,7
LGTB.CNS,943868,Logistec Sub Vtg Cl B,7
LHI.CNS,1162516,Lendified Holdings Inc,7
LHR.CNS,49187,Lakeview Hotel Investment Corp.,7
LHS.CNS,978967,Liberty Health Sciences Inc,7
LI.CNS,24979,American Lithium Corp,7
LIDA.CNS,1166299,Lida Resources Inc,7
LIDO.CNS,1166301,Lido Minerals Ltd,7
LIF.CNS,24575,Labrador Iron Ore Royalty Corp,7
LIFE.CNS,1072050,Evolve Global Healthcare Enhanced Yield Fund Hedged Units,7
LIFEB.CNS,1162777,Evolve Global Healthcare Enhanced Yield Fund UnHedged Units,7
LIFEU.CNS,1162778,Evolve Global Healthcare Enhanced Yield Fund UnHedged Units USD,7
LILY.CNS,978926,Callitas Health Inc,7
LIO.CNS,48836,Lion One Metals Limited,7
LION.CNS,1075478,Global Li-Ion Graphite Corp,7
LIS.CNS,48738,NRG Metals Inc,7
LIT.CNS,978459,Argentina Lithium & Energy Corp,7
LITH.CNS,49180,Lithium Chile Inc,7
LITT.CNS,978315,Urban Select Capital Corp,7
LIVE.CNS,1162517,Globalive Technology Inc,7
LKY.CNS,1052890,Lucky Minerals Inc,7
LL.CNS,25106,Canada Rare Earth Corp,7
LLG.CNS,49200,Mason Graphite Inc,7
LLOP.CNS,1163872,LL One Inc,7
LLP.CNS,978911,LeenLife Pharma International Inc,7
LLT.CNS,1118165,Litelink Technologies Inc,7
LM.CNS,960806,Lingo Media Corp,7
LME.CNS,48833,Laurion Mineral Exploration Inc,7
LMG.CNS,978484,Lincoln Mining Corp,7
LMGC.CNS,48933,Le Mare Gold Corp,7
LMR.CNS,49190,Lomiko Metals Inc,7
LMS.CNS,978338,Latin Metals Inc,7
LN.CNS,24982,Loncor Resources Inc,7
LNEH.CNS,48839,Loon Energy Corp,7
LNF.CNS,42936,Leon's Furniture Limited,7
LNK.CNS,1166302,Link Global Technologies Inc,7
LNR.CNS,24576,Linamar Corporation,7
LOAN.CNS,1118166,Redfund Capital Corp,7
LOBE.CNS,994005,Greenstar Biosciences Corp,7
LOGP.CNS,1156078,Logica Ventures Corp,7
LOOP.CNS,985936,LOOPShare Ltd,7
LORD.CNS,48701,St James Gold Corp,7
LOT.CNS,48961,TomaGold Coporation,7
LOVE.CNS,1117990,Cannara Biotech Inc,7
LPC.CNS,993940,Lorne Park Capital Partners Inc,7
LPK.CNS,42945,Lupaka Gold Corp.,7
LPS.CNS,951617,Legend Power Systems Inc,7
LR.CNS,1097541,Luminex Resources Corp,7
LRA.CNS,24984,Lara Exploration Ltd.,7
LS.CNS,1162776,Middlefield Healthcare & Life Sciences ETF,7
LSPD.CNS,1123415,Lightspeed POS Inc,7
LSX.CNS,1156188,Lasalle Exploration Corp,7
LTE.CNS,978912,Lite Access Technologies Inc,7
LTV.CNS,48834,LeoNovus Inc,7
LTX.CNS,997187,Labrador Technologies Inc,7
LUC.CNS,42943,Lucara Diamond Corp,7
LUFF.CNS,978569,Luff Enterprises Ltd,7
LUG.CNS,24902,Lundin Gold Inc,7
LUM.CNS,958352,Lumina Gold Corp,7
LUN.CNS,24578,Lundin Mining Corporation,7
LUX.CNS,978913,Newlox Gold Ventures Corp,7
LUXX.CNS,1131238,Luxxfolio Holdings Inc,7
LWR.CNS,48774,Equitorial Exploration Corp.,7
LXE.CNS,951618,Leucrotta Exploration Inc,7
LXG.CNS,992950,Lexagene Holdings Inc,7
LXH.CNS,969130,TekModo Industries Inc,7
LXR.CNS,961705,LXRandCo Inc,7
LXX.CNS,978914,Lexaria Bioscience Corp,7
M.CNS,49215,Mosaic Capital Corporation,7
MAC.CNS,49359,Themac Resources Group Limited,7
MAE.CNS,49198,Maritime Resources Corp.,7
MAG.CNS,24990,MAG Silver Corp,7
MAH.CNS,49199,Marksmen Energy Inc,7
MAI.CNS,978488,Minera Alamos Inc,7
MAKA.CNS,1166303,Makara Mining Corp,7
MAL.CNS,42950,Magellan Aerospace Corporation,7
MANN.CNS,1166855,Manning Ventures Inc,7
MARI.CNS,42802,Marimaca Copper Corp,7
MAU.CNS,1167644,Montage Gold Corp,7
MAV.CNS,1091240,Mav Beauty Brands Inc,7
MAW.CNS,42958,Mawson Gold Ltd,7
MAX.CNS,42975,Midas Gold Corp.,7
MAXR.CNS,24580,Maxar Technologies Inc,7
MAYBF.CNS,1162782,FT Cboe Vest US Equity Buffer ETF - May,7
MBA.CNS,31146,CIBT Education Group Inc,7
MBIH.CNS,49201,Med BioGene Inc,7
MBN.CNS,978029,MBN Corporation,7
MBO.CNS,49186,Mobio Technologies Inc,7
MBX.CNS,42974,Microbix Biosystems Inc,7
MCAH.CNS,993264,Milner Consolidated Silver Mines Ltd,7
MCB.CNS,42962,Mccoy Global Inc,7
MCG.CNS,978491,Mountain China Resorts Holding Ltd,7
MCI.CNS,49019,Minnova Corp,7
MCL.CNS,1118167,McLaren Resources Inc,7
MCLC.CNS,1162780,Manulife Multifactor Canadian Large Cap Index ETF,7
MCLD.CNS,1118132,Universal mCloud Corp,7
MCMA.CNS,978493,Matachewan Consolidated Mines Ltd,7
MCR.CNS,49194,Macro Enterprises Inc,7
MCS.CNS,978494,McChip Resources Inc,7
MCSB.CNS,1073120,Mackenzie Canadian Short Term Fixed Income,7
MCSM.CNS,1162779,Manulife Multifactor Canadian SMID Cap Index ETF,7
MCU.CNS,993941,Mega Copper Ltd,7
MCUR.CNS,1166545,Mind Cure Health Inc,7
MCX.CNS,978495,McorpCX Inc,7
MD.CNS,24996,Midland Exploration Inc,7
MDF.CNS,42967,Mediagrif Interactive Technologies,7
MDI.CNS,24581,Major Drilling Group International,7
MDL.CNS,48849,Medallion Resources Ltd,7
MDNA.CNS,1156551,Medicenna Therapeutics Corp,7
MDP.CNS,951624,Medexus Pharmaceuticals Inc,7
MDV.CNS,49206,Megastar Development Corp.,7
MDX.CNS,48850,MedX Health Corp,7
ME.CNS,42981,Moneta Porcupine Mines Inc,7
MEAT.CNS,978980,Modern Meat Inc,7
MEC.CNS,978918,ME Resource Corp,7
MED.CNS,978496,Medgold Resources Corp,7
MEDI.CNS,1136173,Myconic Capital Corp,7
MEE.CNS,1029222,Mackenzie Maximum Diversification Emerging Markets,7
MEG.CNS,24582,MEG Energy Corp,7
MEK.CNS,49210,Metals Creek Resources Corp,7
MEMEB.CNS,1167450,Manulife Multifactor Emerging Markets Index ETF,7
MENE.CNS,978238,Amador Gold Corp,7
MEQ.CNS,25000,Mainstreet Equity Corp.,7
MET.CNS,42972,Metalore Resources Ltd,7
MEU.CNS,1030943,Mackenzie Maximum Diversification Developed Markets,7
MEX.CNS,25167,Mexican Gold Corp,7
MFC.CNS,24583,Manulife Financial Corp,7
MFI.CNS,24584,Maple Leaf Foods Inc,7
MFM.CNS,978497,Marifil Mines Ltd,7
MFS.CNS,49203,Medifocus Inc,7
MFT.CNS,1030944,Mackenzie Floating Rate Income,7
MFX.CNS,978498,Minfocus Exploration Corp,7
MG.CNS,24586,Magna International Inc,7
MGA.CNS,42969,Mega Uranium Ltd.,7
MGB.CNS,1030939,Mackenzie Core Plus Global Fixed Income,7
MGCH.CNS,978499,Midasco Capital Corp,7
MGG.CNS,960809,Minaurum Gold Inc,7
MGI.CNS,978500,Magnum Goldcorp Inc,7
MGM.CNS,978269,Maple Gold Mines Ltd,7
MGR.CNS,49218,Magna Gold Corp,7
MGRO.CNS,1166304,Mustgrow Biologics Corp,7
MHI.CNS,993943,Mineral Hill Industries Ltd,7
MIC.CNS,24587,Genworth MI Canada Inc,7
MICH.CNS,1166307,Mich Resources Ltd,7
MILE.CNS,978274,Last Mile Holdings Ltd,7
MIMI.CNS,1162521,Mimi's Rock Corp,7
MIN.CNS,48776,Excelsior Mining Corp,7
MIND.CNS,1055085,Horizons Active A.I. Global Equity ETF,7
MINE.CNS,1162525,Inomin Mines Inc,7
MINT.CNS,1014064,Manulife Multifactor Developed International,7
MINTB.CNS,1162787,Manulife Multifactor Developed International Index ETF (Unhedged),7
MIR.CNS,49204,MedMira Inc,7
MIRL.CNS,28521,Minera IRL Ltd,7
MIS.CNS,978921,MIstango River Resources Inc,7
MIT.CNS,978502,Mint Corp,7
MIVG.CNS,1073116,Mackenzie Ivy Global Equity,7
MJ.CNS,978922,True Leaf Brands Inc,7
MJAR.CNS,1117886,MJardin Group Inc,7
MJRX.CNS,978909,Global Health Clinics Ltd,7
MJS.CNS,25005,Majestic Gold Corp.,7
MKA.CNS,978503,Mkango Resources Ltd,7
MKB.CNS,1031016,Mackenzie Core Plus Canadian Fixed Income,7
MKC.CNS,1030940,Mackenzie Maximum Diversification Canada,7
MKO.CNS,49412,Mako Mining Corp,7
MKP.CNS,42961,MCAN Mortgage Corporation,7
MKR.CNS,25006,Melkior Resources Inc,7
ML.CNS,48909,Millennial Lithium Corp,7
MLCL.CNS,24882,Molecule Holdings Inc,7
MLR.CNS,49207,Melior Resources Inc,7
MLY.CNS,25015,American CuMo Mining Corp,7
MMA.CNS,48854,Midnight Sun Mining Corp,7
MMAT.CNS,1166305,Metamaterial Inc,7
MMC.CNS,1166308,Myriad Metals Corp,7
MMEN.CNS,1080041,Medmen Enterprises Inc Class B,7
MMG.CNS,978489,Metallic Minerals Corp,7
MMI.CNS,978923,Metalo Manufacturing Inc,7
MMJ.CNS,978924,Matica Enterprises Inc,7
MMM.CNS,31147,Minco Capital Corp,7
MMN.CNS,978550,Monarca Minerals Inc,7
MMS.CNS,42947,Macarthur Minerals Ltd,7
MMV.CNS,48857,Mineral Mountain Resources Ltd,7
MMX.CNS,985937,Maverix Metals Inc,7
MMY.CNS,25008,Monument Mining Limited,7
MN.CNS,48954,Manganese X Energy Corp,7
MNC.CNS,1162522,Magnetic North Acquisition Corp,7
MND.CNS,42953,Mandalay Resources Corp,7
MNO.CNS,49059,Cancana Resources Corp,7
MNS.CNS,978047,Royal Canadian Mint Silver,7
MNSU.CNS,993691,Royal Canadian Mint Silver,7
MNT.CNS,978048,Royal Canadian Mint Gold,7
MNX.CNS,978505,Manitex Capital Inc,7
MOC.CNS,1167670,Mosaic Minerals Corp,7
MOGO.CNS,977972,Mogo Inc,7
MOJ.CNS,1166546,Mojave Gold Corp,7
MON.CNS,48858,Montero Mining and Exploration Ltd,7
MOON.CNS,48924,Savant Explorations Ltd,7
MOOP.CNS,1159124,Moon River Capital Ltd,7
MOS.CNS,978925,Mobi724 Global Solutions Inc,7
MOVE.CNS,978595,Organic Flower Investments Group Inc,7
MOX.CNS,49214,Morien Resources Corp,7
MOZ.CNS,42954,Marathon Gold Corporation,7
MPC.CNS,42949,Madison Pacific Properties Inc,7
MPCC.CNS,993692,Madison Pacific Properties Inc,7
MPCF.CNS,1073111,Mackenzie Portfolio Completion,7
MPH.CNS,1010863,Medicure Inc,7
MPT.CNS,978509,Midpoint Holdings Ltd,7
MPVD.CNS,31148,Mountain Province Diamonds Inc,7
MPXI.CNS,1121780,MPX International Corp,7
MQR.CNS,978510,Monarques Gold Corp,7
MRBL.CNS,1131232,MLI Marble Lending Inc,7
MRC.CNS,42983,Morguard Corporation,7
MRD.CNS,42970,Melcor Developments Ltd.,7
MREY.CNS,1121782,Monterey Minerals Inc,7
MRM.CNS,978927,Micromem Technologies Inc,7
MRO.CNS,48856,Millrock Resources Inc,7
MRS.CNS,951620,Mission Ready Solutions Inc,7
MRU.CNS,24589,Metro Inc,7
MRZ.CNS,25013,Mirasol Resources Ltd,7
MSI.CNS,25014,Morneau Shepell Inc,7
MSP.CNS,978514,Minaean SP Construction Corp,7
MSR.CNS,993944,Minsud Resources Corp,7
MSV.CNS,25016,Minco Silver Corporation,7
MSVN.CNS,1166856,ManifestSeven Holdings Corp,7
MT.CNS,978314,ML Gold Corp,7
MTA.CNS,979010,Metalla Royalty & Streaming Ltd,7
MTB.CNS,978515,Mountain Boy Minerals Ltd,7
MTC.CNS,48851,metalCORP Limited,7
MTH.CNS,48843,Mammoth Resources Corp,7
MTL.CNS,24590,Mullen Group Ltd.,7
MTLO.CNS,49229,Martello Technologies Group Inc,7
MTNH.CNS,986066,Martina Minerals Corp,7
MTRX.CNS,1162520,Loop Insights Inc,7
MTS.CNS,49209,Metallis Resources Inc,7
MTT.CNS,978291,Magna Terra Minerals Inc,7
MTU.CNS,48845,Manitou Gold Inc,7
MTX.CNS,25019,Metalex Ventures Ltd.,7
MTY.CNS,42985,MTY Food Group Inc,7
MUB.CNS,1030946,Mackenzie Unconstrained Bond,7
MULC.CNS,1162781,Manulife Multifactor U.S. Large Cap Index ETF (Hedged),7
MULCB.CNS,1162785,Manulife Multifactor U.S. Large Cap Index ETF (Unhedged),7
MUMC.CNS,1162783,Manulife Multifactor U.S. Mid Cap Index ETF (Hedged),7
MUMCB.CNS,1162786,Manulife Multifactor U.S. Mid Cap Index ETF (Unhedged),7
MUN.CNS,48860,Mundoro Capital Inc,7
MUR.CNS,978928,Murchison Minerals Ltd,7
MUS.CNS,1030941,Mackenzie Maximum Diversification US,7
MUSC.CNS,1162784,Manulife Multifactor U.S. Small Cap Index ETF (Hedged),7
MUSCB.CNS,1162788,Manulife Multifactor U.S. Small Cap Index ETF (Unhedged),7
MUX.CNS,31151,McEwen Mining Inc,7
MVAI.CNS,1162526,Minerva Intelligence Inc,7
MVIH.CNS,48688,Monitor Ventures Inc,7
MVM.CNS,993945,Millenmin Ventures Inc,7
MVMD.CNS,42966,Mountain Valley MD Holdings Inc,7
MVP.CNS,49378,MediaValet Inc,7
MVT.CNS,1166306,Maxtech Ventures Inc,7
MVY.CNS,997189,Moovly Media Inc,7
MWD.CNS,1030942,Mackenzie Maximum Diversification All World Developed,7
MWM.CNS,978866,Micron Waste Technologies Inc,7
MWX.CNS,49326,Mineworx Technologie,7
MX.CNS,24591,Methanex Corporation,7
MXG.CNS,42960,Maxim Power Corp.,7
MXLH.CNS,49091,MX Gold Corp,7
MXR.CNS,978521,Max Resource Corp,7
MXT.CNS,1166309,MedXtractor Corp,7
MXU.CNS,1030945,Mackenzie Maximum Diversification All World Developed ex North America,7
MYCO.CNS,978933,Mydecine Innovations Group Inc,7
MYID.CNS,24837,Freckle Ltd,7
MYM.CNS,978929,MYM Nutraceuticals Inc,7
MYRX.CNS,978930,Meryllion Resources Corporation,7
MYX.CNS,1057265,Montego Resources Inc,7
N.CNS,978931,Namaste Technologies Inc,7
NA.CNS,24592,National Bank of Canada,7
NAB.CNS,978893,Nabis Holdings Inc,7
NALT.CNS,1122480,NBI Liquid Alternatives,7
NAM.CNS,43011,Pacific North West Capital Corp,7
NAN.CNS,49237,North American Nickel Inc,7
NAP.CNS,978524,Napier Ventures Inc,7
NAQP.CNS,1163874,Navigator Acquisition Corp,7
NAR.CNS,48873,North Arrow Minerals Inc,7
NB.CNS,48870,Niocorp Developments Ltd.,7
NBR.CNS,993946,Nubian Resources Ltd,7
NBUD.CNS,1097387,North Bud Farms Inc,7
NBVA.CNS,1129347,Nubeva Technologies Ltd,7
NBY.CNS,42965,Niobay Metals Inc,7
NC.CNS,978932,Netcents Technology Inc,7
NCAU.CNS,978565,Newcore Gold Ltd,7
NCF.CNS,42996,Northcliff Resources Ltd,7
NCI.CNS,49220,NTG Clarity Networks Inc,7
NCP.CNS,50529,Nickel Creek Platinum Corp,7
NCU.CNS,25026,Nevada Copper Corp.,7
NCX.CNS,49242,NorthIsle Copper and Gold Inc,7
NDM.CNS,24594,Northern Dynasty Minerals Ltd,7
NDVA.CNS,978604,Indiva Ltd,7
NED.CNS,978526,New Destiny Mining Corp,7
NEE.CNS,943992,Northern Vertex Mining,7
NEO.CNS,1057142,Neo Performance Materials Inc,7
NEPT.CNS,25040,Neptune Wellness Solutions Inc,7
NER.CNS,48868,Newmac Resources Inc,7
NERD.CNS,1115733,Nerds On Site Inc,7
NETCX.CNS,978874,Netcoins Holdings Inc,7
NEV.CNS,49227,Nevada Sunrise Gold Corp,7
NEWU.CNS,1162528,Newtopia Inc,7
NEXA.CNS,1162030,Nexa Resources SA,7
NEXT.CNS,42837,NextSource Materials Inc,7
NFAM.CNS,1122479,NBI Canadian Family Business,7
NFDA.CNS,25029,Northfield Capital Corp,7
NFG.CNS,1165312,New Found Gold Corp,7
NFI.CNS,42990,NFI Group Inc,7
NFLD.CNS,1166322,Exploits Discovery Corp,7
NG.CNS,24597,NovaGold Resources Inc,7
NGC.CNS,49240,Northern Graphite Corporation,7
NGD.CNS,24598,New Gold Inc,7
NGE.CNS,49225,Nevada Exploration Inc,7
NGEN.CNS,1162527,NervGen Pharma Corp,7
NGEX.CNS,1158946,Ngex Minerals Ltd,7
NGLD.CNS,1130957,New Placer Dome Gold Corp,7
NGT.CNS,1129433,Newmont Goldcorp Corp,7
NGW.CNS,1097381,Next Green Wave Holdings Inc,7
NGY.CNS,48769,Nexera Energy Inc,7
NHK.CNS,978530,Nighthawk Gold Corp,7
NHP.CNS,1163873,Mondias Natural Products Inc,7
NHS.CNS,1166858,Nhs Industries Ltd,7
NI.CNS,978934,Victory Nickel Inc,7
NICL.CNS,978278,Nickel Rock Resources Inc,7
NICO.CNS,1166312,Class 1 Nickel and Technologies Ltd,7
NIKL.CNS,1167646,GK Resources Ltd,7
NIM.CNS,49159,Nicola Mining Inc,7
NIO.CNS,42994,Niocan Inc,7
NIP.CNS,962585,Nippon Dragon Resources Inc,7
NIR.CNS,969133,Noble Iron Inc,7
NKL.CNS,1159070,Conic Metals Corp,7
NKW.CNS,48861,Naikun Wind Energy Group Inc,7
NL.CNS,48875,Northern Lion Gold Corp,7
NLC.CNS,986067,NEO Lithium Inc,7
NLH.CNS,1118133,Nova Leap Health Corp,7
NLR.CNS,1117887,Northern Lights Resources Corp,7
NLTA.CNS,943904,Enlighta Inc,7
NLV.CNS,1166311,New Leaf Ventures Inc,7
NMGH.CNS,978534,Noble Metal Group Inc,7
NMI.CNS,42986,Namibia Critical Metals Inc,7
NNO.CNS,976542,Nano One Materials Corp,7
NNX.CNS,978536,Nickel North Exploration Corp,7
NOA.CNS,31153,North American Construction Group Ltd,7
NOB.CNS,978537,Noble Mineral Exploration Inc,7
NOC.CNS,48788,Norseman Capital Ltd,7
NOCR.CNS,1055302,Norden Crown Metals Corp,7
NOM.CNS,978937,Norsemont Capital Inc,7
NORA.CNS,978411,Norra Metals Corp,7
NOT.CNS,25036,Noront Resources Ltd.,7
NOU.CNS,960811,Nouveau Monde Graphite Inc,7
NOVA.CNS,979005,Nova Mentis Life Science Corp,7
NOVR.CNS,1167510,Nova Royalty Corp,7
NPA.CNS,978538,Alphinat Inc,7
NPK.CNS,43130,Verde Agritech PLC,7
NPRF.CNS,1122478,NBI Active Canadian Preferred Shares,7
NPT.CNS,978938,Plaintree Systems Inc,7
NPTH.CNS,1167645,NeuPath Health Inc,7
NREA.CNS,1122477,NBI Global Real Assets Income,7
NRG.CNS,48740,Newrange Gold Corp,7
NRI.CNS,42999,Nuvo Pharmaceuticals Inc,7
NRM.CNS,978541,Noram Ventures Inc,7
NRN.CNS,48876,Northern Shield Resources Inc,7
NRTH.CNS,1081672,48North Cannabis Corp,7
NSAU.CNS,49082,Megumagold Corp,7
NSCI.CNS,1055011,Nanalysis Scientific Corp,7
NSE.CNS,1162529,New Stratus Energy Inc,7
NSG.CNS,1166310,Northstar Gold Corp,7
NSHS.CNS,1056240,Nanosphere Health Sciences Inc,7
NSP.CNS,951622,Naturally Splendid Enterprises Ltd,7
NSR.CNS,978428,Nomad Royalty Company Ltd,7
NSX.CNS,993947,NSGold Corp,7
NTAR.CNS,1097902,Nextech Ar Solutions Corp,7
NTE.CNS,49226,Network Media Group Inc,7
NTM.CNS,978816,New Tech Minerals Corp,7
NTR.CNS,1057244,Nutrien Ltd,7
NTS.CNS,49222,NanoTech Security Corp,7
NTW.CNS,1152254,Northway Resources Corp,7
NU.CNS,962586,NeutriSci International Inc,7
NUAG.CNS,42992,New Pacific Metals Corp,7
NUG.CNS,49243,Nulegacy Gold Corporation,7
NUGT.CNS,1166857,Prophecy Potash Corp,7
NUMI.CNS,48841,Numinus Wellness Inc,7
NUR.CNS,978940,Nuran Wireless Inc,7
NVA.CNS,24602,NuVista Energy Ltd.,7
NVCN.CNS,25043,Neovasc Inc,7
NVEI.CNS,1166355,Nuvei Corp,7
NVG.CNS,1166313,Nass Valley Gateway Ltd,7
NVI.CNS,978544,Novra Technologies Inc,7
NVO.CNS,978545,Novo Resources Corp,7
NVT.CNS,978546,Nortec Minerals Corp,7
NVV.CNS,978547,Norvista Capital Corp,7
NVX.CNS,49245,NV Gold Corp,7
NVY.CNS,978548,Navy Resources Corp,7
NWC.CNS,24603,North West Company Inc,7
NWE.CNS,48865,New West Energy Services Inc,7
NWI.CNS,1131229,Nuinsco Resources Ltd,7
NWX.CNS,943871,Newport Exploration,7
NXE.CNS,49233,NexGen Energy Ltd.,7
NXF.CNS,956440,First Asset Energy Giants Covered Call (CAD Hedged) Common Class,7
NXFB.CNS,976649,First Asset Energy Giants Covered Call Common,7
NXG.CNS,49231,NexgenRX Inc,7
NXJ.CNS,42993,NexJ Systems Inc,7
NXO.CNS,49100,Nexoptic Technology Corp,7
NXS.CNS,24715,Nexus Gold Corp,7
NXTH.CNS,49223,Natcore Technology Inc,7
NXU.CNS,1118169,Nexco Resources Inc,7
NZ.CNS,48867,New Zealand Energy Corp,7
NZC.CNS,42762,Norzinc Ltd,7
NZN.CNS,951623,Nevada Zinc Corp,7
NZP.CNS,48671,Chatham Rock Phosphate Ltd,7
OAKY.CNS,1166316,Oakley Ventures Inc,7
OBE.CNS,24630,Obsidian Energy Ltd,7
OCG.CNS,24989,Outcrop Gold Corp,7
OCO.CNS,48883,Oroco Resource Corp,7
ODV.CNS,49238,Barolo Ventures Corp,7
OEC.CNS,49249,Oracle Energy Corp,7
OEE.CNS,958353,Astrix Networks Inc,7
OEG.CNS,978551,ONEnergy Inc,7
OG.CNS,992954,Organic Garage Ltd,7
OGC.CNS,24606,OceanaGold Corporation,7
OGD.CNS,43004,Orbit Garant Drilling Inc,7
OGI.CNS,960813,OrganiGram Holdings Inc,7
OGN.CNS,978383,Orogen Royalties Inc,7
OGO.CNS,48743,Organto Foods Incorporated,7
OIC.CNS,1162531,Origin Gold Corporation,7
OIII.CNS,1158949,O3 Mining Inc,7
OIL.CNS,1082072,Permex Petroleum Corp,7
OILS.CNS,1123960,Nextleaf Solutions Ltd,7
OLA.CNS,978552,Orla Mining Ltd,7
OLV.CNS,25051,Olivut Resources Ltd,7
OLY.CNS,25052,Olympia Financial Group Inc,7
OM.CNS,24767,Osisko Metals Inc,7
OMG.CNS,49003,Anconia Resources Corp,7
OMI.CNS,25053,Orosur Mining Inc,7
OML.CNS,48881,Omni-Lite Industries Canada Inc,7
OMM.CNS,978553,Omineca Mining and Metals Ltd,7
ONC.CNS,25054,Oncolytics Biotech Inc,7
ONE.CNS,42688,01 Communique Laboratory Inc,7
ONEQ.CNS,976798,One Global Equity Units,7
ONEX.CNS,24605,Onex Corp,7
ONVH.CNS,993948,Oronova Energy Inc,7
OOR.CNS,48783,Opus One Resources Inc,7
OPC.CNS,978942,Organic Potash Corp,7
OPHR.CNS,978467,Ophir Gold Corp,7
OPI.CNS,997159,Esi Energy Services Inc,7
OPS.CNS,48882,Opsens Inc,7
OPT.CNS,43046,Optiva Inc,7
OPV.CNS,1162530,Optimum Ventures Ltd,7
OPW.CNS,969136,Opawica Explorations Inc,7
OR.CNS,941685,Osisko Gold Ro,7
ORA.CNS,25058,Aura Minerals Inc,7
ORCB.CNS,978554,Orca Exploration Group Inc,7
ORCD.CNS,1131231,Orchid Ventures Inc,7
ORE.CNS,25059,Orezone Gold Corp,7
OREA.CNS,1162031,Orea Mining Corp,7
ORG.CNS,24780,Orca Gold Inc,7
ORGN.CNS,1166315,Origen Resources Inc,7
ORI.CNS,1117888,Orion Nutraceuticals Inc,7
ORL.CNS,43005,Orocobre Ltd,7
ORM.CNS,1162532,Orford Mining Corp,7
ORO.CNS,978555,New Oroperu Resources Inc,7
OROX.CNS,49392,Oro X Mining Corp,7
ORS.CNS,978557,Orestone Mining Corp,7
ORTH.CNS,1166314,Ortho Regenerative Technologies Inc,7
ORV.CNS,25061,Orvana Minerals Corp.,7
ORX.CNS,978558,Orefinders Resources Inc,7
OSB.CNS,25025,Norbord Inc,7
OSI.CNS,978798,Osino Resources Corp,7
OSK.CNS,42743,Osisko Mining Corp,7
OSP.CNS,945934,Brompton Oil Split Corp,7
OSS.CNS,978559,OneSoft Solutions Inc,7
OSU.CNS,43006,Orsu Metals Corp,7
OTEX.CNS,24608,Open Text Corp,7
OTSO.CNS,1160907,Otso Gold Corp,7
OVAT.CNS,1118170,Ovation Science Inc,7
OVT.CNS,978560,Oculus VisionTech Inc,7
OVV.CNS,24523,Ovintiv Inc,7
OWLI.CNS,997160,One World Minerals Inc,7
OYL.CNS,25062,CGX Energy Inc,7
PA.CNS,978561,Palamina Corp,7
PAAS.CNS,24609,Pan American Silver Corp,7
PAC.CNS,49236,Pacton Gold Inc,7
PACR.CNS,1166319,Pac Roots Cannabis Corp,7
PAD.CNS,49033,Pan Andean Minerals Ltd,7
PAI.CNS,978460,Internet of Things Inc,7
PAID.CNS,1166317,Xtm Inc,7
PAL.CNS,49259,Parallel Mining Corp,7
PAN.CNS,49258,Pangolin Diamonds Corp.,7
PAS.CNS,960803,Pascal Biosciences Inc,7
PAT.CNS,978349,Patriot One Technologies Inc,7
PATH.CNS,24784,CounterPath Corp,7
PAU.CNS,1118171,Provenance Gold Corp,7
PAY.CNS,43030,Posera Ltd,7
PAYF.CNS,1135914,Purpose Enhanced Premium Yield,7
PBD.CNS,976795,Purpose Total Return Bond,7
PBH.CNS,25066,Premium Brands Holdings Corporation,7
PBI.CNS,976782,Purpose Best Ideas,7
PBIB.CNS,976783,Purpose Best Ideas Non Currency Hedged,7
PBIT.CNS,1129168,POSaBIT Systems Corp,7
PBL.CNS,43029,Pollard Banknote Limited,7
PBM.CNS,49252,Pacific Bay Minerals Ltd,7
PBTU.CNS,978945,Portage Biotech Inc,7
PBX.CNS,1076886,PowerBand Solutions Inc,7
PCLO.CNS,1062563,Pharmacielo Ltd,7
PCO.CNS,993949,Phoenix Canada Oil Co Ltd,7
PCQ.CNS,48895,Petrolympic Ltd,7
PD.CNS,24612,Precision Drilling Corporation,7
PDC.CNS,39056,PowerShares Canadian Dividend,7
PDF.CNS,976784,Purpose Core Dividend,7
PDH.CNS,978947,Premier Diversified Holdings Inc,7
PDM.CNS,969135,Palladium One Mining,7
PDO.CNS,978948,Pudo Inc,7
PDV.CNS,978077,Prime Dividend Corp,7
PE.CNS,958355,Pure Energy Minerals Ltd,7
PEA.CNS,25072,Pieridae Energy Ltd,7
PEAK.CNS,1165855,Sun Peak Metals Corp,7
PEH.CNS,978566,Primeline Energy Holdings Inc,7
PEI.CNS,978432,Prospera Energy Inc,7
PEMC.CNS,1073368,Pacific Empire Minerals Corp,7
PEO.CNS,48893,People Corporation,7
PER.CNS,24855,Peruvian Metals Corp,7
PERK.CNS,31176,Perk Labs Inc,7
PERU.CNS,993955,Chakana Copper Corp,7
PEX.CNS,978567,Pacific Ridge Exploration Ltd,7
PEY.CNS,24614,Peyto Exploration&Development Corp,7
PFAE.CNS,1142256,Picton Mahoney Fortified Active Extension Alternative Fund ETF,7
PFB.CNS,43021,PFB Corporation,7
PFC.CNS,25074,PetroFrontier Corp,7
PFHF.CNS,48284,PowerShares Fundamental High Yield Corporate Bond (CAD Hedged),7
PFIA.CNS,1142257,Picton Mahoney Fortified Income Alternative Fund ETF,7
PFL.CNS,976773,PowerShares 1-3 Year Laddered Floating Rate Note,7
PFM.CNS,49277,ProntoForms Corporation,7
PFMN.CNS,1142258,Picton Mahoney Fortified Market Neutral Alternative Fund ETF,7
PFMS.CNS,1142259,Picton Mahoney Fortified Multi-Strategy Alternative Fund ETF,7
PG.CNS,24615,Premier Gold Mines Limited,7
PGC.CNS,49417,Plato Gold Corp.,7
PGDC.CNS,48814,Patagonia Gold PLC,7
PGE.CNS,978568,Group Ten Metals Inc,7
PGLD.CNS,1115816,P2 Gold Inc,7
PGM.CNS,958357,Pure Gold Mining Inc,7
PGOL.CNS,1166320,Patriot Gold Corp,7
PGP.CNS,49132,Cobalt Power Group Inc,7
PGV.CNS,978570,Prodigy Ventures Inc,7
PGX.CNS,49278,Prosper Gold Corp.,7
PGZ.CNS,49257,Pan Global Resources Inc,7
PHA.CNS,1167648,Premier Health of America Inc,7
PHD.CNS,978611,Providence Gold Mines,7
PHE.CNS,976792,Purpose Tactical Hedged Equity,7
PHEB.CNS,976793,Purpose Tactical Hedged Equity Non-FX Hedged,7
PHI.CNS,48896,Philippine Metals Inc,7
PHO.CNS,48897,Photon Control Inc,7
PHR.CNS,976786,Purpose Duration Hedged Real Estate,7
PHRM.CNS,1167672,Newscope Capital Corporation,7
PHW.CNS,956446,Purpose International Tactical Hedged Equity,7
PHX.CNS,25076,PHX Energy Services Corporation,7
PHYS.CNS,1061158,Sprott Physical Gold,7
PHYSU.CNS,956437,Sprott Physical Gold,7
PICA.CNS,978086,Premium Income Corp,7
PID.CNS,956445,Purpose International Dividend,7
PIF.CNS,43042,Polaris Infrastructure Inc,7
PILL.CNS,978984,Canntab Therapeutics Ltd,7
PIN.CNS,976789,Purpose Monthly Income,7
PINK.CNS,48866,New World Resource Corp.,7
PIPE.CNS,49039,Blackbird Energy Inc,7
PJO.CNS,1166318,Project One Resources Ltd,7
PJT.CNS,978571,Partner Jet Corp,7
PJX.CNS,49272,PJX Resources Inc,7
PKB.CNS,992718,PeakBirch Logic Inc,7
PKG.CNS,978949,ParcelPal Technology Inc,7
PKI.CNS,24618,Parkland Fuel Corporation,7
PKK.CNS,49263,Peak Positioning Technologies Inc,7
PKT.CNS,951625,Parkit Enterprise Inc,7
PL.CNS,1062234,Pinnacle Renewable Holdings Inc,7
PLA.CNS,978572,Plata Latina Minerals Corp,7
PLAN.CNS,48694,Progressive Planet Solutions Inc,7
PLAY.CNS,978833,Blocplay Entertainment Inc,7
PLC.CNS,25078,Park Lawn Corp,7
PLNT.CNS,1117878,Better Plant Sciences Inc,7
PLTH.CNS,1093879,Planet 13 Holdings Inc,7
PLU.CNS,25256,Plateau Energy Metals Inc,7
PLUR.CNS,1167647,Plurilock Security Inc,7
PLUS.CNS,1097733,Plus Products Inc Class A,7
PLV.CNS,956447,PowerShares Low Volatility Portfolio,7
PLX.CNS,48781,Point Loma Resources Ltd,7
PLY.CNS,49274,Playfair Mining Ltd.,7
PMC.CNS,978919,Montana Gold Mining Company Inc,7
PME.CNS,978088,Sentry Select Primary Metals Corp,7
PMED.CNS,1165444,Predictmedix Inc,7
PMIF.CNS,1052311,PIMCO Monthly Income Fund,7
PML.CNS,25084,Panoro Minerals Ltd.,7
PMM.CNS,976790,Purpose Multi Strategy Market Neutral,7
PMN.CNS,42711,Promis Neurosciences Inc,7
PMNT.CNS,1122303,PIMCO Global Short Maturity Fund (Canada) ETF Series,7
PMR.CNS,978573,Prime Meridian Resources Corp,7
PMT.CNS,25085,Perpetual Energy Inc,7
PMTS.CNS,960814,CPI Card Group Inc,7
PNCA.CNS,978089,Postmedia Network Canada Corp A,7
PNCB.CNS,978090,Postmedia Network Canada Corp B,7
PNE.CNS,48898,Pine Cliff Energy Ltd,7
PNG.CNS,978574,Kraken Robotics Inc,7
PNN.CNS,978575,Pennine Petroleum Corp,7
PNP.CNS,25087,Pinetree Capital Ltd,7
POE.CNS,25088,Pan Orient Energy Corp.,7
POG.CNS,986068,Perisson Petroleum Corp,7
POM.CNS,31154,Polymet Mining Corp,7
POND.CNS,48823,Pond Technologies Holdings Inc,7
POPR.CNS,1153170,PopReach Corp,7
POR.CNS,993951,Portofino Resources Inc,7
POT.CNS,978943,Weekend Unlimited Inc,7
POU.CNS,24622,Paramount Resources Ltd.,7
POW.CNS,24623,Power Corporation Of Canada,7
PP.CNS,48887,Pacific Silk Road Resources Group Inc,7
PPEH.CNS,993952,Pacific Paradym Energy Inc,7
PPK.CNS,978577,Prospect Park Capital Corp,7
PPL.CNS,24624,Pembina Pipeline Corp,7
PPM.CNS,978578,Pacific Imperial Mines Inc,7
PPR.CNS,989630,Prairie Provident Resources Inc,7
PPS.CNS,39057,PowerShares Canadian Preferred Share,7
PPX.CNS,48894,PPX Mining Corp,7
PQE.CNS,49193,Petroteq Energy Inc,7
PR.CNS,976772,Lysander Slater Active,7
PRA.CNS,976785,Purpose Diversified Real Asset,7
PRB.CNS,25090,Probe Metals Inc,7
PRE.CNS,978668,Paleo Resources Inc,7
PREV.CNS,995193,PreveCeutical Medical Inc,7
PRG.CNS,49275,Precipitate Gold Corp,7
PRH.CNS,962587,Pearl River Holdings Ltd,7
PRM.CNS,1055996,Big Pharma Split Corp Class A,7
PRMO.CNS,1096019,Primo Nutraceuticals Inc,7
PRMW.CNS,24468,Primo Water Corp,7
PRN.CNS,976545,Profound Medical Corp,7
PRO.CNS,25092,Pershimex Resources Corp,7
PROSH.CNS,978650,ProSmart Enterprises Inc,7
PRQ.CNS,24626,Petrus Resources Ltd,7
PRS.CNS,986285,Prism Resources Inc,7
PRSN.CNS,25077,Peeks Social Ltd,7
PRT.CNS,1076783,Plymouth Rock Technologies Inc,7
PRU.CNS,43017,Perseus Mining Ltd,7
PRYM.CNS,978250,Prime Mining Corp,7
PSA.CNS,976788,Purpose High Interest Savings,7
PSB.CNS,48202,PowerShares 1-5Yr Laddered Investment Grade Corporate Bond,7
PSD.CNS,25093,Pulse Seismic Inc,7
PSE.CNS,978950,Pasinex Resources Ltd,7
PSH.CNS,943908,Petroshale Vot,7
PSI.CNS,24627,Pason Systems Inc,7
PSK.CNS,943642,PrairieSky Royalty Ltd,7
PSL.CNS,978581,Prospero Silver Corp,7
PSLV.CNS,1061159,Sprott Physical Silver,7
PSLVU.CNS,956438,Sprott Physical Silver,7
PST.CNS,978582,Pistol Bay Mining Inc,7
PSUU.CNS,997606,Purpose US Cash,7
PSY.CNS,956448,PowerShares Global Shareholder Yield,7
PSYC.CNS,1167671,Psyched Wellness Ltd,7
PSYFP.CNS,1165311,Ghp Noetic Science Psychedelic Phar,7
PTC.CNS,978584,Petrox Resources Corp,7
PTE.CNS,978585,Pioneering Technology Corp,7
PTF.CNS,48891,Pender Growth Fund VCC Inc,7
PTG.CNS,49271,Pivot Technology Solutions Inc,7
PTK.CNS,25057,POET Technologies Inc,7
PTM.CNS,25096,Platinum Group Metals Ltd,7
PTPH.CNS,49265,Petrichor Energy Inc,7
PTQ.CNS,49262,Protech Home Medical Corp,7
PTS.CNS,31155,Points International Ltd.,7
PTU.CNS,976546,Purepoint Uranium Group Inc,7
PTX.CNS,978587,Platinex Inc,7
PUC.CNS,989642,Pancontinental Resources Corporation,7
PUD.CNS,997301,Purpose US Dividend Units,7
PUL.CNS,1055130,Pulse Oil Corp,7
PUMA.CNS,49279,Puma Exploration Inc,7
PUMP.CNS,1123862,World Class Extractions Inc,7
PUREH.CNS,993958,Pure Global Cannabis Inc,7
PURX.CNS,1163875,Pure Extraction Corp,7
PUSH.CNS,1097384,Pushfor Investments Inc,7
PVG.CNS,25099,Pretium Resources Inc,7
PVT.CNS,1167175,Pivotree Inc,7
PWM.CNS,48678,Aldrin Resource Corp,7
PWR.CNS,1097388,Captiva Verde Land Corp,7
PX.CNS,25100,Pelangio Exploration Inc,7
PXA.CNS,1166839,Phoenix Gold Resources Corp,7
PXC.CNS,48204,PowerShares FTSE RAFI Canadian Fundamental,7
PXG.CNS,956444,PowerShares FTSE RAFI Global Fundamental,7
PXI.CNS,978589,Planet Ventures Inc,7
PXS.CNS,976776,PowerShares FTSE RAFI US Fundamental,7
PXT.CNS,40498,Parex Resources Inc,7
PXUF.CNS,48283,PowerShares FTSE RAFI US Fundamental (CAD Hedged),7
PYR.CNS,49280,PyroGenesis Canada Inc,7
PZA.CNS,43025,Pizza Pizza Royalty Corp.,7
PZC.CNS,976774,PowerShares FTSE RAFI Canadian Small Mid Fundamental,7
PZW.CNS,976775,PowerShares FTSE RAFI Global Small-Mid Fundamental,7
QAH.CNS,1073117,Mackenzie US Large Cap Equity CAD Hedged,7
QBB.CNS,1073118,Mackenzie Canadian Aggregate Bond,7
QBOT.CNS,978838,Bravura Ventures Corp,7
QBRA.CNS,978121,Quebecor Inc,7
QBRB.CNS,24632,Quebecor Inc Class B,7
QBTCU.CNS,1161064,Bitcoin Fund ,7
QCA.CNS,978954,Quinsam Capital Corp,7
QCCU.CNS,1162534,QC Copper and Gold Inc,7
QCD.CNS,1055062,AGFiQ Enhanced Core Canadian Equity,7
QCE.CNS,1062012,Mackenzie Canadian Large Cap Equity Index ETF,7
QCN.CNS,1062014,Mackenzie Canadian Equity,7
QCX.CNS,978394,QcX Gold Corp,7
QDX.CNS,1073114,Mackenzie International Equity,7
QDXH.CNS,1073115,Mackenzie International Equity CAD Hedged,7
QEC.CNS,43040,Questerre Energy Corporation,7
QEM.CNS,997607,QuantShares Enhanced Core Emerging Markets,7
QEX.CNS,49073,QuestEx Gold Copper Ltd,7
QGR.CNS,978594,Q-Gold Resources Ltd,7
QHY.CNS,1062013,Mackenzie US High Yield Bond Index ETF (CAD-Hedged),7
QIE.CNS,1055064,AGFiQ Enhanced Core International Equity,7
QIS.CNS,48906,Quorum Information Technologies Inc,7
QIT.CNS,48904,Quinto Resources Inc,7
QMA.CNS,997609,QuantShares MultiAsset Allocation,7
QMC.CNS,993954,QMC Quantum Minerals Corp,7
QMX.CNS,43039,QMX Gold Corp,7
QNC.CNS,978235,Quantum Numbers Inc,7
QPM.CNS,978318,Quebec Precious Metals Corporation,7
QPT.CNS,962588,Quest PharmaTech Inc,7
QQ.CNS,48905,Quizam Media Corp,7
QQCF.CNS,976779,PowerShares QQQ CAD Hedged,7
QRC.CNS,1165321,Queens Road Capital Investment Ltd,7
QRO.CNS,1166840,Quadro Resources Ltd,7
QSB.CNS,1073121,Mackenzie Canadian Short Term Bond,7
QSR.CNS,943641,Restaurant Brands International Inc,7
QST.CNS,48903,Questor Technology Inc,7
QTA.CNS,25105,Quaterra Resources Inc,7
QTRH.CNS,24687,Wi-LAN Inc,7
QUIG.CNS,1073123,Mackenzie US Investment Grade Corporate Bond CAD Hedged,7
QUIS.CNS,1130956,Quisitive Technology Solutions Inc,7
QUS.CNS,997608,QuantShares Enhanced Core US,7
QUU.CNS,1062015,Mackenzie US Large Cap Equity,7
QXM.CNS,48153,First Asset Morningstar National Bank Quebec Common Class,7
QYOU.CNS,1031144,Qyou Media Inc,7
QZM.CNS,978597,Quartz Mountain Resources Ltd,7
RAD.CNS,1166324,Radial Research Corp,7
RAIN.CNS,1131233,Rain City Resources Inc,7
RAK.CNS,978599,Rackla Metals Inc,7
RAMM.CNS,1166321,Ramm Pharma Corp,7
RAYA.CNS,953908,Stingray Group Inc,7
RAYB.CNS,953909,Stingray Digital Group Inc B,7
RAYN.CNS,1166323,Raindrop Ventures Inc,7
RBA.CNS,31157,Ritchie Bros Auctioneers,7
RBIH.CNS,48919,Russell Breweries Inc,7
RBNK.CNS,1054697,RBC Canadian Bank Yield,7
RBO.CNS,976805,RBC 1-5 Year Laddered Corporate Bond,7
RBOT.CNS,1056179,Horizons Robotics and Automation Index ETF,7
RBX.CNS,50537,Res Robex Inc,7
RCD.CNS,976806,RBC Quant Canadian Dividend Leaders,7
RCE.CNS,976807,RBC Quant Canadian Equity Leaders,7
RCG.CNS,24916,RF Capital Group Inc,7
RCH.CNS,43058,Richelieu Hardware Ltd.,7
RCIA.CNS,978126,Rogers Communications Inc,7
RCIB.CNS,24635,Rogers Communications Inc,7
RCK.CNS,978600,Rock Tech Lithium Inc,7
RCLF.CNS,978602,Rockcliff Metals Corp,7
RCT.CNS,978601,Rochester Resources Ltd,7
RDG.CNS,1166842,Ridgeline Minerals Corp,7
RDKO.CNS,48794,Radiko Holdings Corp,7
RDL.CNS,43047,Redline Communications Group Inc,7
RDS.CNS,951626,Ressources Minieres Radisson Inc,7
RDU.CNS,25109,Radius Gold Inc,7
RE.CNS,1166603,RE Royalties Ltd,7
REAL.CNS,1029163,Real Matters Inc,7
REAX.CNS,1166841,Real Brokerage Inc,7
REBLP.CNS,1153694,Genesis Acquisition Corp,7
RECO.CNS,978481,Reconnaissance Energy Africa Ltd,7
RECP.CNS,950052,Cara Operations Ltd,7
REG.CNS,49294,Regulus Resources Inc,7
REKO.CNS,49295,Reko International Group Inc,7
REL.CNS,25111,Roughrider Exploration Ltd,7
RELA.CNS,978848,Relay Medical Corp,7
RENTP.CNS,1155838,Shine Box Capital Corp,7
REO.CNS,25112,Reservoir Capital Corp,7
RET.CNS,43050,Reitmans Canada Ltd,7
RETA.CNS,24638,Reitmans Canada Ltd A,7
REVO.CNS,48859,CUV Ventures Corp,7
REX.CNS,49250,Orex Minerals Inc,7
RFC.CNS,48913,RIFCO Inc,7
RFP.CNS,43053,Resolute Forest Products Inc,7
RFR.CNS,978956,Renforth Resources Inc,7
RG.CNS,25113,Romios Gold Resources Inc,7
RGD.CNS,25114,Reunion Gold Corporation,7
RGI.CNS,993956,Reco International Group Inc,7
RGLD.CNS,1097496,Red Lake Gold Inc,7
RGOX.CNS,978958,Range Energy Resources Inc,7
RHC.CNS,951627,Royal Helium Ltd,7
RHT.CNS,978797,Reliq Health Technologies Inc,7
RICH.CNS,978863,Explorex Resources Inc,7
RID.CNS,976808,RBC Quant EAFE Dividend Leaders,7
RIDH.CNS,976809,RBC Quant EAFE Dividend Leaders CAD Hedged,7
RIDU.CNS,976810,RBC Quant EAFE Dividend Leaders USD,7
RIE.CNS,976811,RBC Quant EAFE Equity Leaders,7
RIEH.CNS,976812,RBC Quant EAFE Equity Leaders (CAD Hedged) ETF,7
RIO.CNS,1009388,Rio2 Ltd,7
RISE.CNS,978994,Rise Gold Corp,7
RIT.CNS,958359,First Asset Canadian REIT,7
RIV.CNS,1096086,Canopy Rivers Inc,7
RIWI.CNS,978959,Riwi Corp,7
RJXA.CNS,978605,RJK Explorations Ltd,7
RK.CNS,25117,Rockhaven Resources Ltd,7
RKR.CNS,49303,ROKMASTER Resources Corp,7
RKS.CNS,978960,Rockshield Capital Corp,7
RLB.CNS,976804,RBC 1-5 Year Laddered Canadian Bond,7
RLG.CNS,978961,West Red Lake Gold Mines Inc,7
RLP.CNS,978687,Realia Properties Inc,7
RLSC.CNS,49212,Rise Life Science Corp,7
RLV.CNS,978606,Relevium Technologies Inc,7
RLYG.CNS,1167056,Riley Gold Corp,7
RM.CNS,49302,Routemaster Capital Inc,7
RMD.CNS,978607,Richmond Minerals Inc,7
RME.CNS,25119,Rocky Mountain Dealerships Inc,7
RMI.CNS,1166843,Ridgestone Mining Inc,7
RMK.CNS,978608,Red Moon Resources Inc,7
RML.CNS,25120,Rusoro Mining Ltd,7
RMMI.CNS,1166859,RMMI Corp,7
RMO.CNS,49285,Rainy Mountain Royalty Corp,7
RMSP.CNS,1073369,RMR Science Technologies Inc,7
RNG.CNS,978603,Reliant Gold Corp,7
RNP.CNS,976224,Royalty North Partners Ltd,7
RNW.CNS,43104,TransAlta Renewables Inc,7
ROCK.CNS,1122405,Rockridge Resources Ltd,7
ROE.CNS,962589,Renaissance Oil Corp,7
ROI.CNS,25123,Route1 Inc,7
ROK.CNS,25071,Petrodorado Energy Ltd,7
ROMJ.CNS,1097389,Rubicon Organics Inc,7
ROOT.CNS,1054770,Roots Corp,7
ROS.CNS,1158950,Roscan Gold Corp,7
ROSVP.CNS,1152226,Roosevelt Capital Group Inc,7
ROVR.CNS,1095927,Rover Metals Corp,7
ROX.CNS,48728,Canstar Resources Inc,7
ROXG.CNS,48917,Roxgold Inc,7
RP.CNS,951628,RepliCel Life Sciences Inc,7
RPC.CNS,49286,Raise Production Inc,7
RPD.CNS,976815,RBC Quant European Dividend Leaders,7
RPDH.CNS,976816,RBC Quant European Dividend Leaders CAD Hedged,7
RPDU.CNS,976817,RBC Quant European Dividend Leaders USD,7
RPF.CNS,1031017,RBC Canadian Preferred Share,7
RPP.CNS,978614,Regent Pacific Properties Inc,7
RPX.CNS,49290,Red Pine Exploration Inc,7
RQB.CNS,1056377,Ravenquest Biomed Inc,7
RQI.CNS,976825,RBC Target 2021 Corporate Bond,7
RQJ.CNS,997613,RBC Target 2022 Corporate Bond,7
RQK.CNS,997614,RBC Target 2023 Corporate Bond,7
RRI.CNS,49300,Riverside Resources Inc,7
RRS.CNS,978616,Rogue Resources Inc,7
RSI.CNS,25130,Rogers Sugar Inc,7
RSLV.CNS,1163364,Reyna Silver Corp,7
RSS.CNS,978962,Resaas Services Inc,7
RSV.CNS,978617,Resolve Ventures Inc,7
RSYH.CNS,978618,RSI International Systems Inc,7
RTG.CNS,43063,RTG Mining Inc,7
RTH.CNS,49289,Rathdowney Resources Ltd,7
RTI.CNS,993959,Radient Technologies Inc,7
RTM.CNS,978619,RT Minerals Corp,7
RUBH.CNS,1080060,RBC U.S. Banks Yield CAD Hedged,7
RUBY.CNS,1080057,RBC U.S. Banks Yield,7
RUD.CNS,976818,RBC Quant US Dividend Leaders,7
RUDH.CNS,976819,RBC Quant US Dividend Leaders CAD Hedged,7
RUDU.CNS,976820,RBC Quant US Dividend Leaders USD,7
RUE.CNS,976821,RBC Quant US Equity Leaders,7
RUEH.CNS,976822,RBC Quant US Equity Leaders CAD Hedged,7
RUG.CNS,25131,Rugby Mining Limited,7
RUM.CNS,978620,Rocky Mountain Liquor Inc,7
RUNH.CNS,48918,Running Fox Resource Corp.,7
RUP.CNS,49304,Rupert Resources Ltd.,7
RUS.CNS,24642,Russel Metals Inc,7
RVG.CNS,978643,Revival Gold Inc,7
RVL.CNS,976547,Revelo Resources Corp,7
RVR.CNS,978963,Rift Valley Resources Corp,7
RVV.CNS,951629,Revive Therapeutics Ltd,7
RVX.CNS,43055,Resverlogix Corp.,7
RW.CNS,978621,Renoworks Software Inc,7
RWB.CNS,1091197,Red White & Bloom Brands Inc,7
RWC.CNS,976672,First Asset MSCI Canada Low Risk Weighted Common,7
RWE.CNS,976675,First Asset MSCI Europe Low Risk Weighted CAD Hedged Common,7
RWEB.CNS,976676,First Asset MSCI Europe Low Risk Weighted Common,7
RWRH.CNS,24840,Rockwealth Resources Corp,7
RWU.CNS,976677,First Asset MSCI USA Low Risk Weighted CAD Hedged Common,7
RWUB.CNS,976678,First Asset MSCI USA Low Risk Weighted Common,7
RWW.CNS,976679,First Asset MSCI World Low Risk Weighted CAD Hedged Common,7
RWWB.CNS,976680,First Asset MSCI World Low Risk Weighted Common,7
RWX.CNS,1045791,CI First Asset MSCI International Low Risk Weighted ETF,7
RX.CNS,48708,Biosyent Inc,7
RXD.CNS,976813,RBC Quant Emerging Markets Dividend Leaders,7
RXDU.CNS,997302,RBC Quant Emerging Markets Dividend Leaders USD Units,7
RXE.CNS,976814,RBC Quant Emerging Markets Equity Leaders,7
RXM.CNS,978964,Rockex Mining Corp,7
RY.CNS,24643,Royal Bank of Canada,7
RYE.CNS,978622,Rhyolite Resources Ltd,7
RYO.CNS,49299,Rio Silver Inc,7
RYR.CNS,978623,Royal Road Minerals Ltd,7
RYU.CNS,978624,RYU Apparel Inc,7
RZE.CNS,1073763,Razor Energy Corp,7
RZR.CNS,978965,Razore Rock Resources Inc,7
RZZ.CNS,48672,Abitibi Royalties Inc,7
S.CNS,24644,Sherritt International Corporation,7
SACP.CNS,1062567,Savanna Capital Corp,7
SAE.CNS,1073764,Sable Resources Ltd,7
SAFE.CNS,25097,3 Sixty Risk Solutions Ltd,7
SAG.CNS,49188,Sterling Metals Corp,7
SAH.CNS,49308,Sahara Energy Ltd.,7
SAIH.CNS,993960,Sunshine Agri Tech Inc,7
SAM.CNS,43084,Starcore International Mines Ltd,7
SAND.CNS,1166327,Silver Sands Resources Corp,7
SAO.CNS,1162511,South Atlantic Gold Inc,7
SAP.CNS,24645,Saputo Inc,7
SASY.CNS,1166326,Sassy Resources Corp,7
SAT.CNS,25137,Asian Television Network International Ltd,7
SAU.CNS,43083,St Augustine Gold and Copper Ltd,7
SAY.CNS,1167652,Sparta Capital Ltd,7
SB.CNS,978626,Stratabound Minerals Corp,7
SBB.CNS,25138,Sabina Gold & Silver Corp.,7
SBC.CNS,978143,Brompton Split Banc Corp,7
SBI.CNS,43068,Serabi Gold PLC,7
SBM.CNS,49320,Sirona Biochem Corp,7
SBN.CNS,978145,S Split Corp,7
SBR.CNS,43073,Silver Bear Resources Inc,7
SBSH.CNS,976548,Sebastiani Ventures Corp,7
SBTB.CNS,978147,Silver Bullion Trust,7
SCB.CNS,42805,Street Capital Group Inc,7
SCD.CNS,993961,Samoth Oilfield Inc,7
SCL.CNS,24647,ShawCor Ltd.,7
SCLT.CNS,993920,Searchlight Resources Inc,7
SCOT.CNS,50538,Scottie Resources Corp,7
SCR.CNS,49361,Score Media and Gaming Inc,7
SCT.CNS,978430,Skychain Technologies Inc,7
SCV.CNS,1166860,Scotch Creek Ventures Inc,7
SCY.CNS,42836,Scandium Interna,7
SCZ.CNS,50539,Santacruz Silv,7
SDC.CNS,978628,SolidusGold Inc,7
SDE.CNS,49093,Spartan Delta Corp,7
SDI.CNS,49413,Stampede Drilling Inc,7
SDR.CNS,978629,Stroud Resources Ltd,7
SE.CNS,1166330,Sweet Earth Holdings Corp,7
SEA.CNS,25146,Seabridge Gold Inc,7
SEB.CNS,943967,Smart Employee Benefits,7
SEC.CNS,43067,Senvest Capital Inc,7
SEI.CNS,49414,Sintana Energy Inc,7
SENS.CNS,978507,Sensor Technologies Inc,7
SES.CNS,25148,Secure Energy Services Inc,7
SEV.CNS,49329,Spectra7 Microsystems Inc,7
SFC.CNS,1029157,Alignvest Acquisition II Corp Class A,7
SFD.CNS,49221,NXT Energy Solutions Inc,7
SFI.CNS,1167654,Solution Financial Inc,7
SFR.CNS,25194,Sandfire Resources America Inc,7
SFT.CNS,48941,Softrock Minerals Ltd.,7
SFX.CNS,978631,Sphinx Resources Ltd,7
SG.CNS,1166335,Stevens Gold Nevada Inc,7
SGA.CNS,993963,Samco Gold Ltd,7
SGC.CNS,25150,Solstice Gold Corp,7
SGE.CNS,978633,Strategem Capital Corp,7
SGI.CNS,997158,Superior Gold Inc,7
SGMA.CNS,1167651,Sigma Lithium Resources Corp,7
SGMD.CNS,978485,Brattle Street Investment Corp,7
SGN.CNS,25151,Scorpio Gold Corp,7
SGO.CNS,978642,Sonoro Gold Corp,7
SGQ.CNS,24648,SouthGobi Resources Ltd.,7
SGRO.CNS,978429,Sierra Growth Corp,7
SGU.CNS,978634,Signature Resources Ltd,7
SGY.CNS,40464,Surge Energy Inc,7
SGZ.CNS,48929,Sego Resources Inc,7
SHG.CNS,1127187,CB2 Insights Inc,7
SHL.CNS,49335,Spruce Ridge Resources Ltd.,7
SHLE.CNS,1008679,Source Energy Services Ltd,7
SHM.CNS,978636,Saccharum Energy Corp,7
SHOP.CNS,25152,Shopify Inc,7
SHP.CNS,978969,Shoal Point Energy Ltd,7
SHRC.CNS,978897,Sharc International Systems,7
SHRM.CNS,1159541,Champignon Brands Inc,7
SHV.CNS,978970,Seahawk Ventures Inc,7
SIA.CNS,24988,Sienna Senior Living Inc,7
SIC.CNS,49325,Sokoman Minerals Corp,7
SID.CNS,1031756,CI First Asset U.S. Trendleaders ETF,7
SIE.CNS,48803,Sienna Resources Inc,7
SIG.CNS,1062568,Sitka Gold Corp,7
SII.CNS,25153,Sprott Inc,7
SIL.CNS,978638,SilverCrest Metals Inc,7
SIR.CNS,48931,Serengeti Resources Inc,7
SIRE.CNS,978831,Sire Bioscience Inc,7
SIS.CNS,43065,Savaria Corporation,7
SIX.CNS,1093880,Hydro66 Holdings Corp,7
SIXW.CNS,1166325,Sixth Wave Innovations Inc,7
SIZE.CNS,1123267,Eastern Zinc Corp,7
SJ.CNS,43085,Stella-Jones Inc,7
SJL.CNS,49409,Saint Jean Carbon Inc,7
SJRA.CNS,978640,Shaw Communications Inc,7
SJRB.CNS,24650,Shaw Communications Inc Class B,7
SKE.CNS,49321,Skeena Resources Ltd,7
SKK.CNS,978641,Strikewell Energy Corp,7
SKP.CNS,25159,Strikepoint Gold Inc,7
SKRB.CNS,1167494,Skarb Exploration Corp,7
SKRR.CNS,48712,SKRR Exploration Inc,7
SKYG.CNS,978659,Sky Gold Corp,7
SKYL.CNS,1166336,Skyledger Tech Corp,7
SLE.CNS,1166861,SLE Synergy Ltd,7
SLF.CNS,24651,Sun Life Financial Inc,7
SLL.CNS,978576,Standard Lithium Ltd,7
SLNG.CNS,1121774,Slang Worldwide Inc,7
SLR.CNS,43078,Solitario Exploration & Royalty Corp,7
SLS.CNS,1163394,Solaris Resources Inc,7
SLV.CNS,1163237,Silver Dollar Resources Inc,7
SLVR.CNS,49247,Silver Tiger Metals Inc,7
SLZ.CNS,1118174,Slave Lake Zinc Corp,7
SMBH.CNS,48937,Simba Essel Energy Inc,7
SMC.CNS,978153,Sulliden Minerals SA,7
SMD.CNS,25163,Strategic Metals Ltd,7
SME.CNS,49309,Sama Resources Inc,7
SMGH.CNS,49316,Sierra Madre Developments Inc,7
SML.CNS,978674,Tango Mining Ltd,7
SMM.CNS,48934,Silver Mountain Mines Inc,7
SMN.CNS,48921,San Marco Resources Inc,7
SMP.CNS,1165862,Southern Empire Resources Corp,7
SMR.CNS,978455,Shine Minerals Corp,7
SMT.CNS,24847,Sierra Metals Inc,7
SMY.CNS,978645,Search Minerals Inc,7
SN.CNS,978646,Sennen Potash Corp,7
SNA.CNS,48949,Star Navigation Systems Group Ltd,7
SNC.CNS,24654,SNC-Lavalin Group Inc,7
SNF.CNS,978647,Sunora Foods Inc,7
SNG.CNS,49317,Silver Range Resources Ltd,7
SNL.CNS,1166328,Sentinel Resources Corp,7
SNM.CNS,25164,ShaMaran Petroleum Corp,7
SNN.CNS,1057639,Sunniva Inc,7
SNR.CNS,1166329,79 Resources Ltd,7
SNS.CNS,48831,Select Sands Corp,7
SNV.CNS,49328,Sonoro Energy Ltd,7
SOC.CNS,48942,Sonora Gold & Silver Corp,7
SOCK.CNS,49368,Smooth Rock Ventures Corp,7
SOFT.CNS,1114550,Softlab9 Software Solutions Inc,7
SOI.CNS,48938,Sirios Resources Inc,7
SOIL.CNS,943965,Saturn Oil & Gas Inc,7
SOL.CNS,978470,SOL Global Investments Corp,7
SOLG.CNS,1163853,SolGold PLC,7
SOLR.CNS,24904,Solar Alliance Energy Inc,7
SOMA.CNS,976543,Soma Gold Corp,7
SONA.CNS,1097390,Sona Nanotech Inc,7
SOP.CNS,43031,SOPerior Fertilizer Corp,7
SOU.CNS,48946,Southern Energy Corp,7
SOY.CNS,31160,SunOpta Inc,7
SP.CNS,1166333,Silver Phoenix Resources Inc,7
SPA.CNS,25169,Spanish Mountain Gold Ltd,7
SPB.CNS,24655,Superior Plus Corp,7
SPD.CNS,43075,Silver Predator Corp,7
SPDR.CNS,1161486,Spyder Cannabis Inc,7
SPEY.CNS,1166332,Spey Resources Corp,7
SPFY.CNS,1116245,Spacefy Inc,7
SPG.CNS,1097536,Spark Power Group Inc,7
SPI.CNS,25170,Canadian Spirit Resources Inc,7
SPMT.CNS,48944,Spearmint Resources Inc,7
SPN.CNS,49323,Snipp Interactive Inc,7
SPO.CNS,978973,SponsorsOne Inc,7
SPOR.CNS,49370,New Wave Holdings Corp,7
SPOT.CNS,1043355,Goldspot Discoveries Corp,7
SPP.CNS,49331,SPoT Coffee Ltd,7
SPPPU.CNS,40496,Sprott Physical Platinum and Palladium Trust,7
SPR.CNS,40468,Sproutly Canada Inc,7
SPSA.CNS,25172,Sportscene Group Inc,7
SPX.CNS,49337,Stellar AfricaGold Inc,7
SQD.CNS,25173,SQI Diagnostics Inc,7
SQG.CNS,50526,Spackman Equit,7
SQX.CNS,1006223,Squatex Energy and Ressources Inc,7
SR.CNS,49341,Strategic Resources Inc,7
SRA.CNS,978654,Stria Lithium Inc,7
SRC.CNS,49334,Stakeholder Gold Corp,7
SRE.CNS,978655,Saville Resources Inc,7
SRG.CNS,1052359,SRG Graphite Inc,7
SRHI.CNS,24701,Sprott Resource Holdings Inc Class A,7
SRI.CNS,978656,Sparton Resources Inc,7
SRL.CNS,25174,Salazar Resources Limited,7
SRX.CNS,49338,Storm Resources Ltd,7
SSA.CNS,48945,Spectra Inc,7
SSCH.CNS,958360,Smartcool Systems Inc,7
SSE.CNS,978657,Silver Spruce Resources Inc,7
SSL.CNS,25177,Sandstorm Gold Ltd N,7
SSRM.CNS,24656,SSR Mining Inc,7
SSV.CNS,25179,Southern Silver Exploration Corp.,7
SSVR.CNS,1163236,Summa Silver Corp,7
ST.CNS,1166331,Straightup Resources Inc,7
STA.CNS,943964,Sanatana Resources,7
STC.CNS,49311,Sangoma Technologies Corporation,7
STE.CNS,48837,Starr Peak Exploration Ltd,7
STEM.CNS,1093881,Stem Holdings Inc,7
STEP.CNS,1009369,STEP Energy Services Ltd,7
STG.CNS,49072,Stone Gold Inc,7
STGO.CNS,1084825,Steppe Gold Ltd,7
STH.CNS,49420,Stelmine Canada Ltd,7
STMP.CNS,49028,Panorama Petroleum Inc,7
STN.CNS,24657,Stantec Inc,7
STND.CNS,1166864,Standard Uranium Ltd.,7
STPL.CNS,1014063,BMO Global Consumer Staples Hedged,7
STS.CNS,978660,South Star Mining Corp,7
STU.CNS,1136080,Stuhini Exploration Ltd,7
STUV.CNS,1167653,Stuve Gold Corp,7
STX.CNS,978978,Starrex International Ltd,7
SU.CNS,24658,Suncor Energy Inc,7
SUGR.CNS,49296,SugarBud Craft Growers Corp,7
SUI.CNS,1166844,Superior Mining International Corp,7
SUN.CNS,978979,Wildflower Brands Inc,7
SUNM.CNS,1104603,Sun Metals Corp,7
SUP.CNS,978662,Northern Superior Resources Inc,7
SUPR.CNS,978234,Volt Energy Corp,7
SUR.CNS,978330,Surge Exploration Inc,7
SURG.CNS,48793,Surge Copper Corp,7
SVA.CNS,49315,Sernova Corp,7
SVB.CNS,43074,Silver Bull Resources Inc,7
SVE.CNS,997195,Silver One Resources Inc,7
SVG.CNS,978664,Silver Grail Resources Ltd,7
SVI.CNS,943993,Storage Vault Canada Inc,7
SVM.CNS,24659,Silvercorp Metals Inc,7
SVR.CNS,976769,iShares Silver Bullion CAD Hedged,7
SVRC.CNS,976768,iShares Silver Bullion,7
SVS.CNS,993966,Solarvest Bioenergy Inc,7
SW.CNS,25185,Sierra Wireless Inc,7
SWA.CNS,50524,Sarama Resourc,7
SWEL.CNS,978825,Sativa Wellness Group Inc,7
SWH.CNS,43090,Sunwah International Ltd,7
SWIS.CNS,1166035,Globex Data Ltd,7
SWLF.CNS,978421,Silver Wolf Exploration Ltd,7
SX.CNS,978981,St-Georges Eco-Mining Corp,7
SXI.CNS,43092,Synex International Inc,7
SXL.CNS,25191,Slam Exploration Ltd.,7
SXP.CNS,43091,Supremex Inc,7
SXTY.CNS,1166334,Sixty North Gold Mining Ltd,7
SYH.CNS,48939,Skyharbour Resources Ltd,7
SYZ.CNS,25193,Sylogist Ltd.,7
SZLS.CNS,42868,GeneNews Limited,7
SZM.CNS,25187,ScoZinc Mining Ltd,7
T.CNS,24662,Telus Corp,7
TA.CNS,24663,TransAlta Corp,7
TAAL.CNS,978975,Squire Mining Ltd,7
TAAT.CNS,49347,Taat Lifestyle & Wellness Ltd,7
TAI.CNS,978982,Talmora Diamond Inc,7
TAJ.CNS,49349,Tajiri Resources Corp,7
TAL.CNS,25160,Petrotal Corp,7
TAO.CNS,40500,TAG Oil Ltd.,7
TASKX.CNS,1166291,Fasttask Technologies Inc,7
TAU.CNS,1167656,Thesis Gold Inc,7
TBI.CNS,1118173,Thoughtful Brands Inc,7
TBL.CNS,43093,Taiga Building Products Ltd.,7
TBP.CNS,978871,Tetra Bio Pharma Inc,7
TBR.CNS,50527,Timberline Resources Corporation,7
TBRD.CNS,978409,Thunderbird Entertainment Group Inc,7
TBX.CNS,1161062,Turmalina Metals Corp,7
TC.CNS,31162,Tucows Inc,7
TCA.CNS,978669,Timia Capital Corp,7
TCAN.CNS,1118027,Transcanna Holdings Inc,7
TCC.CNS,978799,Trenchant Capital Corp,7
TCF.CNS,1166338,Trillion Energy International Inc,7
TCI.CNS,1073765,Target Capital Inc,7
TCLA.CNS,24665,Transcontinental Inc,7
TCLB.CNS,978158,Transcontinental Inc,7
TCN.CNS,43109,Tricon Capital Group Inc,7
TCO.CNS,48692,Transatlantic Mining Corp,7
TCS.CNS,43095,TECSYS Inc,7
TCW.CNS,24667,Trican Well Service Ltd.,7
TD.CNS,24668,Toronto Dominion Bank,7
TDB.CNS,1030954,TD Canadian Aggregate Bond,7
TEC.CNS,1131148,TD Global Technology Leaders,7
TECKA.CNS,976225,Teck Resources Ltd A,7
TECKB.CNS,24664,Teck Resources Ltd Class B,7
TECT.CNS,1158948,Tectonic Metals Inc,7
TEI.CNS,978171,Toscana Energy Income Corp,7
TELO.CNS,1031731,Telo Genomics Corp,7
TEM.CNS,49352,Tembo Gold Corp,7
TEMP.CNS,1131230,Tempus Capital Inc,7
TENO.CNS,1097391,Terra Nova Resources Inc,7
TEQ.CNS,1117889,Terranueva Corp,7
TER.CNS,1009389,Terrascend Corp,7
TES.CNS,49357,Tesoro Minerals Corp.,7
TEST.CNS,1084246,Flurotech Ltd,7
TEV.CNS,25023,Tervita Corp,7
TF.CNS,985851,Timbercreek Financial Corp,7
TFC.CNS,1166339,Trichome Financial Corp,7
TFII.CNS,24671,TFI International Inc,7
TGC.CNS,1080119,Taiga Gold Corp,7
TGED.CNS,1131149,TD Active Global Enhanced Dividend,7
TGH.CNS,985938,Tornado Global Hydrovacs Ltd,7
TGIF.CNS,978593,1933 Industries Inc,7
TGL.CNS,24672,TransGlobe Energy Corporation,7
TGM.CNS,25133,Trillium Gold Mines Inc,7
TGO.CNS,43097,TeraGo Inc,7
TGOD.CNS,1075452,Green Organic Dutchman Holdings Ltd,7
TGR.CNS,978673,Tiger International Resources Inc,7
TGS.CNS,1167655,TGS Esports Inc,7
TGX.CNS,49369,True North Gems Inc,7
TGZ.CNS,40501,Teranga Gold Corp,7
TH.CNS,25197,Theratechnologies Inc,7
THC.CNS,978985,THC Biomed Intl Ltd,7
THE.CNS,1031018,TD International Equity CAD Hedged,7
THP.CNS,978676,Totally Hip Technologies Inc,7
THRM.CNS,997186,Therma Bright Inc,7
THU.CNS,1031019,TD S&P 500 CAD Hedged,7
THX.CNS,48958,Thor Explorations Ltd.,7
TI.CNS,1162032,Titan Mining Corp,7
TIC.CNS,25199,Titanium Corporation Inc,7
TIG.CNS,25030,Triumph Gold Corp,7
TIH.CNS,24675,Toromont Industries Ltd.,7
TII.CNS,48957,Terra Firma Capital Corporation,7
TIL.CNS,978677,Till Capital Ltd,7
TILT.CNS,1116350,TILT Holdings Inc,7
TILV.CNS,1131150,TD Systematic International Equity Low Volatility,7
TIUMU.CNS,1123863,Cansortium Inc,7
TK.CNS,48960,Tinka Resources Limited,7
TKO.CNS,24676,Taseko Mines Ltd,7
TKR.CNS,978829,Trackloop Analytics Corp,7
TKU.CNS,978679,Tarku Resources Ltd,7
TKX.CNS,985156,TrackX Holdings Inc,7
TLA.CNS,49423,Titan Logix Corp.,7
TLF.CNS,978173,Tech Leaders Income Fund,7
TLG.CNS,48901,Troilus Gold Corp,7
TLO.CNS,43094,Talon Metals Corp,7
TLT.CNS,25200,Theralase Technologies Inc,7
TLV.CNS,48205,PowerShares S&P/TSX Composite Low Volatility,7
TM.CNS,49184,Trigon Metals Inc,7
TMAS.CNS,1166340,Temas Resources Corp,7
TMC.CNS,978542,Trench Metals Corp,7
TMD.CNS,25202,Titan Medical Inc,7
TMED.CNS,978813,EGF Theramed Health Corp,7
TMG.CNS,49360,Thermal Energy International Inc,7
TML.CNS,43105,Treasury Metals Inc,7
TMQ.CNS,31152,Trilogy Metals Inc,7
TMR.CNS,955947,TMAC Resources Inc,7
TMSH.CNS,978800,Targeted Microwave Solutions Inc,7
TN.CNS,978991,Tartisan Nickel Corp,7
TNA.CNS,978680,Evergreen Gaming Corp,7
TNP.CNS,31165,Trans Atlantic Petroleum Ltd,7
TNR.CNS,25206,TNR Gold Corp.,7
TNX.CNS,31166,Tanzanian Royalty Exploration Corp,7
TNY.CNS,978987,Tinley Beverage Company Inc,7
TO.CNS,978951,Tower One Wireless Corp,7
TOC.CNS,1131235,Tocvan Ventures Corp,7
TOE.CNS,49367,Tri Origin Exploration Ltd.,7
TOG.CNS,25237,TORC Oil & Gas Ltd.,7
TOKI.CNS,997179,Tree of Knowledge International Corp,7
TOM.CNS,49364,Tolima Gold Inc,7
TORO.CNS,1166939,Pucara Gold Ltd,7
TORQ.CNS,978637,Stratton Resources Inc,7
TORR.CNS,48852,Metallum Resources Inc,7
TOT.CNS,25208,Total Energy Services Inc,7
TOU.CNS,24678,Tourmaline Oil Corp.,7
TOY.CNS,958361,Spin Master Corp,7
TPC.CNS,978681,Tenth Avenue Petroleum Corp,7
TPE.CNS,1030952,TD International Equity,7
TPL.CNS,43101,Tethys Petroleum Ltd,7
TPRF.CNS,1112798,TD Active Preferred Share Unit,7
TPU.CNS,1030953,TD S&P 500,7
TPXA.CNS,993693,Molson Coors Canada Inc,7
TPXB.CNS,978176,Molson Coors Canada Inc,7
TPZ.CNS,1167210,Topaz Energy Corp,7
TR.CNS,1131113,Troubadour Resources Inc,7
TRA.CNS,25210,Teras Resources Inc,7
TRAD.CNS,993939,Voleo Trading Systems Inc,7
TRC.CNS,978648,Tisdale Resources Corp,7
TRCE.CNS,1073367,Terrace Global Inc,7
TRG.CNS,1166337,Tarachi Gold Corp,7
TRI.CNS,24679,Thomson Reuters Corp,7
TRIL.CNS,962434,Trillium Therapeutics Inc,7
TRIP.CNS,1165454,Red Light Holland Corp,7
TRL.CNS,977758,Trilogy International Partners Inc,7
TRO.CNS,978683,Taranis Resources Inc,7
TRP.CNS,24680,TC Energy Corp,7
TRQ.CNS,24566,Turquoise Hill Resources Ltd.,7
TRS.CNS,978684,Tres Or Resources Ltd,7
TRU.CNS,978685,Trius Investments Inc,7
TRZ.CNS,961706,Transat AT Inc,7
TSD.CNS,25214,Tsodilo Resources Limited,7
TSF.CNS,978903,TraceSafe Inc,7
TSG.CNS,50540,Tristar Gold,7
TSK.CNS,49113,Talisker Resources Ltd,7
TSN.CNS,978686,Telson Mining Corp,7
TSU.CNS,1011025,Trisura Group Ltd,7
TTD.CNS,978688,Tinkerine Studios Ltd,7
TTOH.CNS,991159,Atoro Capital Corp,7
TTP.CNS,1030951,TD S&P/TSX Capped Composite,7
TTR.CNS,962590,Titanium Transportation Group Inc,7
TTS.CNS,993968,Tintina Mines Ltd,7
TTT.CNS,1079914,TruTrace Technologies Inc,7
TTX.CNS,978992,Tantalex Resources Corp,7
TTZ.CNS,978690,Total Telcom Inc,7
TUD.CNS,978801,Tudor Gold Corp,7
TUF.CNS,48811,Honey Badger Exploration Inc,7
TUO.CNS,49358,Teuton Resources Corp.,7
TUSK.CNS,1090525,Black Tusk Resources Inc,7
TV.CNS,43107,Trevali Mining Corporation,7
TVAB.CNS,978189,Groupe TVA Inc,7
TVE.CNS,25219,Tamarack Valley Energy Ltd,7
TVI.CNS,43118,TVI Pacific Inc,7
TVK.CNS,43099,Terravest Capital Inc,7
TWC.CNS,42789,TWC Enterprises Ltd,7
TWM.CNS,962591,Tidewater Midstream and Infrastructure Ltd,7
TWR.CNS,978691,Tower Resources Ltd,7
TWXX.CNS,978860,TWX Group Holding Ltd,7
TXF.CNS,976684,First Asset Tech Giants Covered Call Common,7
TXG.CNS,25220,Torex Gold Resources Inc,7
TXP.CNS,24610,Touchstone Exploration Inc,7
TYMB.CNS,978316,Cicada Ventures Ltd,7
TYP.CNS,48963,Typhoon Exploration Inc,7
TZR.CNS,49354,Terrace Energy Corp.,7
TZS.CNS,978192,Trez Capital Senior Mortgage Investment Corp,7
TZZ.CNS,978193,Trez Capital Mortgage Investment Corp,7
U.CNS,978194,Uranium Participation Corporation,7
UAV.CNS,978821,Global UAV Technologies Ltd,7
UBQ.CNS,1166341,Ubique Minerals Ltd,7
UCU.CNS,25223,Ucore Rare Metals Inc,7
UEX.CNS,43120,UEX Corporation,7
UFC.CNS,993969,Urbanfund Corp,7
UFS.CNS,31168,Domtar Corporation,7
UGD.CNS,25224,Unigold Inc,7
UGE.CNS,978693,UGE International Ltd,7
UGM.CNS,1117811,UrbanGold Minerals Inc,7
UHO.CNS,978694,United Hunter Oil & Gas Corp,7
UI.CNS,978695,Urbanimmersive Inc,7
ULT.CNS,49373,Ultra Lithium Inc,7
ULTH.CNS,1057356,United Lithium Corp,7
ULVF.CNS,48102,PowerShares S&P 500 Low Volatility (CAD Hedged),7
UNC.CNS,43122,United Corporations Limited,7
UNI.CNS,951636,Unisync Corp,7
UNOH.CNS,978697,Northern Uranium Corp,7
UNS.CNS,43121,Uni-Select Inc,7
UNV.CNS,993967,Universal Copper Ltd,7
UP.CNS,978993,UpSnap Inc,7
UPCO.CNS,1055292,Upco International Inc,7
UPI.CNS,978644,SustainCo Inc,7
URB.CNS,43124,Urbana Corporation,7
URBA.CNS,978197,Urbana Corp,7
URC.CNS,1155947,Uranium Royalty Corp,7
URE.CNS,25226,Ur Energy Inc,7
URL.CNS,978841,NameSilo Technologies Corp,7
USA.CNS,40502,Americas Silver Corp,7
USB.CNS,976777,PowerShares LadderRite US 0-5 Year Corporate Bond,7
USBU.CNS,976778,PowerShares LadderRite US 0-5 Year Corporate Bond USD,7
USGD.CNS,1072978,American Pacific Mining Corp,7
USHA.CNS,1167657,Usha Resources Ltd,7
USS.CNS,48965,Uniserve Communications Corp,7
UVN.CNS,978699,Uravan Minerals Inc,7
UWEH.CNS,25228,U3O8 Corp,7
UXM.CNS,48257,First Asset Morningstar US Dividend Target 50 (CAD Hedged) Common Class,7
UXMB.CNS,976664,First Asset Morningstar US Dividend Target 50 Common,7
VA.CNS,976833,Vanguard FTSE Developed Asia Pac All Cap,7
VAB.CNS,48207,Vanguard Canadian Aggregate Bond,7
VAI.CNS,978996,VirtualArmor International Inc,7
VALU.CNS,1166346,Valorem Resources Inc,7
VAU.CNS,986062,Viva Gold Corp,7
VAX.CNS,978701,Vantex Resources Ltd,7
VB.CNS,43008,VersaBank,7
VBAL.CNS,1062623,Vanguard Balanced Portfolio,7
VBG.CNS,976836,Vanguard Global ex-US Aggregate Bond CAD Hedged,7
VBU.CNS,976839,Vanguard US Aggregate Bond CAD Hedged,7
VC.CNS,1166344,Volatus Capital Corp,7
VCE.CNS,48209,Vanguard FTSE Canada,7
VCI.CNS,951637,Vitreous Glass Inc,7
VCIP.CNS,1122460,Vanguard Conservative Income ETF Portfolio,7
VCM.CNS,43127,Vecima Networks Inc,7
VCN.CNS,976827,Vanguard FTSE Canada All Cap,7
VCNS.CNS,1062622,Vanguard Conservative Portfolio,7
VCOM.CNS,1166846,Vivere Communities Inc,7
VCTX.CNS,978997,Velocity Data Inc,7
VCV.CNS,978702,Vatic Ventures Corp,7
VDKAP.CNS,1165594,Spartan Acquisition Corp,7
VDOH.CNS,49228,Nevado Resources Corp,7
VDU.CNS,976832,Vanguard FTSE Developed All Cap Ex US,7
VDY.CNS,976829,Vanguard FTSE Canadian High Dividend Yield,7
VE.CNS,976834,Vanguard FTSE Developed Europe All Cap,7
VEC.CNS,25225,Vanadian Energy Corp,7
VEE.CNS,48229,Vanguard FTSE Emerging Markets,7
VEF.CNS,48219,Vanguard FTSE Developed All Cap Ex US,7
VEGA.CNS,979007,Vegaste Technologies Corp,7
VEGN.CNS,1093878,Plant Co Brands Ltd,7
VEIN.CNS,978540,Enforcer Gold Corp,7
VENI.CNS,1097392,Top Strike Resources Corp,7
VENZ.CNS,978406,Venzee Technologies Inc,7
VEQT.CNS,1122461,Vanguard All-Equity ETF Portfolio,7
VERT.CNS,48736,Vertical Explorations Inc,7
VERY.CNS,1163387,The Very Good Food Co Inc,7
VET.CNS,24682,Vermilion Energy Inc,7
VEXT.CNS,1166345,Vapen MJ Ventures Corp,7
VFF.CNS,43133,Village Farms International Inc,7
VFV.CNS,976837,Vanguard S&P 500,7
VG.CNS,978708,Volcanic Gold Mines Inc,7
VGCX.CNS,25232,Victoria Gold Corp,7
VGD.CNS,25230,Visible Gold Mines Inc,7
VGG.CNS,976840,Vanguard US Dividend Appreciation,7
VGH.CNS,976841,Vanguard US Dividend Appreciation CAD Hedged,7
VGL.CNS,993970,Vigil Health Solutions Inc,7
VGLD.CNS,978700,Vangold Mining Corp,7
VGN.CNS,48801,Greencastle Resources Ltd.,7
VGRO.CNS,1062621,Vanguard Growth Portfolio,7
VGV.CNS,1164631,Vanguard Canadian Government Bond Index ETF,7
VGZ.CNS,31119,Vista Gold Corporation,7
VHI.CNS,1073216,Vitalhub Corp,7
VI.CNS,976831,Vanguard FTSE Developed All Cap ex North America CAD Hedged,7
VIBE.CNS,978245,Vibe Bioscience Ltd,7
VIDY.CNS,1096094,Vanguard FTSE Developed ex North America High Dividend Yield Index ETF,7
VIN.CNS,1166343,Vinergy Resources Ltd,7
VIO.CNS,978704,Societe d Exploration Miniere Vior Inc,7
VIPR.CNS,1052841,Silver Viper Minerals Corp,7
VIS.CNS,978705,Visionstate Corp,7
VISN.CNS,978385,Eyecarrot Innovations Corp,7
VIU.CNS,976830,Vanguard FTSE Developed All Cap ex North America,7
VIV.CNS,49024,Avivagen Inc,7
VIVO.CNS,1010533,VIVO Cannabis Inc,7
VIZ.CNS,49134,Galileo Exploration Ltd,7
VLB.CNS,997620,Vanguard Canadian Long-Term Bond,7
VLC.CNS,1034488,Velocity Minerals Ltd,7
VLCYP.CNS,1167177,Vlcty Capital Inc,7
VLE.CNS,43126,Valeura Energy Inc,7
VLI.CNS,978233,Vision Lithium Inc,7
VLN.CNS,43128,Velan Inc,7
VLNS.CNS,1057207,Valens Groworks Corp,7
VLV.CNS,993066,Venerable Ventures Ltd,7
VM.CNS,1166847,Voyageur Pharmaceuticals Ltd,7
VMD.CNS,1057075,Viemed Healthcare Inc,7
VML.CNS,49387,Viscount Mining Corp.,7
VMO.CNS,987069,Vanguard Global Momentum Factor ETF CAD,7
VMX.CNS,991214,Victory Metals Inc,7
VNP.CNS,25234,5N Plus Inc,7
VO.CNS,24968,ValOre Metals Corp,7
VONE.CNS,48969,Vanadium One Energy Corp,7
VOTI.CNS,1166845,VOTI Detection Inc,7
VOX.CNS,1163378,Vox Royalty Corp,7
VOY.CNS,978855,Voyageur Mineral Explorers Corp,7
VPH.CNS,1131234,Valeo Pharma Inc,7
VPI.CNS,978709,Vitality Products Inc,7
VPN.CNS,1166342,VPN Technologies Inc,7
VPT.CNS,49381,VentriPoint Diagnostics Ltd,7
VQA.CNS,978710,Valterra Resource Corp,7
VQS.CNS,25236,VIQ Solutions Inc,7
VR.CNS,49384,Victory Resources Corp,7
VRB.CNS,962592,Vanadiumcorp Resource Inc,7
VRDH.CNS,48972,Viridis Energy Inc,7
VRE.CNS,976828,Vanguard FTSE Canadian Capped REIT,7
VREO.CNS,1123958,Vireo Health International Inc,7
VRR.CNS,978613,VR Resources Ltd,7
VRSH.CNS,49382,Verisante Technology Inc,7
VRT.CNS,979001,Veritas Pharma Inc,7
VRY.CNS,978711,Petro Victory Energy Corp,7
VS.CNS,985939,Versus Systems Inc,7
VSB.CNS,48208,Vanguard Canadian Short Term Bond,7
VSBY.CNS,1123219,VSBLTY Groupe Technologies Corp,7
VSC.CNS,976826,Vanguard Canadian Short-Term Corporate Bond,7
VSP.CNS,976838,Vanguard S&P 500 CAD hedged,7
VSR.CNS,49379,Vanstar Mining Resources Inc,7
VST.CNS,978869,Victory Square Technologies Inc,7
VTI.CNS,48967,Valdor Technology International Inc,7
VTX.CNS,978703,Vertex Resource Group Ltd,7
VUI.CNS,49385,Virginia Energy Resources,7
VUL.CNS,25239,Vulcan Minerals Inc,7
VUN.CNS,976842,Vanguard US Total Market,7
VUS.CNS,48286,Vanguard US Total Market (CAD Hedged),7
VUX.CNS,978713,Vital Energy Inc,7
VVC.CNS,48966,VVC Exploration Corp.,7
VVL.CNS,987070,Vanguard Global Value Factor,7
VVO.CNS,987068,Vanguard Global Minimum Volatility,7
VVV.CNS,1072327,Crop Infrastructure Corp,7
VXC.CNS,976835,Vanguard FTSE Global All Cap ex Canada,7
VXL.CNS,969139,Vaxil Bio Ltd,7
VXM.CNS,976661,First Asset Morningstar International Value CAD Hedged Common,7
VXMB.CNS,976662,First Asset Morningstar International Value Common,7
VYCH.CNS,978715,Vanity Capital Inc,7
VYGR.CNS,49372,Voyager Digital Canada Ltd,7
VZLA.CNS,1097544,Vizsla Resources Corp,7
VZZ.CNS,49244,Val d Or Mining Corp,7
WA.CNS,976544,Western Atlas Resources Inc,7
WAL.CNS,1166347,Walcott Resources Ltd,7
WAR.CNS,978717,Warrior Gold Inc,7
WATR.CNS,48772,Current Water Technologies Inc,7
WBE.CNS,993971,Westbond Enterprises Corp,7
WBGD.CNS,1166863,Waraba Gold Ltd,7
WBIO.CNS,1156726,WPD Pharmaceuticals Inc,7
WBR.CNS,42745,Waterloo Brewing Ltd,7
WCC.CNS,48747,Consolidated Woodjam Copper Corp,7
WCE.CNS,993972,WesCan Energy Corp,7
WCMA.CNS,978212,Wilmington Capital Management Inc,7
WCN.CNS,24471,Waste Connections Inc,7
WCP.CNS,25241,Whitecap Resources Inc,7
WDO.CNS,43141,Wesdome Gold Mines Ltd.,7
WE.CNS,1155837,Brachium Capital Corp,7
WEBH.CNS,48980,Westbridge Energy Corp,7
WED.CNS,48979,Westaim Corp,7
WEE.CNS,25244,Wavefront Technology Solutions Inc,7
WEED.CNS,951635,Canopy Growth Corp,7
WEF.CNS,43142,Western Forest Products Inc,7
WEII.CNS,50519,Petromaroc Corp,7
WELL.CNS,976223,WELL Health Technologies Corp,7
WEST.CNS,1167658,West Mining Corp,7
WFC.CNS,43137,Wall Financial Corporation,7
WFS.CNS,978213,World Financial Split Corp,7
WFT.CNS,24686,West Fraser Timber Co. Ltd.,7
WGC.CNS,979006,Winston Gold Corp,7
WGF.CNS,978721,Wescan Goldfields Inc,7
WGLD.CNS,1167660,Western Gold Exploration Ltd,7
WGO.CNS,978408,White Gold Corp,7
WHG.CNS,1167661,Whitehorse Gold Corp,7
WHM.CNS,978722,White Metal Resources Corp,7
WHN.CNS,978723,Westhaven Ventures Inc,7
WHY.CNS,48976,West High Yield Resources Ltd,7
WI.CNS,978724,Western Investment Company of Canada Limited,7
WIFI.CNS,1159543,American Aires Inc,7
WIKI.CNS,1166862,Wikileaf Technologies Inc,7
WIL.CNS,49396,Wilton Resources Inc,7
WILD.CNS,42821,DHX Media Ltd,7
WIN.CNS,48911,Windfall Geotek Inc,7
WINS.CNS,24942,Helio Resource Corp,7
WIRU.CNS,978215,WPT Industrial Real Estate Investment Trust,7
WJX.CNS,25246,Wajax Corporation,7
WKG.CNS,49393,WestKam Gold Corp,7
WLF.CNS,48985,Wolfden Resources Corporation,7
WLLW.CNS,1052092,Willow Biosciences Inc,7
WLTR.CNS,999106,GOLO Mobile Inc,7
WM.CNS,43138,Wallbridge Mining Company Limited,7
WMD.CNS,978251,WeedMD Inc,7
WMG.CNS,48862,Western Magnesium Corp,7
WMK.CNS,1166848,Whitemud Resources Inc,7
WML.CNS,25247,Wealth Minerals Ltd.,7
WMR.CNS,25248,Westminster Resources Ltd,7
WN.CNS,24689,George Weston Limited,7
WOW.CNS,49284,Wow Unlimited Media Inc,7
WP.CNS,978727,Western Pacific Trust Company,7
WPK.CNS,43147,Winpak Ltd.,7
WPM.CNS,24652,Wheaton Precious Metals Corp,7
WPN.CNS,1166348,First Responder Technologies Inc,7
WPRT.CNS,24690,Westport Fuel Systems Inc,7
WRG.CNS,40503,Western Energy Services Corp.,7
WRI.CNS,48975,Waseco Resources Inc,7
WRN.CNS,25251,Western Copper and Gold Corp,7
WRR.CNS,48973,Walker River Resources Corp.,7
WRX.CNS,43144,Western Resources Corp,7
WRYH.CNS,978729,Western Troy Capital Resources Inc,7
WSMX.CNS,979008,World Mahjong Ltd,7
WSP.CNS,24919,WSP Global Inc,7
WTE.CNS,24691,Westshore Terminals Investment Corp,7
WTER.CNS,1081740,Alkaline Water Company Inc,7
WTR.CNS,49391,Westcore Energy Ltd,7
WUC.CNS,979009,Western Uranium & Vanadium Corp,7
WVM.CNS,48977,West Vault Mining,7
WWT.CNS,1167659,Water Ways Technologies Inc,7
WXM.CNS,48147,First Asset Morningstar Canada Momentum Common Class,7
X.CNS,24692,TMX Group Limited,7
XAG.CNS,49399,Xtierra Inc,7
XAM.CNS,1114109,Xanadu Mines Ltd,7
XAU.CNS,969140,GoldMoney Inc,7
XAW.CNS,976741,iShares Core MSCI AC World ex Canada,7
XBAL.CNS,48241,iShares Core Balanced ETF Portfolio,7
XBB.CNS,39066,iShares Canadian Universe Bond,7
XBC.CNS,43149,Xebec Adsorption Inc,7
XBLK.CNS,1055262,eXeBlock Technology Corp,7
XBM.CNS,48122,iShares S&P/TSX Global Base Metals,7
XCB.CNS,48181,iShares Canadian Corporate Bond,7
XCD.CNS,976763,iShares S&P Global Consumer Discretionary CAD Hedged,7
XCG.CNS,48187,iShares Canadian Growth,7
XCH.CNS,48211,iShares China,7
XCNS.CNS,1152284,iShares Core Conservative Balanced ETF Portfolio,7
XCS.CNS,39067,iShares S&P/TSX Small Cap,7
XCT.CNS,963744,exactEarth Ltd,7
XCV.CNS,48188,iShares Canadian Value,7
XCX.CNS,978731,AMP German Cannabis Group Inc,7
XDG.CNS,1117697,iShares Core MSCI Global Quality Dividend Index ETF,7
XDIV.CNS,1025084,iShares Core MSCI Canadian Quality Dividend,7
XDU.CNS,1116318,iShares Core MSCI US Quality Dividend Index ETF,7
XDUH.CNS,1136252,iShares Core MSCI US Quality Dividend Index ETF (CAD-Hedged),7
XDV.CNS,39068,iShares Canadian Select Dividend,7
XEB.CNS,39069,iShares JP Morgan USD Emerging Markets Bond (CAD Hedged),7
XEC.CNS,976744,iShares Core MSCI Emerging Markets IMI,7
XEF.CNS,976742,iShares Core MSCI EAFE IMI,7
XEG.CNS,48195,iShares S&P/TSX Capped Energy,7
XEH.CNS,976762,iShares MSCI Europe IMI CAD Hedged,7
XEI.CNS,48201,iShares Core S&P/TSX Composite High Dividend,7
XEM.CNS,48227,iShares MSCI Emerging Markets,7
XEN.CNS,48191,iShares Jantzi Social,7
XEQT.CNS,1152285,iShares Core Equity ETF Portfolio,7
XESG.CNS,1126183,iShares ESG MSCI Canada Index,7
XEU.CNS,976761,iShares MSCI Europe IMI,7
XFA.CNS,976748,iShares Edge MSCI Multifactor USA CAD Hedged,7
XFC.CNS,959576,iShares Edge MSCI Multifactor Canada,7
XFF.CNS,976750,iShares FactorSelect MSCI EAFE CAD Hedged,7
XFH.CNS,976743,iShares Core MSCI EAFE IMI CAD Hedged,7
XFI.CNS,959577,iShares Edge MSCI Multifactor EAFE,7
XFN.CNS,48196,iShares S&P/TSX Capped Financials,7
XFR.CNS,48183,iShares Floating Rate,7
XFS.CNS,976747,iShares Edge MSCI Multifactor USA Units,7
XGB.CNS,48182,iShares Canadian Government Bond,7
XGD.CNS,48123,iShares S&P/TSX Global Gold,7
XGI.CNS,976764,iShares S&P Global Industrials CAD Hedged,7
XHB.CNS,48184,iShares Canadian HYBrid Corporate Bond,7
XHC.CNS,48093,iShares Global Healthcare (CAD Hedged),7
XHD.CNS,48280,iShares US High Dividend Equity (CAD Hedged),7
XHU.CNS,976771,iShares US High Dividend Equity,7
XHY.CNS,48281,iShares US High Yield Bond (CAD Hedged),7
XIA.CNS,993973,Xiana Mining Inc,7
XIC.CNS,39070,iShares Core S&P/TSX Capped Composite,7
XID.CNS,48235,iShares India,7
XIG.CNS,48282,iShares US IG Corporate Bond (CAD Hedged),7
XIM.CNS,49400,Ximen Mining Corp,7
XIN.CNS,48217,iShares MSCI EAFE (CAD Hedged),7
XIncCNS,1152286,iShares Core Income Balanced ETF Portfolio,7
XIT.CNS,39071,iShares S&P/TSX Capped Information Technology Index ETF,7
XIU.CNS,39072,iShares S&P/TSX 60,7
XL.CNS,993974,XXL Energy Corp,7
XLB.CNS,48185,iShares Core Canadian Long Term Bond,7
XLY.CNS,978476,Auxly Cannabis Group Inc,7
XMA.CNS,39073,iShares S&P/TSX Capped Materials,7
XMC.CNS,976765,iShares S&P US Mid-Cap,7
XMD.CNS,48199,iShares S&P/TSX Completion,7
XMFA.CNS,978218,M Split Corp,7
XMG.CNS,979011,MGX Minerals Inc,7
XMH.CNS,976766,iShares S&P US Mid-Cap CAD Hedged,7
XMI.CNS,48218,iShares Edge MSCI Minimum Volatility EAFE Units,7
XML.CNS,994205,iShares Edge MSCI Min Vol EAFE CAD Hedged,7
XMM.CNS,48228,iShares Edge MSCI Minimum Volatility Emerging Markets Units,7
XMS.CNS,994204,iShares Edge MSCI Min Vol USA CAD Hedged,7
XMTM.CNS,1167235,iShares MSCI USA Momentum Factor Index ETF,7
XMU.CNS,48275,iShares Edge MSCI Minimum Volatility USA,7
XMV.CNS,976760,iShares MSCI Canada Minimum Volatility,7
XMW.CNS,976759,iShares MSCI All Country World Minimum Volatility,7
XMY.CNS,994206,iShares Edge MSCI Min Vol Global CAD Hedged,7
XND.CNS,978732,Xander Resources Inc,7
XOP.CNS,49054,Canadian Overseas Petroleum Ltd,7
XPF.CNS,39074,iShares S&P/TSX North American Preferred Stock (CAD Hedged),7
XPHY.CNS,1158815,Xphyto Therapeutics Corp,7
XPLR.CNS,1167662,Xplore Resources Corp,7
XQB.CNS,976739,iShares Core High Quality Canadian Bond,7
XQQ.CNS,37532,iShares NASDAQ 100 (CAD Hedged),7
XRB.CNS,48186,iShares Canadian Real Return Bond,7
XRE.CNS,48197,iShares S&P/TSX Capped REIT,7
XRX.CNS,1118176,XORTX Therapeutics Inc,7
XSAB.CNS,1126184,iShares ESG Canadian Aggregate Bond,7
XSB.CNS,39075,iShares Canadian Short Term Bond,7
XSC.CNS,976736,iShares Conservative Short Term Strategic Fixed Income,7
XSE.CNS,976737,iShares Conservative Strategic Fixed Income,7
XSEA.CNS,1126185,iShares ESG MSCI EAFE Index,7
XSEM.CNS,1126186,iShares ESG MSCI Emerging Markets Index,7
XSF.CNS,1163882,Xtraction Services Inc,7
XSH.CNS,39076,iShares Core Canadian Short Term Corporate + Maple Bond,7
XSI.CNS,976767,iShares Short Term Strategic Fixed Income,7
XSP.CNS,48089,iShares Core S&P 500 (CAD Hedged),7
XSQ.CNS,976746,iShares Core Short Term High Quality Canadian Bond,7
XST.CNS,39077,iShares S&P/TSX Capped Consumer Staples,7
XSU.CNS,48276,iShares US Small Cap (CAD Hedged),7
XSUS.CNS,1126179,iShares ESG MSCI USA Index,7
XTC.CNS,42851,Exco Technologies Limited,7
XTD.CNS,978219,TDb Split Corp,7
XTG.CNS,43150,Xtra-Gold Resources Corp,7
XTM.CNS,978733,Transition Metals Corp,7
XTR.CNS,39078,iShares Diversified Monthly Income,7
XTRX.CNS,1166349,Adastra Labs Holdings Ltd,7
XTT.CNS,978734,X Terra Resources Inc,7
XUH.CNS,956442,iShares Core S&P US Total Market,7
XUS.CNS,949553,iShares Core S&P 500,7
XUT.CNS,48198,iShares S&P/TSX Capped Utilities,7
XUU.CNS,976745,iShares Core S&P US Total Market,7
XWD.CNS,48091,iShares MSCI World,7
XXM.CNS,976670,First Asset Morningstar US Value CAD Hedged Common,7
XXMB.CNS,976671,First Asset Morningstar US Value Common,7
Y.CNS,43152,Yellow Pages Limited,7
YAK.CNS,49213,Mongolia Growth Group Ltd.,7
YCM.CNS,978222,Commerce Split Corp,7
YDX.CNS,986071,YDx Innovation Corp,7
YEG.CNS,994079,Yorkton Equity Group Inc,7
YES.CNS,976228,CHAR Technologies Ltd,7
YFI.CNS,48765,Edgewater Wireless Systems Inc,7
YGR.CNS,25257,Yangarra Resources Ltd,7
YGT.CNS,49355,Gold Terra Resource Corp,7
YNV.CNS,978529,Ynvisible Interactive Inc,7
YOO.CNS,48988,Yangaroo Inc,7
YRB.CNS,978226,Yorbeau Resources Inc,7
YRI.CNS,24694,Yamana Gold Inc,7
YSS.CNS,1097713,YSS Corp,7
YTY.CNS,48984,Wi2Wi Corporation,7
YVI.CNS,978735,Yorkton Ventures Inc,7
YXM.CNS,976666,First Asset Morningstar US Momentum CAD Hedged Common,7
YXMB.CNS,976667,First Asset Morningstar US Momentum Common,7
Z.CNS,25129,Zinc One Resources Corp,7
ZAD.CNS,49401,Zadar Ventures Ltd,7
ZAG.CNS,39079,BMO Aggregate Bond,7
ZAIR.CNS,1166350,Zinc8 Energy Solutions Inc,7
ZBAL.CNS,1123040,BMO Balanced,7
ZBK.CNS,976604,BMO Equal Weight US Banks,7
ZC.CNS,969141,Zimtu Capital Corp,7
ZCCH.CNS,49403,Zena Mining Corp,7
ZCH.CNS,48210,BMO China Equity,7
ZCM.CNS,48134,BMO Mid Corporate Bond,7
ZCN.CNS,48137,BMO S&P/TSX Capped Composite,7
ZCON.CNS,1123039,BMO Conservative,7
ZCS.CNS,48138,BMO Short Corporate Bond,7
ZDB.CNS,976603,BMO Discount Bond,7
ZDC.CNS,48719,Zedcor Energy,7
ZDH.CNS,976608,BMO International Dividend CAD Hedged,7
ZDI.CNS,976609,BMO International Dividend Units,7
ZDJ.CNS,48252,BMO Dow Jones Industrial Average Hedged to CAD Index ETF,7
ZDM.CNS,48107,BMO MSCI EAFE (CAD Hedged),7
ZDV.CNS,48126,BMO Canadian Dividend,7
ZDY.CNS,976630,BMO US Dividend,7
ZDYU.CNS,976632,BMO US Dividend USD,7
ZEA.CNS,976622,BMO MSCI EAFE,7
ZEB.CNS,48141,BMO S&P/TSX Equal Weight Banks,7
ZEF.CNS,48222,BMO Emerging Markets Bond (CAD Hedged),7
ZEM.CNS,48221,BMO MSCI Emerging Markets Index ETF,7
ZEN.CNS,40505,ZEN Graphene Solutions Ltd,7
ZENA.CNS,978302,Zenabis Global Inc,7
ZEO.CNS,48142,BMO Equal Weight Oil & Gas Index ETF,7
ZEQ.CNS,976623,BMO MSCI Europe High Quality CAD Hedged,7
ZEU.CNS,1166351,ZeU Crypto Networks Inc,7
ZFC.CNS,1116201,BMO SIA Focused Canadian Equity Fund ETF Series,7
ZFH.CNS,976607,BMO Floating Rate High Yield,7
ZFL.CNS,48132,BMO Long Federal Bond,7
ZFM.CNS,48135,BMO Mid Federal Bond,7
ZFN.CNS,1116200,BMO SIA Focused North American Equity Fund ETF Series,7
ZFR.CNS,978737,Zephyr Minerals Ltd,7
ZFS.CNS,48139,BMO Short Federal Bond,7
ZGD.CNS,976627,BMO S&P/TSX Equal Weight Global Gold,7
ZGI.CNS,48106,BMO Global Infrastructure Index ETF,7
ZGQ.CNS,976621,BMO MSCI All Country World High Quality,7
ZGRO.CNS,1123036,BMO Growth,7
ZHU.CNS,1123037,BMO Equal Weight US Health Care,7
ZHY.CNS,48287,BMO High Yield US Corporate Bond (CAD Hedged),7
ZIC.CNS,976618,BMO Mid-Term US IG Corporate Bond,7
ZICU.CNS,976620,BMO Mid-Term US IG Corporate Bond USD,7
ZID.CNS,37481,BMO India Equity,7
ZIN.CNS,976628,BMO S&P/TSX Equal Weight Industrials,7
ZJG.CNS,37537,BMO Junior Gold,7
ZJK.CNS,1052386,BMO High Yield Us Corporate Bond,7
ZLB.CNS,48133,BMO Low Volatility Canadian Equity,7
ZLC.CNS,48131,BMO Long Corporate Bond,7
ZLD.CNS,976613,BMO Low Volatility International Equity CAD Hedged,7
ZLE.CNS,1030933,BMO Low Volatility Emerging Markets Equity,7
ZLH.CNS,976615,BMO Low Volatility US Equity CAD Hedged,7
ZLI.CNS,976612,BMO Low Volatility International Equity,7
ZLU.CNS,976614,BMO Low Volatility US Equity,7
ZLUU.CNS,976616,BMO Low Volatility US Equity USD,7
ZMA.CNS,991216,ZoomAway Travel Inc,7
ZMI.CNS,39082,BMO Monthly Income,7
ZMP.CNS,976617,BMO Mid Provincial Bond,7
ZMS.CNS,25262,Zecotek Photonics Inc,7
ZMT.CNS,48109,BMO S&P/TSX Equal Weight Global Base Metals (CAD Hedged),7
ZMU.CNS,976619,BMO Mid-Term US IG Corporate Bond CAD Hedged,7
ZNG.CNS,1057354,Group Eleven Resources Corp,7
ZNQ.CNS,1123035,BMO NASDAQ 100 Equity,7
ZNX.CNS,24841,ZincX Resources Corp,7
ZOMD.CNS,1166849,Zoomd Technologies Ltd,7
ZON.CNS,49406,Zonte Metals Inc,7
ZONE.CNS,1166850,Zonetail Inc,7
ZPAY.CNS,1161798,BMO Premium Yield ETF,7
ZPH.CNS,1029219,BMO US Put Write Hedged,7
ZPL.CNS,976611,BMO Long Provincial Bond,7
ZPR.CNS,959574,BMO Laddered Preferred Share,7
ZPS.CNS,48140,BMO Short Provincial Bond,7
ZPW.CNS,976635,BMO US Put Write,7
ZPWU.CNS,976636,BMO US Put Write USD,7
ZQQ.CNS,48255,BMO NASDAQ 100 Equity (CAD Hedged),7
ZRE.CNS,48129,BMO Equal Weight REITs,7
ZRO.CNS,979013,Biosenta Inc,7
ZRR.CNS,48136,BMO Real Return Bond,7
ZSP.CNS,976625,BMO S&P 500,7
ZSPU.CNS,976626,BMO S&P 500 USD,7
ZST.CNS,39083,BMO Ultra Short-Term Bond,7
ZSU.CNS,976629,BMO Short-Term US IG Corp Bond CAD Hedged,7
ZTE.CNS,979014,ZTEST Electronics Inc,7
ZUB.CNS,48253,BMO Equal Weight US Banks (CAD Hedged),7
ZUD.CNS,976631,BMO US Dividend CAD Hedged,7
ZUE.CNS,48256,BMO S&P 500 (CAD Hedged),7
ZUH.CNS,48254,BMO Equal Weight US Health Care (CAD Hedged),7
ZUM.CNS,25264,ZoomerMedia Limited,7
ZUP.CNS,1029218,BMO US Preferred Share,7
ZUQ.CNS,976624,BMO MSCI USA High Quality,7
ZUSU.CNS,1123034,BMO Ultra Short-Term US Bond,7
ZUSV.CNS,1123033,BMO Ultra Short-Term US Bnd (USD Ac),7
ZUT.CNS,48130,BMO Equal Weight Utilities,7
ZVU.CNS,1052396,BMO MSCI USA Value,7
ZWA.CNS,48251,BMO Covered Call Dow Jones Industrial Average(CAD Hedged),7
ZWB.CNS,48127,BMO Covered Call Canadian Banks,7
ZWC.CNS,1029217,BMO Canadian High Dividend Covered Call,7
ZWE.CNS,976606,BMO Europe High Dividend Covered Call CAD Hedged,7
ZWG.CNS,1167876,BMO Global High Dividend Covered Call ETF,7
ZWH.CNS,976633,BMO US High Dividend Covered Call,7
ZWHU.CNS,976634,BMO US High Dividend Covered Call USD,7
ZWK.CNS,1123038,BMO Covered Call US Banks,7
ZWP.CNS,1072341,BMO Europe High Dividend Covered Call,7
ZWS.CNS,1072340,BMO US High Dividend Covered Call Hedged to CAD,7
ZWU.CNS,48128,BMO Covered Call Utilities,7
ZXM.CNS,976658,First Asset Morningstar International Momentum CAD Hedged Common,7
ZXMB.CNS,976657,First Asset Morningstar International Momentum Common,7
ZZZ.CNS,978227,Sleep Country Canada Holdings Inc,7
ZZZD.CNS,1120039,BMO Tactical Dividend ETF Series,7
GSPTSE.CNS,24441,S&P/TSX Composite,7
TRX50CAP.CNS,941629,Thomson Reuters Canada 50,7


#PR PRAGUE CZECH ALL STOCK
CETV.PR,50546,Central European Media Enterprises Ltd,42
CEZP.PR,50547,CEZ as,42
E4U.PR,992633,E4U as,42
ENEQ.PR,992634,Energoaqua as,42
ERST.PR,50548,Erste Group Bank AG,42
FORE.PR,50549,Fortuna Eg N.V,42
KOFOL.PR,961999,Kofola CeskoSlovensko as,42
BKOM.PR,958812,Komercni Banka,42
MONET.PR,978768,Moneta Money Bank AS,42
NWRR.PR,50550,New World Resources Plc,42
SPTT.PR,958811,O2 42 as,42
PGSN.PR,50552,Pegas  Nonwove,42
TABK.PR,50555,Philip Morris CR AS,42
PENP.PR,992820,Photon,42
STCK.PR,50554,Stock Spirits Group PLC,42
TMRE.PR,50556,Tatry Mountain,42
TOMA.PR,992635,Toma as,42
UNPE.PR,50557,Unipetrol,42
VGP1.PR,993037,VGP,42
VIGR.PR,50558,Vienna Insurance Group AG,42

#HE HELSINKI
AMEAS.HE,576,Amer Sports Corporation,23
CGCBV.HE,573,Cargotec Oyj,23
ELISA.HE,571,Elisa Oyj,23
FUM1V.HE,574,Fortum Oyj,23
HUH1V.HE,26410,Huhtamaki Oyj,23
KRA1V.HE,26417,Kemira Oyj,23
KESBV.HE,575,Kesko Oyj B,23
KNEBV.HE,570,KONE Oyj,23
KCR1V.HE,572,Konecranes Oyj,23
MEO1V.HE,569,Metso Oyj,23
NESTE.HE,578,Neste Oil Oyj,23
NOKIA.HE,647,Nokia Oyj,23
NRE1V.HE,583,Nokian Renkaat Oyj,23
NDA1V.HE,8922,Nordea Bank AB,23
ORNBV.HE,26435,Orion Oyj B,23
OUT1V.HE,8745,Outokumpu Oyj,23
OTE1V.HE,579,Outotec Oyj,23
SAMAS.HE,582,Sampo Oyj A,23
STERV.HE,580,Stora Enso Oyj R,23
TELIA1.HE,648,Telia Company AB,23
TIE1V.HE,584,Tieto Oyj,23
UPM1V.HE,585,UPM-Kymmene Oyj,23
VALMT.HE,49950,Valmt,23
WRT1V.HE,8748,Wartsila Oyj Abp,23
YTY1V.HE,586,YIT Oyj,23

#OL OSLO STOCK EXCHANGE
AKAS.OL,8999,Akastor ASA,30
DNB.OL,13140,DnB ASA,30
DNO.OL,363,DNO International ASA,30
FOE.OL,368,Fred. Olsen Energy ASA,30
GJFS.OL,40266,Gjensidige Forsikring ASA,30
MHG.OL,369,Marine Harvest ASA,30
NHY.OL,367,Norsk Hydro ASA,30
NWC.OL,40277,Norwegian Air Shuttle ASA,30
ORK.OL,373,Orkla ASA,30
PGS.OL,375,Petroleum Geo - Services ASA,30
REC.OL,374,REC Silicon ASA,30
SBSTA.OL,40286,Schibsted ASA A,30
SDRL.OL,382,Seadrill Limited,30
STL.OL,376,Statoil ASA,30
STB.OL,379,Storebrand ASA,30
SUBC.OL,383,Subsea 7 SA,30
TEL.OL,380,Telenor ASA,30
TGS.OL,384,TGS-NOPEC Geophysical Company ASA,30
YAR.OL,381,Yara International ASA,30

#CO COPENHAGEN STOCK EXCHANGE
CARLB.CO,551,Carlsberg A/S B,8
CHRH.CO,26250,Chr. Hansen Holding A/S,8
COLOB.CO,14228,Coloplast A/S,8
DANSKE.CO,549,Danske Bank A/S,8
DSV.CO,553,DSV,8
FLS.CO,562,FLSmidth & Co,8
GEN.CO,561,Genmab,8
GN.CO,563,GN Store Nord,8
ISS.CO,942733,ISS A/S,8
JYSK.CO,26292,Jyske Bank A/S,8
MAERSKA.CO,559,A.P. Moller - Maersk A,8
MAERSKB.CO,556,A.P. Moller - Maersk B,8
NDA.CO,554,Nordea Bank AB,8
NOVOB.CO,555,Novo Nordisk A/S B,8
NZYMB.CO,558,Novozymes A/S B,8
PNDORA.CO,26322,Pandora A/S,8
TDC.CO,26353,TDC A/S,8
TRYG.CO,567,Tryg A/S,8
VWS.CO,564,Vestas Wind Systems A/S,8
WDH.CO,566,William Demant Holding,8

#IEX  World index
MXX.IEX,27254,IPC,56
AEX.IEX,168,AEX,56
IBEX.IEX,174,IBEX35,56
FTMIB.IEX,177,FTSE MIB,56
SSMI.IEX,176,SMI,56
BFX.IEX,14601,BEL20,56
MCX.IEX,13666,MICEX,56
IRTS.IEX,13665,RTSI,56
TA25.IEX,10529,TA25,56
BUX.IEX,38014,Budapest SE,56

#PA FRANCE
STOXX50E.PA,175,Euro Stoxx 50,31
DAX.PA,8826,DAX Futures,31
GDAXI.PA,172,DAX,31
FCHI.PA,167,CAC40,31
CAC40.PA,8853,CAC40 Futures,31
ALMIL.PA,100157,1000mercis SA,31
MLOVE.PA,960708,4Service Cloud Tech Ltd,31
ASTP.PA,17634,A.S.T. Groupe,31
ALA2M.PA,943326,A2Micile Europ,31
ABS.PA,17629,AB Science,31
BITI.PA,17675,ABC Arbitrage,31
ABEO.PA,991239,Abeo SAS,31
ABVX.PA,955665,Abivax SA,31
CFMP.PA,17630,Acanthe Developpement,31
ACCP.PA,386,Accor SA,31
ALALO.PA,943311,Acheter Louer,31
DTNC.PA,17676,Acteos,31
MRSP.PA,17677,Actia Group,31
ALADA.PA,943241,Ada,31
ALARF.PA,1052246,Adeunis,31
ALDP.PA,17679,ADL Partner,31
ADOC.PA,40297,Adocia,31
ALADO.PA,943231,Adomos SA,31
ALADM.PA,943306,Adthink Media,31
ADVA.PA,17695,Advenis SA,31
ADVIC.PA,1055913,Advicenne,31
ADVI.PA,17681,Advini,31
ADP.PA,6962,Aeroports De Paris SA,31
BTPP.PA,7188,Affine R.E,31
AFON.PA,7727,Afone,31
ALAGR.PA,943320,Agrogeneration,31
AGTA.PA,19715,Agta Record,31
AIRFXB.PA,945118,Air France KLM,31
AIRF.PA,385,Air France KLM SA,31
AIRP.PA,389,Air Liquide SA,31
AIR.PA,412,Airbus Group SE,31
AKA.PA,17683,Akka Technologies,31
ABIO.PA,7005,Albioma,31
ALDA.PA,1012045,ALD SA,31
ALPHY.PA,7278,Ales Groupe,31
ALDV.PA,17678,Alliance Developpement Capital SIIC SE,31
CDAF.PA,7768,Alpes Compagnie,31
AMOS.PA,17684,Alpha Mos,31
ALSO.PA,413,Alstom SA,31
ALMP.PA,17685,Altamir Amboise,31
IMAF.PA,17632,Altarea,31
AREIT.PA,17686,Altareit,31
LTEN.PA,7048,Alten,31
ALTT.PA,7047,Altran Technologies,31
ALTUR.PA,943297,Altur Investissement SAC,31
MLALV.PA,1052263,Alveen,31
MLAAH.PA,989572,Amatheon Agri Holding NV,31
AMEBA.PA,955876,Amoeba SA,31
AMPLI.PA,955666,Amplitude Surgical SAS,31
AMUN.PA,961654,Amundi SA,31
ALANV.PA,945116,Anevia SA,31
ACNF.PA,7294,ANF Immobilier,31
ANTAL.PA,1017261,Antalis International SASU,31
ALANT.PA,943225,Antevenio,31
APRL.PA,387,April,31
ALAQU.PA,943291,Aquila SA,31
ARCH.PA,7039,Archos,31
STAGR.PA,958859,Ares Allergy Holding PLC,31
ARGAN.PA,17633,Argan,31
AKE.PA,6980,Arkema,31
ARTE.PA,17662,Artea SA,31
ARTO.PA,17792,Artois Nom,31
ARTF.PA,32437,Artprice Com,31
ML350.PA,989571,As SA,31
MLAEM.PA,958855,Ashler et Manson SARL,31
PID.PA,943370,Ask SA,31
ALSIM.PA,945109,Assima PLC,31
ASY.PA,7111,Assystem,31
ALAST.PA,943264,Astellia,31
ATAR.PA,13160,Atari,31
ATEME.PA,943371,Ateme,31
ATOS.PA,7019,Atos SE,31
AUBT.PA,17690,Aubay,31
OFMN.PA,17689,Aufeminin.Com,31
AUCP.PA,17691,Augros Cosmetics,31
ALAUP.PA,943300,Auplata,31
AUER.PA,17692,Aurea,31
AURS.PA,17693,Aures Technologies SA,31
AVOM.PA,7129,Avenir Telecom,31
LAEP.PA,7150,Aviation Latecoere,31
AWOX.PA,943364,Awox,31
AXAF.PA,393,AXA SA,31
AXW.PA,14167,Axway Software,31
MLAAT.PA,963718,Azorean Aquatic Technologies SA,31
CDBP.PA,17697,Baccarat,31
BAIN.PA,7615,Bains Mer Monaco,31
BALYO.PA,1011051,Balyo SA,31
MLWEE.PA,977684,Bambu AG,31
BBUI.PA,17699,Barbara Bui,31
BATD.PA,17700,Bastide Le Confort,31
MLBAT.PA,989573,Batla Minerals SA,31
ALBDM.PA,943227,Bd Multimedia,31
LBEL.PA,17811,Belier,31
CHBE.PA,7056,Beneteau,31
BNSI.PA,22033,Beni Stabili SpA,31
ALDBL.PA,943246,Bernard Loisea,31
BICP.PA,7033,BIC,31
BGBN.PA,17702,Bigben Interactive,31
ALBLD.PA,943263,Bilendi,31
ALCOR.PA,955875,Biocorp Production SA,31
BUP.PA,1052245,BIOM UP SA,31
BIOX.PA,7078,Biomerieux SA,31
ALBIO.PA,943333,Biosynex,31
BLEE.PA,17704,Bleecker,31
BLUE.PA,943355,Blue,31
ALBLU.PA,945113,Bluelinea SA,31
BNPP.PA,396,BNP Paribas SA,31
MLONE.PA,989593,Body One SA,31
BOIR.PA,7031,Boiron,31
BOLL.PA,13163,Bollore SA,31
BOND.PA,7113,Bonduelle,31
GPBN.PA,6976,Bourbon Corporation SA,31
BDRP.PA,17638,Bourse Direct,31
BOUY.PA,397,Bouygues SA,31
BROAN.PA,40299,Brasseries de Ouest Africain,31
BRCP.PA,40298,Brasserie Cameroun,31
MLBRI.PA,963719,Brico Distribution SA,31
ALBRI.PA,7417,Bricorama,31
MLBRO.PA,958856,Brokersclub AG,31
ALBUD.PA,943262,Budget Telecom,31
BVI.PA,8788,Bureau Veritas,31
BULY.PA,17707,Burelle,31
BZDK.PA,17636,Business Et Decision,31
CAT31.PA,17708,Ca Toulouse 31 CCI,31
CAFO.PA,17709,Cafom,31
CCAP.PA,17720,Cambodge Nom,31
CAPP.PA,390,Cap Gemini SA,31
CAPLI.PA,17710,Capelli SA,31
ALCRB.PA,943356,Carbios,31
ALCAR.PA,943332,Carmat,31
CARM.PA,17728,Carmila SA,31
CRPP.PA,17711,Carpinienne Part,31
CARR.PA,404,Carrefour SA,31
CASP.PA,6959,Casino Guichard,31
YAS.PA,17640,Cast,31
CATGR.PA,17848,Catana Group,31
CATR.PA,29396,Caterpillar Inc,31
CBOT.PA,40305,CBO Territoria,31
MLCEC.PA,989574,Cecurity.com SA,31
CGDM.PA,7728,Cegedim,31
CGR.PA,7177,Cegereal,31
ALCLS.PA,19717,Cellectis,31
CLNV.PA,955877,Cellnovo Group SA,31
CEREN.PA,949746,Cerenis Therapeutics Holding,31
ALPCV.PA,985719,Cerinnov Group SA,31
ALCES.PA,943316,Cesar SA,31
CFI.PA,17716,CFI,31
GEPH.PA,7051,CGG SA,31
CRIP.PA,7089,Chargeurs,31
CHAU.PA,17717,Chauffage Urbain,31
CHSS.PA,17806,Chausseria,31
MLCHE.PA,998052,Cheops Technology France SA,31
DIOR.PA,6954,Christian Dior SE,31
CIBP.PA,17718,Cibox Inter A Ctiv,31
MLCIO.PA,943221,Cioa,31
CTRG.PA,17722,Catering Intl Sces,31
AVQ.PA,7154,Claranova,31
ALCLA.PA,943256,Clasquin,31
CNIM.PA,7148,CNIM Constr. Frf 10,31
CNV.PA,989560,Cnova NV,31
CNPP.PA,6997,CNP Assurances,31
COFA.PA,943321,Coface,31
ALCOF.PA,943242,Cofidur SA,31
ALCOG.PA,943342,Cogra,31
COHE.PA,17724,Coheris,31
ALCOI.PA,943223,Coil,31
COLP.PA,17725,Colas,31
MLCMG.PA,961655,Compagnie Miniere Grecemar SA,31
CSTM.PA,945110,Constellium Nv,31
CRTS.PA,17727,Courtois,31
CRAP.PA,943229,Crcam Alp.Prov,31
CALCI.PA,40303,CRCAM Atlantique Vendee CCI,31
CRBP2.PA,40309,CRCAM Brie Picardie 2 CCI,31
CIV.PA,943234,Crcam Ille-Vil,31
CRLA.PA,40311,CRCAM Langued CCI,31
CRLO.PA,943235,Crcam Loire Ht,31
CMO.PA,943239,Crcam Morbihan,31
CADNI.PA,40300,CRCAM Nord CCI,31
CCNP.PA,943230,Crcam Norm.Sei,31
CAIF.PA,943238,Crcam Paris Et,31
CRSU.PA,943237,Crcam Sud RA,31
CRTO.PA,943236,Crcam Touraine,31
CAGR.PA,407,Credit Agricole SA,31
ALCJ.PA,943358,Crossject,31
CROS.PA,17729,Crosswood,31
SIGF.PA,7718,CS Communication Systemes,31
ALSOL.PA,943330,Custom Solutio,31
ALCYB.PA,17730,Cybergun SA,31
ALDSL.PA,943302,D.L.S.I,31
DALE.PA,17732,Dalet,31
DRIS.PA,995707,Damaris SA,31
ALDAR.PA,7704,Damartex,31
DANO.PA,394,Danone SA,31
AVMD.PA,17734,Dassault Aviation,31
DAST.PA,6957,Dassault Systemes,31
MLDTB.PA,960707,Datbim SA,31
ALDBT.PA,962347,DBT SA,31
DBV.PA,40314,DBV Technologies,31
MLDEX.PA,989575,Debflex SA,31
ALDEI.PA,943329,Deinove,31
ALDEL.PA,17735,Delfingen,31
ALDR.PA,942716,Delta Drone SA,31
DLTA.PA,17736,Delta Plus Group SA,31
DBG.PA,9069,Derichebourg,31
MLDYH.PA,958857,Design Your Home Holding AB,31
ALDEV.PA,17642,Devernois SA,31
DVTM.PA,7026,Devoteam,31
DGE.PA,29512,Diageo PLC,31
DMSP.PA,17738,Diagnostic Medical Systems SA,31
ALEHT.PA,19718,Diaxonhit SA,31
ALDIE.PA,943296,Dietswell,31
DIGP.PA,17737,Digigram,31
DJTK.PA,989562,Digitech SA,31
DIREN.PA,943268,Direct Energie SA,31
DWP.PA,17643,DNXcorp,31
DPAP.PA,17919,Docks des Petroles dAmbes,31
ALDOL.PA,943252,Dolphin Integr,31
DOMS.PA,17860,DOM Security,31
DURJ.PA,989563,Drdgold,31
ALDRV.PA,951014,Drone Volt SA,31
DYND.PA,989564,Dynafond SA,31
ALEZV.PA,943282,Easyvista,31
EARO.PA,989565,Compagnie des Eaux de Royan SA,31
ECASA.PA,17742,ECA,31
ALESA.PA,946355,Ecoslops SA,31
EDEN.PA,13146,Edenred,31
EDDS.PA,989566,Editions du Signe SA,31
EGID.PA,17743,Egide,31
FOUG.PA,6995,Eiffage,31
EKI.PA,100156,Ekinops SA,31
VI.PA,17744,Electricite et Eaux de Madagascar SA,31
EDF.PA,391,Electricite de France SA,31
EDSP.PA,17644,Electricite de Strasbourg,31
EPS.PA,951013,Electro Power Systems SA,31
ELIOR.PA,943369,Elior Group,31
ELIS.PA,945685,Elis Services SA,31
ALEMV.PA,943813,Emova Group,31
ALDUB.PA,17747,Encres Dubuit SA,31
ALENE.PA,985891,Enertime SAS,31
ENGIE.PA,395,Engie SA,31
ALENT.PA,943303,Entreparticuli,31
ALENR.PA,943233,Entreprendre,31
ALTEV.PA,943284,Environnement,31
ALEO2.PA,943307,EO2,31
MLEMG.PA,989576,Eon Motors Group SA,31
EOSI.PA,40316,EOS Imaging,31
ERMT.PA,6948,Eramet,31
ERYP.PA,943352,Erytech Pharma,31
ESIG.PA,17749,ESI Group,31
ALESK.PA,943228,Esker,31
ESSI.PA,405,Essilor International Compagnie Generale d’Optique SA,31
ESSF.PA,7042,ESSO,31
ELER.PA,7035,Euler Hermes,31
EFIN.PA,17819,Eurasia Fonciere Invest,31
ALEUA.PA,945690,Eurasia Groupe Sa,31
EURA.PA,25448,Eurazeo,31
EURR.PA,13135,Euro Ressources,31
EUFI.PA,6964,Eurofins Scientific,31
ALGEM.PA,943305,Eurogerm,31
MLERO.PA,989577,Euroland Corporate SA,31
EUMD.PA,17645,Euromedis Groupe SA,31
ENX.PA,943375,Euronext,31
ECP.PA,17752,Europacorp,31
EUCAR.PA,955667,Europcar Groupe SA,31
ALEUP.PA,942436,Europlasma SA,31
ETL.PA,7017,Eutelsat Communications,31
ALTVO.PA,943260,Evolis,31
PPCF.PA,17754,Exacompta Clairefontaine,31
EXEP.PA,7747,Exel Industries,31
EEPC.PA,17755,Explosifs Prod Chimiques,31
FBAP.PA,943812,Fashion B Air SA,31
EPED.PA,6958,Faurecia,31
FAUV.PA,17758,Fauvet Girel,31
FSDV.PA,17756,Fayenc. Sarreguemi,31
FCMC.PA,17712,Ferm. Casino Mun. Canne,31
FALG.PA,943348,Fermentalg,31
FFPP.PA,17759,FFP SA,31
SACP.PA,17760,Fiducial Office Solutions,31
PADI.PA,17761,Fiducial Real Est,31
FGA.PA,943357,Figeac Aero SA,31
ALFIL.PA,943814,Filae,31
ILSB.PA,17762,Fin. Etang Berre,31
BLBP.PA,989557,Financiere Hoche Bains les Bains SA,31
FINM.PA,17763,Financiere Marjos SA,31
EPMF.PA,7093,Financiere Odet,31
LINP.PA,17764,Finatis,31
MLFXO.PA,989583,Finaxo Environnement SA,31
FIPP.PA,17765,FIPP,31
MLFIR.PA,989581,Firstcaution SA,31
FLMI.PA,7691,Fleury Michon,31
ALFOC.PA,945686,Focus Home Interactive Sas,31
BLIM.PA,17767,Fonciere 7 Invest,31
FATL.PA,17768,Fonciere Atland,31
FMU.PA,17647,Fonciere des Murs SCA,31
FDR.PA,7015,Fonciere des Regions,31
LOEX.PA,17769,Fonciere Euris,31
INEA.PA,17770,Fonciere Inea,31
FLYP.PA,17771,Fonciere Lyonnaise,31
FPN.PA,17680,Fonciere Paris Nord,31
SPOE.PA,17775,Fonciere Volta,31
FOEQ.PA,40318,Forestiere Equatoriale,31
ALFPC.PA,943309,Fountaine Pajo,31
MLFTI.PA,989582,31 Tourisme Immobilier SA,31
MLFDV.PA,942715,Franck Deville SA,31
ALFRE.PA,943266,Freelance.Com,31
FREY.PA,17777,Frey,31
FROB.PA,17778,Fromageries Bel,31
FTRN.PA,7046,Futuren,31
GALIM.PA,17721,Galimmo SA,31
ALBI.PA,7235,Gascogne SA,31
GAUM.PA,7709,Gaumont SA,31
ALGAU.PA,943292,Gaussin,31
GMDS.PA,17828,GDS Moulins Strasbourg,31
RUSAL.PA,943378,GDS S Rusal,31
GEAP.PA,17779,GEA Grenobl. Elect,31
GECI.PA,7112,GECI International SA,31
GFCP.PA,6953,Gecina Nom,31
MLGEL.PA,943216,Gel Groupe SA,31
GNE.PA,29562,General Electric Company,31
GENX.PA,17649,Generix,31
GNRO.PA,976469,Geneuro SA,31
GNFT.PA,19720,Genfit,31
GVI.PA,943363,Genomicvision,31
ALGEN.PA,19719,Genoway,31
SIGHT.PA,985893,Gensight Biologics SA,31
GKTX.PA,943362,Genticel SA,31
MLGEQ.PA,955879,Gentlemen’s Equity SA,31
ALGEV.PA,943226,Gevelot,31
GFIP.PA,7745,GFI Informatique,31
GLTN.PA,7573,Gl Events,31
ALGBE.PA,943337,Glob Bioenergi,31
ALGEP.PA,943349,Global Ecopowe,31
MLIFE.PA,958273,Global Health Group AG,31
ALGLD.PA,943345,Gold By Gold,31
GPEP.PA,17651,GPE Group Pizzorno,31
VLTZ.PA,17899,Graines Voltz,31
MLGES.PA,989584,Green Energy 4 Seasons SA,31
ALACT.PA,943335,Groupe Actiplay SA,31
KRNI.PA,989569,Groupe Carnivor SA,31
CITT.PA,7162,Groupe Crit,31
GETP.PA,13102,Groupe Eurotunnel,31
GFLO.PA,7214,Groupe Flo,31
FNAC.PA,41353,Groupe FNAC,31
GOEG.PA,17650,Groupe Gorge,31
ALGIL.PA,943240,Groupe Guillin SA,31
IRD.PA,17798,Groupe IRD,31
JAJP.PA,17780,Groupe JAJ SA,31
OPEN.PA,7529,Groupe Open,31
ALPAR.PA,992779,Groupe Parot SA,31
PARP.PA,7108,Groupe Partouche,31
SEBF.PA,6999,SEB SA,31
SFPI.PA,17746,Groupe Sfpi,31
ALIMO.PA,943310,Groupimo SA,31
GTBP.PA,40324,GT Biopharma Inc,31
GTT.PA,943359,GTT,31
GRBT.PA,7373,Guerbet,31
GTCN.PA,17781,Guillemot,31
GUYD.PA,17782,Guy Degrenne,31
ALHEO.PA,943224,H2O Innovation Inc,31
ALHVS.PA,943278,Harvest,31
PYHE.PA,7032,Haulotte Group,31
MLAHC.PA,1024886,Health SAS,31
MLHK.PA,961656,Heckler & Koch Beteiligungs AG,31
HERIG.PA,7164,Herige SA,31
HRMS.PA,6987,Hermes International SCA,31
ALHPC.PA,943293,Heurtey Petrochem SA,31
HFCO.PA,17784,HF,31
ADUX.PA,7106,Hi Media SA,31
HIGH.PA,7202,High Co,31
ALHIO.PA,17785,Hiolle Industries,31
HIPAY.PA,955668,Hipay Group SA,31
ALHIT.PA,943298,Hitechpros,31
ALHOL.PA,943304,Holosfind,31
ALHSW.PA,994268,Horizontal Software SAS,31
LZTL.PA,17787,Hotels De Paris,31
HBC.PA,29419,HSBC Holdings PLC,31
HBWO.PA,13181,Hubwoo SA,31
ALHYG.PA,19721,Hybrigenics,31
ALICR.PA,943217,I.Ceram SA,31
ALI2S.PA,943271,I2S,31
ICAD.PA,9109,ICADE,31
IDLA.PA,40319,ID Logistics SAS,31
IDVP.PA,17789,IDI,31
IDSP.PA,989568,IDS SA,31
ALIDS.PA,943244,Idsud,31
IGXA.PA,17790,IGE + XAO,31
ILD.PA,6983,Iliad,31
MLIML.PA,989585,Imalliance SA,31
IMTP.PA,6967,Imerys,31
ALIMR.PA,962523,Immersion SA,31
FINA.PA,17791,Immob. Dassault,31
ALIMP.PA,44451,Implanet SA,31
CHRA.PA,989559,Imprimerie Chirat SA,31
IFDE.PA,17653,Indle Fin. Entrepr,31
MLFIH.PA,989580,Industrial Holding SpA,31
INFY.PA,943377,Infosys Technologies Limited ADR,31
ETOF.PA,17793,Infotel,31
INGC.PA,7049,Ingenico Group,31
IPH.PA,17795,Innate Pharma,31
INN.PA,17796,Innelec Multimedia,31
MLIDP.PA,953071,Innovaderma PLC,31
INSD.PA,40320,Inside Secure,31
OLLI.PA,17797,Installux,31
ALBPS.PA,955874,Institut Biophytis SAS,31
ALINT.PA,19722,Integragen,31
MLITG.PA,958274,Integral SA,31
IPAR.PA,7175,Inter Parfums Inc,31
ITXA.PA,17654,Intexa,31
ALINS.PA,943344,Intrasense,31
IVAA.PA,996538,Inventiva SA,31
MLINV.PA,985973,Invibes Advertising SASU,31
MLIPY.PA,989587,Ipernity Org SA,31
IPN.PA,7072,Ipsen,31
ISOS.PA,7040,Ipsos,31
ITLI.PA,17799,IT Link,31
ITFT.PA,17800,Itesoft,31
IAM.PA,943374,Itissalat Al-Maghrib,31
ITS.PA,17801,ITS Group,31
ALIVA.PA,943273,Ivalis,31
JBOG.PA,17802,Jacques Bogart SA,31
JCQ.PA,14169,Jacquet Metal Sce,31
JCDX.PA,7076,JC Decaux SA,31
KOF.PA,7096,Kaufman Et Broad,31
PRTP.PA,670,Kering SA,31
ALKLK.PA,980201,Kerlink SAS,31
KEYR.PA,17803,Keyrus,31
ALKEY.PA,943251,Keyyo,31
LOIM.PA,7070,Klepierre,31
KORI.PA,23514,Korian Medica SA,31
OREP.PA,400,L’Oreal SA,31
LFDE.PA,985182,La Francaise de l'Energie SA,31
MLSDN.PA,980203,La Savonnerie de Nyons SA,31
LACP.PA,17809,Lacroix SA,31
LHN.PA,955878,LafargeHolcim Ltd,31
LAFU.PA,7568,Lafuma,31
LAGA.PA,668,Lagardere S.C.A,31
LAN.PA,13173,Lanson BCC,31
LPER.PA,7292,Laurent-Perrier,31
LOUP.PA,7156,Societe LDC SA,31
LDCO.PA,17655,Groupe LDLC SA,31
LNA.PA,17812,Le Noble Age,31
LTAN.PA,17813,Le Tanneur,31
MLLEA.PA,989588,Leaderlease SA,31
ALLMG.PA,943338,Leadmedia Grou,31
LEBO.PA,17814,Lebon,31
LECS.PA,7211,Lectra,31
LEGD.PA,7059,Legrand SA,31
ALLHB.PA,943272,Les Hotels Bav,31
ARDPA.PA,989555,Les Motocycles Ardoin Saint Amand & Cie SA,31
3CHN.PA,989552,Les Trois Chenes SA,31
MLV4S.PA,989599,Les verandas 4 saisons SA,31
NVC.PA,17656,Lesnxconstructeurs,31
ALLEX.PA,17815,Lexibook Linguistic Electronic System SA,31
LDSV.PA,7266,Linedata Services SA,31
MLION.PA,989586,Lionax International Investment Holdings Ltd,31
GFII.PA,7063,Lisi,31
LOCI.PA,7055,Locindus,31
ALLOG.PA,943232,Logic Instrume,31
CSCE.PA,989561,Lombard Et Medot SA,31
LVMH.PA,399,LVMH Moet Hennessy Louis Vuitton SE,31
ALUCI.PA,943366,Lucibel,31
MLLB.PA,943220,Luigi Botto SpA,31
LYS.PA,996153,Lysogene SA,31
MRM.PA,17829,M.R.M,31
ALMNG.PA,943327,Madvertise SA,31
MSTY.PA,943373,Mainstay Medical International PLC,31
MLCLI.PA,961772,Maison Clio Blue SA,31
ALMII.PA,1050140,Maison Internationale de lInformatique M2I SAS,31
MDM.PA,980202,Maisons du Monde SAS,31
MFCP.PA,7693,Maisons France,31
ALMAK.PA,943247,Makheia Group,31
MFBP.PA,17817,Malteries FCO-Belges,31
MLMHO.PA,949747,Mandalore Holding SA,31
MANP.PA,7062,Manitou BF,31
MATP.PA,7253,Manutan International,31
MBWS.PA,13175,Marie Brizard Wine & Spirits,31
ALMAS.PA,943258,Mastrad,31
MKEA.PA,32435,Mauna Kea Tech,31
MAUP.PA,7068,Etablissements Maurel et Prom SA,31
MCPHY.PA,943360,Mcphy Energy,31
ALMEC.PA,17820,Mecelec SA,31
MDSY.PA,17821,Medasys,31
MED6.PA,7363,Media 6,31
ALMDT.PA,943336,Mediantechn,31
MDW.PA,1006173,Mediawan SA,31
MLMFI.PA,989590,Medical Franchises Investments NV,31
ALMED.PA,943265,Medicrea Int,31
MEMS.PA,17823,Memscap Regpt,31
MERY.PA,6994,Mercialys,31
MRK.PA,29417,Merck & Company Inc,31
CBLP.PA,7071,Mersen,31
METEX.PA,14170,Metabolic Explorer,31
MLETA.PA,989578,Metalliance SA,31
ALMET.PA,943346,Methanor,31
MMTP.PA,6946,Metropole TV,31
ALMGI.PA,943277,Mg Internation,31
MGIP.PA,17824,Mgi Coutier,31
ALMDG.PA,943294,MGI Digital,31
MICP.PA,411,Compagnie Generale des Etablissements Michelin SCA,31
MIPO.PA,17825,Micropole,31
MLSKN.PA,958858,Microskin PLC,31
ALMIC.PA,943254,Microwave Visi,31
ALMLB.PA,962348,Miliboo SA,31
ALINN.PA,943285,Millet Innov,31
MNDG.PA,943354,MND,31
TEDE.PA,17659,Moncey Financiere Nom,31
MLMON.PA,989591,MonFinancier SA,31
CHMS.PA,989558,Compagnie du Mont Blanc SA,31
ALMOU.PA,943334,Moulinvest,31
MBRI.PA,7549,Mr Bricolage,31
MLMUL.PA,943219,Mulann SA,31
MUSE.PA,17830,Musee Grevin,31
NANOB.PA,40322,Nanobiotix,31
CNAT.PA,7021,Natixis,31
NATU.PA,17831,Naturex,31
ALNLF.PA,990007,Neolife SA,31
NPOS.PA,6992,Neopost,31
ALNEV.PA,19723,Neovacs,31
ALNBT.PA,943249,Netbooster,31
ETGM.PA,9225,Netgem SA,31
NRO.PA,17833,Neurones,31
NWZI.PA,989605,News Invest SA,31
NEXS.PA,7028,Nexans,31
NEXI.PA,7054,Nexity,31
NEXTS.PA,994269,Nexstage Am SAS,31
ALNXT.PA,943261,Nextedia,31
NEWS.PA,989604,Nicolas Miguet et Associes SA,31
NCOX.PA,6972,Nicox SA,31
NOKIA.PA,961657,Nokia Oyj,31
ALNOV.PA,943299,Novacyt,31
MLLED.PA,989589,Novaday SAS,31
MLNOT.PA,962525,Novae Aerospace,31
ALNOX.PA,991180,Noxxon Pharma AG,31
SONO.PA,7109,NRJ Group,31
ALNSC.PA,17834,NSC Groupe SA,31
ALNSE.PA,943255,NSE SA,31
MLOSA.PA,963717,O Sorbet d’Amour SA,31
ALODI.PA,19725,O2I,31
ALOBR.PA,943288,Ober,31
ALOCA.PA,945101,Oceasoft SAS,31
SABT.PA,17835,Oeneo,31
OFP.PA,17901,Officiis Properties SA,31
MLOLM.PA,989592,Olmix SA,31
OLG.PA,17836,Olympique Lyonnais Groupe SA,31
ALONC.PA,943361,Oncodesign,31
C4X.PA,17635,Onxeo,31
ORAN.PA,409,Orange SA,31
ORPF.PA,17837,Orapi,31
KAZI.PA,17838,Orchestra Premaman SA,31
MLORC.PA,958275,Orclass.com SA,31
OREGE.PA,943319,Orege,31
ORP.PA,7075,Orpea,31
OSE.PA,949748,Ose Pharma International SA,31
ALOSM.PA,996152,Osmozis SAS,31
ALOSP.PA,943372,Ospreyfrank,31
PARF.PA,17665,Paref,31
MLPFX.PA,989594,Parfex SA,31
PARRO.PA,7159,Parrot,31
PASS.PA,17844,Passat,31
PATC.PA,17845,Patrimoine Et Comm,31
PCAS.PA,17666,Pcas,31
PERP.PA,406,Pernod Ricard SA,31
GPIF.PA,17846,Perrier Gerard,31
PEUP.PA,402,Peugeot SA,31
PGOA.PA,989606,PGO Automobiles SA,31
PHAI.PA,7332,Pharmagest Interactive,31
ALPHS.PA,993281,Pharmasimple SA,31
PHARN.PA,985975,Pharnext SAS,31
PMIN.PA,29545,Philip Morris International Inc,31
PVAC.PA,6947,Pierre Vacances,31
ALPDX.PA,7627,Piscines Desjoyaux,31
PIX.PA,943367,Pixium Vision,31
PLAP.PA,989607,Placoplatre SA,31
ALPLA.PA,945117,Planet.FR SA,31
ALPAT.PA,949745,Plant Advanced Technologies SA,31
PLOF.PA,7027,Plastic Omnium,31
PLVP.PA,17847,Plastiques du Val de Loire SA,31
MLPPF.PA,953849,Point Parfums Digital SARL,31
ALPJT.PA,943245,Poujoulat,31
ALPOU.PA,961771,Poulaillon SA,31
POXEL.PA,945688,Poxel SA,31
PREP.PA,17849,Precia,31
ALPCI.PA,942518,Primecity Investment PLC,31
ALPRI.PA,17850,Prismaflex Intl,31
PG.PA,29579,Procter & Gamble Company,31
ALPRO.PA,943286,Prodware,31
PWG.PA,1009128,Prodways Group SA,31
PRSW.PA,17667,Prologue,31
MLPRO.PA,953850,Protektus AG,31
PSBP.PA,7731,PSB Industries,31
HOP.PA,17851,Public Systeme Hopscotch SA,31
PUBP.PA,6979,Publicis Groupe SA,31
MLQP.PA,976470,Quadpack Industries SA,31
QUTL.PA,17852,Quantel,31
ALQGC.PA,946353,Quantum Genomics SA,31
QTE.PA,17853,Quotium Technologies,31
GENC.PA,6996,Rallye,31
GDSF.PA,7659,Ramsay Generale De Sante,31
MLRAM.PA,989595,Raphael Michel SA,31
ALREA.PA,943365,Realites,31
RXPA.PA,7079,Recylex SA,31
RCOP.PA,6971,Remy Cointreau,31
RENA.PA,419,Renault SA,31
ALREW.PA,943328,Reworld Media,31
RXL.PA,6969,Rexel,31
RIBE.PA,17854,Riber,31
ROBF.PA,7305,Robertet,31
ROBFI.PA,989608,Robertet SA,31
ALROC.PA,943313,Roctool,31
ROTH.PA,17841,Rothschild & Co SCA,31
ALRGR.PA,17856,Rougier SA,31
RUBF.PA,7103,Rubis SCA,31
SABL.PA,17857,Sabeton,31
SAFOR.PA,945682,Safe Orthopaedics SA,31
SAF.PA,6991,Safran SA,31
SGOB.PA,403,Compagnie de Saint Gobain SA,31
SAMS.PA,7538,Samse,31
SASY.PA,414,Sanofi SA,31
ALMER.PA,943325,Sapmer,31
STDM.PA,7014,Sartorius Stedim Biotech,31
SAVEN.PA,7004,Savencia Fromage & Dairy,31
CBSM.PA,17705,Soc Centrale Bois Scieries Manche SA,31
SLBP.PA,943222,Schlumberger NV,31
SCHN.PA,401,Schneider Electric SE,31
SCOR.PA,7007,SCOR SE,31
CCHE.PA,7073,Seche Environnem,31
SELER.PA,17862,Selectirente,31
MLSDR.PA,945100,Sendr SE,31
ALSEN.PA,951012,Sensorion SA,31
MLSEQ.PA,989596,Sequa Petroleum NV,31
SEQ.PA,13132,Sequana,31
SEFER.PA,943368,Sergeferrari G,31
ALSER.PA,943816,Serma Technologies SA,31
SESFD.PA,6975,SES,31
SESL.PA,17876,SES Imagotag,31
ALSIP.PA,943243,Si Participations,31
ALBFR.PA,943276,Sidetrade,31
GIRO.PA,17863,Signaux Girod,31
SION.PA,989609,Simo International SA,31
SIPH.PA,17866,Societe Internationale de Plantations d’Heveas SA,31
MLSML.PA,989597,Smalto SA,31
SMCP.PA,1052409,Smcp SAS,31
SMTPC.PA,17889,Soc Marseillaise Tunnel Prado Carenage SA,31
SFCA.PA,17776,Soc Franc Casinos,31
TEIF.PA,17888,Societe de la Tour Eiffel SA,31
LSDM.PA,989570,Societe des Lecteurs du Monde SA,31
SOGN.PA,410,Societe Generale,31
EXHO.PA,6981,Sodexo,31
SDIF.PA,17670,Sodifrance,31
SDTC.PA,17867,Soditech Ingenierie SA,31
SPBS.PA,17868,Sofibus Patrimoine,31
SRAG.PA,17869,Sofragi,31
SFTC.PA,17870,Soft Computing,31
SCLR.PA,17871,Sogeclair,31
SOIT.PA,6990,Soitec SA,31
LOCAL.PA,7058,Solocal Group SA,31
ALS30.PA,943283,Solutions 30 SE,31
DAMA.PA,17873,Somfy SA,31
SOPR.PA,7100,Sopra Steria Group SA,31
SPIE.PA,942438,Spie SA,31
IISP.PA,7380,Societe Pour l Informatique Industrielle SA,31
ALSGD.PA,943351,Spineguard,31
ALSPW.PA,943350,Spineway,31
SPIS.PA,7234,Spir Communication,31
SQLI.PA,17874,SQLi,31
SRPG.PA,960709,SRP Groupe SA,31
DPTP.PA,17875,ST Dupont,31
STF.PA,7121,Stef,31
STEN.PA,17671,Stentys,31
STM.PA,417,STMicroelectronics,31
ALSAS.PA,943817,Stradim Espace Finances SA,31
ALSTW.PA,943315,Streamwide,31
STID.PA,985793,Streit Mecanique SA,31
SEVI.PA,8806,Suez SA,31
MLSUM.PA,946354,Sumo Resources PLC,31
SSI.PA,943314,Supersonic Imagine SA,31
SWOR.PA,7127,Sword Group,31
SDGI.PA,7091,Synergie,31
TKTT.PA,943267,Tarkett,31
TYNN.PA,17880,Tayninh,31
TCH.PA,13166,Technicolor,31
FTI.PA,7006,TechnipFMC PLC,31
ALFST.PA,960705,Technofirst SA,31
ROCH.PA,7087,Teleperformance,31
TLVB.PA,40327,Televerbier,31
TERR.PA,17673,Terreis,31
TESI.PA,7069,Tessi,31
TFFP.PA,7086,Television Francaise 1 SA,31
TCFP.PA,6952,Thales,31
ALTHER.PA,945115,Theraclion SA,31
ALTHE.PA,943269,Theradiag,31
ALTHX.PA,1052917,Theranexus SA,31
THHG.PA,7242,Thermador Groupe,31
TKOO.PA,997440,Tikehau Capital Partners SAS,31
TIPK.PA,17884,Tipiak,31
TIVO.PA,17885,Tivoly,31
TONN.PA,17886,Tonna Electronique,31
TFF.PA,7160,Tonnellerie Francois Freres SA,31
TOTF.PA,416,Total SA,31
EGAB.PA,40315,Total Gabon,31
TETR.PA,17887,Touax,31
TGEL.PA,7180,Toupargel Groupe,31
TRNG.PA,7034,Transgene,31
ALTRA.PA,945104,Traqueur SA,31
ALTTI.PA,945689,Travel Technology Interactive,31
TRIA.PA,7003,Trigano,31
ALTRI.PA,943301,Trilogiq,31
ALTRO.PA,945687,TronicS Microsystems SA,31
TXCL.PA,943274,Txcell,31
ALTXC.PA,989554,Txcom SA,31
L3C.PA,7304,U10,31
UBIP.PA,6984,Ubisoft Entertainment,31
ALUCR.PA,943341,Ucar,31
MLUMG.PA,989598,Umalis Group SA,31
ALUMS.PA,17891,Umanis SA,31
MLUTP.PA,985974,Un Toit Pour Toi SA,31
CBQP.PA,17674,Unibel,31
UFFP.PA,7145,Union Financiere de France Banque,31
UMHS.PA,989610,Union Metallurgique De La Haute Seine SA,31
UTIN.PA,17892,Union Technologies Informatique,31
MLUNT.PA,953851,Uniti SA,31
MLUSG.PA,941182,Universal System Group,31
ALUVI.PA,1024920,UV Germi SA,31
ALVAL.PA,1010721,Valbiotis SAS,31
VALED3.PA,943379,VALE SA,31
VLOF.PA,7022,Valeo SA,31
VLLP.PA,408,Vallourec,31
VLS.PA,17898,Valneva,31
MLVAL.PA,955881,Valoneo SASU,31
ALVDI.PA,943290,VDI Group,31
ALVEL.PA,943281,Velcan,31
VIE.PA,420,Veolia Environnement VE SA,31
ALVER.PA,943257,Vergnet,31
TCNP.PA,17895,Verneuil Participations,31
VETO.PA,17896,Vetoquinol,31
ALVXM.PA,943343,Vexim,31
ALVIA.PA,19724,Vialife SA,31
VCTP.PA,13167,Vicat,31
VDLO.PA,17628,Videlio SA,31
VEIL.PA,7152,Viel Et Compagnie,31
VILM.PA,7066,Vilmorin & Cie,31
SGEF.PA,418,Vinci SA,31
VIRB.PA,6977,Virbac,31
ALVIV.PA,943253,Visiativ,31
MLVIS.PA,989600,Visio Nerf SA,31
VDNT.PA,17897,Visiodent,31
ALVMG.PA,943339,Visiomed Group,31
VIV.PA,415,Vivendi SA,31
VLTSA.PA,953538,Voltalia SA,31
MLVOP.PA,989601,Vopium A/S,31
ALVDM.PA,101933,Voyageurs du Monde SA,31
VRKP.PA,7444,Vranken-Pommery,31
ALLIX.PA,954903,Wallix Group SA,31
WAVE.PA,17872,Wavestone,31
ALWEB.PA,943289,Weborama,31
ALWEC.PA,962524,WeConnect,31
ALWED.PA,943322,Wedia,31
MWDP.PA,6993,Wendel,31
MLWEY.PA,989602,Weya SA,31
ALWIT.PA,976468,Witbe Net SA,31
WLN.PA,953852,Worldline SA,31
XFAB.PA,999060,X Fab Silicon Foundries EV,31
XIL.PA,17900,Xilam Animation,31
XPO.PA,7136,Xpo Logistics Europe SA,31
MLYSH.PA,989603,Yangden Holding Ltd,31
MAGIS.PA,943353,Ymagis,31
ZCCM.PA,989611,ZCCM Investments Holdings PLC,31
ZODC.PA,6986,Zodiac Aerospace,31
ESLX.PA,405,EssilorLuxottica SA,31

#AX AUSTRALIA STOCK EXCHANGE
AXJO.AX,171,S&P/ASX 200,2
ORM.AX,994806,Orion Metals,2
MFF.AX,961889,MFF Capital Investments,2
PL8.AX,1011837,Plato Income Maximiser,2
WAM.AX,948297,WAM Capital,2
WGB.AX,1082099,WAM Global,2
WLE.AX,994820,WAM Leaders,2
FAR.AX,101977,FAR Ltd,2
HSO.AX,943409,Healthscope,2
PCL.AX,40350,Pancontinental Oil & Gas NL,2
AJM.AX,947501,Altura Mining Ltd,2
SEA.AX,14313,Sundance Energy Australia Ltd,2
AZY.AX,947570,Antipa Minerals Ltd,2
ANP.AX,44455,Antisense Therapeutics Ltd,2
EHL.AX,7265,Emeco Holdings Ltd,2
VPR.AX,947775,Enerji Ltd,2
OEX.AX,14298,Oilex Ltd,2
BLY.AX,7610,Boart Longyear Ltd,2
SUD.AX,40385,Suda Ltd,2
AUZ.AX,947548,Australian Mines Ltd,2
LLC.AX,626,Lend Lease Group,2
MPL.AX,946358,Medibank Private Ltd,2
MNC.AX,14285,Metminco Ltd,2
FMG.AX,628,Fortescue Metals Group Ltd,2
BPT.AX,7466,Beach Energy Ltd,2
AMA.AX,101952,AMA Group Ltd,2
ZYB.AX,947740,Zyber Holdings Ltd,2
ANZ.AX,636,ANZ Banking Group,2
BIT.AX,947587,Biotron Ltd,2
GEM.AX,32466,G8 Education Ltd,2
AMP.AX,630,AMP Ltd,2
APA.AX,7596,APA Group,2
FXJ.AX,635,Fairfax Media Ltd,2
WBC.AX,8706,Westpac Banking Corp,2
NAB.AX,7788,National Australia Bank Ltd,2
RSG.AX,8616,Resolute Mining Ltd,2
PDN.AX,7675,Paladin Energy Ltd,2
SCG.AX,102935,Scentre Group Ltd,2
IAG.AX,627,Insurance Australia Group Ltd,2
ORG.AX,7710,Origin Energy Ltd,2
IPL.AX,7569,Incitec Pivot Ltd,2
MGR.AX,7619,Mirvac Group,2
AVZ.AX,947552,Avz Minerals Ltd,2
MYX.AX,102005,Mayne Pharma Group Ltd,2
STO.AX,8656,Santos Ltd,2
AWC.AX,629,Alumina Ltd,2
IMU.AX,947885,Imugene Ltd,2
GPT.AX,637,GPT Group,2
ANL.AX,947627,Amani Gold Ltd,2
AST.AX,8649,AusNet Services Ltd,2
EVN.AX,32564,Evolution Mining Ltd,2
SGP.AX,8631,Stockland Corporation Ltd,2
TV2.AX,947808,tv2u International Ltd,2
BKP.AX,14246,Baraka Energy & Resources Ltd,2
VCX.AX,7791,Vicinity Centres Re Ltd,2
AZJ.AX,32570,Aurizon Holdings Ltd,2
EVE.AX,947782,Energy Ventures Ltd,2
LYC.AX,7473,Lynas Corporation Ltd,2
SRS.AX,7630,Spicers Ltd,2
BHP.AX,617,BHP Billiton Ltd,2
VOC.AX,102036,Vocus Group Ltd,2
OSH.AX,7600,Oil Search Ltd,2
CMW.AX,7194,Cromwell Property Group,2
SXY.AX,32479,Senex Energy Ltd,2
SDF.AX,102031,Steadfast Group Ltd,2
QBE.AX,8592,Qbe Insurance Group Ltd,2
BSL.AX,620,Bluescope Steel Ltd,2
TAH.AX,8664,Tabcorp Holdings Ltd,2
ATC.AX,947543,Altech Chemicals Ltd,2
AGO.AX,7646,Atlas Iron Ltd,2
BLD.AX,7411,Boral Ltd,2
SAR.AX,14310,Saracen Mineral Holdings Ltd,2
AMC.AX,621,Amcor Ltd,2
DXS.AX,10538,Dexus Property Group,2
WHC.AX,10547,Whitehaven Coal Ltd,2
SGM.AX,8629,Sims Metal Management Ltd,2
JMS.AX,32566,Jupiter Mines Ltd,2
AJC.AX,947499,Acacia Coal Ltd,2
COE.AX,14253,Cooper Energy Ltd,2
FFG.AX,947793,Fatfish Internet Group Ltd,2
OEL.AX,102018,Otto Energy Ltd,2
SGR.AX,32444,Star Entertainment Group Ltd,2
ADA.AX,947477,Adacel Tech Ltd,2
AGE.AX,947489,Alligator Energy Ltd,2
AMI.AX,943406,Aurelia Metals,2
SYD.AX,18484,Sydney Airport Holdings Ltd,2
IMM.AX,31087,Immutep Ltd,2
MZN.AX,947597,Marindi Metals Ltd,2
CGF.AX,7288,Challenger Ltd,2
ADJ.AX,40356,Adslot Ltd,2
GTG.AX,947841,Genetic Technologies Ltd,2
BXB.AX,631,Brambles Ltd,2
WOR.AX,8718,Worleyparsons Ltd,2
SWM.AX,13829,Seven West Media Ltd,2
SIG.AX,8637,Sigma Pharmaceuticals Ltd,2
BLK.AX,947590,Blackham Resources Ltd,2
CBA.AX,625,Commonwealth Bank Of Australia,2
ICG.AX,947871,Inca Minerals Ltd,2
TCL.AX,8668,Transurban Group,2
PRY.AX,8583,Primary Health Care Ltd,2
GXY.AX,18525,Galaxy Resources Ltd,2
MGX.AX,7696,Mount Gibson Iron Ltd,2
TRY.AX,8686,Troy Resources Ltd,2
QUB.AX,14304,Qube Holdings Ltd,2
ASL.AX,7674,Ausdrill Ltd,2
CWY.AX,8681,Cleanaway Waste Management Ltd,2
CSR.AX,7215,CSR Ltd,2
EMR.AX,32456,Emerald Oil & Gas NL,2
BDI.AX,947583,Blina Minerals NL,2
RIO.AX,8607,Rio Tinto Ltd,2
IMD.AX,14278,Imdex Ltd,2
SBM.AX,8620,St Barbara Ltd,2
BWP.AX,7694,BWP Trust,2
HVN.AX,7228,Harvey Norman Holdings Ltd,2
CVN.AX,10536,Carnarvon Petroleum Ltd,2
SKI.AX,8640,Spark Infrastructure Group,2
INP.AX,947606,Incentiapay Ltd,2
KRL.AX,18542,Kangaroo Resources Ltd,2
GMG.AX,638,Goodman Group,2
CFE.AX,18500,Cape Lambert Resources Ltd,2
DSE.AX,947788,Dropsuite Ltd,2
SYR.AX,102042,Syrah Resources Ltd,2
MTS.AX,7566,Metcash Ltd,2
EHE.AX,947756,Estia Health Ltd,2
CNU.AX,14585,Chorus Ltd,2
POS.AX,103947,Poseidon Nickel Ltd,2
CXO.AX,947701,Core Exploration Ltd,2
PRU.AX,13576,Perseus Mining Ltd,2
NEA.AX,102006,Nearmap Ltd,2
NSR.AX,102032,National Storage REIT,2
NWH.AX,13870,NRW Holdings Ltd,2
CE1.AX,18569,Calima Energy Ltd,2
WPL.AX,8721,Woodside Petroleum Ltd,2
CTD.AX,101966,Corporate Travel Managment Ltd,2
GRR.AX,7795,Grange Resources Ltd,2
BKY.AX,39113,Berkeley Energy Ltd,2
BOE.AX,947601,Boss Resources Ltd,2
WSA.AX,8722,Western Areas Ltd,2
IGO.AX,7714,Independence Group NL,2
FWD.AX,7428,Fleetwood Corporation Ltd,2
ARE.AX,947536,Argonaut Resources N L,2
COG.AX,947496,Armidale Investment Corporation Ltd,2
DOW.AX,7486,Downer Edi Ltd,2
GCY.AX,947815,Gascoyne Resources Ltd,2
MSB.AX,7590,Mesoblast Ltd,2
GXL.AX,32477,Greencross Ltd,2
AMG.AX,947781,Ausmex Mining Group Ltd,2
SCL.AX,947533,Schrole Group Ltd,2
WES.AX,8712,Wesfarmers Ltd,2
BNO.AX,101959,Bionomics Ltd,2
GMN.AX,943399,Gold Mountain Ltd,2
OPT.AX,947655,Opthea Ltd,2
CCZ.AX,947638,Castillo Copper Ltd,2
NST.AX,39197,Northern Star Resources Ltd,2
INA.AX,7553,Ingenia Communities Group,2
SAS.AX,947620,SKY and Space Global Ltd,2
AGL.AX,618,AGL Energy Ltd,2
AOG.AX,7578,Aveo Group,2
RCR.AX,8595,RCR Tomlinson Ltd,2
STM.AX,947551,Sunstone Metals Ltd,2
BAL.AX,947572,Bellamys Australia Ltd,2
AGY.AX,947493,Argosy Minerals Ltd,2
BAS.AX,947575,Bass Strait Oil Co Ltd,2
RED.AX,18565,Red 5 Ltd,2
OZL.AX,7474,OZ Minerals Ltd,2
MAY.AX,9131,Melbana Energy Ltd,2
RRL.AX,32462,Regis Resources Ltd,2
TGP.AX,8674,360 Capital Group Ltd,2
BGL.AX,947732,Bellevue Gold Ltd,2
API.AX,7508,Australian Pharma Industries Ltd,2
SI6.AX,947596,Six Sigma Metals Ltd,2
BMN.AX,7482,Bannerman Resources Ltd,2
MLS.AX,32469,Metals Australia Ltd,2
RNE.AX,7335,Renu Energy Ltd,2
SXL.AX,10546,Southern Cross Media Group Ltd,2
BCN.AX,947581,Beacon Minerals Ltd,2
MYR.AX,32571,Myer Holdings Ltd,2
ALL.AX,7387,Aristocrat Leisure Ltd,2
PNV.AX,32481,Polynovo Ltd,2
XAM.AX,49960,Xanadu Mines Ltd,2
BSR.AX,947614,Bassari Resources Ltd,2
CCL.AX,7168,Coca-Cola Amatil Ltd,2
WOW.AX,8720,Woolworths Ltd,2
SPL.AX,18575,Starpharma Holdings Ltd,2
GMR.AX,947831,Golden Rim Resources Ltd,2
CLQ.AX,947662,Clean TeQ Holdings Ltd,2
ARD.AX,947535,Argent Minerals Ltd,2
CSS.AX,947686,Clean Seas Seafood Ltd,2
NCM.AX,7695,Newcrest Mining Ltd,2
NUF.AX,7506,Nufarm Ltd,2
BOQ.AX,7793,Bank Of Queensland Ltd,2
TWE.AX,32563,Treasury Wine Estates Ltd,2
CHC.AX,7654,Charter Hall Group,2
MLM.AX,32447,Metallica Minerals Ltd,2
BRK.AX,32474,Brookside Energy Ltd,2
KNM.AX,947779,Kneomedia Ltd,2
SEK.AX,8624,Seek Ltd,2
WTP.AX,8724,Watpac Ltd,2
NXT.AX,40380,Nextdc Ltd,2
EEG.AX,947750,Empire Energy Group Ltd,2
AWV.AX,947557,Anova Metals Ltd,2
PAN.AX,32448,Panoramic Resources Ltd,2
ADO.AX,101947,Anteo Diagnostics Ltd,2
CWN.AX,10537,Crown Ltd,2
ALX.AX,32445,Atlas Arteria,2
AAD.AX,32476,Ardent Leisure Group,2
GNC.AX,7471,Graincorp Ltd,2
ANW.AX,947518,Aus Tin Mining Ltd,2
AQD.AX,947529,Ausquest Ltd,2
MMS.AX,7483,Mcmillan Shakespeare Ltd,2
IDT.AX,947876,IDT Australia Ltd,2
TME.AX,40388,Trade Me Group Ltd,2
MLX.AX,7658,Metals X Ltd,2
AB1.AX,945134,Animoca Brands Corporation Ltd,2
FOD.AX,947690,Food Revolution Group Ltd,2
BOL.AX,7231,Boom Logistics Ltd,2
BRL.AX,14584,Bathurst Resources Ltd,2
IOF.AX,7358,Investa Office Fund,2
IFN.AX,18531,Infigen Energy,2
ILU.AX,7635,Iluka Resources Ltd,2
GOR.AX,40369,Gold Road Resources Ltd,2
AEB.AX,947481,Algae.Tec Ltd,2
RRS.AX,32475,Range Resources Ltd,2
BCI.AX,32480,BC Iron Ltd,2
WEB.AX,39194,Webjet Ltd,2
RMD.AX,8610,Resmed Inc DRC,2
SFI.AX,945698,Spookfish,2
HNR.AX,947860,Hannans Reward Ltd,2
VAL.AX,947657,Valor Resources Ltd,2
VML.AX,102933,Vital Metals Ltd,2
CTX.AX,7637,Caltex Australia Ltd,2
EDE.AX,947749,Eden Energy Ltd,2
SPK.AX,8670,Spark New Zealand Ltd,2
ORI.AX,7420,Orica Ltd,2
CPU.AX,7765,Computershare Ltd,2
CAR.AX,32468,Carsales.Com Ltd,2
BEN.AX,7528,Bendigo And Adelaide Bank Ltd,2
ORE.AX,14299,Orocobre Ltd,2
PDL.AX,14249,Pendal Group Ltd,2
CAY.AX,947634,Canyon Resources Ltd,2
IRE.AX,7558,Iress Ltd,2
SFR.AX,32567,Sandfire Resources NL,2
IMA.AX,947882,Image Resources NL,2
KFE.AX,40372,Kogi Iron Ltd,2
SVW.AX,8626,Seven Group Holdings Ltd,2
RMS.AX,14307,Ramelius Resources Ltd,2
AVH.AX,947550,Avita Medical,2
MLD.AX,18552,Maca Ltd,2
CQR.AX,13574,Charter Hall Retail Reit,2
DLX.AX,13575,Duluxgroup Ltd,2
CT1.AX,947492,CCP Technologies Ltd,2
CGR.AX,947648,CML Group Ltd,2
BCT.AX,947582,Bluechiip Ltd,2
PXS.AX,8590,Pharmaxis Ltd,2
CM8.AX,947667,Crowd Mobile,2
MQG.AX,624,Macquarie Group Ltd,2
OXX.AX,48632,Octanex NL,2
NAN.AX,18557,Nanosonics Ltd,2
APX.AX,947527,Appen Ltd,2
KLH.AX,947812,GB Energy Ltd,2
SUL.AX,8658,Super Retail Group Ltd,2
SDA.AX,941675,Speedcast International Ltd,2
IFL.AX,7333,Ioof Holdings Ltd,2
NCZ.AX,947560,New Century Resources Ltd,2
CNI.AX,14252,Centuria Capital Ltd,2
PTM.AX,10545,Platinum Asset Management Ltd,2
AZI.AX,947763,Energia Minerals Ltd,2
DTM.AX,947737,Dart Mining NL,2
VLT.AX,947683,Vault Intelligence Ltd,2
ALQ.AX,7462,ALS Ltd,2
PEN.AX,14302,Peninsula Energy Ltd,2
TMP.AX,947798,Tech Mpire Ltd,2
XRO.AX,102040,Xero Ltd,2
GDI.AX,101983,GDI Property Group Ltd,2
ABC.AX,7722,Adelaide Brighton Ltd,2
QFY.AX,14327,Quantify Technology Holdings Ltd,2
MAH.AX,7413,Macmahon Holdings Ltd,2
SLR.AX,32454,Silver Lake Resources Ltd,2
ANN.AX,7689,Ansell Ltd,2
AIA.AX,14232,Auckland International Airport Ltd,2
BOT.AX,947598,Botanix Pharmaceuticals Ltd,2
ACW.AX,947476,Actinogen Medical Ltd,2
TGR.AX,8675,Tassal Group Ltd,2
TPM.AX,13578,TPG Telecom Ltd,2
ACL.AX,101946,Alchemia Ltd,2
DGR.AX,947722,DGR Global Ltd,2
AJQ.AX,947502,Armour Energy Ltd,2
FBU.AX,13822,Fletcher Building Ltd,2
GWA.AX,7636,GWA Group Ltd,2
NGI.AX,7269,Navigator Global Investments Ltd,2
TNE.AX,8679,Technology One Ltd,2
OMH.AX,10543,OM Holdings Ltd,2
LNU.AX,947796,Linius Technologies Ltd,2
DTZ.AX,14289,Dotz Nano Ltd,2
LNG.AX,18543,Liquefied Natural Gas Ltd,2
ADV.AX,947479,Ardiden Ltd,2
VLW.AX,14272,Villa World Ltd,2
AHY.AX,943405,Asaleo Care,2
DCC.AX,947716,Digitalx Ltd,2
GGG.AX,14270,Greenland Minerals And Energy Ltd,2
CXZ.AX,947704,Connexion Media Ltd,2
HT1.AX,7197,HT&E Ltd,2
KPO.AX,30632,Kalina Power Ltd,2
BGA.AX,101956,Bega Cheese Ltd,2
PMP.AX,9158,PMP Ltd,2
AAC.AX,7597,Australian Agricultural Company Ltd,2
REA.AX,8599,Rea Group Ltd,2
DMP.AX,7642,Domino’s Pizza Group PLC,2
CCE.AX,941677,Carnegie Clean Energy Ltd,2
CSL.AX,623,CSL Ltd,2
ABP.AX,7433,Abacus Property Group,2
FGF.AX,947795,First Growth Funds Ltd,2
GOZ.AX,18522,Growthpoint Properties Australia,2
KAR.AX,7699,Karoon Gas Australia Ltd,2
AGI.AX,40358,Ainsworth Game Technology Ltd,2
FDM.AX,32467,Freedom Oil and Gas,2
SHL.AX,8635,Sonic Healthcare Ltd,2
AUC.AX,947545,Ausgold Ltd,2
ALK.AX,18489,Alkane Resources Ltd,2
CDX.AX,947474,Cardiex Ltd,2
BYE.AX,947625,Byron Energy Ltd,2
DRX.AX,947734,Diatreme Resources Ltd,2
WPP.AX,8630,WPP Aunz Ltd,2
PGH.AX,102027,Pact Group Holdings Ltd,2
SFH.AX,8627,Specialty Fashion Group Ltd,2
BRN.AX,947566,Brainchip Holdings Ltd,2
NHF.AX,14292,NIB Holdings,2
ELT.AX,947757,Elementos Ltd,2
ASB.AX,7470,Austal Ltd,2
GMA.AX,941188,Genworth Mortgage Insurance Australia Ltd,2
TER.AX,18524,Terracom Ltd,2
SOL.AX,8646,Washington H Soul Pattinson&Co Ltd,2
BDR.AX,32472,Beadell Resources Ltd,2
ETE.AX,14265,Entek Energy Ltd,2
MIN.AX,7720,Mineral Resources Ltd,2
VTG.AX,102038,Vita Group,2
ISU.AX,101994,iSelect Ltd,2
PLL.AX,39198,Piedmont Lithium Ltd,2
ALU.AX,101951,Altium Ltd,2
FLN.AX,101984,Freelancer Ltd,2
FXL.AX,7559,Flexigroup Ltd,2
PYC.AX,14303,Phylogica Ltd,2
BSE.AX,40363,Base Resources Ltd,2
SEN.AX,8625,Senetas Corporation Ltd,2
CMA.AX,947668,Centuria Metropolitan REIT,2
BAP.AX,947573,Bapcor Ltd,2
CLY.AX,947665,Clancy Exploration Ltd,2
INR.AX,947838,Ioneer Ltd,2
SFG.AX,32478,Seafarms Group Ltd,2
JHC.AX,940926,Japara Healthcare Ltd,2
EML.AX,947762,EML Payments Ltd,2
REH.AX,8601,Reece Ltd,2
EAR.AX,947746,Echo Resources Ltd,2
GGX.AX,947820,Gas2grid Ltd,2
IFM.AX,7296,Infomedia Ltd,2
SSM.AX,8654,Service Stream Ltd,2
FLT.AX,7385,Flight Centre Ltd,2
NHC.AX,7724,New Hope Corporation Ltd,2
AQG.AX,32568,Alacer Gold Corp DRC,2
TRS.AX,8684,The Reject Shop Ltd,2
FLC.AX,14311,Fluence Corporation Ltd,2
JBH.AX,7274,JB Hi-Fi Ltd,2
TON.AX,942740,Triton Minerals Ltd,2
IDR.AX,102008,Industria REIT,2
MRM.AX,10542,Mermaid Marine Australia Ltd,2
FPL.AX,947506,Fremont Petroleum Corporation Ltd,2
HMX.AX,947858,Hammer Metals Ltd,2
AX1.AX,18564,RCG Corporation Ltd,2
RIC.AX,8606,Ridley Corporation Ltd,2
POH.AX,7509,Phosphagenics Ltd,2
CKF.AX,101963,Collins Foods Ltd,2
SMP.AX,43311,SmartPay Holdings Ltd,2
ATU.AX,101971,Atrum Coal NL,2
MFG.AX,32451,Magellan Financial Group Ltd,2
NVT.AX,13827,Navitas Ltd,2
ARF.AX,101954,Arena Group,2
ELD.AX,9260,Elders Ltd,2
ADY.AX,14231,Admiralty Resources NL,2
IKW.AX,947881,Ikwezi Mining Ltd,2
IBG.AX,947870,Ironbark Zinc Ltd,2
PNI.AX,14329,Pinnacle Investment Management Group Ltd,2
HSN.AX,101989,Hansen Technologies Ltd,2
BLA.AX,947588,Blue Sky Alternative Inv,2
NXE.AX,946360,New Energy Minerals Ltd,2
BUY.AX,947622,Bounty Oil and Gas NL,2
ARQ.AX,7312,ARQ Group Ltd,2
DRM.AX,40368,Doray Minerals Ltd,2
ZLD.AX,947827,Zelda Therapeutics Ltd,2
MMI.AX,14287,Metro Mining,2
HUB.AX,947866,Hub24 Ltd,2
IPH.AX,942738,IPH Ltd,2
BSM.AX,947612,Bass Metals Ltd,2
JHG.AX,32565,Janus Henderson Group PLC DRC,2
CMC.AX,947669,China Magnesium Corporation,2
IVC.AX,7379,Invocare Ltd,2
ARB.AX,7778,ARB Corporation Ltd,2
AGR.AX,947491,Aguia Resources Ltd,2
AU8.AX,102025,Augend Ltd,2
CAJ.AX,101961,Capitol Health Ltd,2
MNY.AX,102000,Money3 Corp Ltd,2
SKC.AX,14315,Skycity Entertainment Group Ltd,2
GBZ.AX,947813,GBM Resources Ltd,2
GUD.AX,7355,G.U.D. Holdings Ltd,2
ASX.AX,633,ASX Ltd,2
RHC.AX,8604,Ramsay Health Care Ltd,2
ISX.AX,945920,Isignthis Ltd,2
CIM.AX,634,Cimic Group Ltd,2
AEE.AX,947482,Aura Energy Ltd,2
IMF.AX,18532,IMF Bentham Ltd,2
FYI.AX,947806,FYI Resources Ltd,2
HFR.AX,947854,Highfield Resources Ltd,2
NMT.AX,102013,Neometals Ltd,2
BRG.AX,39192,Breville Group Ltd,2
FET.AX,7551,Folkestone Education Trust,2
VIV.AX,947818,Vivid Technology Ltd,2
TGA.AX,18580,Thorn Group Ltd,2
ARV.AX,947539,Artemis Resources Ltd,2
NCK.AX,9146,Nick Scali Ltd,2
NTU.AX,943414,Northern Minerals,2
AFI.AX,7421,Australian Foundation Investment Company Ltd,2
AML.AX,947532,Aeon Metals Ltd,2
EPW.AX,18512,ERM Power Ltd,2
CDT.AX,947641,Castle Minerals Ltd,2
BRU.AX,31175,Buru Energy Ltd,2
PVE.AX,8588,PO Valley Energy Ltd,2
ADX.AX,947480,Adx Energy Ltd,2
ATP.AX,947544,Atlas Pearls and Perfumes,2
CAZ.AX,947635,Cazaly Resources Ltd,2
EHX.AX,947671,EHR Resources Ltd,2
CLL.AX,14238,Collerina Cobalt Ltd,2
AME.AX,947767,Alto Metals Ltd,2
BKI.AX,7579,BKI Investment Company Ltd,2
AAR.AX,947469,Anglo Australian Resources NL,2
BAF.AX,947571,Blue Sky Alternatives Access,2
ACB.AX,947473,A-Cap Resources Ltd,2
UBI.AX,18585,Universal Biosensors Inc,2
TOE.AX,18583,Toro Energy Ltd,2
HYD.AX,942524,Hydrix Ltd,2
AKM.AX,18477,Aspire Mining Ltd,2
BUL.AX,947619,Blue Energy Ltd,2
BRC.AX,947608,Brain Resource Ltd,2
ERM.AX,947776,Emmerson Resources Ltd,2
PFG.AX,7742,Prime Financial Group Ltd,2
RFG.AX,18566,Retail Food Group Ltd,2
NML.AX,32458,Navarre Minerals Ltd,2
SIH.AX,18573,Sihayo Gold Ltd,2
BRB.AX,947607,Breaker Resources NL,2
SGC.AX,947519,Sacgasco Ltd,2
PMV.AX,7738,Premier Investments Ltd,2
FPH.AX,14268,Fisher & Paykel Healthcare Ltd,2
IPD.AX,18534,Impedimed Ltd,2
MND.AX,7311,Monadelphous Group Ltd,2
TEK.AX,947540,Thorney Technologies Ltd,2
CDD.AX,7587,Cardno Ltd,2
IRI.AX,32459,Integrated Research Ltd,2
CDM.AX,947640,Cadence Capital Ltd,2
CVW.AX,18507,Clearview Wealth Ltd,2
ICN.AX,18530,Icon Energy Ltd,2
FGX.AX,942440,Future Generation Investment Company Ltd,2
ICU.AX,947874,Isentric Ltd,2
SRN.AX,947609,Surefire Resources NL,2
CZN.AX,947712,Corazon Mining Ltd,2
EAX.AX,101975,Energy Action Ltd,2
LIT.AX,947700,Lithium Australia NL,2
OFX.AX,102019,OFX Group Ltd,2
DEG.AX,947720,De Grey Mining Ltd,2
CVT.AX,947697,Covata Ltd,2
AZS.AX,947568,Azure Minerals Ltd,2
CLV.AX,947664,Clover Corporation Ltd,2
MLT.AX,7357,Milton Corp Ltd,2
ADN.AX,947478,Andromeda Metals Ltd,2
AJX.AX,947504,Alexium International Group,2
PRT.AX,7681,Prime Media Group Ltd,2
ERA.AX,9083,Energy Resources Of Australia Ltd,2
AEV.AX,14282,Minemakers Ltd,2
DYL.AX,7760,Deep Yellow Ltd,2
OGC.AX,7419,OceanaGold Corporation DRC,2
ALF.AX,947508,Australian Leaders Fund Ltd,2
PUA.AX,947853,Pure Alumina Ltd,2
MGE.AX,945921,Magellan Asset Management Ltd,2
ARG.AX,7510,Argo Investments Ltd,2
CYP.AX,947708,Cynata Therapeutics Ltd,2
GAP.AX,947809,Gale Pacific Ltd,2
ASH.AX,947542,Ashley Services Group Ltd,2
GLL.AX,947826,Galilee Energy Ltd,2
HLX.AX,14275,Helix Resources Ltd,2
DCN.AX,947717,Dacian Gold Ltd,2
ALY.AX,947511,Alchemy Resources Ltd,2
CTP.AX,101967,Central Petroleum Ltd,2
SVM.AX,39200,Sovereign Metals Ltd,2
MNF.AX,101998,MNF Group Ltd,2
COH.AX,7383,Cochlear Ltd,2
CHP.AX,947651,Chapmans Ltd,2
CAT.AX,947632,Catapult Group International,2
CAF.AX,947629,Centrepoint Alliance Ltd,2
ZNO.AX,947839,Zoono Group Ltd,2
KMD.AX,18541,Kathmandu Holdings Ltd,2
M7T.AX,945702,Mach7 Technologies Ltd,2
DRK.AX,947733,Drake Resources Ltd,2
SO4.AX,30633,Salt Lake Potash Ltd,2
ERX.AX,947727,Exore Resources Ltd,2
EGN.AX,14262,Engenco Ltd,2
PPT.AX,7625,Perpetual Ltd,2
GID.AX,101986,GI Dynamics Inc,2
GPR.AX,947836,Geopacific Resources Ltd,2
NEU.AX,102010,Neuren Pharmaceuticals Ltd,2
CDV.AX,947642,Cardinal Resources Ltd,2
BKW.AX,7541,Brickworks Ltd,2
NKP.AX,18560,NKWE Platinum Ltd,2
PMC.AX,7501,Platinum Capital Ltd,2
SHV.AX,8636,Select Harvests Ltd,2
STA.AX,14273,Strandline Resources Ltd,2
IPB.AX,44456,IPB Petroleum Ltd,2
NWS.AX,41354,News Corp B DRC,2
HPI.AX,102007,Hotel Property Investments Ltd,2
DJW.AX,7555,Djerriwarrh Investments Ltd,2
TGG.AX,8673,Templeton Global Growth Fund Ltd,2
MAQ.AX,18546,Macquarie Telecom Group Ltd,2
CIP.AX,102024,360 Capital Industrial Fund,2
CRL.AX,947682,Comet Resources Ltd,2
BGS.AX,947584,Birimian Ltd,2
STW.AX,8657,SPDR S&P/ASX 200 Fund,2
FNP.AX,101980,Freedom Foods Group Ltd,2
BFG.AX,14245,Bell Financial Group Ltd,2
SMR.AX,943417,Stanmore Coal,2
PPG.AX,32452,Pro-Pac Packaging Ltd,2
HTA.AX,7176,Hutchison Telecommunications Ltd,2
PIA.AX,947856,Hunter Hall Global Value Ltd,2
CYA.AX,947705,Century Australia Investments,2
ICQ.AX,101990,iCar Asia Ltd,2
ANG.AX,14236,Austin Engineering Ltd,2
MML.AX,10541,Medusa Mining Ltd,2
CVS.AX,947696,Cervantes Corp Ltd,2
DCG.AX,32569,Decmil Group Ltd,2
AUB.AX,7786,Austbrokers Holdings Ltd,2
MRP.AX,102002,MacPhersons Resources Ltd,2
SLX.AX,8644,Silex Systems Ltd,2
LEP.AX,7645,ALE Property Group,2
BAR.AX,947574,Barra Resources Ltd,2
DTR.AX,947738,Dateline Resources Ltd,2
BNR.AX,947599,Bulletin Resources Ltd,2
ENB.AX,947764,Eneabba Gas Ltd,2
STC.AX,947786,Sinetech Ltd,2
MOY.AX,102001,Millennium Minerals Ltd,2
MOC.AX,7366,Mortgage Choice Ltd,2
PEA.AX,102012,Pacific Energy Ltd,2
PIL.AX,947709,Chrysalis Resources Ltd,2
ANR.AX,947517,Anatara Lifesciences Ltd,2
EXR.AX,947789,Elixir Petroleum Ltd,2
DNA.AX,101973,Donaco International Ltd,2
VAH.AX,18476,Virgin Australia Holdings Ltd,2
ZNT.AX,7182,Zenitas Healthcare Ltd,2
AQZ.AX,101953,Alliance Aviation Services Ltd,2
CHN.AX,18502,Chalice Gold Mines Ltd,2
GML.AX,947829,Gateway Mining Ltd,2
CZI.AX,947711,Cassini Resources Ltd,2
CGL.AX,947645,Citadel Group Ltd,2
RSH.AX,101993,Respiri Ltd,2
VRL.AX,8703,Village Roadshow Ltd,2
TAM.AX,18579,Tanami Gold NL,2
CCV.AX,7308,Cash Converters International,2
ACQ.AX,947475,Acorn Capital Invest Fund,2
CLH.AX,101964,Collection House Ltd,2
LYL.AX,18545,Lycopodium Ltd,2
GRB.AX,101987,Gage Roads Brewing Co Ltd,2
PDZ.AX,39203,Prairie Downs Metals Ltd,2
SLK.AX,101944,Sealink Travel Group Ltd,2
FUN.AX,7218,Funtastic Ltd,2
VRT.AX,102037,Virtus Health Ltd,2
DWS.AX,7753,DWS Ltd,2
JIN.AX,39201,Jumbo Interactive Ltd,2
DDR.AX,101968,Dicker Data Ltd,2
PRX.AX,40355,ABM Resources NL,2
AMH.AX,947513,AMCIL Ltd,2
CAB.AX,7377,Cabcharge Australia Ltd,2
CCP.AX,7774,Credit Corp Group Ltd,2
PSA.AX,8584,Petsec Energy Ltd,2
TLM.AX,18582,Talisman Mining Ltd,2
EPD.AX,947771,Empired Ltd,2
EGI.AX,947753,Ellerston Global Investments,2
SKF.AX,942739,Skyfii Ltd,2
LIC.AX,101943,Lifestyle Communities Ltd,2
AXE.AX,947558,Archer Exploration Ltd,2
SXE.AX,14318,Southern Cross Electrical Ltd,2
RXP.AX,102030,RXP Services Ltd,2
SBB.AX,103943,Sunbridge Group Ltd,2
HAW.AX,947850,Hawthorn Resources Ltd,2
AIZ.AX,14233,Air New Zealand Ltd,2
SDV.AX,947887,Scidev Ltd,2
EOS.AX,947769,Electro Optic Systems Holdings,2
ANO.AX,947515,Advance Nanotek Ltd,2
CL8.AX,947661,Collaborate Corporation Ltd,2
REF.AX,8600,Reverse Corp Ltd,2
SM1.AX,43316,Synlait Milk Ltd,2
DLC.AX,947728,Delecta Ltd,2
CUV.AX,7384,Clinuvel Pharmaceuticals Ltd,2
PO3.AX,32446,Purifloh Ltd,2
BOA.AX,947600,Boadicea Resources Ltd,2
3PL.AX,947464,3P Learning Ltd,2
MXI.AX,102003,MaxiTRANS Industries Ltd,2
DNK.AX,18483,South Boulder Mines Ltd,2
CDY.AX,947643,Cellmid Ltd,2
TAP.AX,8666,Tap Oil Ltd,2
CXM.AX,18508,Centrex Metals Ltd,2
AEI.AX,947484,Aeris Environmental Ltd,2
ENR.AX,947765,Encounter Resources Ltd,2
GVF.AX,947845,Global Value Fund Ltd,2
CDA.AX,7255,Codan Ltd,2
DTL.AX,18511,Data3 Ltd,2
SKT.AX,14316,Sky Network Television Ltd,2
GSN.AX,947800,Great Southern Mining Ltd,2
APD.AX,7275,Apn Property Group Ltd,2
RDS.AX,943825,Redstone Resources Ltd,2
DTI.AX,943403,DTI Group Ltd,2
GOW.AX,7762,Gowing Bros Ltd,2
EQE.AX,947773,Equus Mining Ltd,2
HAS.AX,947848,Hastings Rare Metals Ltd,2
MIR.AX,7497,Mirrabooka Investments Ltd,2
HIG.AX,7386,Highlands Pacific Ltd,2
MCP.AX,7502,Mcpherson S Ltd,2
WBA.AX,101945,Webster Ltd,2
GTR.AX,947843,GTI Resources Ltd,2
IGE.AX,947799,Foy Group Ltd,2
DUI.AX,7230,Diversified United Investment Ltd,2
HPR.AX,947864,High Peak Royalties Ltd,2
HZN.AX,7205,Horizon Oil Ltd,2
KCN.AX,7285,Kingsgate Consolidated Ltd,2
IMC.AX,947883,Immuron Ltd,2
MCR.AX,7442,Mincor Resources NL,2
BKL.AX,7784,Blackmores Ltd,2
BLG.AX,947589,BluGlass Ltd,2
EWC.AX,7356,Energy World Corporation Ltd,2
MCE.AX,14283,Matrix Composites & Engineering Ltd,2
AKP.AX,101950,Audio Pixels Holdings Ltd,2
SIV.AX,102023,Silver Chef Ltd,2
PCG.AX,7544,Hunter Hall International Ltd,2
ST1.AX,947503,Spirit Telecom Ltd,2
NSC.AX,947689,NAOS Small Cap Opportunities Company Ltd,2
KRM.AX,14281,Kingsrose Mining Ltd,2
BUX.AX,947621,Buxton Resources Ltd,2
ACR.AX,32572,Acrux Ltd,2
RHL.AX,8605,Ruralco Holdings Ltd,2
CUL.AX,947691,Cullen Resources Ltd,2
AHL.AX,947888,Ahalife Holdings Ltd,2
EVT.AX,7560,Event Hospitality and Entertainment Ltd,2
MSV.AX,18479,Mitchell Services Ltd,2
AKG.AX,947505,Academies Australasia Group,2
CXX.AX,947703,Cradle Resources Ltd,2
ONX.AX,7763,Orminex Ltd,2
AOW.AX,947524,American Patriot Oil Gas,2
GNE.AX,947833,Genesis Energy Ltd,2
CTE.AX,947687,Cryosite Ltd,2
MVP.AX,39202,Medical Developments International,2
AJL.AX,14234,AJ Lucas Group Ltd,2
ATX.AX,947880,Amplia Therapeutics Ltd,2
FRI.AX,18518,Finbar Group Ltd,2
CMP.AX,947670,Compumedics Ltd,2
HRR.AX,14276,Heron Resources Ltd,2
EZL.AX,7697,Euroz Ltd,2
ZEL.AX,103945,Z Energy Ltd,2
GMY.AX,947832,Goldfields Money Ltd,2
SRV.AX,8652,Servcorp Ltd,2
BLT.AX,947592,Benitec Biopharma Ltd,2
APE.AX,7374,AP Eagers Ltd,2
KGL.AX,18540,KGL Resources Ltd,2
CMI.AX,18478,CMI Ltd,2
CAM.AX,947630,Clime Capital Ltd,2
SDG.AX,8621,Sunland Group Ltd,2
TZN.AX,8694,Terramin Australia Ltd,2
YAL.AX,102041,Yancoal Australia Ltd,2
IDA.AX,18536,Indiana Resources Ltd,2
RHI.AX,18568,Red Hill Iron Ltd,2
AON.AX,947521,Apollo Minerals Ltd,2
GUL.AX,947844,Gullewa Ltd,2
BLX.AX,947593,Beacon Lighting Group Ltd,2
MYS.AX,18556,Mystate Ltd,2
FML.AX,18517,Focus Minerals Ltd,2
AVJ.AX,7262,Avjennings Ltd,2
CAA.AX,7315,Capral Ltd,2
HUO.AX,947867,Huon Aquaculture Group Ltd,2
CUP.AX,18506,Countplus Ltd,2
NGE.AX,14291,New Guinea Energy Ltd,2
CYL.AX,947707,Catalyst Metals Ltd,2
PAC.AX,8683,Pacific Current Group Ltd,2
AUI.AX,7245,Australian United Investment Co Ltd,2
REX.AX,8603,Regional Express Holdings Ltd,2
AOU.AX,947523,Auroch Minerals NL,2
AVG.AX,14239,Australian Vintage Ltd,2
ELX.AX,947758,Ellex Medical Lasers Ltd,2
DME.AX,947730,Dome Gold Mines Ltd,2
RMP.AX,32453,Red Emperor Resources NL,2
IAU.AX,13869,Intrepid Mines Ltd,2
FSA.AX,101981,FSA Group Ltd,2
BBX.AX,947579,BBX Minerals Ltd,2
FSF.AX,101949,Fonterra Shareholders Fund,2
DSX.AX,947736,Decimal Software Ltd,2
FRM.AX,947802,Farm Pride Foods Ltd,2
HOM.AX,947862,Homeloans Ltd,2
CIN.AX,7500,Carlton Investments Ltd,2
CDP.AX,7329,Carindale Property Trust,2
BIS.AX,947586,Bisalloy Steel Group Ltd,2
SPO.AX,941187,Spotless Group Holdings Ltd,2
EGH.AX,947752,Eureka Group Holdings Ltd,2
FID.AX,946359,Fiducian Group Ltd,2
KZA.AX,7792,Kazia Therapeutics Ltd,2
GWR.AX,14274,Golden West Resources Ltd,2
IRD.AX,101992,Iron Road Ltd,2
AIV.AX,947498,ActivEX Ltd,2
GTK.AX,947842,Gentrack Group Ltd,2
SLM.AX,8642,Salmat Ltd,2
KAM.AX,18538,K2 Asset Management Holdings Ltd,2
WHF.AX,8714,Whitefield Ltd,2
KGM.AX,32460,Kalnorth Gold Mines Ltd,2
CWP.AX,7751,Cedar Woods Properties Ltd,2
CIA.AX,947653,Champion Iron Ltd,2
URF.AX,103944,US Masters Residential Property Fund,2
BWF.AX,947623,BlackWall Property Funds Ltd,2
SWK.AX,8660,Swick Mining Services Ltd,2
CZZ.AX,947714,Capilano Honey Ltd,2
SHJ.AX,102022,Shine Corporate Ltd,2
DUB.AX,947739,Dubber Corp Ltd,2
ABA.AX,8705,Auswide Bank Ltd,2
AGS.AX,7184,Alliance Resources Ltd,2
AJD.AX,103942,Asia Pacific Data Centre Holdings Ltd,2
HLO.AX,14279,Helloworld Ltd,2
HIL.AX,7259,Hills Holdings Ltd,2
BXN.AX,947624,Bioxyne Ltd,2
DKM.AX,947726,Duketon Mining Ltd,2
GBG.AX,7204,Gindalbie Metals Ltd,2
RKN.AX,18570,Reckon Ltd,2
FSI.AX,947803,Flagship Investments Ltd,2
HOR.AX,947863,Horseshoe Metals Ltd,2
FZR.AX,947807,Fitzroy River Corporation Ltd,2
EQT.AX,7454,Equity Trustees Ltd,2
CLX.AX,101965,CTI Logistics Ltd,2
PPC.AX,7467,Peet Ltd,2
AOP.AX,947522,Apollo Consolidated Ltd,2
RXM.AX,14309,Rex Minerals Ltd,2
APZ.AX,7767,Aspen Group Unit,2
CLF.AX,947509,Concentrated Leaders Fund Ltd,2
GLH.AX,947825,Global Health Ltd,2
HGO.AX,18527,Hillgrove Resources Ltd,2
SPB.AX,945913,Coral Sea Petroleum Ltd,2
AQC.AX,947528,Australian Pacific Coal Ltd,2
OEC.AX,30628,Orbital Corporation Ltd,2
SGH.AX,14314,Slater & Gordon Ltd,2
FTZ.AX,947804,Fertoz Ltd,2
WEC.AX,14598,White Energy Company Ltd,2
GNG.AX,947834,GR Engineering Services Ltd,2
GZL.AX,7725,Gazal Corporation Ltd,2
CGS.AX,947649,CogState Ltd,2
GME.AX,947828,GME Resources Ltd,2
UOS.AX,14324,United Overseas Australia Ltd,2
ONT.AX,32470,1300 Smiles Ltd,2
MCY.AX,102004,Mercury NZ Ltd,2
GDG.AX,14229,Generation Development Group Ltd,2
EMB.AX,947759,Embelton Ltd,2
TWR.AX,8693,Tower Ltd,2
RCT.AX,8596,Reef Casino Trust,2
HNG.AX,947859,HGL Ltd,2
COO.AX,947676,Corum Group Ltd,2
SST.AX,8655,Steamships Trading Company Ltd,2
AEF.AX,947483,Australian Ethical Invest,2
CVC.AX,7613,CVC Ltd,2
SPY.AX,942523,SPDR S&P 500 ETF Trust,2
CYG.AX,7179,Coventry Group Ltd,2
KSC.AX,7200,K & S Corporation Ltd,2
CDU.AX,7206,Cudeco Ltd,2
ATR.AX,7207,Astron Corporation Ltd,2
CND.AX,7210,Clarius Group Ltd,2
AGG.AX,7232,AngloGold Ashanti Ltd DRC,2
APW.AX,7249,Aims Property Securities Fund,2
EGG.AX,7251,Enero Group Ltd,2
CTO.AX,7256,Citigold Corporation Ltd,2
FMS.AX,7289,Flinders Mines Ltd,2
DVN.AX,7309,Devine Ltd,2
OTR.AX,7429,Onterran Ltd,2
ARI.AX,7591,Arrium Ltd,2
BOC.AX,7631,Bougainville Copper Ltd,2
TDL.AX,7782,TBG Diagnostics Ltd,2
RDF.AX,8598,Redflex Holdings Ltd,2
RNY.AX,8612,RNY Property Trust,2
SDL.AX,8622,Sundance Resources Ltd,2
NHL.AX,14241,Novita Healthcare Ltd,2
BCL.AX,14254,ACN 112 682 158 Ltd,2
CSV.AX,14257,CSG Ltd,2
CUE.AX,14258,CUE Energy Resources Ltd,2
MCM.AX,14259,MC Mining Ltd,2
GSL.AX,14260,Dyesol Ltd,2
EER.AX,14261,East Energy Resources Ltd,2
EGO.AX,14263,Empire Oil and Gas NL,2
GBE.AX,14269,Globe Metals & Mining Ltd,2
WLC.AX,14271,Wollongong Coal Ltd,2
LTN.AX,14277,Lantern Hotel Group Ltd,2
KBC.AX,14280,Keybridge Capital Ltd,2
NMS.AX,14294,Neptune Marine Services Ltd,2
OCP.AX,14297,Oceania Capital Partners Ltd,2
RES.AX,14306,Resource Generation Ltd,2
SSN.AX,14317,Samson Oil & Gas Ltd,2
QIN.AX,14319,Quintis Ltd,2
VMG.AX,14325,Vdm Group Ltd,2
NAV.AX,18481,Navigator Resources Ltd,2
ARU.AX,18492,Arafura Resources Ltd,2
AZM.AX,18495,Azumah Resources Ltd,2
BNL.AX,18496,Big Star Energy Ltd,2
ESV.AX,18514,eServGlobal Ltd,2
KGD.AX,18539,Kula Gold Ltd,2
MPO.AX,18553,Molopo Energy Ltd,2
NCR.AX,18558,Nucoal Resources Ltd,2
TGS.AX,18581,Tiger Resources Ltd,2
WPG.AX,18587,Wpg Resources Ltd,2
ZIM.AX,18588,Zimplats Holdings Ltd,2
CNX.AX,18821,Carbon Energy Ltd,2
EUZ.AX,30623,Ferrum Crescent Ltd,2
GBP.AX,30625,Global Petroleum Ltd,2
88E.AX,30631,88 Energy Ltd,2
WLF.AX,30634,Wolf Minerals Ltd,2
LCY.AX,32457,Legacy Iron Ore Ltd,2
NSE.AX,32461,New Standard Energy Ltd,2
PEK.AX,32465,Peak Resources Ltd,2
EQX.AX,39193,Equatorial Resources Ltd,2
YBR.AX,39204,Yellow Brick Road Holdings Ltd,2
CAS.AX,40346,Crusader Resources Ltd,2
PGI.AX,40347,Panterra Gold Ltd,2
MED.AX,40348,Merlin Diamonds Ltd,2
AFR.AX,40357,African Energy Resources Ltd,2
HIP.AX,40361,Hipo Resources Ltd,2
DMG.AX,40367,Dragon Mountain Gold Ltd,2
NTL.AX,40379,New Talisman Gold Mines Ltd,2
TBR.AX,40387,Tribune Resources Ltd,2
SNZ.AX,43315,Summerset Group Holdings Ltd,2
ABX.AX,48633,Australian Bauxite Ltd,2
AHZ.AX,101948,Admedus Ltd,2
BYI.AX,101960,Beyond International Ltd,2
FND.AX,101979,Finders Resources Ltd,2
GBT.AX,101982,GBST Holdings Ltd,2
HCH.AX,101988,Hot Chili Ltd,2
KPL.AX,101995,Kina Petroleum Ltd,2
LCM.AX,101996,LogiCamms Ltd,2
MKB.AX,101997,Moko Social Media Ltd,2
MNW.AX,101999,Mint Payments Ltd,2
E88.AX,102009,Ensogo Ltd,2
PBT.AX,102011,Prana Biotechnology,2
TIA.AX,102016,Tian AN Australia Ltd,2
WLL.AX,102039,Wellcom Group Ltd,2
SEI.AX,102932,Speciality Metals International Ltd,2
ATA.AX,102934,Atc Alloys Ltd,2
8CO.AX,941186,8Common Ltd,2
UBN.AX,941676,Urbanise com Ltd,2
JPR.AX,942737,Jupiter Energy Ltd,2
EOR.AX,943401,Enhanced Oil & Gas Recovery Ltd,2
CHZ.AX,943408,Chesser Resources,2
KAS.AX,943411,Kasbah Resources,2
MEL.AX,943413,Metgasco,2
AUR.AX,943416,Auris Minerals Ltd,2
VMS.AX,943419,Venture Minerals,2
ZGL.AX,943420,Zicom Group,2
SRY.AX,945132,Story-I Ltd,2
MMJ.AX,945133,MMJ Phytotech Ltd,2
USR.AX,945699,Us Residential Fund,2
FCT.AX,945914,Firstwave Cloud Technology Ltd,2
PC1.AX,945915,Plus Connect Ltd,2
JKL.AX,945916,Justkapital Ltd,2
AVC.AX,945918,Yonder & Beyond Group Ltd,2
SFL.AX,946361,Spring FG Ltd,2
8IH.AX,947465,8I Holdings Ltd,2
AAJ.AX,947466,Aruma Resources Ltd,2
AAP.AX,947468,Australian Agri Projects,2
AAU.AX,947470,Adcorp Australia Ltd,2
ABL.AX,947471,Abilene Oil and Gas Ltd,2
ABV.AX,947472,Advanced Braking Technology,2
AFA.AX,947486,ASF Group Ltd,2
SAM.AX,947487,SIV Asset Management Ltd,2
AGD.AX,947488,Austral Gold Ltd,2
EXO.AX,947494,Ennox Group Ltd,2
AHK.AX,947495,Ark Mines Ltd,2
AIR.AX,947497,Astivita Ltd,2
AJJ.AX,947500,Asian American Medical Group,2
ALT.AX,947510,Analytica Ltd,2
AMB.AX,947512,Ambition Group Ltd,2
AMO.AX,947514,Ambertech Ltd,2
ANQ.AX,947516,AnaeCo Ltd,2
AOK.AX,947520,AusTex Oil Ltd,2
APG.AX,947525,Austpac Resources NL,2
AQJ.AX,947530,Aus Asia Minerals Ltd,2
ARA.AX,947534,Ariadne Australia Ltd,2
ARM.AX,947537,Aurora Minerals Ltd,2
ARO.AX,947538,Astro Resources NL,2
ARX.AX,947541,Arc Exploration Ltd,2
AUQ.AX,947547,Alara Resources Ltd,2
AVD.AX,947549,Antilles Oil and Gas Ltd,2
INV.AX,947554,Investsmart Group Ltd,2
AWN.AX,947555,Arowana International Ltd,2
CVF.AX,947556,Arowana Australasian Value Opportunities Fund Ltd,2
AXI.AX,947559,Axiom Properties Ltd,2
CTL.AX,947561,Centennial Mining Ltd,2
AYG.AX,947563,Axxis Technology Group Ltd,2
AYM.AX,947565,Australia United Mining Ltd,2
AZV.AX,947569,Azure Healthcare Ltd,2
BAU.AX,947576,Bauxite Resources Ltd,2
BBL.AX,947577,Brisbane Broncos Ltd,2
BBR.AX,947578,Bora Bora Resources Ltd,2
BCK.AX,947580,Brockman Mining Ltd,2
BMG.AX,947595,BMG Resources Ltd,2
BPH.AX,947604,BPH Energy Ltd,2
BPL.AX,947605,Broken Hill Prospecting Ltd,2
BSA.AX,947611,BSA Ltd,2
BSP.AX,947613,Black Star Petroleum Ltd,2
BST.AX,947615,Barrack St Investments Ltd,2
BTC.AX,947616,Biotech Capital Ltd,2
BTI.AX,947617,Bailador Technology Inv,2
BUG.AX,947618,Buderim Ginger Ltd,2
CAD.AX,947628,Caeneus Minerals Ltd,2
CAP.AX,947631,Carpentaria Exploration Ltd,2
CAV.AX,947633,Carnavale Resources Ltd,2
1AG.AX,947636,Alterra Ltd,2
CCJ.AX,947637,County Coal Ltd,2
CDG.AX,947639,Cleveland Mining Co Ltd,2
CEL.AX,947644,Challenger Energy Ltd,2
CGN.AX,947646,Crater Gold Mining Ltd,2
CGO.AX,947647,CPT Global Ltd,2
CHR.AX,947652,Chalmers Ltd,2
CII.AX,947654,CI Resources Ltd,2
CIW.AX,947656,Clime Investment Management,2
CKA.AX,947658,Cokal Ltd,2
LWP.AX,947659,LWP Technologies Ltd,2
CLT.AX,947663,Cellnet Group Ltd,2
CLZ.AX,947666,Classic Minerals Ltd,2
CMY.AX,947672,Capital Mining Ltd,2
COI.AX,947674,Comet Ridge Ltd,2
TBL.AX,947675,ComOps Ltd,2
PKA.AX,947677,Plukka Limited,2
COY.AX,947678,Coppermoly Ltd,2
NMM.AX,947679,Noble Metals Ltd,2
CRB.AX,947681,Carbine Resources Ltd,2
CSD.AX,947684,Consolidated Tin Mines Ltd,2
CSE.AX,947685,Copper Strike Ltd,2
CTM.AX,947688,Centaurus Metals Ltd,2
CUX.AX,947693,Crossland Strategic Metals,2
CVV.AX,947698,Caravel Minerals Ltd,2
CXU.AX,947702,Cauldron Energy Ltd,2
CYC.AX,947706,Cyclopharm Ltd,2
AKN.AX,947710,Auking Mining Ltd,2
CZR.AX,947713,Coziron Resources Ltd,2
DAU.AX,947715,Dampier Gold Ltd,2
DDD.AX,947718,3D Resources Ltd,2
DDT.AX,947719,DataDot Technology Ltd,2
DGH.AX,947721,Desane Group Holdings Ltd,2
AQS.AX,947725,Aquis Entertainment Ltd,2
DMA.AX,947729,Dynasty Resources Ltd,2
IBN.AX,947742,iBuyNew Group Ltd,2
DVL.AX,947743,dorsaVi Ltd,2
TPS.AX,947744,Threat Protect Australia Ltd,2
EAS.AX,947747,Easton Investments Ltd,2
EFE.AX,947751,Eastern Iron Ltd,2
EGL.AX,947754,The Environmental Group Ltd,2
EGY.AX,947755,Energy Technologies Limited,2
EME.AX,947760,Energy Metals Ltd,2
FEX.AX,947761,Fenix Resources Ltd,2
ENT.AX,947766,Enterprise Metals Ltd,2
ENX.AX,947768,Enegex NL,2
EPA.AX,947770,Ephraim Resources Ltd,2
EPM.AX,947772,Eclipse Metals Ltd,2
MDR.AX,947774,Medadvisor Ltd,2
FYA.AX,947777,Fortune Asia Group Ltd,2
ECT.AX,947778,Environmental Clean Technologies Ltd,2
ESR.AX,947780,Estrella Resources Ltd,2
EVM.AX,947783,EnviroMission Ltd,2
EVO.AX,947784,Evolve Education Group Ltd,2
EVZ.AX,947785,EVZ Ltd,2
HDY.AX,947790,Elysium Resources Ltd,2
SFM.AX,947791,Santa Fe Minerals Ltd,2
FFI.AX,947794,FFI Holdings Ltd,2
FNT.AX,947797,Frontier Resources Ltd,2
FSG.AX,947801,Field Solutions Holdings Ltd,2
BIR.AX,947805,Birrabong Corporation Ltd,2
GBI.AX,947810,Genera Biosystems Ltd,2
GBM.AX,947811,GBM Gold Ltd,2
GCR.AX,947814,Golden Cross Resources Ltd,2
GED.AX,947816,Golden Deeps Ltd,2
GGE.AX,947819,Grand Gulf Energy Ltd,2
GLB.AX,947822,Globe International Ltd,2
GLE.AX,947823,GLG Corp Ltd,2
CMD.AX,947824,Gulf Industrials Ltd,2
APC.AX,947835,Australian Potash Ltd,2
GTE.AX,947840,Great Western Exploration Ltd,2
HAR.AX,947847,Haranga Resources Ltd,2
HAV.AX,947849,Havilah Resources Ltd,2
HCT.AX,947851,Holista CollTech Ltd,2
HDX.AX,947852,Hughes Drilling Ltd,2
HGL.AX,947855,Hudson Investment Group Ltd,2
JAN.AX,947857,Janison Education Group Ltd,2
HOG.AX,947861,Hawkley Oil and Gas Ltd,2
IAB.AX,947868,Inabox Group Ltd,2
IBC.AX,947869,Ironbark Capital Ltd,2
ICS.AX,947872,ICSGlobal Ltd,2
ICT.AX,947873,iCollege Ltd,2
IDZ.AX,947877,Indoor Skydive AUS Group,2
IEC.AX,947878,Intra Energy Corporation,2
TYX.AX,947879,Tyranna Resources Ltd,2
BPP.AX,947884,Babylon Pump & Power Ltd,2
IND.AX,947886,Indus Energy NL,2
E2E.AX,947889,EON NRG Ltd,2
AXJO.AX,171,S&P/ASX 200,2

#AS NETHERLAND
INGA.AS,301,ING Groep NV,1
RDSA.AS,302,Royal Dutch Shell PLC Class A,1
PHAR.AS,6940,Pharming Group NV,1
AEGN.AS,304,Aegon NV,1
KPN.AS,6913,Koninklijke KPN NV,1
ATCA.AS,958272,Altice NV,1
MT.AS,6910,ArcelorMittal SA,1
UNC.AS,6901,Unilever NV DRC,1
BAMN.AS,6915,Koninklijke BAM Groep NV,1
AD.AS,6909,Koninklijke Ahold Delhaize NV,1
NN.AS,943213,NN Group NV,1
REL.AS,8991,Relx PLC,1
PHG.AS,305,Koninklijke Philips NV,1
ASML.AS,6917,ASML Holding NV,1
PTNL.AS,13814,PostNL,1
SBMO.AS,6898,SBM Offshore NV,1
TOM2.AS,6904,TomTom NV,1
ABND.AS,961622,ABN AMRO Group NV,1
KVW.AS,1009127,Koninklijke Volker Wessels Stevin NV,1
FUGRC.AS,6890,Fugro NV,1
WLSNC.AS,6897,Wolters Kluwer,1
BESI.AS,7185,BE Semiconductor Industries NV,1
LIGHT.AS,979019,Philips Lighting NV,1
DSMN.AS,6905,Koninklijke DSM NV,1
GLPG.AS,15225,Galapagos NV,1
AKZO.AS,6902,Akzo Nobel,1
HEIN.AS,303,Heineken,1
ESPE.AS,17907,Esperite NV,1
APAM.AS,13813,Aperam SA,1
RAND.AS,6889,Randstad NV,1
KDS.AS,955873,Kiadis Pharma NV,1
ACCG.AS,7061,Accell Group NV,1
BOSN.AS,6932,Koninklijke Boskalis Westminster NV,1
AALB.AS,6920,Aalberts Industries NV,1
ASMI.AS,6888,ASM International NV,1
OCI.AS,40233,OCI NV,1
URW.AS,671,WFD Unibail Rodamco NV,1
AMG.AS,6895,AMG Advanced Metallurgical Group NV,1
GTO.AS,7036,Gemalto,1
ASRNL.AS,985157,ASR Nederland NV,1
VOPA.AS,6903,Koninklijke Vopak NV,1
WEHA.AS,6922,Wereldhave NV,1
BRUN.AS,6931,Brunel International NV,1
BSWSC.AS,6906,Koninklijke Wessanen NV,1
ARDS.AS,6930,Arcadis,1
FLOW.AS,955872,Flow Traders NV,1
SIPFC.AS,7064,Eurocommercial Properties NV,1
ORDN.AS,6900,Ordina NV,1
ADYEN.AS,1081623,Adyen NV,1
KARD.AS,6907,Kardan NV,1
AVTX.AS,997438,Avantium Holding BV,1
BETR.AS,7115,Beter Bed Holding NV,1
HEIJ.AS,6937,Heijmans NV,1
BINCK.AS,6911,BinckBank NV,1
BFIT.AS,985181,Basic Fit NV,1
TWKNC.AS,7151,TKH Group NV,1
CURE.AS,961653,Curetis NV,1
GVNV.AS,945680,Grandvision BV,1
ECT.AS,40230,Eurocastle Investment Ltd,1
BSGR.AS,1073107,B&S Group SA,1
VALU8.AS,40229,Value8 NV,1
UNIA.AS,989550,Unilever NV,1
HEIO.AS,40231,Heineken Holding NV,1
NIBC.AS,1073108,NIBC Holding NV,1
IMCD.AS,943214,IMCD NV,1
ATCB.AS,961769,Altice NV B,1
EAS2P.AS,7783,Docdata NV,1
ICTA.AS,7272,ICT Group NV,1
TKWY.AS,991179,Takeaway Com Holding BV,1
CCE.AS,29568,Coca-Cola European Partners PLC,1
INTER.AS,960701,Intertrust Group Holding SA,1
RDSB.AS,327,Royal Dutch Shell PLC Class B,1
ROON.AS,7562,RoodMicrotec NV,1
PDB.AS,942515,Probiodrug AG,1
SLIGR.AS,17915,Sligro Food Group NV,1
CORB.AS,6891,Corbion NV,1
ALFEN.AS,1072318,Alfen Beheer BV,1
ACCS.AS,17902,Accsys Technologies,1
NSTEC.AS,6919,NSI NV,1
PHLX.AS,9262,Inverko NV,1
VASN.AS,6894,Vastned Retail NV,1
KASNC.AS,7163,KAS Bank NV,1
ARBN.AS,312,Amsterdam Commodities NV,1
AJAX.AS,7261,AFC Ajax NV,1
SVEL.AS,6938,Kendrion NV,1
DPA.AS,9259,DPA Group NV,1
ARTN.AS,7790,Stern Groep NV,1
FFARM.AS,980200,ForFarmers NV,1
NEDP.AS,7229,NV Nederlandsche Apparatenfabriek Nedap,1
HLAN.AS,6933,Hal Trust,1
BGHL.AS,17906,Boussard and Gavaudan Holding Ltd,1
PSH.AS,942433,Pershing Square Holdings Ltd,1
VLAN.AS,7464,Van Lanschot NV,1
SIFG.AS,978749,Sif Holding NV,1
BOLS.AS,945679,Lucas Bols Amsterdam BV,1
CTAN.AS,7107,CTAC NV,1
DGB.AS,7593,Verenigde Nederlandse Compagnie NV,1
REINA.AS,1055959,Reinet Investments SCA,1
HUDN.AS,7095,Hunter Douglas NV,1
TFG.AS,14164,Tetragon Financial Group Ltd,1
CLB.AS,40221,Core Laboratories NV,1
HOLCO.AS,341,Holland Colours NV,1
LVIDE.AS,7098,Lavide Holding NV,1
SNOW.AS,7146,SnowWorld NV,1
BTBN.AS,7246,Batenburg Techniek NV,1
BRIL.AS,7321,Koninklijke Brill NV,1
ORANW.AS,7328,Oranjewoud NV,1
NEWN.AS,7717,Neways Electronics International NV,1
YATRA.AS,8816,Yatra Capital Ltd,1
NEDSE.AS,13169,NedSense Enterprises NV,1
HYDRA.AS,14162,Hydratec Industries NV,1
IEX.AS,14165,Iex Group NV,1
ANDP.AS,17904,AND International Publishers NV,1
ATRS.AS,17905,Atrium Europ.Real Est.Ltd,1
NSEN.AS,17914,New Sources Energy NV,1
ARCPF.AS,19712,Arcona Property Fund NV,1
TIEH.AS,25400,Tie Holding NV,1
PRCF.AS,32560,Koninklijke Porceleyne Fles NV,1
NOVI.AS,40222,Novisource NV,1
AAA.AS,40223,AP Alternative Assets LP,1
HFS.AS,40224,Source Group NV,1
BEVA.AS,40226,Bever Holding NV,1
NBPE.AS,40232,NB Private Equity Partners Ltd,1
TBIRD.AS,40235,Thunderbird Resorts Inc,1
VTA.AS,40236,Volta Finance Ltd,1
THXLE.AS,945099,Theta Legends,1
RNTO.AS,960702,Robeco Global Total Return Bond Fund SICAV,1
ENVI.AS,989465,Envipco Holding NV,1
RBEN.AS,989547,Robeco Global Stars Equities Fund NV,1
RLIN.AS,989548,Rolinco NV,1
VON.AS,1006172,VEON Ltd,1
NRP.AS,1024885,NEPI Rockcastle PLC,1
PREVA_P.AS,1056909,Value8 NV Pref,1
DSC1.AS,1064343,Dutch Star Companies ONE NV,1

#NZ NEWZEALAND
NZ50.NZ,41146,NZX50,27
SPK.NZ,1096400,Spark New Zealand Ltd,27
ZEL.NZ,1096419,Z Energy Ltd,27
KPG.NZ,43265,Kiwi Property Group Ltd,27
AIR.NZ,43227,Air New Zealand Ltd,27
NTL.NZ,43277,New Talisman Gold Mines Ltd,27
AIA.NZ,43228,Auckland International Airport Ltd,27
MEL.NZ,1096371,Meridian Energy Ltd,27
FBU.NZ,43251,Fletcher Building Ltd,27
CNU.NZ,43240,Chorus Ltd,27
PPH.NZ,1096387,Pushpay Holdings Ltd,27
RYM.NZ,1096393,Ryman Healthcare Ltd,27
ARG.NZ,1096343,Argosy Property Ltd,27
TME.NZ,43322,Trade Me Group Ltd,27
SKT.NZ,43309,Sky Network Television Ltd,27
ATM.NZ,43224,A2 Milk Company Ltd,27
FPH.NZ,43253,Fisher & Paykel Healthcare Ltd,27
RAK.NZ,43296,Rakon Ltd,27
OCA.NZ,1096380,Oceania Healthcare Ltd,27
PFI.NZ,43293,Property for Industry Ltd,27
SKC.NZ,43308,Skycity Entertainment Group Ltd,27
IFT.NZ,1096364,Infratil Ltd,27
PCT.NZ,1096382,Precinct Properties New Zealand Ltd,27
MCY.NZ,1096370,Mercury NZ Ltd,27
FRE.NZ,1096357,Freightways Ltd,27
CEN.NZ,1096349,Contact Energy Ltd,27
SPG.NZ,43246,Stride Property Ltd,27
PEB.NZ,43287,Pacific Edge Ltd,27
NZR.NZ,1096378,New Zealand Refining Company Ltd,27
PGC.NZ,43295,Pyne Gould Corporation Ltd,27
IAGFB.NZ,1096363,Insurance Australia Group Ltd,27
PGW.NZ,1096384,PGG Wrightson Ltd,27
FCG.NZ,1096354,Fonterra Co-Operative Group Ltd,27
GNE.NZ,1096359,Genesis Energy Ltd,27
TPW.NZ,1096410,Trustpower Ltd,27
SUM.NZ,1096403,Summerset Group Holdings Ltd,27
NWF.NZ,43282,NZ Windfarms Ltd,27
MFT.NZ,1096373,Mainfreight Ltd,27
VCT.NZ,1096413,Vector Ltd,27
MCK.NZ,43274,Millennium & Copthorne Hotels New Zealand Ltd,27
WHS.NZ,43331,Warehouse Group Ltd,27
NZX.NZ,1096379,NZX Ltd,27
NZO.NZ,43281,New Zealand Oil and Gas Ltd,27
POT.NZ,1096386,Port of Tauranga Ltd,27
ASBPB.NZ,1096346,ASB Capital No 2 Ltd,27
THL.NZ,1096407,Tourism Holdings Ltd,27
TRA.NZ,43247,Turners Automotive Group Ltd,27
MET.NZ,1096372,Metlifecare Ltd,27
HGH.NZ,43257,Heartland Group Holdings Ltd,27
TTK.NZ,43317,TeamTalk Ltd,27
ASBPA.NZ,1096345,ASB Capital Ltd,27
GEO.NZ,1096358,GeoOp Ltd,27
ANBHB.NZ,1096340,ANZ Bank New Zealand Ltd B,27
VHP.NZ,1096415,Vital Healthcare Property Trust,27
MPG.NZ,1096374,Metro Performance Glass Ltd,27
LIC.NZ,1096369,Livestock Improvement Corporation Ltd,27
TRU.NZ,1096411,Truscreen Ltd,27
VGL.NZ,1096414,Vista Group International Ltd,27
STU.NZ,1096402,Steel & Tube Holdings Ltd,27
MHJ.NZ,43272,Michael Hill International Ltd,27
EVO.NZ,1096353,Evolve Education Group Ltd,27
QHLHA.NZ,1096389,Quayside Holdings Ltd,27
RBD.NZ,1096391,Restaurant Brands New Zealand Ltd,27
WKSHA.NZ,1096418,Works Finance (NZ) Ltd,27
SLI.NZ,43310,Sli Systems Ltd,27
WBC.NZ,1096416,Westpac Banking Corp,27
FCGHA.NZ,1096355,Fonterra Co-Operative Group Ltd Pref,27
SML.NZ,1096398,Synlait Milk Ltd,27
SAN.NZ,43301,Sanford Ltd,27
GTK.NZ,1096360,Gentrack Group Ltd,27
HLG.NZ,1096362,Hallenstein Glasson Holdings Ltd,27
KMD.NZ,43262,Kathmandu Holdings Ltd,27
ARV.NZ,1096344,Arvida Group Ltd,27
MVN.NZ,43270,Methven Ltd,27
KFL.NZ,43263,Kingfish Ltd,27
TWR.NZ,1096412,Tower Ltd,27
CDI.NZ,1096518,CDL Investments New Zealand Ltd,27
EBO.NZ,43248,EBOS Group Ltd,27
RCSHA.NZ,1096392,Rabo Capital Securities Ltd,27
SCL.NZ,1096394,Scales Corporation Ltd,27
AUG.NZ,43232,Augusta Capital Ltd,27
NZK.NZ,1096376,New Zealand King Salmon Co Ltd,27
ERD.NZ,1096352,EROAD Ltd,27
NZM.NZ,1096377,NZME Ltd,27
ANZ.NZ,1096341,ANZ Banking Group,27
QEX.NZ,1096388,QEX Logistics Ltd,27
MMH.NZ,1096527,Marsden Maritime Holdings Ltd,27
TLS.NZ,1096408,Telstra Corporation Ltd,27
BGI.NZ,43283,Blackwell Global Holdings Ltd,27
MLN.NZ,43268,Marlin Global Ltd,27
CAV.NZ,43238,Cavalier Corporation Ltd,27
BRM.NZ,43234,Barramundi Ltd,27
SKL.NZ,1096396,Skellerup Holdings Ltd,27
IPL.NZ,1096367,Investore Property Ltd,27
BGP.NZ,1096347,Briscoe Group Ltd,27
RBC.NZ,1096390,Rubicon Ltd,27
ABA.NZ,1096334,Abano Healthcare Group Ltd,27
SEK.NZ,43306,Seeka Ltd,27
OHE.NZ,1096381,Orion Health Group Ltd,27
DGL.NZ,43244,Delegat Group Ltd,27
GXH.NZ,1096361,Green Cross Health Ltd,27
AMP.NZ,1096338,AMP Ltd,27
AFI.NZ,1096335,Australian Foundation Investment Company Ltd,27
BIT.NZ,1096348,Bankers Investment Trust,27
SKO.NZ,1096397,Serko Ltd,27
TLL.NZ,43276,TIL Logistics Group Ltd,27
VIL.NZ,43329,Veritas Investments Ltd,27
CVT.NZ,43242,Comvita Ltd,27
SCT.NZ,1096395,Scott Technology Ltd,27
IKE.NZ,1096366,Ikegps Group Ltd,27
TCL.NZ,1096404,City Of London Investment Trust,27
TLT.NZ,1096409,Tilt Renewables Ltd,27
AFT.NZ,1096336,AFT Pharmaceuticals Ltd,27
JPG.NZ,1096368,JP Morgan Global Growth & Income PLC,27
AOR.NZ,43230,Aorere Resources Ltd,27
AWF.NZ,43233,AWF Madison Group Ltd,27
CMO.NZ,43241,Colonial Motor Company Ltd,27
MAD.NZ,43249,Energy Mad Ltd,27
FIN.NZ,43250,Finzsoft Solutions Ltd,27
MGL.NZ,43269,Mercer Group Ltd,27
MOA.NZ,43275,MOA Group Ltd,27
SEA.NZ,43304,SeaDragon Ltd,27
FMS.NZ,43305,Future Mobility Solutions Ltd,27
SCY.NZ,43312,Smiths City Group Ltd,27
TRS.NZ,43324,TRS Investments Ltd,27
TGG.NZ,43326,T&G Global Ltd,27
IEQ.NZ,978230,Augusta Industries Inc,27
ALF.NZ,1096337,Allied Farmers Ltd,27
ANBFA.NZ,1096339,ANZ Bank New Zealand Ltd A,27
APL.NZ,1096342,NPT Ltd,27
CGF.NZ,1096350,Cooks Global Foods Ltd,27
CRP.NZ,1096351,Chatham Rock Phosphate Ltd,27
FCT.NZ,1096356,Foreign & Colonial Investment Trust PLC,27
IFTHA.NZ,1096365,Infratil Ltd Pref,27
MTFHC.NZ,1096375,Motor Trade Finance Ltd,27
PCTHA.NZ,1096383,Precinct Properties New Zealand Ltd Pref,27
PLX.NZ,1096385,Plexure Group Ltd,27
SNK.NZ,1096399,Snakk Media Ltd,27
SPN.NZ,1096401,South Port New Zealand Ltd,27
TEM.NZ,1096405,Templeton Emerging Markets Investment Trust PLC,27
WDT.NZ,1096417,Wellington Drive Technologies Ltd,27
BFW.NZ,1096516,Burger Fuel Worldwide Ltd,27
BLT.NZ,1096517,BLIS Technologies Ltd,27
GFL.NZ,1096522,Geneva Finance Ltd,27
SDL.NZ,1096531,Solution Dynamics Ltd,27
NZDOW.NZ,41141,Dow Jones New Zealand,27

#IS ISTANBUL
XU100.IS,19155,BIST 100,5
KRDMD.IS,19487,Kardemir Karabuk Demir Celik Sanayi ve Ticaret AS Class D,5
IHLGM.IS,19445,Ihlas Gayrimenkul Proje Gelistirme ve Ticaret AS,5
GARAN.IS,19412,Turkiye Garanti Bankasi,5
GUSGR.IS,19432,Gunes Sigorta AS,5
TTKOM.IS,19594,Turk Telekomunikasyon AS,5
IHLAS.IS,19444,Ihlas Holding AS,5
DOHOL.IS,19370,Dogan Sirketler Grubu Holding AS,5
AVOD.IS,19305,AVOD Kurutulmus Gida ve Tarim Urunleri Sanayi Ticaret AS,5
HALKB.IS,19433,Turkiye Halk Bankasi,5
VAKBN.IS,19607,Turkiye Vakiflar Bankasi TAO,5
VKGYO.IS,19614,Vakif Gayrimenkul Yatirim Ortakligi AS,5
KOZAA.IS,19482,Koza Anadolu Metal Madencilik Isletmeleri AS,5
PETKM.IS,19535,Petkim Petrokimya Holding AS,5
THYAO.IS,19581,Turk Hava Yollari AO,5
ISCTR.IS,19454,Turkiye Is Bankasi AS Class C,5
EKGYO.IS,19386,Emlak Konut Gayrimenkul Yatirim Ortakligi AS,5
DGKLB.IS,19475,Dogtas Kelebek Mobilya Sanayi ve Ticaret AS,5
ASELS.IS,19294,Aselsan Elektronik Sanayi ve Ticaret AS,5
IHGZT.IS,19443,Ihlas Gazetecilik AS,5
AKBNK.IS,19263,Akbank TAS,5
TUCLK.IS,941219,Tugcelik Aluminyum ve Metal Mamulleri Sanayi ve Ticaret AS,5
KLGYO.IS,19476,Kiler Gayrimenkul Yatirim Ortakligi AS,5
ZOREN.IS,19626,Zorlu Enerji Elektrik Uretim AS,5
IPEKE.IS,19451,Ipek Dogal Enerji Kaynaklari Arastirma ve Uretim AS,5
IEYHO.IS,19517,Isiklar Enerji ve Yapi Holding AS,5
EREGL.IS,19394,Eregli Demir ve Celik Fabrikalari TAS,5
HLGYO.IS,40448,Halk Gayrimenkul Yatirim Ortakligi AS,5
YYAPI.IS,19327,Yesil Yapi Endustrisi AS,5
HDFGS.IS,945159,HEDEF Girisim Sermayesi Yatirim Ortakligi AS,5
ISGSY.IS,19456,Is Girisim Sermayesi Yatirim Ortakligi AS,5
OSTIM.IS,30993,Ostim Endustriyel Yatirimlar ve Isletme AS,5
RYSAS.IS,19551,Reysas Tasimacilik ve Lojistik Ticaret AS,5
KARSN.IS,19467,Karsan Otomotiv Sanayi ve Ticaret AS,5
VKFYO.IS,31002,Vakif Menkul Kiymet Yatirim Ortakligi AS,5
METRO.IS,19507,Metro Ticari ve Mali Yatirimlar Holding AS,5
VESTL.IS,19612,Vestel Elektronik Sanayi ve Ticaret AS,5
CRFSA.IS,19336,CarrefourSA Carrefour Sabanci Ticaret Merkezi AS,5
IHEVA.IS,19442,Ihlas Ev Aletleri Imalat Sanayi ve Ticaret AS,5
SAHOL.IS,19553,Haci Omer Sabanci Holding AS,5
MIPAZ.IS,19510,Milpa Ticari ve Sinai Urunler Pazarlama Sanayi ve Ticaret AS,5
ODAS.IS,40513,ODAS Elektrik Uretim Sanayi Ticaret AS,5
TIRE.IS,19582,Mondi Tire Kutsan Kagit ve Ambalaj Sanayi AS,5
GOZDE.IS,19426,Gozde Girisim Sermayesi Yatirim Ortakligi AS,5
KOZAL.IS,19483,Koza Altin Isletmeleri AS,5
ISGYO.IS,19457,Is Gayrimenkul Yatirim Ortakligi AS,5
SASA.IS,19557,SASA Polyester Sanayi AS,5
SKBNK.IS,19565,Sekerbank TAS,5
ECILC.IS,19375,EIS Eczacibasi Ilac Sinai ve Finansal Yatirimlar Sanayi ve Ticaret AS,5
MRGYO.IS,19514,Marti Gayrimenkul Yatirim Ortakligi AS,5
EDIP.IS,19378,Edip Gayrimenkul Yatirim Sanayi ve Ticaret AS,5
SODA.IS,19570,Soda Sanayi AS,5
AVGYO.IS,19303,Avrasya Gayrimenkul Yatirim Ortakligi AS,5
ALBRK.IS,19275,Albaraka Turk Katilim Bankasi AS,5
AKSEN.IS,19272,Aksa Enerji Uretim AS,5
GSRAY.IS,19430,Galatasaray Sportif Sinai ve Ticari Yatirimlar AS,5
GSDHO.IS,19429,GSD Holding AS,5
SNGYO.IS,19568,Sinpas Gayrimenkul Yatirim Ortakligi AS,5
CEMAS.IS,19341,Cemas Dokum Sanayi AS,5
TRCAS.IS,19586,Turcas Petrol AS,5
TUKAS.IS,19597,Tukas Gida Sanayi ve Ticaret AS,5
IHYAY.IS,19446,Ihlas Yayin Holding AS,5
MAKTK.IS,19498,Makina Takim Endustrisi AS,5
YATAS.IS,19617,Yatas Yatak ve Yorgan Sanayi Ticaret AS,5
YGYO.IS,19619,Yesil Gayrimenkul Yatirim Ortakligi AS,5
YKGYO.IS,19623,Yapi Kredi Koray Gayrimenkul Yatirim Ortakligi AS,5
NIBAS.IS,30990,Nigbas Nigde Beton Sanayi ve Ticaret AS,5
SISE.IS,19564,Turkiye Sise ve Cam Fabrikalari AS,5
ALARK.IS,19274,Alarko Holding AS,5
GEREL.IS,19418,Gersan Elektrik Ticaret ve Sanayi AS,5
POLHO.IS,30996,Polisan Holding AS,5
DESA.IS,19357,Desa Deri Sanayi ve Ticaret AS,5
SANEL.IS,44474,SAN-EL Muhendislik Elektrik Taahhut Sanayi ve Ticaret AS,5
KRSTL.IS,19489,Kristal Kola ve Mesrubat Sanayi Ticaret AS,5
ADNAC.IS,19257,Adana Cimento Sanayi TAS C,5
TCELL.IS,19576,Turkcell Iletisim Hizmetleri AS ORD,5
TRKCM.IS,19588,Trakya Cam Sanayi AS,5
TSPOR.IS,19593,Trabzonspor Sportif Yatirim ve Futbol Isletmeciligi Ticaret AS,5
VAKKO.IS,19609,Vakko Tekstil ve Hazir Giyim Sanayi Isletmeleri AS,5
KERVT.IS,19472,Kerevitas Gida Sanayi ve Ticaret AS,5
BNTAS.IS,953595,Bantas Bandirma Ambalaj Sanayi ve Ticaret AS,5
ICBCT.IS,19579,ICBC Turkey Bank AS,5
MARTI.IS,19500,Marti Otel Isletmeleri AS,5
PRKME.IS,19544,Park Elektrik Uretim Madencilik Sanayi ve Ticaret AS,5
AKENR.IS,19266,Akenerji Elektrik Uretim AS,5
TEKTU.IS,19580,Tek-Art Insaat Ticaret Turizm Sanayi ve Yatirimlar AS,5
ITTFH.IS,19461,Ittifak Holding AS,5
MGROS.IS,19509,Migros Ticaret AS,5
GLRYH.IS,19420,Guler Yatirim Holding AS,5
ENJSA.IS,1062273,Enerjisa Enerji AS,5
PENGD.IS,19534,Penguen Gida Sanayi AS,5
MNDRS.IS,19511,Menderes Tekstil Sanayi ve Ticaret AS,5
ANACM.IS,19284,Anadolu Cam Sanayi AS,5
KFEIN.IS,1076877,Kafein Yazilim,5
ULUUN.IS,942791,Ulusoy Un Sanayi ve Ticaret AS,5
BLCYT.IS,19319,Bilici Yatirim Sanayi ve Ticaret AS,5
PGSUS.IS,40456,Pegasus Hava Tasimaciligi AS,5
DENGE.IS,30981,Denge Yatirim Holding AS,5
FLAP.IS,40447,Flap Kongre Toplanti Hizmetleri Otomotiv ve Turizm AS,5
RYGYO.IS,19550,Reysas Gayrimenkul Yatirim Ortakligi AS,5
ORGE.IS,30991,Orge Enerji Elektrik Taahhut AS,5
ULKER.IS,19601,Ulker Biskuvi Sanayi AS,5
AYEN.IS,19308,Ayen Enerji AS,5
KRDMB.IS,19486,Kardemir Karabuk Demir Celik Sanayi ve Ticaret AS Class B,5
TMSN.IS,40460,Tumosan Motor ve Traktor Sanayi AS,5
KCHOL.IS,19470,Koc Holding AS,5
GARFA.IS,19413,Garanti Faktoring AS,5
ACSEL.IS,40967,Aciselsan Acipayam Seluloz Sanayi Ve Ticaret AS,5
SILVR.IS,19563,Silverline Endustri ve Ticaret AS,5
ALYAG.IS,19283,Altinyag Kombinalari AS,5
ARCLK.IS,19289,Arcelik AS,5
PARSN.IS,19532,Parsan Makina Parcalari Sanayi AS,5
BIMAS.IS,19315,BIM Birlesik Magazalar AS,5
RTALB.IS,941217,RTA Laboratuvarlari Biyolojik Urunler Ilac ve Makine Sanayi Ticaret AS,5
BEYAZ.IS,30979,Beyaz Filo Oto Kiralama AS,5
AKGUV.IS,40440,Akdeniz Guvenlik Hizmetleri AS,5
DYOBY.IS,19373,DYO Boya Fabrikalari Sanayi ve Ticaret AS,5
YUNSA.IS,19625,Yunsa Yunlu Sanayi ve Ticaret AS,5
TATGD.IS,19573,Tat Gida Sanayi AS,5
AKFGY.IS,19268,Akfen Gayrimenkul Yatirim Ortakligi AS,5
CEMTS.IS,19342,Cemtas Celik Makina Sanayi ve Ticaret AS,5
FENER.IS,19402,Fenerbahce Futbol AS,5
TKFEN.IS,19583,Tekfen Holding AS,5
USAK.IS,19603,Usak Seramik Sanayi AS,5
ADESE.IS,19256,Adese Alisveris Merkezleri Ticaret AS,5
PEGYO.IS,19533,Pera Gayrimenkul Yatirim Ortakligi AS,5
MEPET.IS,19504,Mepet Metro Petrol ve Tesisleri Sanayi Ticaret AS,5
GOODY.IS,19425,The Goodyear Tire & Rubber Company,5
BRKSN.IS,19325,Berkosan Yalitim ve Tecrit Maddeleri Uretim ve Ticaret AS,5
BERA.IS,40451,Bera Holding AS,5
GENTS.IS,19417,Gentas Genel Metal Sanayi ve Ticaret AS,5
ARSAN.IS,19293,Arsan Tekstil Ticaret ve Sanayi AS,5
AFYON.IS,19260,Afyon Cimento Sanayi TAS,5
CCOLA.IS,19339,Coca-Cola Icecek AS,5
CRDFA.IS,19350,Creditwest Faktoring AS,5
RHEAG.IS,19549,Rhea Girisim Sermayesi Yatirim Ortakligi AS,5
NTHOL.IS,19523,Net Holding AS,5
VKING.IS,19615,Viking Kagit ve Seluloz AS,5
YAYLA.IS,44473,Yayla Enerji Uretim Turizm ve Insaat Ticaret AS,5
KUYAS.IS,40453,Kuyumcukent Gayrimenkul Yatirimlari AS,5
ISDMR.IS,976217,Iskenderun Demir ve Celik AS,5
ENKAI.IS,19391,ENKA Insaat ve Sanayi AS,5
KAREL.IS,19465,Karel Elektronik Sanayi ve Ticaret AS,5
ANELE.IS,19285,Anel Elektrik Proje Taahhut ve Ticaret AS,5
TUPRS.IS,19598,Turkiye Petrol Rafinerileri AS,5
TAVHL.IS,19574,TAV Havalimanlari Holding,5
DGGYO.IS,19361,Dogus Gayrimenkul Yatirim Ortakligi AS,5
SOKM.IS,1076665,Sok Marketler,5
GLYHO.IS,19421,Global Yatirim Holding AS,5
DOBUR.IS,19367,Dogan Burda Dergi Yayincilik ve Pazarlama AS,5
SEKUR.IS,41595,Sekuro Plastik Ambalaj Sanayi AS,5
GOLTS.IS,19424,Goltas Goller Bolgesi Cimento Sanayi ve Ticaret AS,5
DESPC.IS,19358,Despec Bilgisayar Pazarlama ve Ticaret AS,5
OZBAL.IS,19530,Ozbal Celik Boru Sanayi Ticaret ve Taahhut AS,5
SANKO.IS,19555,Sanko Pazarlama Ithalat Ihracat AS,5
KRDMA.IS,19485,Kardemir Karabuk Demir Celik Sanayi ve Ticaret AS Class A,5
BRMEN.IS,19326,Birlik Mensucat Ticaret ve Sanayi Isletmesi AS,5
KORDS.IS,19481,Kordsa Global Endustriyel Iplik ve Kord Bezi Sanayi ve Ticaret AS,5
DMSAS.IS,19364,Demisas Dokum Emaye Mamulleri Sanayi AS,5
ARENA.IS,19290,Arena Bilgisayar Sanayi ve Ticaret AS,5
KRGYO.IS,941214,Korfez Gayrimenkul Yatirim Ortakligi AS,5
DEVA.IS,19359,Deva Holding AS,5
BURCE.IS,19334,Burcelik Bursa Celik Dokum Sanayi AS,5
BANVT.IS,19312,Banvit Bandirma Vitaminli Yem Sanayi AS,5
ESCOM.IS,19397,Escort Teknoloji Yatirim AS,5
CUSAN.IS,963743,Cuhadaroglu Metal Sanayi ve Pazarlama AS,5
ERSU.IS,19396,ERSU Meyve ve Gida Sanayi AS,5
TRGYO.IS,19587,Torunlar Gayrimenkul Yatirim Ortakligi AS,5
MARKA.IS,30974,Marka Yatirim Holding AS,5
VERTU.IS,961704,Verusaturk Girisim Sermayesi Yatirim Ortakligi AS,5
NUGYO.IS,19525,Nurol Gayrimenkul Yatirim Ortakligi AS,5
GSDDE.IS,19428,GSD Denizcilik Gayrimenkul Insaat Sanayi ve Ticaret AS,5
SNKRN.IS,945933,Senkron Guvenlik ve Iletisim Sistemleri AS,5
DGATE.IS,19360,Datagate Bilgisayar Malzemeleri Ticaret AS,5
TACTR.IS,41030,Tac Tarim Urunleri Hayvancilik Gida Sanayi ve Ticaret AS,5
EMKEL.IS,19389,EMEK Elektrik Endustrisi AS,5
DOAS.IS,19366,Dogus Otomotiv Servis ve Ticaret AS,5
MSGYO.IS,997134,Mistral Gayrimenkul Yatirim Ortakligi AS,5
ULAS.IS,31001,Ulaslar Turizm Yatirimlari ve Dayanikli Tuketim Mallari Ticaret Pazarlama AS,5
SELEC.IS,19559,Selcuk Ecza Deposu Ticaret ve Sanayi AS,5
INDES.IS,19447,Indeks Bilgisayar Sistemleri Muhendislik Sanayi ve Ticaret AS,5
UTPYA.IS,19604,Utopya Turizm Insaat Isletmecilik AS,5
DENIZ.IS,19354,Denizbank AS,5
BOYP.IS,19282,Boyner Perakende ve Tekstil Yatirimlari AS,5
SAYAS.IS,950051,Say Reklamcilik Yapi Dekorasyon Proje Taahhut Sanayi ve Ticaret AS,5
TSGYO.IS,19590,TSKB Gayrimenkul Yatirim Ortakligi AS,5
SAMAT.IS,19554,Saray Matbaacilik Kagitcilik Kirtasiyecilik Ticaret ve Sanayi AS,5
FORMT.IS,1080076,Formet Celik Kapi Sanayi ve Ticaret AS,5
AKSGY.IS,40968,Akis Gayrimenkul Yatirim Ortakligi AS,5
INTEM.IS,19450,Intema Insaat ve Tesisat Malzemeleri Yatirim ve Pazarlama AS,5
IZFAS.IS,993681,Izmir Firca Sanayi ve Ticaret AS,5
KLMSN.IS,19477,Klimasan Klima Sanayi ve Ticaret AS,5
MAVI.IS,1013385,Mavi Giyim Sanayi Ve Ticaret AS,5
TKNSA.IS,31000,Teknosa Ic ve Dis Ticaret AS,5
OYLUM.IS,30994,Oylum Sinai Yatirimlar AS,5
AVHOL.IS,40444,Avrupa Yatirim Holding AS,5
YESIL.IS,31004,Yesil Yatirim Holding AS,5
LIDFA.IS,941215,Lider Faktoring AS,5
PRKAB.IS,19543,Turk Prysmian Kablo ve Sistemleri AS,5
MCTAS.IS,30988,MCT Danismanlik AS,5
TMPOL.IS,48640,Temapol Polimer Plastik ve Insaat Sanayi Ticaret AS,5
VANGD.IS,19610,Vanet Gida Sanayi Ic ve Dis Ticaret AS,5
DAGI.IS,19351,Dagi Giyim Sanayi ve Ticaret AS,5
DURDO.IS,19371,Duran-Dogan Basim ve Ambalaj Sanayi AS,5
ASUZU.IS,19296,Anadolu Isuzu Otomotiv Sanayi ve Ticaret AS,5
MERKO.IS,19505,Merko Gida Sanayi ve Ticaret AS,5
OZKGY.IS,30995,Ozak Gayrimenkul Yatirim Ortakligi AS,5
FONET.IS,1010701,Fonet Bilgi Teknolojileri AS,5
KUTPO.IS,19491,Kutahya Porselen Sanayi AS,5
MEGAP.IS,40454,Mega Polietilen Kopuk Sanayi ve Ticaret AS,5
RODRG.IS,102074,Rodrigo Tekstil Sanayi ve Ticaret AS,5
DIRIT.IS,40445,Diriteks Dirilis Tekstil Sanayi ve Ticaret AS,5
BTCIM.IS,19332,Baticim Bati Anadolu Cimento Sanayi AS,5
MPARK.IS,1062839,MLP Saglik Hizmetleri AS,5
CIMSA.IS,19344,Cimsa Cimento Sanayi ve Ticaret AS,5
ECZYT.IS,19377,Eczacibasi Yatirim Holding Ortakligi AS,5
PKART.IS,19539,Plastikkart Akilli Kart Iletisim Sistemleri Sanayi ve Ticaret AS,5
VERUS.IS,44471,Verusa Holding AS,5
IZMDC.IS,19462,Izmir Demir Celik Sanayi AS,5
TDGYO.IS,1066608,Trend Gayrimenkul Yatirim Ortakligi AS,5
LKMNH.IS,19494,Lokman Hekim Engurusag Saglik Turizm Egitim Hizmetleri ve Insaat Taahhut AS,5
ULUSE.IS,942792,Ulusoy Elektrik Imalat Taahhut ve Ticaret AS,5
BAGFS.IS,19310,Bagfas Bandirma Gubre Fabrikalari AS,5
BRISA.IS,19627,Brisa Bridgestone Sabanci Lastik Sanayi ve Ticaret AS,5
KRONT.IS,19488,Kron Telekomunikasyon Hizmetleri AS,5
EGSER.IS,19384,Ege Seramik Sanayi ve Ticaret AS,5
KATMR.IS,19469,Katmerciler Arac Ustu Ekipman Sanayi ve Ticaret AS,5
SNPAM.IS,19569,Sonmez Pamuklu Sanayii AS,5
GEDZA.IS,941213,Gediz Ambalaj Sanayi ve Ticaret AS,5
ADANA.IS,19253,Adana Cimento Sanayi TAS A,5
FROTO.IS,19410,Ford Otomotiv Sanayi AS,5
BOLUC.IS,19321,Bolu Cimento Sanayi AS,5
AKCNS.IS,19265,Akcansa Cimento Sanayi ve Ticaret AS,5
METUR.IS,19508,Metemtur Otelcilik ve Turizm Isletmeleri AS,5
AKSA.IS,19271,Aksa Akrilik Kimya Sanayi AS,5
ALKA.IS,19279,Alkim Kagit Sanayi ve Ticaret AS,5
AGYO.IS,19261,Atakule Gayrimenkul Yatirim Ortakligi AS,5
BMEKS.IS,19320,Bimeks Bilgi Islem ve Dis Ticaret AS,5
SONME.IS,19571,Sonmez Filament Sentetik Iplik ve Elyaf Sanayi AS,5
DOGUB.IS,19369,Dogusan Boru Sanayi ve Ticaret AS,5
BIZIM.IS,19317,Bizim Toptan Satis Magazalari AS,5
SARKY.IS,19556,Sarkuysan Elektrolitik Bakir Sanayi ve Ticaret AS,5
ATEKS.IS,19300,Akin Tekstil AS,5
ALCTL.IS,19277,Alcatel Lucent Teletas Telekomunikasyon AS,5
ALGYO.IS,19278,Alarko Gayrimenkul Yatirim Ortakligi AS,5
QNBFB.IS,19405,Qnb Finansbank AS,5
CLEBI.IS,19345,Celebi Hava Servisi AS,5
HATEK.IS,19434,Hateks Hatay Tekstil Isletmeleri AS,5
TLMAN.IS,1061403,Trabzon Liman Isletmeciligi AS,5
AGHOL.IS,19618,Yazicilar Holding AS,5
PETUN.IS,19536,Pinar Entegre Et ve Un Sanayi AS,5
BUCIM.IS,19333,Bursa Cimento Fabrikasi AS,5
AYGAZ.IS,19309,Aygaz AS,5
PINSU.IS,19538,Pinar Su Sanayi ve Ticaret AS,5
BSOKE.IS,19331,Batisoke Soke Cimento Sanayi TAS,5
HEKTS.IS,19436,Hektas Ticaret TAS,5
DENCM.IS,19353,Denizli Cam Sanayi ve Ticaret AS,5
BRSAN.IS,19328,Borusan Mannesmann Boru Sanayi ve Ticaret AS,5
SKTAS.IS,19567,Soktas Tekstil Sanayi ve Ticaret AS,5
VESBE.IS,19611,Vestel Beyaz Esya Sanayi ve Ticaret AS,5
SAFKR.IS,1058448,Safkar Ege Sogutmacilik Klima Soguk Hava Tesisleri Ihracat Ithalat Sanayi ve Tic,5
RAYSG.IS,19548,Ray Sigorta AS,5
IDGYO.IS,19441,Idealist Gayrimenkul Yatirim Ortakligi AS,5
TTRAK.IS,19595,Turk Traktor ve Ziraat Makineleri AS,5
TBORG.IS,19575,Turk Tuborg Bira ve Malt Sanayi AS,5
BOSSA.IS,19322,Bossa Ticaret ve Sanayi Isletmeleri TAS,5
DOKTA.IS,19348,Componenta Dokumculuk Ticaret ve Sanayi AS,5
CELHA.IS,19340,Celik Halat ve Tel Sanayi AS,5
BMELK.IS,941684,Bomonti Elektrik Muhendislik Musavirlik Insaat Turizm ve Ticaret AS,5
FMIZP.IS,19406,Federal Mogul Izmit Piston ve Pim Uretim Tesisleri AS,5
INFO.IS,19448,Info Yatirim AS,5
HUBVC.IS,30983,Hub Girisim Sermayesi Yatirim Ortakligi AS,5
AEFES.IS,19258,Anadolu Efes Biracilik ve Malt Sanayi AS,5
LINK.IS,19493,Link Bilgisayar Sistemleri Yazilimi ve Donanimi Sanayi ve Ticaret AS,5
OZGYO.IS,19531,Ozderici Gayrimenkul Yatirim Ortakligi AS,5
PEKGY.IS,1066607,Peker Gayrimenkul Yatirim Ortakligi AS,5
SANFM.IS,30997,Sanifoam Sunger Sanayi ve Ticaret AS,5
KRTEK.IS,19490,Karsu Tekstil Sanayi ve Ticaret AS,5
EGCYO.IS,19380,Egeli & Co Tarim Girisim Sermayesi Yatirim Ortakligi AS,5
AKGRT.IS,19269,AK Sigorta AS,5
OTKAR.IS,19528,Otokar Otomotiv ve Savunma Sanayi AS,5
ALKIM.IS,19280,Alkim Alkali Kimya AS,5
IZTAR.IS,44470,Iz Hayvancilik Tarim ve Gida Sanayi Ticaret AS,5
EGPRO.IS,19383,Ege Profil Ticaret ve Sanayi AS,5
AVISA.IS,942789,AvivaSA Emeklilik ve Hayat AS,5
ASLAN.IS,19295,Aslan Cimento AS,5
PSDTC.IS,942790,Pergamon Status Dis Ticaret AS,5
KAPLM.IS,19464,Kaplamin Ambalaj Sanayi ve Ticaret AS,5
HALKS.IS,30984,Halk Sigorta AS,5
PAGYO.IS,40514,Panora Gayrimenkul Yatirim Ortakligi AS,5
SRVGY.IS,941218,Servet Gayrimenkul Yatirim Ortakligi AS,5
PRZMA.IS,40457,Prizma Pres Matbaacilik Yayincilik Sanayi ve Ticaret AS,5
LOGO.IS,19495,Logo Yazilim Sanayi ve Ticaret AS,5
DAGHL.IS,30980,Dagi Yatirim Holding AS,5
BAKAB.IS,19311,Bak Ambalaj Sanayi ve Ticaret AS,5
MRDIN.IS,19513,Mardin Cimento Sanayi ve Ticaret AS,5
MAALT.IS,19497,Marmaris Altinyunus Turistik Tesisleri AS,5
DGZTE.IS,19362,Dogan Gazetecilik AS,5
EGCEY.IS,30982,Egeli & Co Enerji Yatirimlari AS,5
KNFRT.IS,19479,Konfrut Gida Sanayi ve Ticaret AS,5
DITAS.IS,19363,Ditas Dogan Yedek Parca Imalat ve Teknik AS,5
IZOCM.IS,19463,Izocam Ticaret ve Sanayi AS,5
JANTS.IS,40449,Jantsa Jant Sanayi ve Ticaret AS,5
AKSUE.IS,19273,Aksu Enerji ve Ticaret AS,5
UNYEC.IS,19602,Unye Cimento Sanayi ve Ticaret AS,5
EGEEN.IS,19381,Ege Endustri ve Ticaret AS,5
PNSUT.IS,19541,Pinar Sut Mamulleri Sanayi AS,5
TGSAS.IS,40458,TGS Dis Ticaret AS,5
ADEL.IS,19255,Adel Kalemcilik Ticaret ve Sanayi AS,5
ARTI.IS,19584,Arti Yatirim Holding AS,5
SEYKM.IS,958340,Seyitler Kimya Sanayi AS,5
ALCAR.IS,19276,Alarko Carrier Sanayi ve Ticaret AS,5
SERVE.IS,19561,Serve Kirtasiye Sanayi ve Ticaret AS,5
DERIM.IS,19356,Derimod Konfeksiyon Ayakkabi Deri Sanayi ve Ticaret AS,5
MRSHL.IS,19515,Marshall Boya ve Vernik Sanayi AS,5
CMENT.IS,19347,Cimentas Izmir Cimento Fabrikasi TAS,5
KERVN.IS,40450,Kervansaray Yatirim Holding AS,5
KARTN.IS,19468,Kartonsan Karton Sanayi ve Ticaret AS,5
OSMEN.IS,30992,Osmanli Menkul Degerler AS,5
ARMDA.IS,19292,Armada Bilgisayar Sistemleri Sanayi ve Ticaret AS,5
BURVA.IS,19335,Burcelik Vana Sanayi ve Ticaret AS,5
BFREN.IS,19314,Bosch Fren Sistemleri Sanayi ve Ticaret AS,5
ANELT.IS,19286,Anel Telekomunikasyon Elektronik Sistemleri Sanayi ve Ticaret AS,5
ERBOS.IS,19393,Erbosan Erciyas Boru Sanayi Ve Ticaret AS,5
KONYA.IS,19480,Konya Cimento Sanayi AS,5
OZRDN.IS,945716,Ozerden Plastik Sanayi ve Ticaret AS,5
CMBTN.IS,19346,Cimbeton Hazirbeton ve Prefabrik Yapi Elemanlari Sanayi ve Ticaret AS,5
PMVR3.IS,1008994,TOKI Park Mavera Project REIT,5
YGGYO.IS,941220,Yeni Gimat Gayrimenkul Yatirim Ortakligi AS,5
EGGUB.IS,19382,Ege Gubre Sanayi AS,5
ETILR.IS,40446,Etiler İnci Bufe Gida Sanayi ve Dis Ticaret AS,5
BALAT.IS,30978,Balatacilar Balatacilik Sanayi ve Ticaret AS,5
LUKSK.IS,19496,Luks Kadife Ticaret ve Sanayi AS,5
ANSGR.IS,19288,Anadolu Anonim Turk Sigorta Sti,5
DARDL.IS,19352,Dardanel Onentas Gida Sanayi AS,5
TKURU.IS,40459,Taze Kuru Gida Sanayi ve Ticaret AS,5
EGCYH.IS,19379,Egeli & Co Yatirim Holding AS,5
OLMIP.IS,941216,Olmuksan International Paper Ambalaj Sanayi ve Ticaret AS,5
ADBGR.IS,19254,Adana Cimento Sanayi TAS B,5
KENT.IS,19471,Kent Gida Maddeleri Sanayi ve Ticaret AS,5
METAL.IS,19506,Metal Gayrimenkul AS,5
EMNIS.IS,19390,Eminis Ambalaj Sanayi ve Ticaret AS,5
NUHCM.IS,19526,Nuh Cimento Sanayi AS,5
DOCO.IS,19368,DO & CO AG,5
POLTK.IS,950050,Politeknik Metal Sanayi ve Ticaret AS,5
AKMGY.IS,19270,Akmerkez Gayrimenkul Yatirim Ortakligi AS,5
KPHOL.IS,19484,Kapital Yatirim Holding AS,5
ORMA.IS,44472,Orma Orman Mahsulleri Integre Sanayi ve Ticaret AS,5
MZHLD.IS,19520,Mazhar Zorlu Holding AS,5
MMCAS.IS,30989,MMC Sanayi ve Ticari Yatirimlar AS,5
ROYAL.IS,40512,Royal Hali Iplik Tekstil Mobilya Sanayi ve Ticaret AS,5
SUMAS.IS,1081555,Sumas Suni Tahta ve Mobilya Sanayi AS,5
SELGD.IS,19560,Selcuk Gida Endustri Ihracat Ithalat AS,5
SALIX.IS,993683,Salix Yatirim Holding AS,5
EPLAS.IS,19392,Egeplast Ege Plastik Ticaret ve Sanayi AS,5
KSTUR.IS,993682,Kustur Kusadasi Turizm Endustrisi AS,5
AYCES.IS,19307,Altin Yunus Cesme Turistik Tesisler AS,5
RALYH.IS,19316,Ral Yatirim Holding AS,5
BRKO.IS,19324,Birko Birlesik Koyunlulular Mensucat Ticaret ve Sanayi AS,5
EKIZ.IS,19387,Ekiz Kimya Sanayi ve Ticaret AS,5
FRIGO.IS,19409,Frigo-Pak Gida Maddeleri Sanayi ve Ticaret AS,5
ISATR.IS,19452,Turkiye Is Bankasi AS Class A,5
ISBTR.IS,19453,Turkiye Is Bankasi AS Class B,5
PKENT.IS,19540,Petrokent Turizm AS,5
ISKUR.IS,19562,Turkiye Is Bankasi,5
ATSYH.IS,30977,Atlantis Yatirim Holding AS,5
SODSN.IS,30998,Sodas Sodyum Sanayi AS,5
YBTAS.IS,31003,Yibitas Yozgat Isci Birligi Insaat Malzemeleri Ticaret Sanayi AS,5
ATPET.IS,40441,Atlantik Petrol Urunleri Ticaret ve Sanayi AS,5
AYES.IS,40442,Ayes Celik Hasir ve Cit Sanayi AS,5
BASCM.IS,40443,Bastas Baskent Cimento Sanayi ve Ticaret AS,5
KRSAN.IS,40452,Karsusan Karadeniz Su Urunleri Sanayi AS,5
MERIT.IS,40455,Merit Turizm Yatirim ve Isletme AS,5
UZERB.IS,40461,Uzertas Boya Sanayi Ticaret ve Yatirim AS,5
ISBIR.IS,993680,Isbir Holding AS,5
UMPAS.IS,993684,Umpas Holding AS,5
YONGA.IS,993685,Yonga Mobilya Sanayi ve Ticaret AS,5

#F GERMANY
RWEG.F,6306,RWE AG ST O.N,10
DBK.F,352,Deutsche Bank AG NA O.N,10
EONGN.F,9251,E.ON SE NA,10
DTEGN.F,656,Deutsche Telekom AG Na,10
IFXGN.F,659,Infineon Technologies AG NA O.N,10
CBKG.F,358,Commerzbank AG O.N,10
LHAG.F,349,Deutsche Lufthansa AG,10
DAIGN.F,355,Daimler AG NA O.N,10
BAYGN.F,346,Bayer AG NA,10
EVTG.F,19241,Evotec AG O.N,10
DPWGN.F,354,Deutsche Post AG NA O.N,10
SDFGN.F,6320,K+S AG NA O.N,10
TKAG.F,664,Thyssenkrupp AG O.N,10
BMWG.F,652,Bayerische Motoren Werke AG,10
BASFN.F,345,BASF SE NA O.N,10
SIEGN.F,350,Siemens AG Class N,10
CECG.F,661,Metro AG,10
SAPG.F,663,SAP SE,10
AIXGN.F,6313,Aixtron SE,10
NDXG.F,6308,Nordex SE O.N,10
HDDG.F,6324,Heidelberger Druckmaschinen O.N,10
FREG.F,6284,Fresenius SE & Co KGAA O.N,10
ALVG.F,347,Allianz SE VNA O.N,10
WDIG.F,6280,Wirecard AG,10
MRCG.F,658,Merck KGaA,10
TTIGN.F,962839,Tom Tailor Holding AG,10
HNKG_P.F,357,Henkel & Co KGaA AG Pref,10
FMEG.F,653,Fresenius Medical Care KGAA ST,10
FNTGN.F,6285,Freenet AG NA,10
HEIG.F,6334,Heidelbergcement AG O.N,10
CONG.F,353,Continental AG O.N,10
MUVGN.F,662,Muench. Rueckvers. VNA O.N,10
ADSGN.F,348,Adidas AG,10
TUIGN.F,666,Tui AG NA,10
KCOGN.F,6304,Kloeckner & Co SE NA,10
ARLG.F,6325,Aareal Bank AG,10
DLGS.F,13098,Dialog Semiconductor,10
BOSSN.F,6352,Hugo Boss AG NA O.N,10
DWNG.F,22138,Deutsche Wohnen AG,10
RIB.F,19895,RIB Software AG Na,10
AOXG.F,19200,Alstria Office Reit-Ag,10
QIA.F,6336,Qiagen NV,10
DB1GN.F,359,Deutsche Boerse AG,10
COKG.F,19786,Cancom SE O.N,10
BNRGN.F,14145,Brenntag AG,10
LEOGN.F,6339,Leoni AG,10
TEGG.F,19234,Tag Immobilien AG,10
UTDI.F,6338,United Internet AG NA,10
BEIG.F,6283,Beiersdorf AG O.N,10
DRIG.F,13155,Drillisch AG,10
PSHG_P.F,356,Porsche Automobil Holding SE,10
G1AG.F,6296,GEA Group AG,10
SZGG.F,6286,Salzgitter AG,10
LXSG.F,6281,Lanxess AG,10
ZILGN.F,6293,Elringklinger AG NA O.N,10
BKP6.F,13900,Piraeus Bank SA,10
GBFG.F,6300,Bilfinger SE O.N,10
DEZG.F,6327,Deutz AG,10
RHMG.F,665,Rheinmetall AG,10
RHKG.F,6314,Rhoen Klinikum AG,10
SZUG.F,6322,Suedzucker AG,10
CE2G.F,19794,Cropenergies AG,10
NAFG.F,6311,Aurubis AG,10
MORG.F,6343,Morphosys AG O.N,10
MANG.F,657,Man SE,10
RWEG_P.F,19897,RWE AG VZO O.N,10
S92G.F,21812,SMA Solar Technology AG,10
HNRGN.F,6298,Hannover Rueck SE,10
SY1G.F,6328,Symrise AG Inh. O.N,10
WCHG.F,6290,Wacker Chemie O.N,10
SGCG.F,6317,SGL Carbon SE,10
EVDG.F,19212,CTS Eventim AG,10
SIXG.F,19230,Sixt AG ST O.N,10
JUNG_P.F,19220,Jungheinrich AG O.N.VZO,10
SOWGN.F,6302,Software AG,10
PATGN.F,19225,Patrizia Immobilien AG,10
WACGN.F,19239,Wacker Neuson NA O.N,10
HNKG.F,19834,Henkel AG & Co KGAA ST O.N,10
GWIG.F,21612,Gerry Weber Intl AG,10
FRAG.F,6289,Fraport AG,10
PNEGN.F,19882,PNE Wind AG,10
NEKG.F,19871,Nemetschek AG O.N,10
MTXGN.F,6321,MTU Aero Engines NA O.N,10
VOWG.F,351,Volkswagen AG,10
SURG.F,19913,Surteco SE,10
HHFGN.F,21613,Hamburger Hafen Und Logistik A-SP,10
HABG.F,19215,Hamborner Reit AG O.N,10
FPEG_P.F,14148,Fuchs Petrolub AG VZO Pref,10
COPMA.F,19791,CompuGroup Medical AG O.N,10
GFTG.F,19827,GFT Technologies AG,10
QSCG.F,6292,QSC AG NA O.N,10
DICN.F,19207,DIC Asset AG,10
NOEJ.F,19223,Norma Group AG NA O.N,10
MGNK.F,19869,Mologen AG,10
TTKG.F,19237,Takkt AG O.N,10
B5AG.F,6326,Bauer AG,10
LING.F,660,Linde AG O.N,10
HOTG.F,6305,Hochtief AG,10
GLJN.F,19213,Grenke N AG,10
VT9G.F,19238,VTG AG O.N,10
BMWG_P.F,19783,Bayerische Motoren Werke AG Pref,10
FPHG.F,19823,Francotyp-Postalia Hldg,10
SATG_P.F,19900,Sartorius AG VZO O.N,10
ECXN.F,19813,Epigenomics AG,10
ISRG.F,19845,Isra Vision O.N,10
2HR.F,19198,H&R GmbH & Co KgaA,10
SIXG_P.F,19906,Sixt AG VZO O.N,10
HOC.F,19921,HolidayCheck Group AG,10
SAXG.F,19227,Stroeer SE,10
ELGG.F,19811,Elmos Semiconductor AG,10
PA8G.F,19879,Paion O.N,10
SKBG.F,19232,Koenig & Bauer AG ST O.N,10
CDBG.F,19204,Comdirect Bank AG,10
STAGN.F,6318,STADA Arzneimittel VNA O.N,10
KRNG.F,6295,Krones AG O.N,10
SWVKK.F,6282,SolarWorld AG,10
BLD.F,21691,Ballard Power Systems Inc,10
INHG.F,19219,Indus Holding AG,10
PV.F,6331,Pfeiffer Vacuum Technology O.N,10
ISHG.F,19842,Intershop Communications,10
TPEG.F,19890,PVA Tepla AG O.N,10
VBKG.F,14154,Verbio Vereinigte Bioenergie AG,10
LPKG.F,19858,LPKF Laser & Electronics,10
HBH.F,19217,Hornbach Holding VZO O.N,10
CEVG.F,19205,Centrotec Sustainable O.N,10
ZO1G.F,19240,Zooplus AG,10
NXUG.F,19872,Nexus AG O.N,10
WING.F,6287,Diebold Nixdorf AG,10
AAQG.F,19759,AAP Implantate AG,10
WL6G.F,19935,Wilex AG O.N,10
HNLG.F,19803,Dr. Hoenle AG O.N,10
EUZG.F,19807,Eckert & Ziegler AG O.N,10
CWCG.F,19206,Cewe Color Holding O.N,10
PGNG.F,19880,Paragon AG,10
GGS.F,6340,Gigaset AG,10
F3CG.F,19903,SFC Energy AG,10
SNGGK.F,6333,Singulus Technologies AG,10
DBANN.F,19208,Deutsche Beteiligungs AG O.N,10
HBMG.F,19836,Hornbach-Baumarkt O.N,10
VOSG.F,6294,Vossloh AG,10
DRWG_P.F,6301,Draegerwerk VZO O.N,10
HYQGN.F,19837,Hypoport AG,10
OHBG.F,19874,OHB AG O.N,10
ROSNQA.F,14151,Rosneft,10
O2C.F,19224,Petro Welt Technologies AG,10
SK1GN.F,19231,SKW Stahl Metallurgie Holding NA,10
SANT1.F,19891,S&T AG,10
WSUG.F,19932,WashTec AG O.N,10
AMDG.F,19201,Amadeus Fire AG,10
LEIG.F,19854,Leifheit AG O.N,10
CSHG.F,19787,Cenit AG O.N,10
VSCK.F,19758,4 SC AG,10
TTRGN.F,19917,Technotrans AG NA O.N,10
OBCGN.F,19242,Xing AG,10
EUCAN.F,19816,Euromicron AG NA O.N,10
EV4G.F,19211,Constantin Medien AG O.N,10
ADDG.F,19762,Adler Modemaerkte AG O.N,10
CFJA.F,21979,Ceres Power Holdings PLC,10
TGTG.F,19918,11 88 0 Solutions AG,10
SISG.F,19821,First Sensor AG O.N,10
GILG.F,6315,DMG Mori AG,10
IXXG.F,19840,Init Innovation In Traffic Systems,10
NZT.F,20240,Spark New Zealand Ltd,10
CPW.F,21735,Dixons Carphone PLC,10
ETGG.F,19812,Envitec Biogas O.N,10
IVXG.F,19844,Invision AG,10
GSC1N.F,19214,Gesco AG NA O.N,10
SYTG.F,19909,Softing AG O.N,10
YSNG.F,19901,Secunet Security AG O.N,10
CIRX.F,21838,CIR Compagnie Industriali Riunite SpA,10
RIM.F,21873,BlackBerry Ltd,10
MBQGN.F,19868,Mobotix AG O.N,10
IVUG.F,19847,IVU Traffic Technologies AG O.N,10
UUUG.F,19756,3U Holding AG,10
NNN1Y.F,9214,Tencent Holdings Ltd ADR,10
O.F,20833,Realty Income Corp,10
GPN.F,20754,Global Payments Inc,10
S4AG.F,19908,SMT Scharf AG,10
GMMG.F,13151,Grammer AG,10
VIBG_P.F,19929,Villeroy & Boch AG VZ,10
APME.F,19760,AD Pepper Media,10
M5ZG.F,6346,Manz AG,10
SMHNN.F,14153,Suess Microtec NA O.N,10
KWSG.F,19221,KWS SAAT AG O.N,10
BBNGU.F,21969,The Blackstone Group LP,10
AGXG.F,19764,Agennix AG,10
BIOG_P.F,19203,Biotest AG VZ O.N,10
SYZG.F,19916,Syzygy AG O.N,10
IC2.F,21747,Intercontinental Exchange Inc,10
BSLG.F,19776,Basler AG O.N,10
STEL.F,8632,Singapore Telecommunications Ltd,10
AMRNY.F,15401,Amarin Corporation PLC,10
MANG_P.F,19861,Man SE Pref,10
PSAGN.F,19243,PSI AG F.Pr.U.Sys. NA,10
CEC1_P.F,19866,Metro AG,10
2KD.F,20877,Kinder Morgan Inc,10
AOFG.F,19774,Atoss Software AG,10
MZXG.F,19863,Masterflex O.N,10
SW1.F,19904,SHW AG,10
MUBG.F,19870,Muehlbauer Hold.O.N,10
OSPGK.F,19927,USU Software AG,10
RTCG.F,19893,Realtech AG O.N,10
BIOG.F,19781,Biotest AG ST O.N,10
GKSG.F,19828,GK Software O.N,10
EXEL.F,16041,Exelixis Inc,10
ULCG.F,19925,United Labels O.N,10
AMD.F,21824,Advanced Micro Devices Inc,10
SLTG.F,19233,Schaltbau Holding AG,10
HAWG.F,19216,Hawesko Holding AG SVG,10
GMEG.F,19826,Geratherm O.N,10
GEC.F,22052,General Electric Company,10
HLGZ.F,19218,Highlight Communications Inh.Sf 1,10
OHI.F,20271,Omega Healthcare Investors Inc,10
NPNJ.F,8758,Naspers Ltd,10
MDNG.F,6347,Medion AG,10
ERMGK.F,19798,DEAG Deutsche Entertainment AG,10
C9S.F,19902,CannTrust Holdings Inc,10
LTD.F,22160,L Brands Inc,10
BTBB.F,19782,SLEEPZ AG,10
EXNG.F,19914,Expedeon AG,10
SIIG.F,22100,Wheaton Precious Metals Corp,10
1YD.F,22125,Broadcom Inc,10
XY6.F,19704,Xylem Inc,10
BYWG.F,19777,Baywa AG NA,10
HG1G.F,19737,Homag Group AG,10
STZ.F,21678,Constellation Brands Inc Class A,10
DY2.F,21683,Dentsply Sirona Inc,10
TGHN.F,19857,Logwin AG,10
NWL.F,21938,Newell Brands Inc,10
MGA.F,22073,Magna International Inc,10
DAMG.F,19797,Data Modul AG O.N,10
VRTX.F,21681,Vertex Pharmaceuticals Inc,10
TBN1.F,21910,Capstone Turbine Corp,10
BAC.F,21962,Bank of America Corp,10
EQR.F,22141,Equity Residential,10
ATTU.F,655,Attunity Ltd,10
A3B.F,6288,Acco Brands Corporation,10
DEQGN.F,6307,Deutsche Euroshop AG,10
A6W.F,6312,Alexandria Real Estate Equities Inc,10
ABM.F,6316,ABM Industries Incorporated,10
CTNGK.F,6329,Centrotherm International AG,10
AD8.F,6335,Arcos Dorados Holdings Inc,10
ADC.F,6337,Agree Realty Corporation,10
AEL.F,6341,American Equity Investment Life Holding Co,10
AF4.F,6342,The Hanover Insurance Group Inc,10
AGM.F,6350,Federal Agricultural Mortgage,10
AFXG.F,6351,Carl Zeiss Meditec AG,10
LOGNN.F,6362,Logitech International SA,10
SIEGN.F,6470,Siemens AG Class N,10
BC8G.F,6519,Bechtle AG,10
ERICB.F,6523,Telefonaktiebolaget LM Ericsson Class B,10
MLPG.F,6525,MLP AG,10
AINV.F,6526,Apollo Investment Corp,10
ADAG.F,6549,Adva Optical Networking SE,10
BSBAY.F,6586,Sky PLC,10
CBRO.F,6687,Close Brothers Group plc,10
DGII.F,6802,Digi International Inc,10
MQFA.F,6840,Avocet Mining PLC,10
STM.F,6965,STMicroelectronics NV,10
EURA.F,6978,Eurazeo,10
KORI.F,7138,Korian Medica SA,10
PC6AY.F,7859,PetroChina Co Ltd ADR,10
TQK.F,7882,The Wendy’s Co,10
RIOAY.F,7942,Rio Tinto ADR,10
GTTG.F,7958,Tegna Inc,10
GSKY.F,7988,GlaxoSmithKline PLC ADR,10
CCLC.F,7994,Carnival PLC,10
ARRJY.F,8031,ArcelorMittal SA ADR,10
NJY.F,8040,Nidec Corporation,10
SEP.F,8075,Spectra Energy Partners LP,10
BHPY.F,8091,BHP Billiton Ltd ADR,10
DIO.F,8108,Diodes Incorporated,10
NOKY.F,8115,Nokia Corp ADR,10
ACEL.F,8244,Chubb Ltd,10
HITY.F,8312,Hitachi Ltd ADR,10
INVP.F,8739,Investec PLC,10
DRFNY.F,8744,Gold Fields Ltd ADR,10
AODCQ.F,8761,AngloGold Ashanti Ltd DRC,10
INVP.F,8776,Investec PLC,10
AVA.F,8815,Avista Corporation,10
0941.F,8927,China Mobile Ltd,10
BUDY.F,8992,Anheuser Busch Inbev NV ADR,10
AIRG.F,8994,Airbus Group SE,10
HDJA.F,9012,Janus Henderson Group PLC,10
SL2.F,9110,Sleep Number Corp,10
TJH7.F,9187,Tie Holding NV,10
DISCKC.F,9241,Discovery Communications C Inc,10
CRNT.F,10889,Ceragon Networks Ltd,10
ITRN.F,10927,Ituran Location and Control Ltd,10
MLNX.F,10935,Mellanox Technologies Ltd,10
SILC.F,11071,Silicom,10
TISA.F,12123,Top Image Systems Ltd,10
ODHN.F,12881,Orascom Development Holding AG,10
IMX.F,13057,Imax Corp,10
SAPGY_P.F,13075,SAP AG ADR,10
VODIY.F,13088,Vodafone Group PLC ADR,10
QIA.F,13095,Qiagen NV,10
RR5.F,13126,Range Resources Ltd,10
JENGN.F,13131,Jenoptik AG,10
GWIG.F,13139,Gerry Weber Intl AG,10
AITN.F,13141,Applied Industrial Technologies,10
BIONN.F,13164,BB Biotech AG,10
1ZD.F,13940,Interoil Exploration and Production ASA,10
LN3.F,13941,Jefferies Financial Group Inc,10
9ORN.F,13998,Ocean RIG UDW Inc,10
G1V.F,14099,MC Mining Ltd,10
PVR1.F,14110,Patagonia Gold PLC,10
PXSL.F,14113,Provexis,10
ALGR.F,14144,Alamo Group Inc,10
FIEG.F,14146,Fielmann AG,10
FPE4Y.F,14147,Fuchs Petrolub SE ADR,10
AVD.F,14149,American Vanguard Corporation,10
S92G.F,14152,SMA Solar Technology AG,10
CEPD.F,14160,CTi Biopharma Corp,10
BNSI.F,14168,Beni Stabili SpA,10
WHS.F,14328,Warehouse Group Ltd,10
AQG.F,14580,Alacer Gold Corp DRC,10
MYR.F,14592,Myer Holdings Ltd,10
YM1.F,14593,Panoramic Resources Ltd,10
QRL.F,14594,Aurizon Holdings Ltd,10
S2Z.F,14596,Sandfire Resources NL,10
T7W.F,14597,Treasury Wine Estates Ltd,10
G2O.F,14625,Golar LNG Limited,10
RCL.F,14628,Royal Caribbean Cruises Ltd,10
6LA.F,15159,Lamar Advertising Company,10
SAN.F,15174,Banco Santander,10
SNC.F,15179,Sonaecom SGPS,10
SVO.F,15183,Sacyr SA,10
ACGL.F,15320,Arch Capital Group Ltd,10
9AC.F,15390,AMC Networks Inc,10
AMPP.F,15397,Ampio Pharm,10
2UH.F,15418,ANGI Homeservices Inc,10
DLBA.F,15429,Dolby Laboratories,10
95A.F,15472,Altisource Portfolio Solutions SA,10
ATSG.F,15496,Air Transport Services Group Inc,10
DLX.F,15501,Deluxe Corporation,10
AZPN.F,15514,Aspen Technology Inc,10
DNYY.F,15549,Denny’s Corp,10
BSFA.F,15599,ANI Pharmaceuticals Inc,10
PP4A.F,15602,Popular Inc,10
BRKR.F,15605,Bruker Corporation,10
CUCA.F,15641,Avis Budget Group Inc,10
CBOE.F,15663,Cboe Global Markets Inc,10
CENX.F,15689,Century Aluminum Company,10
SIY.F,15756,Siemens AG ADR,10
DRAD.F,15767,Digirad Corporation,10
CPRT.F,15793,Copart Inc,10
CVLT.F,15859,CommVault Systems Inc,10
DECK.F,15898,Deckers Outdoor Corporation,10
ENMD.F,16006,Casi Pharma,10
ESLT.F,16028,Elbit Systems Ltd,10
FOSL.F,16122,Fossil Group Inc,10
GGALYB.F,16174,Grupo Financiero Galicia SA ADR,10
GLGL.F,16189,GLG Life Tech Corporation,10
G2U.F,16206,Gulfport Energy Corporation,10
G5NA.F,16214,Groupon Inc,10
P8S.F,16217,Globalstar Inc,10
QNT2.F,16281,Quantum Corporation,10
MOSS.F,16328,Iconix Brand Group Inc,10
DSX.F,16342,Diana Shipping inc,10
LECO.F,16496,Lincoln Electric Holdings Inc,10
33L.F,16551,Lululemon Athletica Inc,10
M6X2.F,16571,Yield10 Bioscience Inc,10
MLNX.F,16635,Mellanox Technologies Ltd,10
MPEY.F,16660,Melco Resorts & Entertainment Ltd,10
SIY.F,16664,Siemens AG ADR,10
MYRX.F,16692,Myrexis Inc Cmn Stk,10
NR1A.F,16751,National Research Corp,10
ODFL.F,16795,Old Dominion Freight Line Inc,10
PBCT.F,16866,People’s United Financial Inc,10
PVDA.F,16871,Sterling Bancorp,10
PENN.F,16891,Penn National Gaming Inc,10
LA9N.F,16911,FC Global Realty Inc,10
PIGG.F,16955,Perrigo Co,10
DUM.F,16996,Ducommun Incorporated,10
QS8.F,17006,QC Holdings Inc,10
QY1.F,17016,Nextgen Healthcare Inc,10
REED.F,17041,Reeds Inc,10
3T3.F,17083,TiVo Corp,10
4SB.F,17119,SBA Communications Corp,10
SL2.F,17142,Sleep Number Corp,10
SNPS.F,17211,Synopsys Inc,10
SODA.F,17217,Sodastream International Ltd,10
SWKS.F,17293,Skyworks Solutions Inc,10
RVS1.F,17339,Dawson Geophysical Company,10
I9DN.F,17359,Arbutus Biopharma Corp,10
37Z.F,17365,Allakos Inc,10
TB5.F,17384,Trimble Inc,10
TRCT.F,17392,Tractor Supply Company,10
TSEM.F,17411,Tower Semiconductor Ltd,10
TXM1.F,17418,Travelzoo Inc,10
ULTA.F,17443,Ulta Beauty Inc,10
UTHR.F,17470,United Therapeutics Corporation,10
CR3.F,17476,Corindus Vascular Robotics Inc,10
VCC1.F,17484,Vical Inc,10
VRNT.F,17510,Verint Systems Inc,10
VA7A.F,17511,Verisk Analytics Inc,10
DWCH.F,17548,Datawatch Corporation,10
WLBU.F,17558,Westmoreland Coal Co,10
WPT.F,17567,Westport Fuel Systems Inc,10
XTE.F,17597,EnLink Midstream Partners LP,10
ARTF.F,17688,Artprice Com SA,10
FFPP.F,17723,FFP SA,10
BICY.F,17913,BanColombia SA,10
BKY.F,18498,Berkeley Energy Ltd,10
EQXA.F,18513,Equatorial Resources Ltd,10
WE7.F,18515,Evolution Mining Ltd,10
EXR2.F,18516,EXCO Resources Inc,10
ELYA.F,18520,G8 Education Ltd,10
RR5.F,18572,Range Resources Ltd,10
WEB.F,18586,Webjet Ltd,10
0WE.F,18925,Weatherford International PLC,10
DUEG.F,19210,Duerr AG,10
MVVGN.F,19222,MVV Energie AG,10
SCUGE.F,19228,Schuler AG O.N,10
SFQN.F,19229,SAF Holland SA,10
TIMGN.F,19235,ZEAL Network SE,10
SBSG.F,19244,STRATEC Biomedical AG,10
GIBG.F,19247,GSW Immobilien AG,10
LM.F,19700,Legg Mason Inc,10
T6A.F,19702,TripAdvisor Inc,10
WPEN.F,19703,WPX Energy Inc,10
CTNGK.F,19729,Centrotherm International AG,10
AVMR.F,19730,Meritor Inc,10
AINV.F,19733,Apollo Investment Corp,10
DXCM.F,19734,DexCom Inc,10
AVT.F,19735,Avnet Inc,10
AEL.F,19738,American Equity Investment Life Holding Co,10
AVD.F,19739,American Vanguard Corporation,10
M5ZG.F,19740,Manz AG,10
SNGGK.F,19747,Singulus Technologies AG,10
AVX.F,19755,AVX Corporation,10
AZZ.F,19761,AZZ Incorporated,10
AAHG.F,19765,Ahlers AG,10
B.F,19767,Barnes Group Inc,10
E0P.F,19768,Enphase Energy Inc,10
B8JN.F,19771,Basic Energy Services Inc,10
AYDGN.F,19772,Artnet AG NA O.N,10
ACWNN.F,19773,AS Creation Tapeten AG,10
E6GN.F,19775,Euro Tech Holdings Company Limited,10
BAH.F,19780,Booz Allen Hamilton Holding,10
BMMG.F,19784,Brueder Mannesmann AG,10
EBIX.F,19788,Ebix Inc,10
CSGG.F,19789,China Specialty Glass AG,10
ECHO.F,19790,Echo Global Logistics Inc,10
ECOL.F,19793,US Ecology Inc,10
ECPG.F,19795,Encore Capital Group Inc,10
BDN.F,19796,Brandywine Realty Trust,10
ECYT.F,19799,Endocyte Inc,10
DFTKN.F,19802,DF Deutsche Forfait AG,10
DRWG.F,19804,Draegerwerk ST A. O.N,10
BE4A.F,19805,Beazer Homes USA Inc,10
BGSN.F,19806,B&G Foods Inc,10
E4CG.F,19808,Ecotel Communication AG,10
EING_P.F,19809,Einhell Germany VZO O.N,10
EE.F,19810,El Paso Electric Company,10
SQ7B.F,19814,Biglari Holdings Inc,10
A4Y.F,19815,Accentro Real Estate AG,10
EWI1.F,19817,Electrawinds SE A,10
EXCL.F,19818,exceet Group SE,10
FAAS.F,19819,Fabasoft AG,10
FVIG.F,19820,Fair Value Reit AG Inh. On,10
FEVG.F,19822,Fortec Elektronik O.N,10
BID.F,19824,Sotheby’s,10
FEWG.F,19825,Funkwerk AG,10
EFII.F,19829,Electronics for Imaging Inc,10
G7BG.F,19830,GWB Immobilien Inh. O.N,10
BIOA.F,19831,Bio-Rad Laboratories Inc,10
HXCKK.F,19832,Ernst Russ AG,10
HWSAK.F,19835,METRIC Mobility Solutions AG,10
EG1.F,19838,Virtusa Corporation,10
EGB.F,19839,The Ensign Group Inc,10
EGCA.F,19841,eGain Corporation,10
IS7G.F,19843,Intica Systems AG,10
BKS.F,19846,Barnes & Noble Inc,10
XMYG.F,19848,mybet Holding SE,10
EGHT.F,19849,8x8 Inc,10
EGOV.F,19850,NIC Inc,10
K1RG.F,19852,Kromi Logistik Inh. O.N,10
KU2G.F,19853,Kuka AG,10
L1OGK.F,19855,Lloyd Fonds AG,10
EGVY.F,19856,Ever-Glory International Group Inc,10
ECKG.F,19859,Ludwig Beck A.Rathauseck,10
EGY.F,19860,Vaalco Energy Inc,10
BKU.F,19862,BankUnited Inc,10
MBBG.F,19864,MBB Industries AG,10
MEDG.F,19865,MediClin AG,10
M3VGN.F,19867,MeVis Medical Solutions NA O.N,10
BOH.F,19873,Bank of Hawaii Corporation,10
BRKA.F,19875,Berkshire Hathaway Inc,10
O4BG.F,19877,OVB Holding AG,10
EIG.F,19878,Employers Holdings Inc,10
ELGX.F,19881,Endologix Inc,10
ELY.F,19883,Callaway Golf Company,10
BRO.F,19884,Brown & Brown Inc,10
BW.F,19886,Materion Corporation,10
PWOG.F,19888,Progress Werk Oberkirch O.N,10
PUS.F,19889,Pulsion ST O.N,10
RSL2.F,19892,R. Stahl AG NA O.N,10
BYD.F,19894,Boyd Gaming Corporation,10
C08.F,19896,Caesars Entertainment Corporation,10
ENS.F,19898,Enersys,10
SATG.F,19899,Sartorius AG,10
SZZG.F,19905,Sinnerschrader O.N,10
SFXG.F,19910,Solar-Fabrik AG O.N,10
ENZ.F,19911,Enzo Biochem Inc,10
CAE.F,19912,CAE Inc,10
CALX.F,19915,Calix Inc,10
TLIG.F,19920,Teles AG Inform. Techn,10
TVDGK.F,19922,Travel24.Com AG,10
US5.F,19923,Ultrasonic AG O.N,10
UMS.F,19924,UMS O.N,10
UP7G.F,19926,United Power Technology AG,10
ER2N.F,19928,EMCORE Corporation,10
V3VGN.F,19930,Vita 34 AG,10
WUGG.F,19933,Westag & Getalit ST O.N,10
WUGG_P.F,19934,Westag & Getalit VZO O.N,10
YOCG.F,19937,Yoc AG O.N,10
YB1AK.F,19938,Youbisheng Green Paper AG,10
ZEFG.F,19940,Zhongde Waste Technology,10
EOCY.F,20166,Enel Generacion Chile SA ADR,10
BR.F,20174,Broadridge Financial Solutions Inc,10
PHGY.F,20182,Koninklijke Philips NV ADR,10
WX7.F,20194,Corporate Office Properties Trust,10
T6O.F,20196,Tanger Factory Outlet Centers Inc,10
SNH.F,20212,Senior Housing Properties Trust,10
SIX.F,20215,Six Flags Entertainment New,10
ACC.F,20216,American Campus Communities Inc,10
UI51.F,20220,Waste Connections Inc,10
CBL.F,20221,CBL & Associates Properties Inc,10
8CW.F,20222,Crown Castle International Corp,10
CNPC.F,20226,Ingredion Incorporated,10
F1EF.F,20229,Fidelity National Financial Inc,10
ITG.F,20235,Investment Technology Group Inc,10
ORPI.F,20241,Old Republic International Corp,10
SNH.F,20244,Senior Housing Properties Trust,10
C0Q.F,20252,Coca Cola HBC AG,10
CNR.F,20254,Canadian National Railway Company,10
QCSB.F,20270,New York Community Bancorp Inc,10
POR.F,20272,Portland General Electric Co,10
AEOS.F,20278,American Eagle Outfitters Inc,10
BUEY.F,20283,Compania de Minas Buenaventura SAA ADR,10
OII.F,20306,Oceaneering International Inc,10
AFG.F,20310,American Financial Group Inc,10
SNH.F,20311,Senior Housing Properties Trust,10
CP.F,20315,Canadian Pacific Railway Ltd,10
CYH.F,20316,Community Health Systems Inc,10
IVR.F,20326,Invesco Mortgage Capital Inc,10
RBA.F,20338,Ritchie Bros Auctioneers,10
SQM.F,20346,Sociedad Quimica y Minera SA,10
B7S.F,20352,Brookdale Senior Living Inc,10
CGAG.F,20353,China Green Agriculture Inc,10
PSRA.F,20355,CoreCivic Inc,10
LTI.F,20363,Healthcare Realty Trust Incorporated,10
RCL.F,20378,Royal Caribbean Cruises Ltd,10
2600Y.F,20386,Aluminum Corp of China Ltd ADR,10
ALLD.F,20387,Alliance Data Systems Corp,10
FR.F,20388,First Majestic Silver Corp,10
CCK.F,20392,Crown Holdings Inc,10
NNN.F,20412,National Retail Properties Inc,10
SCI.F,20421,Service Corporation International,10
AXS.F,20427,AXIS Capital Holdings Ltd,10
43D.F,20441,Darling Ingredients Inc,10
07G.F,20445,Fleetcor Technologies Inc,10
H9B1.F,20448,Herc Holdings Inc,10
KORS.F,20452,Michael Kors Holdings Limited,10
NCI2.F,20457,Drive Shack Inc,10
PKG.F,20461,Packaging Corp of America,10
SGM.F,20466,Sims Metal Management Ltd,10
AJGH.F,20472,Arthur J Gallagher & Co,10
BCBG.F,20473,BBX Capital Corp,10
CHD.F,20481,Church & Dwight Company Inc,10
DKS.F,20485,Dick’s Sporting Goods Inc,10
HIW.F,20493,Highwoods Properties Inc,10
WFK.F,20495,World Fuel Services Corporation,10
LXI.F,20502,Lennox International Inc,10
C19.F,20524,C&J Energy Services Inc,10
EXRS.F,20527,Extra Space Storage Inc,10
MFC.F,20542,Manulife Financial Corp,10
AWN.F,20554,Advance Auto Parts Inc,10
AKOYB.F,20558,Andina B ADR,10
4BW.F,20563,BWX Technologies Inc,10
CDH1.F,20566,Cedar Realty Trust Inc,10
EGG.F,20576,Energizer Holdings Inc,10
LPX.F,20584,Louisiana-Pacific Corporation,10
PII.F,20594,Polaris Industries Inc,10
E6Z.F,20606,Aecom Technology Corporation,10
ARW.F,20608,Arrow Electronics Inc,10
BFRY.F,20611,BBVA Banco Frances SA ADR,10
CNK.F,20622,Cinemark Holdings Inc,10
CPT.F,20626,Camden Property Trust,10
DLPA.F,20629,Aptiv PLC,10
GNRC.F,20642,Generac Holdlings Inc,10
GNWR.F,20645,Genesee & Wyoming Inc,10
MHK.F,20649,Mohawk Industries Inc,10
RPM.F,20661,RPM International Inc,10
AGO.F,20668,Assured Guaranty Ltd,10
ALK.F,20670,Alaska Air Group Inc,10
AWK.F,20672,American Water Works,10
1P6.F,20677,Berry Petroleum Corp,10
6CL.F,20680,Colony Capital Inc Class A,10
CVA.F,20682,Covanta Holding Corp,10
FAF.F,20688,First American Corporation,10
KSU.F,20697,Kansas City Southern,10
R2U.F,20720,Red Lion Hotels Corp,10
RY.F,20721,Royal Bank Of Canada,10
SLG.F,20724,SL Green Realty Corp,10
NWJ.F,20747,Eversource Energy,10
H.F,20748,Hyatt Hotels Corporation,10
AKOYB.F,20750,Andina B ADR,10
LNT.F,20763,Alliant Energy Corporation,10
LGAY.F,20764,LG Display Co Ltd,10
OAS.F,20771,Oasis Petroleum Inc,10
SIG.F,20783,Signet Jewelers Ltd,10
SKMY.F,20784,SK Telecom Co Ltd ADR,10
DEI.F,20810,Douglas Emmett Inc,10
FBRY.F,20818,Fibra Celulosa SA ADR,10
HL8.F,20825,HollyFrontier Corporation,10
KRC.F,20828,Kilroy Realty Corp,10
KTCY.F,20829,KT Corporation,10
MBTLY.F,20832,Mobil’nye Telesistemy PAO ADR,10
PIR.F,20836,Pier 1 Imports Inc,10
4DH.F,20859,Dana Inc,10
FLOF.F,20864,Flowers Foods Inc,10
OC.F,20890,Owens Corning Inc,10
RYN.F,20901,Rayonier Inc,10
STGY.F,20902,Banco Santander Chile,10
RDEDY.F,20924,Relx PLC ADR,10
EVN.F,20927,Eaton Vance Corp,10
NVONY.F,20940,Novo Nordisk A/S,10
3SM.F,20953,Smith AO Corporation,10
AZNPY.F,20955,AstraZeneca PLC ADR,10
HANB.F,20966,Hanesbrands Inc,10
AKOYB.F,20970,Andina B ADR,10
OPK.F,20971,Opko Health Inc,10
ALLE.F,20977,Albemarle Corp,10
CHILY.F,20980,Banco De Chile,10
Z.F,20989,Foot Locker Inc,10
GRA.F,20995,WR Grace & Co,10
KMT.F,21001,Kennametal Inc,10
M6G.F,21002,Macerich Company,10
MARY.F,21005,SM Energy Co,10
DG3.F,21011,Celanese Corporation,10
CLGX.F,21013,Corelogic Inc,10
25E.F,21018,Elan Corp,10
HLF.F,21025,Herbalife Nutrition Ltd,10
HUN.F,21028,Huntsman Corporation,10
MAN.F,21033,ManpowerGroup Inc,10
MTH.F,21034,Meritage Corporation,10
QEN.F,21058,Centene Corp,10
ECY.F,21064,Ecopetrol SA ADR,10
AWC.F,21097,Alumina Ltd,10
BKE.F,21098,Buckle Inc,10
C52.F,21100,Colfax Corporation,10
ECA.F,21109,Encana Corporation,10
NERGY.F,21111,Enel Americas SA ADR,10
GART.F,21122,Gartner Inc,10
PNT.F,21134,Pentair PLC,10
AAN.F,21147,Aarons Inc,10
DOX.F,21159,Amdocs Ltd,10
FR9.F,21160,Ferro Corporation,10
GES.F,21161,Guess? Inc,10
LNT.F,21176,Alliant Energy Corporation,10
R2RCY.F,21177,Renren Inc,10
AGCO.F,21184,AGCO Corporation,10
AME.F,21186,Ametek Inc,10
D8SY.F,21189,Itau CorpBanca ADR,10
BU3.F,21190,Bunge Limited,10
GJ3AY.F,21202,Gafisa SA ADR,10
IEXC.F,21206,IDEX Corporation,10
LEA.F,21209,Lear Corporation,10
FBHS.F,21227,Fortune Brands Home & Security Inc,10
PVH.F,21234,PVH Corp,10
SXEA.F,21518,Southern Cross Electrical Ltd,10
EXPD.F,21524,Expeditors International Washington,10
IDH.F,21530,Immunodiagnostic Systems Holdings PLC,10
SIU.F,21531,Stewart Information Services Corp,10
JBHT.F,21538,JB Hunt Transport Services Inc,10
MDRX.F,21546,Allscripts Healthcare Solutions Inc,10
MCE.F,21553,Matrix Composites & Engineering Ltd,10
NZT.F,21561,Spark New Zealand Ltd,10
VBKG.F,21563,Verbio Vereinigte Bioenergie AG,10
AUD.F,21565,Automatic Data Processing Inc,10
FCXB.F,21568,Freeport-McMoran Copper & Gold Inc,10
MXIM.F,21574,Maxim Integrated Products Inc,10
SFER.F,21576,Salvatore Ferragamo SpA,10
ERA.F,21584,Energy Resources Of Australia Ltd,10
FIS.F,21585,Fidelity National Information Services Inc,10
GGGA.F,21586,Greenland Minerals And Energy Ltd,10
IAG.F,21589,Insurance Australia Group Ltd,10
IC1G.F,21591,InterContinental Hotels Group PLC,10
PEG.F,21596,Public Service Enterprise Group Inc,10
PTMA.F,21597,Platinum Asset Management Ltd,10
APD.F,21601,Air Products and Chemicals Inc,10
RF6.F,21604,CBRE Group Inc Class A,10
CVAG.F,21605,Cleveland-Cliffs Inc,10
DISCA.F,21608,Discovery Inc Class A,10
YC51.F,21611,Frontier Communications Corp,10
HIG.F,21614,Hartford Financial Services Group,10
JEC.F,21616,Jacobs Engineering Group Inc,10
CAP.F,21617,Cai International Inc,10
MRVL.F,21619,Marvell Technology Group Ltd,10
YULC.F,21625,Synthomer PLC,10
AIV.F,21626,Apartment Investment and Management Co,10
AEDAY.F,21628,Grupo Aeroportuario del Sureste SAB de CV ADR,10
CBAX.F,21629,Commonwealth Bank Of Australia,10
CHRW.F,21630,CH Robinson Worldwide Inc,10
DFS.F,21631,Discover Financial Services,10
FHN.F,21632,First Horizon National Corporation,10
LN3.F,21635,Jefferies Financial Group Inc,10
NAB.F,21638,National Australia Bank Ltd,10
4I1.F,21639,Philip Morris International Inc,10
TEVAY.F,21642,Teva Pharma Industries Ltd ADR,10
UPS.F,21644,United Parcel Service Inc,10
WP2A.F,21647,Pinnacle Investment Management Group Ltd,10
ATI.F,21650,Allegheny Technologies Incorporated,10
C9F.F,21654,Chipotle Mexican Grill Inc,10
HBAN.F,21660,Huntington Bancshares Incorporated,10
KCN.F,21666,Kingsgate Consolidated Ltd,10
LSP.F,21667,Londonmetric Property Plc,10
MMC.F,21669,Marsh & McLennan Companies Inc,10
ARW.F,21670,Arrow Electronics Inc,10
NOV.F,21672,National Oilwell Varco Inc,10
19O.F,21673,Overseas Shipholding Group,10
PNW.F,21674,Pinnacle West Capital Corp,10
RDO.F,21675,Sirius XM Holding Inc,10
VAR.F,21680,Varian Medical Systems Inc,10
VZ.F,21682,Verizon Communications Inc,10
ADM.F,21685,Archer-Daniels-Midland Company,10
AVB.F,21689,AvalonBay Communities Inc,10
BPSI.F,21692,Banca Popolare di Sondrio ScpA,10
CDNS.F,21693,Cadence Design Systems Inc,10
CHKP.F,21695,Check Point Software Technologies Ltd,10
CINF.F,21696,Cincinnati Financial Corporation,10
DO.F,21698,Diamond Offshore Drilling Inc,10
FIIU.F,21701,Federated Investors Inc B,10
GT.F,21703,The Goodyear Tire & Rubber Company,10
HMTA.F,21704,Host Hotels & Resorts Inc,10
IFF.F,21705,International Flavors & Fragrances Inc,10
IIJIY.F,21706,Internet Initiative Japan Inc ADR,10
ITRK.F,21707,Intertek Group PLC,10
LH.F,21709,Laboratory Corporation of America,10
54M.F,21711,Motorcar Parts of America Inc,10
PFGF.F,21714,Principal Financial Group Inc,10
PXD.F,21715,Pioneer Natural Resources Company,10
SGM.F,21718,Sims Metal Management Ltd,10
S5YA.F,21719,Sigma Pharmaceuticals Ltd,10
NY7.F,21720,Molson Coors Brewing Co Class B,10
TEP.F,21722,Telecom Plus PLC,10
TSS.F,21723,Total System Services Inc,10
A.F,21727,Agilent Technologies Inc,10
A4S.F,21728,Ameriprise Financial Inc,10
ANF.F,21729,Abercrombie & Fitch Company,10
4B5.F,21733,Pendal Group Ltd,10
CTSH.F,21738,Cognizant Technology Solutions,10
FITB.F,21745,Fifth Third Bancorp,10
LBL.F,21749,Karoon Gas Australia Ltd,10
L3H.F,21751,L3 Technologies Inc,10
MCHP.F,21752,Microchip Technology Incorporated,10
NTRS.F,21756,Northern Trust Corporation,10
PUFCX.F,21761,Prudential Financial Inc,10
PTEN.F,21762,Patterson-UTI Energy Inc,10
SIH.F,21764,Saracen Mineral Holdings Ltd,10
TMO.F,21767,Thermo Fisher Scientific Inc,10
X.F,21770,United States Steel Corporation,10
AEP.F,21771,American Electric Power Company Inc,10
AIG.F,21772,American International Group Inc,10
AKAM.F,21773,Akamai Technologies Inc,10
APC.F,21775,Anadarko Petroleum Corp,10
BXB.F,21777,Brambles Ltd,10
GK6.F,21778,Cabcharge Australia Ltd,10
4CR1.F,21779,Chimera Investment Corporation,10
CTRP.F,21782,Ctrip.Com International Ltd ADR,10
CVN.F,21783,Carnarvon Petroleum Ltd,10
DP5.F,21784,Keurig Dr Pepper Inc,10
ED.F,21785,Consolidated Edison Inc,10
GVP1.F,21789,Gulf Keystone Petroleum Ltd,10
GS.F,21791,Goldman Sachs Group Inc,10
ITW.F,21797,Illinois Tool Works Inc,10
PNC.F,21804,PNC Financial Services Group Inc,10
QBE.F,21806,Qbe Insurance Group Ltd,10
REDYY.F,21809,Dr Reddys Laboratories Ltd,10
RWL.F,21811,Rockwell Automation Inc,10
SGH.F,21813,Slater & Gordon Ltd,10
STI.F,21814,SunTrust Banks Inc,10
ABEC.F,21819,AmerisourceBergen,10
ADYA.F,21820,Admiralty Resources NL,10
BDX.F,21828,Becton Dickinson and Company,10
BEN.F,21829,Franklin Resources Inc,10
BN9.F,21830,Bank of New York Mellon,10
BLY.F,21831,Boart Longyear Ltd,10
BSXU.F,21835,Boston Scientific Corporation,10
CF.F,21836,CF Industries Holdings Inc,10
CHK.F,21837,Chesapeake Energy Corporation,10
CNP.F,21839,CenterPoint Energy Inc,10
D.F,21840,Dominion Resources Inc,10
TDSC.F,21841,3D Systems Corporation,10
DRI.F,21843,Darden Restaurants Inc,10
ETFC.F,21847,E-TRADE Financial Corporation,10
FMG.F,21848,Fortescue Metals Group Ltd,10
FM.F,21849,First Quantum Minerals Ltd,10
GNW.F,21850,Genworth Financial Inc,10
G9KB.F,21851,Great Portland Estates PLC,10
IAUA.F,21853,Intrepid Mines Ltd,10
ISRGD.F,21856,Intuitive Surgical Inc,10
KLAC.F,21857,KLA-Tencor Corporation,10
471.F,21858,aTyr Pharma Inc,10
8MP.F,21862,Monadelphous Group Ltd,10
MTFTY.F,21864,Mitsubishi UFJ Financial Group Inc ADR,10
FPO.F,21866,Petra Diamonds Ltd,10
PGHE.F,21867,Phoenix Group Holdings,10
RF.F,21871,Regions Financial Corporation,10
DLLNG.F,21875,RR Donnelley & Sons Co,10
SFM1.F,21878,Sundance Resources Ltd,10
SKC.F,21879,Skycity Entertainment Group Ltd,10
M2O.F,21880,Sky Network Television Ltd,10
SWK.F,21883,Stanley Black & Decker Inc,10
SWN.F,21884,Southwestern Energy Company,10
TROW.F,21887,T. Rowe Price Group Inc,10
UNH.F,21888,UnitedHealth Group Incorporated,10
A60.F,21890,Allergan PLC,10
WPL.F,21891,Woodside Petroleum Ltd,10
WYN.F,21892,Wyndham Destinations Inc,10
ABC.F,21893,Adelaide Brighton Ltd,10
BZTA.F,21895,Auckland International Airport Ltd,10
AMAT.F,21896,Applied Materials Inc,10
A0T.F,21897,American Tower Corp,10
W6P.F,21900,Avanti Communications Group PLC,10
BAB.F,21902,Babcock International Group PLC,10
BBBY.F,21903,Bed Bath & Beyond Inc,10
BXP.F,21906,Boston Properties Inc,10
COF.F,21908,Capital One Financial Corporation,10
COST.F,21909,Costco Wholesale Corporation,10
DNR.F,21912,Denbury Resources Inc,10
EER.F,21913,East Energy Resources Ltd,10
FBU.F,21916,Fletcher Building Ltd,10
G4U.F,21917,Globe Metals & Mining Ltd,10
HIK.F,21920,Hikma Pharmaceuticals PLC,10
IGO.F,21921,Independence Group NL,10
IPG.F,21922,Interpublic Group of Companies Inc,10
LNC.F,21924,Lincoln National Corporation,10
LUV.F,21926,Southwest Airlines Company,10
MA2.F,21927,Macmahon Holdings Ltd,10
MNMA.F,21928,ManTech International Corporation,10
MAPA.F,21929,Sydney Airport Holdings Ltd,10
MML.F,21931,Medusa Mining Ltd,10
MU.F,21932,Micron Technology Inc,10
NBR.F,21934,Nabors Industries Ltd,10
NOC.F,21935,Northrop Grumman Corporation,10
NSC.F,21936,Norfolk Southern Corporation,10
NUAN.F,21937,Nuance Communications Inc,10
OEH.F,21939,Belmond Ltd,10
RQQ1.F,21940,OceanaGold Corporation DRC,10
PAFR.F,21941,Pan African Resources PLC,10
RSGU.F,21943,Republic Services Inc,10
SQP.F,21945,Swick Mining Services Ltd,10
TVY.F,21948,Grupo Televisa SAB ADR,10
TXN.F,21950,Texas Instruments Incorporated,10
VBA.F,21952,Virgin Australia Holdings Ltd,10
WICG.F,21955,WEC Energy Group Inc,10
33A.F,21958,Acacia Mining PLC,10
PNH.F,21960,HT&E Ltd,10
BFGA.F,21964,Bell Financial Group Ltd,10
BMY.F,21965,Bristol-Myers Squibb Company,10
XC2.F,21970,Capital & Regional PLC,10
COCA.F,21972,Coca-Cola Amatil Ltd,10
CL.F,21975,Colgate-Palmolive Company,10
CUE.F,21978,CUE Energy Resources Ltd,10
FLEX.F,21985,Flex Ltd,10
1T1.F,21986,TechnipFMC PLC,10
GBGA.F,21987,Gindalbie Metals Ltd,10
A60.F,21988,Allergan PLC,10
JLL.F,21989,Jones Lang LaSalle Incorporated,10
HAIN.F,21990,The Hain Celestial Group Inc,10
ICAY.F,21992,Empresas ICA SAB De CV ADR,10
7IG.F,21993,International Game Technology PLC,10
JMX.F,21994,MaxLinear Inc,10
TYIA.F,21995,Johnson Controls International PLC,10
JNPR.F,21996,Juniper Networks Inc,10
KHNZ.F,21997,Kraft Heinz Co,10
6LA.F,21998,Lamar Advertising Company,10
LOOL.F,21999,Lookers PLC,10
34LA.F,22002,Alpine Immune Sciences Inc,10
NXWB.F,22003,Twenty-First Century Fox Inc,10
OXY.F,22004,Occidental Petroleum Corporation,10
PH.F,22006,Parker-Hannifin Corporation,10
RHI.F,22009,Robert Half International Inc,10
RRC.F,22010,Range Resources Corporation,10
SCH.F,22012,The Charles Schwab Corporation,10
XRP1.F,22014,Silence Therapeutics PLC,10
SIPG.F,22015,Simon Property Group Inc,10
S9P2.F,22016,SunPower Corporation,10
WA7.F,22017,Seven West Media Ltd,10
TCL.F,22018,Transurban Group,10
TTWO.F,22022,Take-Two Interactive Software Inc,10
URBN.F,22023,Urban Outfitters Inc,10
VNO.F,22024,Vornado Realty Trust,10
WBC.F,22025,Westpac Banking Corp,10
WDC.F,22026,Western Digital Corporation,10
UW.F,22027,Waste Management Inc,10
ABT.F,22029,Abbott Laboratories,10
AV3.F,22030,Avery Dennison Corp,10
AXP.F,22031,American Express Company,10
BFB.F,22032,Brown Forman,10
BSLS.F,22034,Bluescope Steel Ltd,10
CAH.F,22036,Cardinal Health Inc,10
CEXAY.F,22040,Cemex SAB de CV ADR,10
DEL.F,22041,Delta Air Lines Inc,10
2DBN.F,22042,Dunkin Brands Group Inc,10
EMN.F,22045,Eastman Chemical Company,10
EMR.F,22046,Emerson Electric Company,10
4XS.F,22048,Express Scripts Holding Co,10
GILD.F,22053,Gilead Sciences Inc,10
1Y8.F,22057,HICL Infrastructure Co Ltd,10
HOG.F,22058,Harley-Davidson Inc,10
IACI.F,22060,IAC/InterActiveCorp,10
ICAG.F,22061,International Consolidated Airlines Group S.A,10
ILU.F,22064,Iluka Resources Ltd,10
JPM.F,22067,JPMorgan Chase & Co,10
KOFY.F,22068,Coca Cola Femsa SAB De CV ADR,10
LNNM.F,22069,Lindsay Corporation,10
LRE.F,22070,Lancashire Holdings Ltd,10
MAB.F,22071,Mitchells & Butlers PLC,10
MHP.F,22074,S&P Global Inc,10
MQG.F,22075,Macquarie Group Ltd,10
AZNPY.F,22076,AstraZeneca PLC ADR,10
NCM.F,22077,Newcrest Mining Ltd,10
NEM.F,22078,Newmont Mining Corporation,10
NYTA.F,22080,New York Times Company,10
OZLN.F,22083,OZ Minerals Ltd,10
PDN.F,22084,Paladin Energy Ltd,10
PFG.F,22085,Provident Financial PLC,10
PG.F,22086,Procter & Gamble Company,10
POG.F,22088,Petropavlovsk PLC,10
RC0.F,22090,Rowan Companies PLC,10
RDSB.F,22092,Royal Dutch Shell PLC Class B,10
RL.F,22094,Ralph Lauren Corp Class A,10
SEP.F,22095,Spectra Energy Partners LP,10
SHLD.F,22096,Sears Holdings Corp,10
SHW.F,22097,Sherwin-Williams Co,10
SK3.F,22098,Smurfit Kappa Group PLC,10
1JD.F,22101,Senior PLC,10
TWI.F,22106,Titan International Inc,10
UTX.F,22108,United Technologies Corporation,10
VMC.F,22109,Vulcan Materials Company,10
WHC.F,22111,Whitehaven Coal Ltd,10
WMT.F,22112,Walmart Inc,10
ZMRHV.F,22113,Zimmer Biomet Holdings Inc,10
ACKB.F,22115,Ackermans & Van Haaren NV,10
ADI.F,22116,Analog Devices Inc,10
AEM.F,22117,Agnico Eagle Mines Limited,10
AKS.F,22118,AK Steel Holding Corporation,10
A7L.F,22121,Amur Minerals Corp,10
GMN.F,22122,Amerisur Resources PLC,10
AVQ.F,22126,Claranova SA,10
BRKB.F,22128,Berkshire Hathaway B,10
CTXS.F,22132,Citrix Systems Inc,10
CVS.F,22133,CVS Health Corp,10
DKOB.F,22136,Domino’s Pizza Group PLC,10
EW.F,22142,Edwards Lifesciences Corporation,10
HON.F,22147,Honeywell International Inc,10
7HP.F,22148,HP Inc,10
HRS.F,22149,Harris Corporation,10
HSY.F,22150,Hershey Company,10
SREI.F,22151,Schroder Real Estate Investment Trust Ltd,10
1LG.F,22155,Liberty Global PLC,10
LB3B.F,22158,Qurate Retail Group Inc Series A,10
METEX.F,22163,Metabolic Explorer SA,10
MOT.F,22165,Motorola Solutions Inc,10
NXPI.F,22168,NXP Semiconductors NV,10
OI.F,22169,Owens-Illinois Inc,10
OXIG.F,22170,Oxford Instruments PLC,10
PPG.F,22173,PPG Industries Inc,10
P4Q.F,22174,Perseus Mining Ltd,10
QAN.F,22175,Qantas Airways Ltd,10
RMS.F,22176,Ramelius Resources Ltd,10

#BVS CHILE
ITC.BVS,41431,Itau CorpBanca,43
STG.BVS,41493,Santander Chil,43
ENAM.BVS,41445,ENEL Americas SA,43
CHI.BVS,41422,Banco De Chile (SN),43
ENCH.BVS,976489,Enersis Chile SA,43
VAP.BVS,41497,Vapores,43
ORO.BVS,41471,Oro Blanco,43
AGUAA.BVS,41402,Aguas Andinas,43
COL.BVS,41432,Colbun,43
SEC.BVS,41487,Grupo Security,43
SON.BVS,41489,Sonda,43
CEN.BVS,41419,Cencosud,43
FAL.BVS,41449,Falabella,43
CAR.BVS,41416,Cmpc,43
CHI_PB.BVS,41423,Sm Banco Chile PB,43
LAP.BVS,41462,Nuevapolar,43
ASG.BVS,41407,Aesgener,43
IAM.BVS,41455,Iam Sa,43
CCU.BVS,41417,Cervecerias Un,43
COP.BVS,41434,Empresas Copec,43
SAAM.BVS,41483,Smsaam,43
ECL.BVS,41438,Engie Energia Chile SA,43
PAR.BVS,41472,Parq Arauco,43
ANDB.BVS,41404,Embotelladora Andina SA,43
SQM_PB.BVS,41491,Soquimich B,43
RIP.BVS,41482,Ripley Corp,43
LTM.BVS,41461,Latam Airlines Group SA,43
CAP.BVS,41415,Cap,43
ENT.BVS,41447,Entel,43
ILC.BVS,41458,Inv La Constru,43
SAL.BVS,41484,Salfacorp,43
BCI.BVS,41412,Banco de Credito e Inversiones,43
MSS.BVS,41468,Masisa,43
SK.BVS,41488,Sigdo Koppers,43
ANT.BVS,41405,Antar Chile,43
CHT.BVS,41427,Vina Concha To,43
FOR.BVS,41450,Forus,43
BES.BVS,41413,Besalco Sa,43
EMB_PB.BVS,41443,Embonor B,43
ENGX.BVS,41444,Enel Generacion Chile SA,43

#ME RUSSIA
VTBR.ME,13725,VTB,22
TGKA.ME,21461,TGK-1,22
FEES.ME,13682,FSK EES,22
HYDR.ME,13754,RusHydro JSC,22
TGKD.ME,21411,Kvadra,22
TGKB.ME,21463,TGK-2,22
IRAO.ME,13744,Inter rao ees,22
RSTI.ME,21316,Rosseti ao,22
SBER.ME,13711,Sberbank Rossii PAO,22
MRKP.ME,21317,MRSK CiP,22
OGKB.ME,13700,OGK-2,22
MRKV.ME,21323,MRSK Volgi,22
GAZP.ME,13684,Gazprom PAO,22
TGKN.ME,21460,TGK-14,22
SNGS_P.ME,13717,Surgut-pref,22
SARE_P.ME,21433,Saratovenergo OAO Pref,22
ALRS.ME,40423,ALROSA ao,22
GRNT.ME,969113,Gorodskiye Innovatsionnyye Tekhnologii PAO,22
SNGS.ME,13716,Surgutneftegaz PAO,22
MRKZ.ME,21319,MRSK Severo-Zapada,22
MAGN.ME,13690,MMK,22
MSST.ME,946008,MulTisistema OAO,22
USBN.ME,21276,Bank Uralsib OAO,22
DASB.ME,21295,Dagestanskaya Energosbytovaya,22
AFKS.ME,13678,AFK Sistema,22
MRKY.ME,21321,MRSK Yuga,22
MOEX.ME,44464,Moskovskaya Birzha OAO,22
MSNG.ME,13694,MosEnrg,22
UPRO.ME,21302,Unipro,22
GTLC.ME,946000,Gtl OAO,22
ENRU.ME,21391,Enel Russia OAO,22
SBER_P.ME,13712,Sberbank Rossii OAO Pref,22
MRKU.ME,21322,MRSK Urala ao,22
NLMK.ME,13695,NLMK ao,22
TGKB_P.ME,21464,TGK-2 pref,22
AFLT.ME,13679,Aeroflot,22
SARE.ME,21432,Saratovenergo OAO,22
CBOM.ME,955694,Moskovskiy Kreditnyi Bank OAO,22
UNAC.ME,21482,United Aircraft Corporation OAO,22
ROSN.ME,13707,NK Rosneft PAO,22
TGKD_P.ME,21412,Kvadra Generiruyushchaya Kompaniya OAO Pref,22
MRKC.ME,21318,MRSK Centra,22
RTKM.ME,21419,Rostelecom,22
RGSS.ME,945988,Rosgosstrakh OAO,22
MRKS.ME,21320,MRSK Sibiri,22
MSRS.ME,13788,Mos obl sb,22
SIBG.ME,958304,Sibirskiy Gostinets PAO,22
NMTP.ME,13696,NMTP,22
MVID.ME,13692,MVideo,22
RUAL.ME,950026,United Company Rusal Plc,22
MTSS.ME,13691,MTS,22
TATN.ME,13718,Tatneft-3,22
LKOH.ME,13689,Lukoil,22
ODVA.ME,21390,Mediaholding OAO,22
NVTK.ME,13697,NOVATEK,22
CHMF.ME,13713,Severstal - ao,22
RSTI_P.ME,21313,Rosseti OAO Pref,22
TTLK.ME,21458,Tattelekom,22
RASP.ME,21415,Raspadskaya,22
ARSA.ME,21267,UK Arsagera,22
SIBN.ME,13786,Gazprom Neft,22
MTLR.ME,13709,SG mechel,22
RUSP.ME,21424,Ruspolimet ao,22
MOBB.ME,943632,Mosoblbank,22
IRKT.ME,21324,Np Korporatsiya Irkut OAO,22
TUCH.ME,946022,Tuchkovskiy Kombinat Stroiteln,22
DVEC.ME,21297,DEC,22
MGNT.ME,13693,Magnit,22
RUGR.ME,946019,Rusgrain Holding OAO,22
YNDX.ME,102063,Yandex NV,22
EELT.ME,1052432,Yevropeyskaya Elektrotekhnika PAO,22
PRFN.ME,945989,Chzpsn-Profnastil OAO,22
CLSB.ME,21287,Chelyabenergosbyt OAO,22
CLSB_P.ME,21288,Chelyab Energo Sbyt ap,22
POLY.ME,44465,Polymetal International PLC,22
DSKY.ME,996169,Detskiy Mir PAO,22
TATN_P.ME,13738,Tatneft OAO Pref,22
MTLR_P.ME,21373,Mechel OAO Pref,22
PLSM.ME,946013,Plazmek OAO,22
LNTADR.ME,962408,Lenta Ltd,22
GMKN.ME,13683,MMC Norilsk Nickel,22
ASSB.ME,21269,Astrakhanskaya energosbytovaya OAO,22
MRSB.ME,945991,Mordovskaya Energosbytovaya,22
RTKM_P.ME,21420,MiMES Rostelekom OAO Pref,22
TRMK.ME,21468,Trubnaya Metallurgicheskaya Kompaniya OAO,22
AVAZ_P.ME,21271,AVTOVAZ pref,22
KTSB_P.ME,21344,KSB ap,22
PIKK.ME,13789,PIK,22
LVHK.ME,946004,Levenguk OAO,22
SELG_P.ME,962415,Seligdar PAO,22
UWGN.ME,953112,NPK OVK PAO,22
LSNG_P.ME,21364,Lenenergo OAO Pref,22
SELG.ME,21436,Seligdar,22
RLMN.ME,946015,Gk Rollman OAO,22
FIVEDR.ME,1061926,X5 Retail Group NV,22
RBCM.ME,21416,RBK ao,22
MFON.ME,44462,MegaFon OAO,22
AMEZ.ME,21268,Ashinckyi metzavod,22
RLMN_P.ME,955900,GK Rollman OAO Pref,22
APTK.ME,13728,Apteki 36,22
BSPB.ME,13785,BSP,22
URKA.ME,13722,Uralkaliy,22
FTRE.ME,1010696,FG Budushcheye PAO,22
OBUV.ME,1057204,OR PAO,22
ROLO.ME,946017,Rusolovo OAO,22
KBTK.ME,21361,Kuzbas.Topl. Kompaniya ao,22
AVAZ.ME,21270,AVTOVAZ,22
ENPLDR.ME,1055954,En+ Group PLC DRC,22
NKNC_P.ME,21384,Nizhnekamskneftekhim PAO Pref,22
FESH.ME,21301,DVMP ao,22
SFIN.ME,962406,Safmar Finansovye Investitsii PAO,22
KMAZ.ME,21331,KAMAZ,22
KZOS_P.ME,962407,Organicheskiy Sintez KPAO,22
ACKO.ME,1024810,SK Yuzhural-Asko PAO,22
PRTK.ME,13731,PROTEK ao,22
ZVEZ.ME,21502,Zvezda OAO,22
TORS_P.ME,21470,Tomsk raspredelit. komp ap,22
BANE_P.ME,21281,ANK Bashneft OAO Pref,22
PLZL.ME,13705,Polyus OAO,22
LIFE.ME,21405,Farmsintez OAO,22
ISKJ.ME,21314,HSCI ao,22
BLNG.ME,13735,Belon ao,22
LSNG.ME,21363,LenEnrg,22
STSB_P.ME,21450,Stavropolenergosbyt OAO Pref,22
KUZB.ME,945994,Bank Kuznetskiy OAO,22
RNFT.ME,32553,NK RussNeft PAO,22
PHOR.ME,21406,PhosAgro ao,22
AGRODR.ME,962403,Ros Agro PLC,22
LSRG.ME,13688,Gruppa LSR PAO,22
RZSB.ME,21427,Ryazansk Energetich Sbytovaya,22
MSTT.ME,13787,Mostotrest,22
ARMD.ME,21266,ARMADA,22
KRSB_P.ME,21347,Krashojarskenergosbyt pref,22
NKSH.ME,21385,Nizhnekamskshina ao,22
NKHP.ME,962412,Novorossiyskiy Kombinat Khleboproduktov PAO,22
RTSB_P.ME,21422,Energosbyt Rostovenergo OAO Pref,22
YKEN_P.ME,21496,YakutskEnergo ap,22
DIOD.ME,945999,Diod OAO,22
SVAV.ME,13714,Sollers,22
GAZA.ME,21305,Gaz ao,22
NSVZ.ME,21381,Nauka-Svyaz OAO ao,22
GAZA_P.ME,21306,Gaz PAO,22
QIWIDR.ME,960754,QIWI plc,22
NKNC.ME,21383,Niznekamskneftekhim ao,22
JNOS.ME,21441,Slavneft-JANOS,22
KRSB.ME,21346,Krasnoyarskenergosbyt OAO,22
BANE.ME,13681,Bashneft ANK ao,22
CHEP.ME,13736,CHTPZ,22
VLHZ.ME,945997,Vladimirskiy Khimicheskiy,22
BISV_P.ME,21278,Bashinformsvyaz OAO Pref,22
IRGZ.ME,21325,Irkutskenergo,22
HIMC_P.ME,21336,Khimprom OAO Pref,22
TRNF_P.ME,13720,AK Transneft OAO Pref,22
ELTZ.ME,21303,Elektrotsink ao,22
CNTL_P.ME,21286,Centrlnyi Telegraf ap,22
KZOS.ME,21334,Kazanorgsintez,22
UTAR.ME,44467,UTair Aviakompaniya OAO,22
VZRZ.ME,13723,Vozrojdenie,22
TANL.ME,21456,Tantal OAO,22
MAGE.ME,21368,Magadanenergo ao,22
STSB.ME,21449,StavropolEnergoSbyt,22
VGSB_P.ME,21488,Volgogradenergosbyt OAO Pref,22
PMSB_P.ME,21402,Permskaya Energosbytovaya Kompaniya OAO Pref,22
NFAZ.ME,21382,NefAZ,22
VZRZ_P.ME,962419,Bank Vozrozhdeniye PAO,22
KUBE.ME,21352,KubanEnrg,22
SLEN.ME,996051,Sakhalinenergo OAO,22
KMEZ.ME,946003,Kovrovskiy Mekhanicheskiy,22
MFGS_P.ME,21444,Slavneft Megionneftegaz OAO Pref,22
AKRN.ME,13680,Akron,22
IGST_P.ME,21329,Izhstal OAO Pref,22
OPIN.ME,30636,Otkrytye Investitsii OAO Pref,22
RKKE.ME,21423,RKK Energia,22
WTCM.ME,21493,CMT,22
YAKG.ME,21499,Yatek OAO,22
MGTS_P.ME,21374,MGTS-4,22
KAZT_P.ME,21355,Kuibishevazot ap,22
VSMO.ME,13724,Verhnesald MPO,22
NAUK.ME,21380,Npo Nauka OAO,22
TRCN.ME,21473,TransKonteiner ao,22
CNTL.ME,21285,Tsentralnyi Telegraf OAO,22
YRSB.ME,21497,Yaroslavskaya Sbytovaya OAO,22
YRSB_P.ME,21498,Yaroslavskaya Sbytovaya Kompaniya OAO Pref,22
ALBK.ME,945981,Best Efforts Bank,22
CHMK.ME,21293,Chelyabinsk Metallurg Kombinat,22
LNZL_P.ME,962409,Lenzoloto OAO Pref,22
GCHE.ME,21289,Gruppa Cherkizovo ao,22
VJGZ.ME,21484,Var eganneftegaz ao,22
ROSB.ME,21417,AKB Rosbank PAO,22
ROST.ME,21418,ROSINTER RESTAURANTS ao,22
VDSB.ME,946025,Vladimirenergosbyt OAO,22
IGST.ME,21328,Izhstal OAO,22
KAZT.ME,21354,Kuib.Azot ao,22
PMSB.ME,21401,Permskaya Energosbytovaya OAO,22
ZMZN.ME,21501,ZMZ,22
TNSE.ME,954948,GK TNS energo PAO,22
ALNU.ME,21261,ALROSA-Nurba ao,22
UKUZ.ME,21448,Uzhnyi Kuzbass,22
MRKK.ME,21298,MRSK Severnogo Kavkaza ao,22
KROT_P.ME,21351,KrasnyiOctabr-1 (pref),22
MGTS.ME,21376,Moskovskaya Telefonnaya Set,22
KRKN_P.ME,21431,Saratovskiy NPZ ap,22
LNZL.ME,44466,Lenzoloto OAO,22
GTRK.ME,1055940,Globaltrak Management PAO,22
BRZL.ME,21284,Buryatzoloto ao,22
SZPR.ME,21387,Severo-Zapadnoye Parokhodstvo,22
UCSS.ME,945990,Obyedinennye Kreditnye Sist,22
ABRD.ME,945998,Abrau Durso OAO,22
MGNZ.ME,946005,Solikamskiy Magniyevyi Zavod,22
NNSB_P.ME,962413,TNS Energo Nizhniy Novgorod PAO,22
BELU.ME,13733,Beluga Group PAO,22
ZILL.ME,21262,Zavod Imeni Ia Likhacheva OAO,22
DZRD.ME,945993,Donskoy Zavod Radiodetaley OAO,22
UNKL.ME,946023,Kombinat Yuzhuralnikel OAO,22
DZRD_P.ME,962405,Donskoy Zavod Radiodetaley OAO Pref,22
BISV.ME,21277,BashInformSvyaz ao,22
CHGZ.ME,21290,Chernorgorneft,22
HALS.ME,21312,Gals-Development ao,22
RUSI.ME,21315,RUSS-INVEST IC ao,22
KLSB.ME,21330,Kaluzhsk Sbytovaya Kompaniya,22
KCHE.ME,21332,Kamchatskenergo,22
KCHE_P.ME,21333,Kamchatskenergo OAO Pref,22
HIMC.ME,21335,Himprom ao,22
KOGK.ME,21342,Korshunovskii GOK,22
KTSB.ME,21343,Kostromsk Sbytovaya Kompaniya,22
KRKO.ME,21348,TKZ Krasny Kotelshchik ao,22
KRKO_P.ME,21349,TKZ Krasny Kotelshchik ap,22
LPSB.ME,21365,Lipetskaya energosbytovaya OAO,22
MAGE_P.ME,21369,Magadanenergo OAO Pref,22
MISB.ME,21370,Marienergosbyt,22
MISB_P.ME,21371,Marienergosbyt OAO Pref,22
OMZZ_P.ME,21395,OMZ OAO Pref,22
RTSB.ME,21421,Rostovenergosbyt ao,22
AQUA.ME,21426,Russkaya Akvakultura PAO,22
SAGO.ME,21428,SamaraEnergo ao,22
SAGO_P.ME,21429,Samaraenergo OAO Pref,22
KRKN.ME,21430,Saratovskiy NPZ ao,22
JNOS_P.ME,21442,Slavneft Yaroslavnefteorgsintez Pref,22
MFGS.ME,21443,Megion,22
TASB.ME,21454,Tambovskaya Energosbytovaya,22
TASB_P.ME,21455,Tambovskaya Energosbytovaya Kompaniya OAO Pref,22
TORS.ME,21469,Tomskaya Raspredelitelnaya,22
VJGZ_P.ME,21485,Vareganneftegaz ap,22
VGSB.ME,21487,Volgogradenergosbyt OAO,22
VRSB.ME,21491,Voronezh SB,22
VRSB_P.ME,21492,Voronezhskaya Energosbytovaya Kompaniya OAO Pref,22
WTCM_P.ME,21494,Tsentr Mezhdunarodnoy Torgovli Pref,22
YKEN.ME,21495,YakutskEnergo,22
CHKZ.ME,945982,Chelyabinskiy Kuznechno Presso,22
MERF.ME,945983,Pifn Meridian OAO,22
PRMB.ME,945984,Akb Primorye OAO,22
PAZA.ME,945992,Pavlovskiy Avtobus OAO,22
OMSH.ME,945995,Omskshina OAO,22
GTPR.ME,946001,Glavtorgprodukt OAO,22
KBSB.ME,946002,Kubanenergosbyt OAO,22
MGVM.ME,946006,Media Gruppa Voyna I Mir OAO,22
MORI.ME,946007,Morion OAO,22
NNSB.ME,946009,Nizhegorodskaya Sbytovaya Komp,22
RTGZ.ME,946018,Gazprom Gazoraspredeleniye,22
URKZ.ME,946024,Uralskaya Kuznitsa OAO,22
VTRS.ME,946026,Vtorresursy OAO,22
IDVP.ME,946029,Invest-Development PAO,22
UTSY.ME,953896,Yedinye Tekhno Sistemy PAO,22
VSYD.ME,958305,Vyborgskiy sudostroitelnyi zavod OAO,22
AVAN.ME,962404,AKB Avangard OAO,22
MUGS.ME,962410,Murmanskaya Tets PAO,22
MUGS_P.ME,962411,Murmanskaya Tets PAO Pref,22
RDRB.ME,962414,Rossiyskiy Aktsionernyi Kommercheskiy Dorozhnyi Bank PAO,22
TUZA.ME,962416,Tuymazinskiy zavod avtobetonovozov OAO,22
VSYD_P.ME,962418,Vyborgskiy Sudostroitelnyi Zavod PAO,22
ZMZN_P.ME,962420,Zavolzhskiy motornyi zavod OAO,22
TGKO.ME,1010660,Taganrogskiy kombaynovyi zavod OAO,22
KGKC.ME,1010697,Kurganskaya Generiruyushchaya Kompaniya PAO,22
KGKC_P.ME,1010698,Kurganskaya Generiruyushchaya Kompaniya PAO Pref,22

#BO BOMBAY
YESB.BO,39739,Yes Bank Ltd,4
SBI.BO,39666,State Bank Of India,4
TAMO.BO,39703,Tata Motors Ltd,4
APSE.BO,39600,Adani Port and Special Economic Zone Ltd,4
AXBK.BO,39377,AXIS Bank Ltd,4
ICBK.BO,39526,ICICI Bank Ltd,4
VDAN.BO,39667,Vedanta Ltd,4
ITC.BO,39544,ITC Ltd,4
INFY.BO,39538,Infosys Ltd,4
BRTI.BO,39397,Bharti Airtel Ltd,4
RELI.BO,39657,Reliance Industries Ltd,4
WIPR.BO,39736,Wipro Ltd,4
TISC.BO,39705,Tata Steel Ltd,4
SUN.BO,39689,Sun Pharmaceutical Industries Ltd,4
COAL.BO,39425,Coal India Ltd,4
TAMDV.BO,977554,Tata Motors DV Ltd,4
ASPN.BO,39373,Asian Paints Ltd,4
ONGC.BO,39613,Oil And Natural Gas Corporation Ltd,4
KTKM.BO,39573,Kotak Mahindra Bank Ltd,4
MAHM.BO,39583,Mahindra & Mahindra Ltd,4
INBK.BO,39536,IndusInd Bank Ltd,4
PGRD.BO,39635,Power Grid Corporation of India Ltd,4
NTPC.BO,39602,NTPC Ltd,4
LART.BO,39578,Larsen & Toubro Ltd,4
TCS.BO,39699,Tata Consultancy Services Ltd,4
HLL.BO,39513,Hindustan Unilever Ltd,4
MRTI.BO,39587,Maruti Suzuki India Ltd,4
HDBK.BO,39506,HDFC Bank Ltd,4
HDFC.BO,39519,Housing Development Finance Corporation Ltd,4
BAJA.BO,39380,Bajaj Auto Ltd,4
HROM.BO,39508,Hero MotoCorp Ltd,4
BSE.BO,39929,BSE Sensex 30,4

#KQ KOREA
010140.KQ,43366,Samsung Heavy Industries,15
006800.KQ,43441,Mirae Asset Daewoo Securities Co Ltd,15
009150.KQ,43350,Samsung Electro-Mechanics,15
032640.KQ,43492,LG Uplus,15
003410.KQ,43392,Ssangyong Cement,15
008770.KQ,43780,Hotel Shilla,15
042670.KQ,43501,Dsinfra,15
018880.KQ,43346,Hanon Systems,15
088350.KQ,43446,Hanwha Life,15
001740.KQ,43439,SK Networks Co Ltd,15
047040.KQ,43536,Daewoo Engineering & Construction,15
005940.KQ,43545,NH Investment & Securities Co Ltd,15
000030.KQ,942841,Woori Bank,15
035250.KQ,43422,Kangwon Land,15
064350.KQ,50596,Hyundai-Rotem,15
138930.KQ,43414,BNK Financial Group Inc,15
047810.KQ,43962,Korea Aerospac,15
006400.KQ,43450,Samsung SDI,15
028050.KQ,43435,Samsung Engineering,15
093370.KQ,43502,Foosung,15
024110.KQ,43542,Industrial Bank Of Korea,15
000720.KQ,43371,Hyundai Engineering & Construction,15
003520.KQ,43660,Young Jin Phar,15
030000.KQ,43352,Cheil Worldwide,15
073240.KQ,43462,Kumho Tire,15
009830.KQ,43457,Hanwhachem,15
078930.KQ,43497,GS Holdings,15
003490.KQ,43514,Korean Air Lines Co,15
028260.KQ,43477,Samsung C&T Corp,15
010950.KQ,43473,S-Oil Corp,15
114090.KQ,44066,Gkl,15
017800.KQ,43415,Hyundai Elevator,15
008060.KQ,43434,Daeduck Electronics Co Ltd,15
000100.KQ,43532,Yuhan,15
090430.KQ,43416,Amorepacific,15
020150.KQ,43354,Iljin Materials,15
001520.KQ,43496,Tongyang,15
204320.KQ,942445,Mando Corp,15
047050.KQ,43535,Posco Daewoo Corp,15
012450.KQ,43356,Hanwha Techwin Co Ltd,15
120110.KQ,43485,Kolon Industries Inc,15
023530.KQ,43383,Lotte Shopping,15
027410.KQ,940988,BGF Co Ltd,15
035720.KQ,979247,Kakao Corp,15
009540.KQ,43541,Hyundai Heavy Industries,15
011070.KQ,43465,LG Innotek Co Ltd,15
001450.KQ,43590,Hyundai Mar&Fi,15
011210.KQ,43447,Hyundai Wia,15
009420.KQ,43351,Hanall Biopharma,15
004990.KQ,43454,Lotte Confectionery,15
002790.KQ,43443,Amore Group,15
001040.KQ,43499,CJ Corp,15
051600.KQ,43964,Kepco Plant S&,15
000990.KQ,43419,Dongbu Hitek,15
021240.KQ,43524,Coway,15
011790.KQ,43538,SKC,15
016360.KQ,43407,Samsung Securities,15
005850.KQ,43511,SL Corp,15
032830.KQ,43428,Samsung Life,15
086280.KQ,43379,Hyundai Glovis,15
036460.KQ,43527,Kogas,15
192820.KQ,940989,Cosmax Inc,15
105630.KQ,43479,Hansae Co,15
003850.KQ,43673,Boryung Pharm,15
002350.KQ,43468,Nexen Tire,15
000080.KQ,43458,Hite Jinro,15
036570.KQ,43448,NCsoft Corp,15
115390.KQ,43425,Lock&Lock Co,15
003550.KQ,43508,LG Corp,15
025860.KQ,43355,Namhae Chemical,15
005440.KQ,43717,Hd Greenfood,15
011170.KQ,43374,Lotte Chemical Corp,15
161390.KQ,44101,Hankook Tire,15
012330.KQ,43398,Hyundai Mobis,15
001680.KQ,43500,Daesang Corp,15
000120.KQ,43377,CJ Korea Express,15
007070.KQ,43751,Gs Retail,15
003000.KQ,43393,Bukwang Pharm,15
004170.KQ,43484,Shinsegae,15
004710.KQ,43442,Hansol Technics,15
161890.KQ,44102,Korea Kolmar,15
009240.KQ,43791,Hanssem,15
071050.KQ,43540,Korea Investment Holdings Co,15
004000.KQ,43364,Lotte Fine Chemical Co Ltd,15
010120.KQ,43476,LS Industrial Systems,15
009290.KQ,43793,Kwangdong Phar,15
001230.KQ,43368,Dongkuk Steel Mill Co Ltd,15
111770.KQ,44065,Youngone,15
005830.KQ,43455,Dongbu Insurance,15
000210.KQ,43456,Daelim Ind,15
029780.KQ,43427,Samsung Card,15
007570.KQ,43421,Ilyang Pharm,15
103140.KQ,43482,Poongsan,15
007210.KQ,43756,Byucksan,15
010060.KQ,43469,OCI Co Ltd,15
010620.KQ,43362,Hyundai Mipo Dockyard,15
001120.KQ,43512,LG International Corp,15
000880.KQ,43517,Hanwha,15
069960.KQ,43372,Hyundai Department,15
011780.KQ,43347,Kumho Petro Chemical,15
018260.KQ,948394,Samsung SDS Co Ltd,15
019680.KQ,43515,Daekyo,15
036580.KQ,43950,Farmsco,15
001060.KQ,43575,Jw Pharmac,15
051900.KQ,43521,LG Household & Healthcare,15
060980.KQ,43528,Halla Holdings Corp,15
003620.KQ,43359,Ssangyong Motor,15
012750.KQ,43495,S-1 Corp,15
079430.KQ,43993,Hyundai Livart Furniture Co Ltd,15
001800.KQ,43530,Orion,15
064960.KQ,43483,S&T Motiv Co Ltd,15
006260.KQ,43509,LS Corp,15
034730.KQ,43520,SK Holdings Co Ltd,15
014680.KQ,43856,Hansol Chemica,15
008930.KQ,43783,Hanmi Science,15
000240.KQ,43363,Hankook Tire Worldwide,15
000070.KQ,43429,Samyang Holdings,15
128940.KQ,43440,Hanmi Pharm Co Ltd,15
069260.KQ,43504,Huchems,15
097950.KQ,43376,CJ Cheiljedang,15
020000.KQ,43490,Handsome,15
006120.KQ,43358,SK Discovery Co Ltd,15
078520.KQ,43487,Able C&C,15
001430.KQ,43451,SeAH Bestee,15
052690.KQ,43486,KEPCO Engineering & Construction,15
069620.KQ,43353,Daewoong Pharma,15
006280.KQ,43503,GC Corp,15
034120.KQ,43543,Seoul Broadcasting System,15
000810.KQ,43370,Samsung Fire & Marine Insurance,15
093050.KQ,43464,LF Corp,15
000150.KQ,43516,Doosan,15
108670.KQ,43402,LG Hausys Ltd,15
006650.KQ,43533,Korea Petro Chemical Ind,15
057050.KQ,43968,Hd Home Shoppi,15
033920.KQ,43529,Muhak,15
010780.KQ,43459,IS Dongseo,15
003570.KQ,43426,S&T Dynamics,15
170900.KQ,44104,Dong-A St,15
185750.KQ,50597,Chong Kun Dang Pharmaceutical,15
010130.KQ,43381,Korea Zinc Inc,15
004370.KQ,43494,Nongshim,15
008490.KQ,43773,Suheung Capsul,15
005180.KQ,43488,Binggrae,15
014820.KQ,43859,Dongwon System,15
004490.KQ,43386,Sebang Global Battery Co Ltd,15
104700.KQ,43526,Kisco,15
014830.KQ,43534,Unid,15
002380.KQ,43537,KCC,15
025540.KQ,43406,Korea Electric Terminal,15
003030.KQ,43357,Seah Steel Corp,15
145990.KQ,44094,Samyang Cor,15
000140.KQ,43375,Hitejinro Holdings,15
002240.KQ,43491,Kis Wire,15
192400.KQ,940985,Cuckoo Electr,15
000640.KQ,43437,Donga Socio Holdings,15
005090.KQ,43384,Samkwang Glass,15
005740.KQ,43725,Crown Confec,15
029530.KQ,43519,Sindoh,15
049770.KQ,43394,Dongwon F & B,15
003300.KQ,43409,Hanil Cement Co Ltd,15
005610.KQ,43721,SPC Samlip Co Ltd,15
007690.KQ,43382,Kukdo Chemical,15
007310.KQ,43518,Ottogi,15
002620.KQ,43631,Jeil Pharm,15
000050.KQ,43481,Kyungbang,15
000230.KQ,43551,Il Dong Pharm,15
003200.KQ,43653,Ilshin Spinnin,15
005300.KQ,43388,Lotte Chilsung Beverage,15
002270.KQ,43466,Lotte Food,15
002960.KQ,43390,Hankook Shell Oil,15
007340.KQ,43444,Dongah Tire,15
003240.KQ,43431,Taekwang Ind,15
000670.KQ,43475,YoungPoong,15
003920.KQ,43403,Namyang Dairy,15
004700.KQ,43693,Cho Kwang Leat,15
066570.KQ,43348,LG Electronics Inc,15
103130.KQ,43349,Woongjin Energy Co,15
084870.KQ,43361,TBH Global Co Ltd,15
011200.KQ,43365,Hyundai Merchant Marine,15
001130.KQ,43367,Daehan Flour Mills Co Ltd,15
001440.KQ,43369,Taihan Electric Wire Co Ltd,15
086790.KQ,43378,Hana Financial,15
103590.KQ,43380,Iljin Electric Co,15
013570.KQ,43385,Dongyang Mechatronics Corp,15
000480.KQ,43389,Chosun Refractories Co Ltd,15
082740.KQ,43395,Doosan Engine,15
004150.KQ,43396,Hansol Holdings Co Ltd,15
005380.KQ,43399,Hyundai Motor,15
004020.KQ,43400,Hyundai Steel,15
020760.KQ,43401,Iljin Display,15
096770.KQ,43404,SK Innovation,15
028670.KQ,43405,STX Pan Ocean,15
005950.KQ,43410,Isu Chemical Co Ltd,15
004430.KQ,43412,Songwon Industrial,15
105560.KQ,43413,KB Financial Group,15
001630.KQ,43417,Chongkundang,15
000430.KQ,43418,Daewonkangup,15
016380.KQ,43420,Dongbu Steel,15
025000.KQ,43423,KPX Chemical,15
051910.KQ,43424,LG Chemicals,15
000660.KQ,43430,SK Hynix Inc,15
005930.KQ,43433,Samsung Electronics Co Ltd,15
042660.KQ,43436,Daewoo Shipbuilding,15
007860.KQ,43445,Seoyeon Co Ltd,15
000700.KQ,43452,Eusu Holdings,15
055550.KQ,43453,Shinhan Financial Group,15
000270.KQ,43460,KIA Motors,15
002020.KQ,43461,Kolon Corp,15
034220.KQ,43463,LG Display,15
009580.KQ,43467,Moorim P&P Co Ltd,15
005690.KQ,43470,Pharmicell,15
033530.KQ,43471,Sejong Industrial,15
017670.KQ,43472,SK Telecom Co Ltd,15
077970.KQ,43474,Stx Engine,15
003480.KQ,43478,HHIC Holdings,15
033780.KQ,43480,KT&G Corp,15
008040.KQ,43489,Sajodongaone Co Ltd,15
035420.KQ,43493,Naver Corp,15
010690.KQ,43505,Hwashin,15
030200.KQ,43507,KT Corporation,15
009680.KQ,43510,Motonic,15
006360.KQ,43522,GS Engineering & Construction,15
006380.KQ,43523,Capro,15
015760.KQ,43525,Kepco,15
005490.KQ,43531,Posco Inc,15
011810.KQ,43539,STX,15
000020.KQ,43546,Dongwha Pharm,15
000040.KQ,43547,KR Motors Co Ltd,15
000060.KQ,43548,Meritz Fire In,15
000180.KQ,43549,Sungchang Hold,15
000220.KQ,43550,Yuyu Pharma,15
000300.KQ,43552,Dayou Plus Co Ltd,15
000320.KQ,43553,Norooholdings,15
000370.KQ,43555,Hanwha General,15
000390.KQ,43556,Samhwa Paint,15
000400.KQ,43557,Lotte Non-Life,15
000490.KQ,43559,Daedong Ind,15
000500.KQ,43560,Gaon Cable,15
000520.KQ,43561,Samil Pharm,15
000540.KQ,43562,Heungkuk F&M I,15
000590.KQ,43563,Cs Holdings,15
000650.KQ,43564,Chunil Express,15
000680.KQ,43565,Ls Networks,15
000760.KQ,43566,Rifa Ind,15
000850.KQ,43568,Hwacheon Mac,15
000860.KQ,43569,Kangnam Jevisco Co Ltd,15
000890.KQ,43570,Bohae Brewery,15
000910.KQ,43571,Union,15
000950.KQ,43572,Chonbang,15
000970.KQ,43573,Korea Cast Pip,15
001020.KQ,43574,Papercorea,15
001070.KQ,43576,Taihan Textile,15
001080.KQ,43577,Manho Rope&Wir,15
001140.KQ,43578,Kukbo Trans,15
001200.KQ,43579,Eugene Inv&Sec,15
001210.KQ,43580,Kumho Electric,15
001250.KQ,43581,Gs Global,15
001260.KQ,43582,Nam Kwang Cons,15
001270.KQ,43583,Bookook Sec,15
001290.KQ,43584,Golden Brdg Se,15
001340.KQ,43585,Paik Kwang Ind,15
001360.KQ,43586,Samsung Pharm,15
001380.KQ,43587,SG Choongbang Co Ltd,15
001390.KQ,43588,Kg Chemical,15
001420.KQ,43589,Tae Won Mulsan,15
001460.KQ,43591,Byc,15
001470.KQ,43592,Sambu Const,15
001500.KQ,43593,Hmc Invest Sec,15
001510.KQ,43594,Sk Securities,15
001530.KQ,43595,Dong Il,15
001550.KQ,43596,Cho Bi,15
001560.KQ,43597,Cheil Grinding,15
001570.KQ,43598,Kumyang,15
001620.KQ,43599,Dongkook Ind,15
001720.KQ,43600,Shinyoung Sec,15
001750.KQ,43601,Hanyang Sec,15
001770.KQ,43602,Shin Hwa Silup,15
001780.KQ,43603,Aluko Co Ltd,15
001790.KQ,43604,Ts,15
001820.KQ,43605,Sam Hwa Capaci,15
001880.KQ,43606,Samho Intl,15
001940.KQ,43607,Kisco Holdings,15
002000.KQ,43608,Hankuk Glass,15
002030.KQ,43609,Asia Cement,15
002070.KQ,43610,Namyeung Vivie,15
002100.KQ,43611,Kyungnong,15
002140.KQ,43612,Korea Ind,15
002150.KQ,43613,Dohwa Engin,15
002170.KQ,43614,Sam Yang T S,15
002200.KQ,43615,Export Packing,15
002210.KQ,43616,Dongsung Pharm,15
002220.KQ,43617,Hanil Iron & S,15
002250.KQ,43618,Alvogen Korea Co Ltd,15
002300.KQ,43619,Hankuk Paper,15
002310.KQ,43620,Asia Paper,15
002320.KQ,43621,Hanjin Trans,15
002360.KQ,43622,Sh E & C,15
002390.KQ,43623,Handok,15
002410.KQ,43624,Pum Yang Const,15
002420.KQ,43625,Century Corporation,15
002450.KQ,43626,Samick Music I,15
002460.KQ,43627,Hwa Sung Ind,15
002600.KQ,43630,Choheung,15
002630.KQ,43632,Orientbio,15
002700.KQ,43633,Shinil Ind,15
002710.KQ,43634,Tcc Steel,15
002720.KQ,43635,Kukje Pharma Co Ltd,15
002760.KQ,43636,Bo Lak,15
002780.KQ,43637,Chin Hung Int,15
002810.KQ,43638,Sam Yung Tradi,15
002820.KQ,43639,Sunchang,15
002840.KQ,43640,Miwon Commerci,15
002870.KQ,43641,Shin Poong Pap,15
002880.KQ,43642,Dayou A-Tech,15
002900.KQ,43643,Tongyang Mools,15
002920.KQ,43644,Yoo Sung Ent,15
002990.KQ,43645,Kumho Ind,15
003010.KQ,43646,Hae In,15
003060.KQ,43647,Schnell Biopha,15
003070.KQ,43648,Kolon Globalco,15
003080.KQ,43649,Sung Bo Chem,15
003090.KQ,43650,Daewoong,15
003120.KQ,43651,Ilsung Pharm,15
003160.KQ,43652,D I Corp,15
003220.KQ,43654,Daewon Pharm,15
003230.KQ,43655,Sam Yang Foods,15
003280.KQ,43656,Heung A Shippi,15
003350.KQ,43657,Hk Cosmetic Ma,15
003460.KQ,43658,Yuhwa Sec,15
003470.KQ,43659,Yuanta Sec Kor,15
003530.KQ,43661,Hw Inv&Sec,15
003540.KQ,43662,Daishin Sec,15
003560.KQ,43663,Ihq,15
003580.KQ,43664,Dongwon,15
003610.KQ,43665,Pang Rim Spinn,15
003650.KQ,43667,Mi Chang Oil,15
003680.KQ,43668,Hansung Ent,15
003690.KQ,43669,Korean Reinsu,15
003720.KQ,43670,Sam Young Chem,15
003780.KQ,43671,Chin Yang Ind,15
003830.KQ,43672,Daehan Synthet,15
003960.KQ,43675,Sajodaerim,15
004060.KQ,43676,Sg,15
004080.KQ,43677,Shinhung,15
004090.KQ,43678,Korea Petroleum Industries Co,15
004100.KQ,43679,Taeyang Metal,15
004130.KQ,43680,Daeduck Gds,15
004140.KQ,43681,Dongbang Trans,15
004200.KQ,43682,Korea Dvlp,15
004250.KQ,43683,Npc,15
004270.KQ,43684,Nam Sung,15
004310.KQ,43685,Hyundai Pharm,15
004360.KQ,43686,Sebang,15
004380.KQ,43687,Samick Thk,15
004410.KQ,43688,Seoul Food,15
004450.KQ,43689,Samhwa Crown,15
004540.KQ,43690,Kleannara,15
004560.KQ,43691,Hyundai Bngste,15
004690.KQ,43692,Samchully,15
004720.KQ,43694,Wooridul Pharm,15
004770.KQ,43696,Sunny Elec,15
004830.KQ,43697,Duksung,15
004840.KQ,43698,Drb Holding,15
004870.KQ,43699,TWay Holdings,15
004890.KQ,43700,Dongil Ind,15
004910.KQ,43701,Cho Kwang Pain,15
004920.KQ,43702,CItech Co Ltd,15
004960.KQ,43703,Hanshin Const,15
004970.KQ,43704,Silla,15
004980.KQ,43705,Sungshin Cemen,15
005010.KQ,43706,Husteel,15
005030.KQ,43707,Pusan Cast Met,15
005070.KQ,43708,Cosmoam&T,15
005110.KQ,43709,Hanchang,15
005190.KQ,43710,Dongsung Chem,15
005250.KQ,43711,Green Cross,15
005320.KQ,43712,Kuk Dong,15
005360.KQ,43713,Monami,15
005390.KQ,43714,Shinsung Tngsn,15
005420.KQ,43715,Cosmo Chem,15
005430.KQ,43716,Korea Air Svc,15
005450.KQ,43718,Shin Han Const,15
005500.KQ,43719,Samjin Pharm,15
005680.KQ,43723,Samyoung Elec,15
005720.KQ,43724,Nexen,15
005750.KQ,43726,Daelim B&Co,15
005800.KQ,43727,Shinyoung Waco,15
005810.KQ,43728,Poongsan Holdi,15
005820.KQ,43729,Wonlim,15
005870.KQ,43730,Huneed Tech,15
005880.KQ,43731,Korea Line,15
005960.KQ,43733,Dongbu,15
006040.KQ,43735,Dongwon Ind,15
006060.KQ,43736,Hs Ind,15
006090.KQ,43737,Sajo Oyang,15
006110.KQ,43738,Sam-A Aluminiu,15
006200.KQ,43739,Kec Holdings,15
006220.KQ,43740,Jeju Bank,15
006340.KQ,43741,Daewon Cable,15
006370.KQ,43742,Daegu Dept Sto,15
006390.KQ,43743,Hyundai Cement,15
006490.KQ,43744,Inscobee,15
006570.KQ,43745,Daelim Trading,15
006660.KQ,43746,Samsung Climat,15
006740.KQ,43747,Young Poong Pa,15
006840.KQ,43748,Ak Holdings,15
006890.KQ,43749,Taekyung Chem,15
006980.KQ,43750,Woosung Feed,15
007110.KQ,43752,Ilshinstone,15
007120.KQ,43753,Mirae ING Co Ltd,15
007160.KQ,43754,Sajo Ind,15
007280.KQ,43757,Kr Steel Shape,15
007460.KQ,43758,Nara Kic,15
007540.KQ,43759,Sempio Foods,15
007590.KQ,43760,Dongbang Agro,15
007610.KQ,43761,Seondo Electri,15
007630.KQ,43762,Amnis Co Ltd,15
007660.KQ,43763,Isupetasys,15
007700.KQ,43764,F F,15
007810.KQ,43765,Korea Circuit,15
007980.KQ,43766,Pan-Pacific,15
008110.KQ,43768,Daidong Elec,15
008250.KQ,43769,Eagon Ind,15
008260.KQ,43770,Ni Steel,15
008350.KQ,43771,Namsun Alumini,15
008420.KQ,43772,Moonbae Steel,15
008500.KQ,43774,Iljeong Ind,15
008560.KQ,43775,Meritz Sec,15
008600.KQ,43776,Willbes,15
008700.KQ,43777,Anam Electroni,15
008730.KQ,43779,Youlchon Chem,15
008870.KQ,43781,Kumbi,15
008970.KQ,43784,Dong Yang Pipe,15
009070.KQ,43785,Kctc,15
009140.KQ,43786,Kyung In Elect,15
009160.KQ,43787,Simpac,15
009180.KQ,43788,Hansol Csn,15
009190.KQ,43789,Daiyang Metal,15
009200.KQ,43790,Moorim Paper,15
009270.KQ,43792,Shinwon,15
009310.KQ,43794,Charm Engine,15
009320.KQ,43795,Daewoo Elec Co,15
009410.KQ,43796,Taeyoung Const,15
009440.KQ,43797,Kc Green Holdi,15
009450.KQ,43798,Kyng Dng Navie,15
009460.KQ,43799,Han Chang Pape,15
009470.KQ,43800,Samwha Electri,15
009770.KQ,43801,Sam Jung Pulp,15
009810.KQ,43802,Kp,15
009970.KQ,43803,Youngone Holdi,15
010040.KQ,43804,Korea Refract,15
010050.KQ,43805,Woori Investment,15
010100.KQ,43806,Korea Flange,15
010420.KQ,43807,Hansol Pns,15
010580.KQ,43809,Jico,15
010600.KQ,43810,Ybroad,15
010640.KQ,43811,Chinyang Poly,15
010660.KQ,43812,Hwacheon Machi,15
010770.KQ,43813,Pyung Hwa Hldg,15
010820.KQ,43814,Firstec,15
010960.KQ,43815,Samho Dev,15
011000.KQ,43816,GeneOne Life Science Inc,15
011090.KQ,43817,Enex,15
011150.KQ,43818,Cj Seafood,15
011160.KQ,43819,Doosan Eng&Con,15
011230.KQ,43820,Samwha Elec,15
011280.KQ,43821,Tailim Packaging Co Ltd,15
011300.KQ,43822,Seong An,15
011330.KQ,43823,Uni Chem,15
011390.KQ,43824,Busan Ind,15
011420.KQ,43825,Galaxia SM Inc,15
011500.KQ,43826,Hannong Chem,15
011690.KQ,43827,Yuyang D&U,15
011700.KQ,43828,Han Shin Mach,15
011760.KQ,43830,Hyundai Corp,15
011930.KQ,43831,Shinsung Se,15
012030.KQ,43832,Dongbu Inc,15
012160.KQ,43833,Young Heung I&,15
012170.KQ,43834,Kiwi Media Group Co Ltd,15
012200.KQ,43835,Keyang Elec Ma,15
012280.KQ,43836,Yeong Hwa Meta,15
012320.KQ,43837,Kyungdong Gas,15
012510.KQ,43838,Duzonbizon,15
012600.KQ,43839,Chungho Comnet,15
012610.KQ,43840,Kyungin Synthe,15
012690.KQ,43841,Monalisa,15
012800.KQ,43842,Dae Chang,15
013000.KQ,43843,Sewoo Global,15
013360.KQ,43844,Il Sung Const,15
013520.KQ,43845,Hs R&A,15
013580.KQ,43846,Kyeryong Const,15
013700.KQ,43847,Camus Engineering & Construction Inc,15
013870.KQ,43848,Gmb Korea,15
014130.KQ,43849,Han Express,15
014160.KQ,43850,Dae Young Pkg,15
014280.KQ,43851,Kumkang Kind,15
014440.KQ,43853,Youngbo Chem,15
014530.KQ,43854,Kukdong Oil &,15
014580.KQ,43855,Baek Kwang Min,15
014710.KQ,43857,Sajo Seafood,15
014790.KQ,43858,Halla Eng&Cons,15
014910.KQ,43860,Sungmoon Elect,15
014990.KQ,43861,In The F,15
015020.KQ,43862,E-Starco,15
015230.KQ,43863,Daechang Forgi,15
015260.KQ,43864,Automobile &Pc,15
015350.KQ,43865,Busan City Gas,15
015360.KQ,43866,Yesco,15
015540.KQ,43867,Hot-Tech Co Ltd,15
015590.KQ,43868,Daekyung Mach,15
015860.KQ,43869,Iljin Holdings,15
015890.KQ,43870,Tae Kyung Ind,15
016090.KQ,43871,Dae Hyun,15
016450.KQ,43873,Hansae Yes24,15
016580.KQ,43874,Whanin Pharm,15
016590.KQ,43875,Shindaeyang Pa,15
016610.KQ,43876,Dongbu Sec,15
016710.KQ,43877,Daesung Holdin,15
016800.KQ,43878,Fursys,15
016880.KQ,43879,Woongjin Co Ltd,15
017040.KQ,43880,Kwang Myung El,15
017180.KQ,43881,Myungmoon Phar,15
017370.KQ,43882,Wooshin System,15
017390.KQ,43883,Seoul City Gas,15
017550.KQ,43884,Soosan Heavy I,15
017810.KQ,43885,Pulmuone Holdi,15
017900.KQ,43886,Auk Corp,15
017940.KQ,43887,E1,15
017960.KQ,43888,Hankuk Carbon,15
018470.KQ,43889,Choil Aluminum,15
018500.KQ,43890,Dongwon Metal,15
018670.KQ,43891,Sk Gas,15
019170.KQ,43892,Shinpoong Phar,15
019180.KQ,43893,Thn,15
019440.KQ,43895,Seah Spe Steel,15
019490.KQ,43896,Hitron Systems,15
020120.KQ,43897,Daouincube,15
020560.KQ,43898,Asiana Airline,15
021050.KQ,43899,Seowon,15
021820.KQ,43900,Sewon Precisio,15
023000.KQ,43902,Samwon Steel,15
023150.KQ,43903,Mhethanol,15
023350.KQ,43904,Korea Eng Cons,15
023450.KQ,43905,Dongnam Chem,15
023590.KQ,43906,Daou Tech,15
023800.KQ,43907,Inzi Controls,15
023810.KQ,43908,Infac,15
023960.KQ,43909,Sc Engineering,15
024070.KQ,43910,Wiscom,15
024090.KQ,43911,Dcm,15
024720.KQ,43912,Kolmar Holding,15
024890.KQ,43913,Dae Won Chem,15
024900.KQ,43914,Duck Yang Ind,15
025530.KQ,43915,Sjm Holdings,15
025560.KQ,43916,Mirae,15
025620.KQ,43917,Jayjun Co Ltd,15
025750.KQ,43918,Hansol Homedec,15
025820.KQ,43919,Lee Ku Ind,15
025890.KQ,43921,Han Kook Steel,15
026890.KQ,43922,Dpc,15
026940.KQ,43923,Bookook Steel,15
027390.KQ,43924,Hanwha Timewor,15
027740.KQ,43925,Maniker,15
027970.KQ,43926,Seha,15
028100.KQ,43927,Donga Geologic,15
029460.KQ,43928,K C Tech,15
030210.KQ,43929,Ktb Invest&Sec,15
030610.KQ,43930,Kyobo Securiti,15
030720.KQ,43931,Dong Won Fish,15
030790.KQ,43932,Tongyang Netwo,15
031430.KQ,43933,Shinsegae Inte,15
031440.KQ,43934,Shinsegae Food,15
031820.KQ,43935,Comtec Sys,15
032350.KQ,43936,Lotte Tour Dev,15
032560.KQ,43937,Hwang-Kum Stee,15
033180.KQ,43938,Feelux,15
033240.KQ,43939,Jahwa Electron,15
033250.KQ,43940,Chasys,15
033270.KQ,43941,United Pharm,15
033660.KQ,43942,Aju Capital,15
034300.KQ,43943,Shinsegae Cons,15
034310.KQ,43944,Nice,15
034590.KQ,43945,Incheon City G,15
035000.KQ,43946,GⅡR,15
035150.KQ,43947,Baiksan,15
035510.KQ,43948,Shinsegae I&C,15
036530.KQ,43949,S&T Holdings,15
037270.KQ,43951,Yg Plus Inc,15
037560.KQ,43952,Cj Hellovision,15
037710.KQ,43953,Gwangjushinseg,15
039130.KQ,43954,Hana Tour,15
039490.KQ,43955,Kiwoom,15
041650.KQ,43956,Sangsin Brake,15
042700.KQ,43957,Hanmi Semicon,15
044380.KQ,43958,Jooyontech,15
044450.KQ,43959,Kss Line,15
044820.KQ,43960,Cosmax,15
047400.KQ,43961,Sy Material,15
049800.KQ,43963,Woojin Plaimm,15
051630.KQ,43965,Chin Yang Chem,15
053210.KQ,43966,Kt Skylife,15
053690.KQ,43967,Hanmiglobal,15
058430.KQ,43969,Posco C&C Stl,15
058650.KQ,43970,Seah Holdings,15
058730.KQ,43971,Dong-A S Tech,15
058850.KQ,43972,Ktcs,15
058860.KQ,43973,Ktis,15
063160.KQ,43974,Ckd Bio,15
067830.KQ,43975,Savezone I C,15
068290.KQ,43976,Samsung Publis,15
068400.KQ,43977,Aj Rent A Car,15
069460.KQ,43978,Daeho Al,15
069640.KQ,43979,Mk Trend,15
069730.KQ,43980,Dsr Wire,15
071090.KQ,43981,Histeel,15
071320.KQ,43982,Kr District He,15
071840.KQ,43983,Lotte Himart,15
071950.KQ,43984,Koas,15
071970.KQ,43985,Stx Heavy Indu,15
072130.KQ,43986,Uangel,15
072710.KQ,43987,Nongshim Holdi,15
074610.KQ,43988,En3,15
075180.KQ,43989,Saeron Auto,15
077500.KQ,43990,Uniquest,15
078000.KQ,43991,Telcoware,15
079160.KQ,43992,CJ CGV,15
079660.KQ,43994,Sajohaepyo,15
079980.KQ,43995,Huvis,15
081000.KQ,44000,Iljin Diamond,15
081660.KQ,44004,Fila Korea,15
082640.KQ,44010,Tongyang Life,15
083370.KQ,44013,Dongbuka 12 Sh,15
083380.KQ,44014,Dongbuka 13 Sh,15
083420.KQ,44016,Kpx Green Chem,15
084010.KQ,44023,Daehan Steel,15
084670.KQ,44024,Dongyang Expre,15
084680.KQ,44025,E-World,15
084690.KQ,44026,Daesang Holdings Co Ltd,15
085310.KQ,44027,Nk,15
088790.KQ,44028,Jindo,15
088980.KQ,44029,Macq Kor Infr,15
089470.KQ,44030,Hyundai E P,15
090080.KQ,44031,Pyung Hwa Ind,15
090350.KQ,44032,Noroo Paint,15
090370.KQ,44033,Avista South Korea,15
091090.KQ,44039,Sewon Cellonte,15
092200.KQ,44040,Dic,15
092220.KQ,44041,Kec,15
092230.KQ,44042,Kpx Holdings,15
092440.KQ,44043,Kishin Copr,15
093230.KQ,44045,E Investment & Development,15
093240.KQ,44046,Hyungji Elite,15
094280.KQ,44047,Hyosung Itx,15
095720.KQ,44048,Wngjin Thinkbi,15
096760.KQ,44049,Jw Holdings,15
100220.KQ,44050,Visang Educati,15
100250.KQ,44051,Chinyang Hold,15
100840.KQ,44052,S&T Corp,15
101060.KQ,44053,Sbs Media Hold,15
101140.KQ,44054,Artis,15
102260.KQ,44056,Dongsung Corporation,15
102280.KQ,44057,Sbw,15
102460.KQ,44058,Reyon Pharm,15
105840.KQ,44061,Woojin,15
107590.KQ,44062,Msc,15
109070.KQ,44063,Kgp,15
117580.KQ,44067,Daesung Energy,15
118000.KQ,44069,Wooridul Life,15
119650.KQ,44071,Kc Cottrell,15
120030.KQ,44072,Chosun Welding,15
122900.KQ,44074,Imarketkorea,15
123690.KQ,44075,Hankook Cosmet,15
123700.KQ,44076,SJM Co Ltd,15
126560.KQ,44077,Hyundai Hcn,15
128820.KQ,44078,Daesung Ind,15
129260.KQ,44079,Intergis,15
130660.KQ,44080,Kepid,15
134380.KQ,44081,Miwon Chemical,15
134790.KQ,44082,Teems,15
136490.KQ,44083,Sunjin,15
138040.KQ,44084,Meritz Financi,15
138490.KQ,44086,Kolon Plastics,15
139130.KQ,44087,Dgb Financial,15
139480.KQ,44089,E-Mart,15
140890.KQ,44090,Trus Y 7-Reit,15
140910.KQ,44091,Kwang Hee Self-Administered Real Estate,15
144620.KQ,44092,Kolonmaterial,15
145270.KQ,44093,Ktop Reit,15
153360.KQ,44096,Hi Gold Ocean 3 Ship Investment Co,15
155660.KQ,44097,Dsr,15
155900.KQ,44098,Badaro No19,15
159650.KQ,44099,Hi Gold No.8,15
161000.KQ,44100,Ak Petrochemic,15
163560.KQ,44103,Drb Industrial,15
172580.KQ,44105,Hi Gold Ocean,15
175330.KQ,44106,Jb Financial,15
180640.KQ,44107,Hanjinkal,15
181710.KQ,44108,Nhn Entertain,15
183190.KQ,44482,Asiacement,15
006880.KQ,50595,Singsongholdin,15
133820.KQ,940984,Finebesteel,15
200880.KQ,940990,Han Il E-Wha Co Ltd,15
204480.KQ,941243,Mirae Asset Tiger Synth China,15
112610.KQ,942842,CS Wind Corp,15
213500.KQ,945187,Hansol Paper Co Ltd,15
145210.KQ,948395,Saehwa Imc Co Ltd,15
005387.KQ,951041,Hyundai Motor Co Pref,15
005935.KQ,951042,Samsung Electronics Co Pref,15
094800.KQ,955768,Miraeassetmaps Asia Pacific RE 1 Investment,15
096300.KQ,955769,Vietnam Development 1,15
099340.KQ,955770,Hana Ubs Ambatovy Nickel Overseas 1,15
099350.KQ,955771,Hana Ubs Ambatovy Nickel Overseas 2,15
152550.KQ,955772,Kim Ankor Oilfield Overseas Resources Development,15
168490.KQ,955773,Kim Parallel Oilfield Overseas Resources Development,15
210980.KQ,955774,SK D&D Co Ltd,15
214390.KQ,955775,Kyongbo Pharmaceutical Co Ltd,15
74401722.KQ,955776,Miraeasset Maps Frontier Brazil RE Trust 1,15
900140.KQ,955778,Kolao Holdings,15
085620.KQ,955954,Mirae Asset Life Insurance Co Ltd,15
214420.KQ,955955,Tonymoly Co Ltd,15
214320.KQ,958363,Innocean Worldwide Inc,15
002690.KQ,959127,Dong Il Steel MFG Co Ltd,15
039570.KQ,959128,I Controls,15
079550.KQ,959129,LIG Nex1 Co Ltd,15
095570.KQ,959130,AJ Networks Co Ltd,15
089590.KQ,960821,Jeju Air Co Ltd,15
227840.KQ,960822,Hyundai C&F Inc,15
214330.KQ,961707,Kumho HT Inc,15
075580.KQ,962005,Sejin Heavy Industries Co Ltd,15
152330.KQ,962438,Korea Autoglass Corp,15
226320.KQ,962439,Its Skin Co Ltd,15
194370.KQ,969143,JS Corp,15
004440.KQ,976229,Daelim C&S Co Ltd,15
047770.KQ,979020,Codes Combine Co Ltd,15
066430.KQ,979021,Y Optics Manufacture Co Ltd,15
000250.KQ,979022,Sam Chun Dang Pharm Co Ltd,15
000440.KQ,979023,Joong Ang Enervis Co Ltd,15
001000.KQ,979024,Silla Textile,15
001540.KQ,979025,Ahn-Gook Pharmaceutical Co Ltd,15
001810.KQ,979026,Moorim SP Co Ltd,15
001840.KQ,979027,Eehwa Construction,15
002230.KQ,979028,PS Tec Co Ltd,15
003100.KQ,979029,Sun Kwang Co Ltd,15
003310.KQ,979030,Daejoo,15
003670.KQ,979031,Posco Chemtech Co Ltd,15
003800.KQ,979032,AceBed,15
004590.KQ,979033,Korea Furniture,15
004650.KQ,979034,Changhae Ethanol Co Ltd,15
004780.KQ,979035,DaeryukCan,15
005160.KQ,979036,Dongkuk Industries Co Ltd,15
005290.KQ,979037,Dongjin Semichem Co Ltd,15
005670.KQ,979038,Foodwell Corp,15
005710.KQ,979039,Daewonsanup,15
005860.KQ,979040,Hanil Feed Co Ltd,15
005990.KQ,979041,Maeil Dairy Industry Co Ltd,15
006730.KQ,979042,Seobu T&D Co Ltd,15
002290.KQ,979043,Samil Enterprise Co Ltd,15
002680.KQ,979044,Hantop Inc,15
006050.KQ,979045,Kuk Young G M,15
006140.KQ,979046,PJ Electronics Co Ltd,15
006580.KQ,979047,Daeyang Paper MFG,15
006910.KQ,979048,Bosung Power Technology Co Ltd,15
006920.KQ,979049,Mohenz Co Ltd,15
007330.KQ,979050,Pureun Mutual Savings Bank,15
007370.KQ,979051,Jin Yang Pharmaceutical Co Ltd,15
007820.KQ,979052,SM Core Inc,15
009730.KQ,979053,Kossen Co Ltd,15
010470.KQ,979054,Oricom Inc,15
007530.KQ,979055,Youngsin Metal Industrial,15
007720.KQ,979056,Daemyung Corporation Co Ltd,15
008370.KQ,979057,Wonpoong Corp,15
008470.KQ,979058,Booster Co Ltd,15
008830.KQ,979059,DaedongGear,15
009300.KQ,979060,Sam-A Pharm Co Ltd,15
009620.KQ,979061,Sambo Industrial Co Ltd,15
009780.KQ,979062,MSC Co Ltd,15
010280.KQ,979063,SsangYong Information & Communications Corp,15
011040.KQ,979064,Kyungdong Pharm,15
011080.KQ,979065,Hyungji Innovation and Creative Co Ltd,15
007390.KQ,979066,Nature Cell Co Ltd,15
007770.KQ,979067,Hanil Chemical Ind Co Ltd,15
008290.KQ,979068,Wonpung Mulsan,15
008800.KQ,979069,Haengnam Household & Health Care Inc,15
009520.KQ,979070,Posco M-Tech Co Ltd,15
010170.KQ,979071,Taihan Fiberoptics Co Ltd,15
010240.KQ,979072,Heungkuk Metaltech Co Ltd,15
012790.KQ,979073,Sinil Pharmaceutical Co Ltd,15
013030.KQ,979074,HY-Lok Corp,15
013120.KQ,979075,Dongwon Development Co Ltd,15
013310.KQ,979076,A-Jin Industry Co Ltd,15
013720.KQ,979077,Cheongbo Industrial,15
011320.KQ,979078,Unick Corp,15
011370.KQ,979079,Seohan,15
011560.KQ,979080,Sebo Manufacturing Engineering Corp,15
012340.KQ,979081,Nuin Tek Co Ltd,15
012700.KQ,979082,Leadcorp Inc,15
012860.KQ,979083,Seoyon Electronics Co Ltd,15
012620.KQ,979084,Wonil Special Steel,15
013810.KQ,979085,Speco,15
014100.KQ,979086,Boryung Medience Co Ltd,15
014190.KQ,979087,Wonik Cube Corp,15
014200.KQ,979088,Kanglim Co Ltd,15
014570.KQ,979089,Korean Drug Co Ltd,15
014940.KQ,979090,Oriental Precision & Engineering Co Ltd,15
014970.KQ,979091,Samryoong,15
013990.KQ,979092,Agabang & Company,15
014470.KQ,979093,Bubang Co Ltd,15
014620.KQ,979094,Sung Kwang Bend Co Ltd,15
015710.KQ,979095,Kocom Co Ltd,15
015750.KQ,979096,Sungwoo Hitech Co Ltd,15
016100.KQ,979097,Leaders Cosmetics Co Ltd,15
016250.KQ,979099,eTEC E&C Ltd,15
016600.KQ,979100,Q Capital Partners Co Ltd,15
016670.KQ,979101,Pobis TNC Co Ltd,15
016920.KQ,979102,Cas,15
017000.KQ,979103,Shinwon Construction,15
017250.KQ,979104,Interm Corp,15
017480.KQ,979105,Samhyun Steel Co Ltd,15
017510.KQ,979106,Semyung Electric Machinery,15
017650.KQ,979107,DaelimPaper,15
017680.KQ,979108,Deco&E Co Ltd,15
017890.KQ,979109,korea Alcohol Industrial,15
018000.KQ,979110,Unison Co Ltd,15
018120.KQ,979111,JinroDistillers,15
018290.KQ,979112,GMP,15
018310.KQ,979113,Sammok S-Form Co Ltd,15
018620.KQ,979114,WooGene B&G Co Ltd,15
018680.KQ,979115,Seoul Pharma Co Ltd,15
018700.KQ,979116,Barunson,15
019010.KQ,979117,Grand Departmentstore Co Ltd,15
019210.KQ,979118,YG-1 Co Ltd,15
019540.KQ,979119,Ilji Technology Co Ltd,15
019550.KQ,979120,SBI Investment Korea Co Ltd,15
019570.KQ,979121,Gemini Investment Corp,15
019590.KQ,979122,M-Venture Investment Inc,15
019660.KQ,979123,Globon Co Ltd,15
019770.KQ,979124,Seoyon Top Metal Co Ltd,15
019990.KQ,979125,Enertork Ltd,15
020180.KQ,979126,Daishin Information,15
020400.KQ,979127,DaedongMetal,15
020710.KQ,979128,Sigong Tech Co Ltd,15
021040.KQ,979129,Daeho P&C Co Ltd,15
021080.KQ,979130,Atinum Investment Co Ltd,15
021320.KQ,979131,KCC Engineering & Construction Co Ltd,15
021650.KQ,979132,Cubic Korea Inc,15
021880.KQ,979133,CXC Investment & Credit Capital Corp,15
022100.KQ,979134,Posco ICT Co Ltd,15
022220.KQ,979135,Jeongsan Aikang Co Ltd,15
023160.KQ,979136,TK Corp,15
023410.KQ,979137,Eugene Corp,15
023460.KQ,979139,CNH Co Ltd,15
023600.KQ,979140,Sambo Corrugated Board Co Ltd,15
023760.KQ,979141,Han Kook Capital Co Ltd,15
023770.KQ,979142,Playwith Inc,15
023790.KQ,979143,Dongil Steel,15
023890.KQ,979144,AtlasBX Co Ltd,15
023900.KQ,979145,PungkukAlcholnd,15
023910.KQ,979146,DaehanPharmaceutical,15
024060.KQ,979147,HeunguOil,15
024120.KQ,979148,KB Autosys Co Ltd,15
024740.KQ,979150,Hanil Forging Industrial,15
024800.KQ,979151,Yoosung T&S Co Ltd,15
024830.KQ,979152,Sewon Corp Co Ltd,15
024840.KQ,979153,KB Metal Co Ltd,15
024850.KQ,979154,PSMC Co Ltd,15
024880.KQ,979155,KPF,15
024910.KQ,979156,Kyungchang Industrial,15
024940.KQ,979157,PNpoongnyun Co Ltd,15
024950.KQ,979158,Samchuly Bicycle Co Ltd,15
025320.KQ,979160,Synopex Inc,15
025440.KQ,979161,Daesung Eltec Co Ltd,15
025550.KQ,979162,Hankuk Steel Wire Co Ltd,15
025770.KQ,979163,Korea Information & Communications,15
025870.KQ,979164,Silla SG Co Ltd,15
025880.KQ,979165,KC Feed Co Ltd,15
025900.KQ,979166,Dongwha Enterprise Co Ltd,15
025950.KQ,979167,Dongshin Engineering & Construction,15
025980.KQ,979168,Emerson Pacific Inc,15
026040.KQ,979169,Romanson Co Ltd,15
026150.KQ,979170,Tuksu Engineering & Construction Ltd,15
026180.KQ,979171,Hyundai Information Technology Co Ltd,15
026910.KQ,979173,KwangjinInd,15
026960.KQ,979174,Dongsuh,15
027040.KQ,979175,Seoul Electronics & Telecom,15
027050.KQ,979176,Coreana Cosmetics Co Ltd,15
027580.KQ,979177,Sang Bo Co Ltd,15
027710.KQ,979178,FarmStory Co Ltd,15
027830.KQ,979179,Daesung Private Equity Inc,15
028040.KQ,979180,Park & OPC Ltd,15
028080.KQ,979181,Humax Holdings Co Ltd,15
028150.KQ,979182,GS Home Shopping Inc,15
028300.KQ,979183,HLB Inc,15
029480.KQ,979184,Barun Technology Co Ltd,15
029960.KQ,979185,Korea Environment Technology Co Ltd,15
030190.KQ,979186,Nice Information Service Co Ltd,15
030270.KQ,979187,Kahee Co Ltd,15
030350.KQ,979188,Dragonfly GF Co Ltd,15
030520.KQ,979189,Hancom Inc,15
030530.KQ,979190,Wonik Holdings Co Ltd,15
030960.KQ,979191,Yangjisa,15
031310.KQ,979192,Eyesvision Corp,15
031330.KQ,979193,SAMT Co Ltd,15
031390.KQ,979194,Green Cross Cell Corp,15
031510.KQ,979195,Austem Co Ltd,15
031860.KQ,979196,NSN Co Ltd,15
031980.KQ,979197,PSK Inc,15
032080.KQ,979199,Aztech WB Co Ltd,15
032190.KQ,979200,Daou Data Corp,15
032280.KQ,979201,Samil,15
032500.KQ,979202,KMW Co Ltd,15
032540.KQ,979203,TJ Media Co Ltd,15
032580.KQ,979204,Fidelix Co Ltd,15
032620.KQ,979205,UB Care Co Ltd,15
032680.KQ,979206,Softcen Co Ltd,15
032750.KQ,979207,Samjin,15
032790.KQ,979208,Mgenplus Co Ltd,15
032800.KQ,979209,Fantagio Corp,15
032850.KQ,979210,BITComputer,15
032940.KQ,979211,Wonik Co Ltd,15
032960.KQ,979212,DongilTechnology,15
032980.KQ,979213,By On Co Ltd,15
033050.KQ,979214,Jeongmoon Information Co Ltd,15
033100.KQ,979215,Cheryong Electric Co Ltd,15
033110.KQ,979216,ED,15
033130.KQ,979217,Digital Chosun,15
033160.KQ,979218,MK Electron,15
033170.KQ,979219,Signetics Corp,15
033200.KQ,979220,Moatech Co Ltd,15
033230.KQ,979221,Insung Information Co Ltd,15
033290.KQ,979222,Cowell Fashion Co Ltd,15
033310.KQ,979223,DK D&I Co Ltd,15
033320.KQ,979224,JCHyunSystem,15
033340.KQ,979225,Good People Co Ltd,15
033430.KQ,979226,Korea Resources Investment & Development Inc,15
033500.KQ,979227,Dongsung Finetec Co Ltd,15
033540.KQ,979228,Paratech Co Ltd,15
033560.KQ,979229,Bluecom Co Ltd,15
033600.KQ,979230,Ezen Tech Co Ltd,15
033640.KQ,979231,Nepes Corp,15
033790.KQ,979232,Seohwa Inc,15
033830.KQ,979233,Taegu Broadcasting Corp,15
034230.KQ,979234,Paradise Co Ltd,15
034810.KQ,979235,Haesung Industrial Co Ltd,15
034830.KQ,979236,Korea Real Estate Investment & Trust Co Ltd,15
034940.KQ,979237,ChoA Pharmaceutical Co Ltd,15
034950.KQ,979238,Korea Ratings Corp,15
035080.KQ,979239,Interpark Holdings Corp,15
035200.KQ,979240,Plumb Fast Co Ltd,15
035290.KQ,979241,A1N Inc,15
035460.KQ,979242,Kisan Telecom Co Ltd,15
035480.KQ,979243,Majestar Co Ltd,15
035600.KQ,979244,KG Inicis Co Ltd,15
035610.KQ,979245,Solborn Inc,15
035620.KQ,979246,Barunson Entertainment & Arts Corp,15
035760.KQ,979248,CJ O Shopping Co Ltd,15
035810.KQ,979249,Easy Bio Inc,15
035890.KQ,979250,Seohee Construction Co Ltd,15
035900.KQ,979251,JYP Entertainment Corp,15
036000.KQ,979252,YeaRimDang Publishing Co Ltd,15
036010.KQ,979253,ABCO Electronics Co Ltd,15
036030.KQ,979254,KT Hitel Co Ltd,15
036090.KQ,979255,Wizit Co Ltd,15
036120.KQ,979256,SCI Information Service Inc,15
036170.KQ,979257,CTL Inc,15
036180.KQ,979258,Young In Frontier Co Ltd,15
036190.KQ,979259,Geumhwa PSC Co Ltd,15
036200.KQ,979260,Union Semiconductor Equipment Co Ltd,15
036260.KQ,979261,Well Made Yedang Co Ltd,15
036420.KQ,979262,Jcontentree Corp,15
036480.KQ,979263,Daesung Microbiological Labs Co Ltd,15
036490.KQ,979264,SK Materials Co Ltd,15
036540.KQ,979266,SFA Semicon Co Ltd,15
036560.KQ,979267,Young Poong Precision Corp,15
036620.KQ,979268,VirtualTek Corp,15
036630.KQ,979269,Sejong Telecom Inc,15
036640.KQ,979270,HRS Co Ltd,15
036710.KQ,979271,Simmtech Holdings Co Ltd,15
036800.KQ,979272,Nice Information & Telecommunication Inc,15
036830.KQ,979273,Soulbrain Co Ltd,15
036930.KQ,979274,Jusung Engineering Co Ltd,15
037330.KQ,979275,Inzi Display Co Ltd,15
037350.KQ,979277,Sungdo Engineering & Construction,15
037370.KQ,979278,EG Co Ltd,15
037400.KQ,979279,Wooree Lighting Co Ltd,15
037440.KQ,979280,Heerim Architects & Planners,15
037760.KQ,979281,Cenit Co Ltd,15
038010.KQ,979282,Jeil Technos Co Ltd,15
038060.KQ,979283,Lumens Co Ltd,15
038070.KQ,979284,Seoulin Bioscience Co Ltd,15
036670.KQ,979285,KCI Ltd,15
036690.KQ,979286,Commax Co Ltd,15
036810.KQ,979287,Fine Semitech Corp,15
036890.KQ,979288,Jinsung TEC,15
037070.KQ,979289,Paseco Co Ltd,15
037230.KQ,979290,Hankuk Package Co Ltd,15
037460.KQ,979291,Samji Electronics Co Ltd,15
037950.KQ,979292,Elcomtec Co Ltd,15
038110.KQ,979293,Ecoplastic Corp,15
KS11.KQ,37426,KOSPI,15
KQ11.KQ,38016,KOSDAQ,15

#MX MEXICO
AMXL.MX,27012,America Movil SAB de CV,20
CMXCPO.MX,27024,Cemex SAB de CV,20
WALMEX.MX,27186,Wal - Mart De Mexico SAB De CV,20
FUNO11.MX,940792,Fibra Uno Administracion SA de CV,20
GMEXICOB.MX,27109,Grupo Mexico S.A.B. De C.V,20
GFNORTEO.MX,27101,Grupo Financiero Banorte,20
ALFAA.MX,27065,Alfa S.A.B. De C.V,20
CUERVO.MX,996175,Becle SA de CV,20
BSMXB.MX,1056217,Grupo Financiero Santander Mexico SAB de CV Class B,20
GENTERA.MX,27084,Gentera SAB de CV,20
KIMBERA.MX,27142,Kimberly - Clark De Mexico A,20
FMSAUBD.MX,27102,Fomento Economico Mexicano UBD,20
TLVACPO.MX,27010,Grupo Televisa SAB Unit,20
LABB.MX,27105,Genomma Lab Internacional SAB De CV,20
GFINBURO.MX,27116,Grupo Financiero Inbursa SAB De CV,20
BIMBOA.MX,27075,Grupo Bimbo S.A.B. De C.V,20
ALSEA.MX,27066,Alsea S.A.B. De C.V,20
SAREB.MX,27173,Sare Holding S.A.B. De C.V,20
BBAJIOO.MX,1011941,Banco Del Bajio SA Institution De Banca Multiple,20
HOMEX.MX,26967,Desarrolladora Homex SAB de CV,20
GIGANTE.MX,27107,Grupo Gigante S.A.B. De C.V,20
MEGACPO.MX,27151,Megacable Holdings S.A.B. De C.V,20
MEXCHEM.MX,27153,Mexichem S.A.B. De C.V,20
SIMECB.MX,27174,Grupo Simec S.A.B. De C.V,20
ARA.MX,27085,Consorcio Ara S.A.B. De C.V,20
AC.MX,27069,Arca Continental S.A.B. De C.V,20
ASURB.MX,27014,Grupo Aeroportuario Del Sureste,20
IENOVA.MX,41598,Infraestructura Energetica Nova SAB,20
LALAB.MX,942594,Grupo LALA SA de CV,20
FIBRAMQ12.MX,959124,Macquarie Mexico Real Estate Management SA de CV,20
GAPB.MX,26963,Grupo Aeroportuario del Pacifico SAB De CV Class B,20
ALPEKA.MX,31092,Alpek S.A.B. De C.V,20
OMAB.MX,26962,Grupo Aeroportuario Del CentroNorte,20
POSADASA.MX,27126,Grupo Posadas S.A.B. De C.V,20
TERRA13.MX,959125,CI Banco SA Institucion de Banca Multiple FF/00939,20
GRUMAB.MX,27018,Gruma SAB de CV,20
FIBRAPL14.MX,993766,Prologis Property Mexico SA de CV,20
SITESB1.MX,962437,Telesites SAB de CV,20
VESTA.MX,41599,Corporacion Inmobiliaria Vesta SAB,20
GICSAB.MX,953910,Grupo Gicsa SA de CV,20
GMXT.MX,1055998,GMexico Transportes SA de CV,20
AXTELCPO.MX,27071,Axtel CPO S.A.B. De C.V,20
HOTEL.MX,955742,Grupo Hotelero Santa Fe SAB de CV,20
FIHO12.MX,993768,Concentradora Fibra Hotelera Mexicana SA de CV,20
KOFL.MX,27016,Coca Cola Femsa SAB De CV,20
CREAL.MX,40971,Credito Real SAB De CV Sofom E.N.R,20
VOLARA.MX,103965,VOLARIS A,20
AZTECACPO.MX,27181,TV Azteca Cpo S.A.B. De C.V,20
LIVEPOLC1.MX,27093,El Puerto De Liverpool Sab De CV,20
NEMAKA.MX,959123,Nemak SAB de CV,20
BOLSAA.MX,27076,Bolsa Mexicana De Valores SAB De CV,20
Q.MX,40970,Qualitas Controladora SAB De CV,20
GCC.MX,27113,Grupo Cementos De Chihuahua,20
HCITY.MX,950053,Hoteles City Express SAB de CV,20
PINFRA.MX,27162,PINFRA SAB De CV,20
LCMRUBC.MX,962595,La Comercial,20
RA.MX,27074,BanRegio Grupo Financiero SAB de CV,20
GCARSOA1.MX,27112,Grupo Carso S.A.B. De C.V,20
MU.MX,993832,Micron Technology Inc,20
PENOLES.MX,27161,Industrias Penoles Sab De CV,20
BACHCOB.MX,27015,Industrias Bachoco SAB de CV,20
UNIFINA.MX,953911,Unifin Financiera SAPI de CV SOFOM ENR,20
CHDRAUIB.MX,27114,Grupo Comercial Chedraui SAB De CV,20
TRXIONA.MX,1052835,Grupo Traxion SAB de CV,20
HERDEZ.MX,27134,Grupo Herdez S.A.B. De C.V,20
AEROMEX.MX,27064,Grupo Aeromexico S.A.B. De C.V,20
BBVA.MX,26993,BBVA,20
FCX.MX,993762,Freeport-McMoran Copper & Gold Inc,20
DANHOS13.MX,993741,Concentradora Fibra Danhos SA de CV,20
AGUA.MX,955728,Rotoplas SA de CV,20
FHIPO14.MX,993765,Concentradora Hipotecaria SAPI de CV,20
RASSNICPO.MX,27172,Rassini SAB de CV,20
ELEMENT.MX,955949,Elementia SA de CV,20
ELEKTRA.MX,27094,Grupo Elektra S.A.B. De C.V,20
AKS.MX,993703,AK Steel Holding Corporation,20
CADUA.MX,961998,Cadu Inmobiliaria SA de CV,20
BAC.MX,993713,Bank of America Corp,20
AUTLANB.MX,27154,Compania Minera Autlan,20
FSHOP13.MX,993773,Fibra Shop Portafolios Inmobiliarios SAPI de CV,20
RASSINIA.MX,27169,Rassini SAB de CV Class A,20
ALEATIC.MX,27159,Aleatica SAB de CV,20
MFRISCOA1.MX,27155,Minera Frisco S.A.B. De C.V,20
FINN13.MX,993769,Administradora de Activos Fibra Inn SC,20
URBI.MX,27183,Urbi Desarrollos Urbanos SAB de CV,20
VITROA.MX,27185,Vitro S.A.B. De C.V,20
DIS.MX,30007,Walt Disney Company,20
POCHTECB.MX,27163,Grupo Pochteca S.A.B. De C.V,20
WBA.MX,993895,Walgreens Boots Alliance Inc,20
JCP.MX,993799,JC Penney Company Inc Holding,20
SORIANAB.MX,27175,Organizacion Soriana SAB De CV,20
CSCO.MX,30014,Cisco Systems Inc,20
BNPN.MX,993725,BNP Paribas SA,20
ICHB.MX,27137,Industrias CH S.A.B. De C.V,20
MGAN.MX,27032,Magna International Inc,20
SNYN.MX,26991,Sanofi ADR,20
ENELN.MX,993756,Enel,20
GLEN.MX,993781,Societe Generale SA,20
NUE.MX,993839,Nucor Corporation,20
NOKN.MX,26998,Nokia Corp ADR,20
MDTN.MX,993819,Medtronic PLC,20
CULTIBAB.MX,27095,Organizacion Cultiba S.A.B. De CV,20
ACTINVRB.MX,27063,Corporacion Actinver SAB De CV,20
MRO.MX,993828,Marathon Oil Corporation,20
GISSAA.MX,41596,Grupo Industrial Saltillo SAB de CV,20
CRM.MX,997469,Salesforce.com Inc,20
ATSG.MX,993710,Air Transport Services Group Inc,20
T.MX,993870,AT&T Inc,20
AMD.MX,993706,Advanced Micro Devices Inc,20
BABAN.MX,997456,Alibaba Group Holdings Ltd,20
PINFRAL.MX,955748,Promotora y Operadora de Infraestructura SAB de CV,20
AAPL.MX,30130,Apple Inc,20
ISPN.MX,993796,Intesa Sanpaolo SpA,20
CMCSA.MX,993732,Comcast Corp,20
PAPPEL.MX,40510,Bio Pappel S.A.B. De C.V,20
FHD15.MX,996176,FIBRA HD Servicios SC REIT,20
GPROFUT.MX,27128,Grupo Profuturo S.A.B. De C.V,20
MSFT.MX,29993,Microsoft Corporation,20
SN.MX,993864,Sanchez Energy Corporation,20
WMT.MX,30216,Walmart Inc,20
AMZN.MX,30137,Amazon.com Inc,20
UCGN.MX,997528,UniCredit SpA,20
MEDICAB.MX,27150,Medica Sur S.A.B. De C.V,20
GS.MX,30016,Goldman Sachs Group Inc,20
JPM.MX,993800,JPMorgan Chase & Co,20
X.MX,993904,United States Steel Corporation,20
C.MX,26970,Citigroup Inc,20
CAN.MX,993728,Carrefour SA,20
SGREN.MX,993775,Siemens Gamesa Renewable Energy SA,20
MO.MX,993825,Altria Group,20
UTSI.MX,993889,UTStarcom Holdings Corp,20
USB.MX,993888,US Bancorp,20
NVDA.MX,993840,NVIDIA Corporation,20
AA1.MX,997451,Alcoa Corp,20
DISH.MX,993746,DISH Network Corporation,20
DAL.MX,993740,Delta Air Lines Inc,20
DTEN.MX,993749,Deutsche Telekom AG Na,20
ARNC.MX,29997,Arconic Inc,20
EOANN.MX,993757,E.ON SE NA,20
GE.MX,30256,General Electric Company,20
TSLA.MX,993877,Tesla Inc,20
CTSH.MX,997470,Cognizant Technology Solutions,20
ROGN.MX,997512,Roche Holding AG Participation,20
ITXN.MX,993797,Inditex,20
UBSN.MX,969142,UBS Group AG,20
FERN.MX,993764,Ferrovial,20
BAX.MX,993716,Baxter International Inc,20
HBCN.MX,997483,HSBC Holdings PLC ADR,20
LEN.MX,993807,Lennar Corporation,20
RDSA.MX,26972,Royal Dutch Shell PLC ADR,20
CVX.MX,29975,Chevron Corp,20
ORN.MX,993844,L’Oreal SA,20
CHK.MX,993730,Chesapeake Energy Corporation,20
CVS.MX,993739,CVS Health Corp,20
UNH.MX,993885,UnitedHealth Group Incorporated,20
INGN.MX,997488,ING Group NV ADR,20
GILD.MX,993780,Gilead Sciences Inc,20
AXAN.MX,993712,AXA SA,20
UAL.MX,993883,United Continental Holdings Inc,20
PUKN.MX,997507,Prudential Public Limited Company,20
TCEHYN.MX,997521,Tencent Holdings Ltd ADR,20
DAIGN.MX,26984,Daimler AG NA O.N,20
FB.MX,993034,Facebook Inc,20
ATVI.MX,30146,Activision Blizzard Inc,20
GM.MX,26969,General Motors Company,20
SHPGN.MX,997515,Shire PLC ADR,20
CHLN.MX,27022,China mobile limited ADR,20
RBN.MX,1061634,Reckitt Benckiser Group PLC,20
SYF.MX,997520,Synchrony Financial,20
GOOGL.MX,993784,Alphabet Inc Class A,20
MDLZ.MX,30021,Mondelez International Inc,20
QCOM.MX,993851,Qualcomm Incorporated,20
BIIB.MX,993720,Biogen Inc,20
KO.MX,993804,Coca-Cola Company,20
SANN.MX,26996,Banco Santander,20
ANB.MX,997455,Anheuser Busch Inbev SA NV,20
VLO.MX,993892,Valero Energy Corporation,20
WFC.MX,993898,Wells Fargo & Company,20
SPORTS.MX,40511,Grupo Sports World S.A.B. De C.V,20
WDC.MX,993896,Western Digital Corporation,20
MRK.MX,30027,Merck & Company Inc,20
AMXA.MX,27067,America Movil SAB De CV Class A,20
XOM.MX,30195,Exxon Mobil Corp,20
RION.MX,30171,Rio Tinto ADR,20
MAXCOMA.MX,27148,Maxcom Telecomunicaciones SAB de CV,20
ANTM.MX,993707,Anthem Inc,20
SBUX.MX,993857,Starbucks Corporation,20
PYPL.MX,997508,PayPal Holdings Inc,20
UTX.MX,30265,United Technologies Corporation,20
TWTR.MX,993879,Twitter Inc,20
CELG.MX,993729,Celgene Corporation,20
KBN.MX,997492,KB Financial Group Inc,20
ABT.MX,993696,Abbott Laboratories,20
LMT.MX,993810,Lockheed Martin Corporation,20
ITUBN.MX,27044,Itau Unibanco Banco Holding SA,20
BA.MX,29970,Boeing Co,20
JDN.MX,1061630,Jd.Com Inc Adr,20
PG.MX,30312,Procter & Gamble Company,20
MS.MX,993829,Morgan Stanley,20
ORCL.MX,993843,Oracle Corporation,20
ALVN.MX,993705,Allianz SE VNA O.N,20
GOOG.MX,993783,Alphabet Inc Class C,20
UAA.MX,993882,Under Armour Inc A,20
AMGN.MX,30150,Amgen Inc,20
DO.MX,993748,Diamond Offshore Drilling Inc,20
VINTE.MX,991204,Vinte Viviendas Integrales SAPI de,20
COST.MX,993737,Costco Wholesale Corporation,20
BAPN.MX,993714,Credicorp Ltd,20
V.MX,993890,Visa Inc,20
SIEN.MX,1096650,Siemens AG Class N,20
PBRN.MX,27009,Petroleo Brasileiro Petrobras SA ADR,20
FPLUS16.MX,996177,Fibra Plus REIT,20
RYN.MX,27059,Royal Bank Of Canada,20
GSNBRB1.MX,41597,Grupo Sanborns SAB de CV,20
BRKB.MX,993727,Berkshire Hathaway B,20
BAYNN.MX,993717,Bayer AG NA,20
ADBE.MX,1061613,Adobe Systems Incorporated,20
SNPN.MX,27019,China Petroleum & Chemical Corp ADR,20
MONEXB.MX,955747,Holding Monex SAB de CV,20
DEON.MX,30168,Diageo PLC ADR,20
NKE.MX,993836,Nike Inc,20
HD.MX,30224,Home Depot Inc,20
BHCN.MX,993894,Bausch Health Companies Inc,20
WYNN.MX,993903,Wynn Resorts Limited,20
LVS.MX,993813,Las Vegas Sands Corp,20
LEA.MX,997494,Lear Corporation,20
STZ.MX,997519,Constellation Brands Inc Class A,20
BIDUN.MX,30114,Baidu Inc,20
M.MX,993814,Macy’s Inc,20
APC.MX,993709,Anadarko Petroleum Corp,20
AABA.MX,993906,Altaba Inc,20
INTC.MX,29989,Intel Corporation,20
TGT.MX,993872,Target Corporation,20
VODN.MX,27000,Vodafone Group PLC ADR,20
MA.MX,993815,Mastercard Inc,20
MELIN.MX,993820,MercadoLibre Inc,20
BBBY.MX,30120,Bed Bath & Beyond Inc,20
AXP.MX,30249,American Express Company,20
AAL.MX,8095,American Airlines Group,20
AGNN.MX,21514,Allergan PLC,20
RCTROA.MX,26965,Grupo Radio Centro Sab De CV,20
CSN.MX,26975,Credit Suisse Group,20
ABBN.MX,26976,ABB Ltd,20
RDSB.MX,26978,Royal Dutch Shell B PLC,20
ORANN.MX,26989,Orange SA ADR,20
TEFN.MX,26995,Telefonica SA ADR,20
BHPN.MX,26997,BHP Billiton Ltd ADR,20
SAPN.MX,26999,SAP AG ADR,20
TEVAN.MX,27001,Teva Pharma Industries Ltd ADR,20
BBN.MX,27002,BlackBerry Ltd,20
ULN.MX,27003,Unilever PLC ADR,20
TS.MX,27004,Tenaris,20
EN.MX,27005,ENI SpA ADR,20
OIBRQN.MX,27013,Oi SA ADR Pref,20
RIGN.MX,27017,Transocean Ltd,20
CHUN.MX,27020,China Unicom Hong Kong Ltd,20
PTRN.MX,27021,PetroChina Co Ltd ADR,20
LFCN.MX,27023,China Life Insurance Company,20
ICA.MX,27025,Empresas ICA SAB De CV,20
FRES.MX,27027,Fresnillo PLC,20
VALEN.MX,27028,VALE SA,20
ABEVN.MX,27033,Ambev SA ADR,20
BBDN.MX,27034,Banco Bradesco SA ADR,20
BRFSN.MX,27035,BRF SA,20
BAKN.MX,27036,Braskem SA,20
CIGN.MX,27037,CEMIG - Companhia Energetica Minas Gerais ADR,20
ELPN.MX,27038,Companhia Paranaense de Energia COPEL,20
SIDN.MX,27039,National Steel Company,20
ERJN.MX,27040,Embraer SA ADR,20
GFAN.MX,27041,Gafisa SA ADR,20
GGBN.MX,27042,Gerdau SA ADR,20
GOLN.MX,27043,Gol Linhas Aereas Inteligentes SA ADR,20
CBDN.MX,27045,Companhia Brasileira de Distribuicao,20
TSUN.MX,27047,TIM Participacoes SA,20
ECN.MX,27050,Ecopetrol SA ADR,20
GFMULTIO.MX,27061,Grupo Financiero Multiva SAB De CV,20
ACCELSAB.MX,27062,Accel S.A.B. De C.V,20
BAFARB.MX,27072,Grupo Bafar S.A.B. De C.V,20
BSBRN.MX,27073,Banco Santander Brasil SA ADR,20
CIEB.MX,27080,CIE B SAB De CV,20
FEMSAUB.MX,27082,Fomento Economico Mexicano UB,20
COLLADO.MX,27083,G Collado SAB de CV,20
CYDSASAA.MX,27088,Cydsa S.A.B. De C.V,20
DINEA.MX,27089,Dine A S.A.B. De C.V,20
DINEB.MX,27090,Dine B S.A.B. De C.V,20
EDOARDOB.MX,27091,Edoardos Martin S.A.B. De C.V,20
LIVEPOL1.MX,27092,El Puerto De Liverpool SAB De CV,20
CABLECPO.MX,27096,Empresas Cablevision S.A. De C.V,20
BEVIDESB.MX,27098,Farmacias Benavides B SAB De CV,20
FINAMEXO.MX,27099,Casa De Bolsa Finamex SAB De CV,20
FINDEP.MX,27100,Financiera Independencia SAB De CV,20
FRAGUAB.MX,27103,Corporativo Fragua S.A.B. De C.V,20
GBMO.MX,27104,Corporativo Gbm S.A.B. De C. V,20
CIDMEGA.MX,27111,Grupe S.A.B. De C.V,20
GFAMSAA.MX,27115,Grupo Famsa S.A.B. De C.V,20
GMD.MX,27122,Grupo Mexicano De Desarrollo S.A.B,20
GNP.MX,27124,Grupo Nacional Provincial S.A.B,20
GPH1.MX,27125,Grupo Palacio De Hierro SAB De CV,20
VASCONI.MX,27133,Grupo Vasconia S.A.B,20
HIMEXSAA.MX,27135,Himexsa SAB de CV,20
IDEALB1.MX,27136,Impulsora Del Desarrollo SAB De CV,20
CERAMICB.MX,27139,Internacional De Ceramica B,20
INVEXA.MX,27141,Invex Controladora S.A.B. De C.V,20
KIMBERB.MX,27143,Kimberly - Clark De Mexico B,20
KUOA.MX,27144,Grupo Kuo A S.A.B. De C.V,20
KUOB.MX,27145,Grupo Kuo B S.A.B. De C.V,20
LAMOSA.MX,27146,Grupo Lamosa S.A.B. De C.V,20
MUX.MX,27149,McEwen Mining Inc,20
CMRB.MX,27152,CMR S.A.B. De C.V,20
MINSAB.MX,27156,Grupo Minsa S.A.B. De C.V,20
CMOCTEZ.MX,27157,Corporacion Moctezuma SAB De CV,20
PASAB.MX,27160,Promotora Ambiental S.A.B. De C.V,20
PROCORPB.MX,27165,Procorp B S.A. De C.V,20
TMMA.MX,27179,Grupo TMM S.A,20
VALUEGFO.MX,27184,Value Grupo Financiero SAB De CV,20
CAT.MX,29985,Caterpillar Inc,20
F.MX,30000,Ford Motor Company,20
MCD.MX,30024,McDonald’s Corporation,20
MMM.MX,30030,3M Company,20
BPN.MX,30036,BP PLC ADR,20
NVSN.MX,30055,Novartis AG ADR,20
ERICN.MX,30086,Telefonaktiebolaget LM Ericsson B ADR,20
AZNN.MX,30164,AstraZeneca PLC ADR,20
GSKN.MX,30173,GlaxoSmithKline PLC ADR,20
CL.MX,30203,Colgate-Palmolive Company,20
PFE.MX,30214,Pfizer Inc,20
VZ.MX,30235,Verizon Communications Inc,20
BMY.MX,30238,Bristol-Myers Squibb Company,20
JNJ.MX,30247,Johnson & Johnson,20
MUFGN.MX,30252,Mitsubishi UFJ Financial Group Inc ADR,20
TXN.MX,30274,Texas Instruments Incorporated,20
HPQ.MX,30277,HP Inc,20
CAJN.MX,30286,Canon Inc ADR,20
PEP.MX,30290,PepsiCo Inc,20
SMSNN.MX,41040,Samsung Electronics Co Ltd DRC,20
FBRN.MX,41600,Fibra Celulosa SA ADR,20
VIVN.MX,41601,Telefonica Brasil SA,20
AFIRCORB.MX,955725,Afircor Sa De Cv Sirv B,20
AFIRPLUB.MX,955726,Afirplus Sa De Cv Siid B,20
AXESCPF1.MX,955730,Latin 5 Sa De Cv B,20
AXESMPF1.MX,955731,Latin 3 Sa De Cv C,20
BMERINDP.MX,955732,Bbva Bancomer Indizado Sa Cv P,20
CONVERA.MX,955733,Convertidora Industrial SAB De CV,20
DINBUR1B.MX,955734,Dinero Inbursa Sa De Cv B,20
FINDICA.MX,955735,Renta Variable Finamex SA de CV FIRV A,20
FONIBURB.MX,955736,Dinamico De Inversiones Bursatiles Sa Cv B,20
FPYMEB.MX,955737,Bbva Bancomer Deuda Empresas Sa Cv Siid B,20
GBMF3BF.MX,955738,Gbm Valores De Deuda Sa De Cv Siid Bf,20
GBMM3BE.MX,955739,Gbm Fondo Personas Morales Exentas Be,20
GBMV1BO.MX,955740,Gbm Inversiones Bursatiles Sa De Cv Sirv Bo,20
HBCBOLBFP.MX,955741,Hsbc-V3 Sa De Cv Sirv Bfp,20
INBUREXB.MX,955744,Inburex Sa De Cv Siid B,20
INTERM1B.MX,955745,Interacciones Pm 1 Sa De Cv Siid B,20
INTERMDB5.MX,955746,Interacciones 1 Sa De Cv Siid B5,20
SANTANGM0.MX,955749,Santander De Deuda Gubernamental Sa De Cv Siid M0,20
STER1PB.MX,955750,Santander Plus De Corto Plazo Sa De Cv B,20
STER22B.MX,955751,Santander De Deuda Prevision Social Dos Siid B,20
TEAKCPO.MX,955752,Proteak Uno SAB de CV,20
VALMX20B1.MX,955753,Valmex De Rendimiento Sa De Cv Sirv B1,20
VALOR3MB.MX,955754,Valorum Tres Sa De Cv B,20
VALUEV5B.MX,955755,Value Monterrey Sa De Cv Sirv B,20
VECTMF1.MX,955756,Vector Fondo Md Siid B,20
VLX16B1NC.MX,955757,Valmex Corporativo Sa De Cv B1Nc,20
KHC.MX,955950,Kraft Heinz Co,20
ENGIN.MX,959122,Engie SA,20
CBPON.MX,962435,China Biologic Products Inc,20
MGGTN.MX,962436,Meggitt PLC,20
DGN.MX,962593,Vinci SA,20
JAVER.MX,962594,Servicios Corporativos Javer SAPI de CV,20
PLANI.MX,985852,Planigrupo Latam SAPI de CV,20
DOMN.MX,986424,Global Dominion Access SA,20
AAUN.MX,993694,Almaden Minerals Ltd,20
ABBV.MX,993695,AbbVie Inc,20
ACCN.MX,993697,Accor SA,20
ACXN.MX,993698,Acerinox,20
ADPN.MX,993699,Aeroports de Paris SA,20
ADSN.MX,993700,Adidas AG,20
AGNC.MX,993701,AGNC Investment Corp,20
AIG.MX,993702,American International Group Inc,20
ALLEN.MX,993704,Allegion PLC,20
APA.MX,993708,Apache Corporation,20
AVP.MX,993711,Avon Products Inc,20
BASN.MX,993715,BASF SE NA O.N,20
BBY.MX,993718,Best Buy Co Inc,20
BKGN.MX,993721,The Berkeley Group Holdings plc,20
BLK.MX,993722,BlackRock Inc,20
BMEN.MX,993723,Bolsas y Mercados Espanoles,20
BMWM5N.MX,993724,Bayerische Motoren Werke AG,20
BNS.MX,993726,Bank of Nova Scotia,20
CLF.MX,993731,Cleveland-Cliffs Inc,20
CMG.MX,993733,Chipotle Mexican Grill Inc,20
COG.MX,993734,Cabot Oil & Gas Corporation,20
COO.MX,993735,Cooper Companies Inc,20
COP.MX,993736,ConocoPhillips,20
CTXS.MX,993738,Citrix Systems Inc,20
DBK.MX,993742,Deutsche Bank AG NA O.N,20
DDD.MX,993743,3D Systems Corporation,20
DHR.MX,993744,Danaher Corporation,20
DIDAN.MX,993745,Distribuidora Intl de Aliment,20
DLTR.MX,993747,Dollar Tree Inc,20
DVN.MX,993750,Devon Energy Corporation,20
EBAY.MX,993751,eBay Inc,20
EBON.MX,993752,Erste Group Bank AG,20
ECL.MX,993753,Ecolab Inc,20
EL.MX,993754,Estee Lauder Companies Inc,20
EMR.MX,993755,Emerson Electric Company,20
ESRX.MX,993758,Express Scripts Holding Co,20
EXC.MX,993759,Exelon Corporation,20
EXO1N.MX,993760,Exor NV,20
FCAUN.MX,993761,Fiat Chrysler Automobiles NV,20
FDX.MX,993763,FedEx Corporation,20
FLEXN.MX,993770,Flex Ltd,20
FMEN.MX,993771,Fresenius Medical Care KGAA ST,20
FMTY14.MX,993772,Fibra Mty SAPI de CV,20
FSLR.MX,993774,First Solar Inc,20
GD.MX,993777,General Dynamics Corporation,20
GEOB.MX,993778,Corporacion Geo SAB de CV,20
GGAN.MX,993779,Goldgroup Mining Inc,20
GLW.MX,993782,Corning Incorporated,20
GPRO.MX,993785,GoPro Inc,20
GPS.MX,993786,Gap Inc,20
GRFPN.MX,993787,Grifols SA Pref,20
GT.MX,993788,The Goodyear Tire & Rubber Company,20
HAL.MX,993789,Halliburton Company,20
HEIN.MX,993790,Heidelbergcement AG O.N,20
HON.MX,993791,Honeywell International Inc,20
HTZ.MX,993792,Hertz Global Holdings Inc,20
IBM.MX,993793,International Business Machines,20
IP.MX,993795,International Paper Company,20
JBLU.MX,993798,JetBlue Airways Corporation,20
KBH.MX,993801,KB Home,20
KERN.MX,993802,Kering SA,20
KGFN.MX,993803,Kingfisher PLC,20
KPNN.MX,993805,Koninklijke KPN NV,20
KSU.MX,993806,Kansas City Southern,20
LNAN.MX,993808,Linde AG O.N,20
LLY.MX,993809,Eli Lilly and Company,20
LUV.MX,993812,Southwest Airlines Company,20
MAS.MX,993816,Masco Corporation,20
MCK.MX,993817,McKesson Corporation,20
MET.MX,993821,MetLife Inc,20
MGM.MX,993822,MGM Resorts International,20
MLM.MX,993823,Martin Marietta Materials Inc,20
MLNN.MX,993824,Compagnie Generale des Etablissements Michelin SCA,20
MOS.MX,993827,Mosaic Co,20
MTXN.MX,993831,MTU Aero Engines NA O.N,20
NCLHN.MX,993833,Norwegian Cruise Line Holdings Ltd,20
NESNN.MX,993834,Nestle SA,20
NOV.MX,993838,National Oilwell Varco Inc,20
ODP.MX,993841,Office Depot Inc,20
OPK.MX,993842,Opko Health Inc,20
BKNG.MX,993845,Booking Holdings Inc,20
PHM.MX,993846,PulteGroup Inc,20
PLD.MX,993847,ProLogis Inc,20
PRU.MX,993849,Prudential Financial Inc,20
PV.MX,993850,Pena Verde SAB de CV,20
RCL.MX,993852,Royal Caribbean Cruises Ltd,20
RH.MX,993853,RH,20
ROST.MX,993854,Ross Stores Inc,20
S.MX,993855,Sprint Corp,20
SBRYN.MX,993856,J Sainsbury PLC,20
SCHW.MX,993859,The Charles Schwab Corporation,20
SINAN.MX,993861,SINA Corp,20
SLBN.MX,993863,Schlumberger NV,20
SRE.MX,993865,Sempra Energy,20
SRENN.MX,993866,Swiss Re AG,20
STAN.MX,993867,Stabilus,20
STLD.MX,993868,Steel Dynamics Inc,20
SXSN.MX,993869,Spectris,20
TELN.MX,993871,TE Connectivity Ltd,20
TJX.MX,993873,TJX Companies Inc,20
TMO.MX,993874,Thermo Fisher Scientific Inc,20
TRN.MX,993875,Trinity Industries Inc,20
TRV.MX,993876,The Travelers Companies Inc,20
TXT.MX,993881,Textron Inc,20
UHRN.MX,993884,Swatch Group I,20
UNP.MX,993886,Union Pacific Corporation,20
UPS.MX,993887,United Parcel Service Inc,20
VISCN.MX,993891,Viscofan,20
VRTX.MX,993893,Vertex Pharmaceuticals Inc,20
WEIRN.MX,993897,Weir Group PLC,20
WFTN.MX,993900,Weatherford International PLC,20
WHR.MX,993901,Whirlpool Corporation,20
WU.MX,993902,Western Union Company,20
XLNX.MX,993905,Xilinx Inc,20
JEN.MX,993997,Just Eat,20
UBIN.MX,993998,Ubisoft Entertainment,20
IFXN.MX,994053,Infineon Technologies AG NA O.N,20
FIS.MX,994499,Fidelity National Information Services Inc,20
SBSN.MX,996062,Sabesp,20
ACHN.MX,997452,Aluminum Corp of China Ltd ADR,20
ACNN.MX,997453,Accenture plc,20
AGKN.MX,997454,Aggreko,20
BCSN.MX,997457,Barclays PLC ADR,20
BLD.MX,997459,Topbuild Corp,20
BTN.MX,997461,BT Group PLC ADR,20
BVNN.MX,997462,Compania de Minas Buenaventura SAA ADR,20
CBKN.MX,997463,Commerzbank AG O.N,20
CC.MX,997464,Chemours Co,20
CHKPN.MX,997465,Check Point Software Technologies Ltd,20
CIEAN.MX,997466,Cie Automotive,20
COF.MX,997467,Capital One Financial Corporation,20
CRHN.MX,997468,CRH PLC ADR,20
DNOW.MX,997471,Now Inc,20
EDUN.MX,997472,New Oriental Education & Technology,20
EOG.MX,997473,EOG Resources Inc,20
EVR.MX,997474,Evercore Partners Inc,20
EZEN.MX,997475,Grupo Ezentis SA,20
FISV.MX,997477,Fiserv Inc,20
FLR.MX,997478,Fluor Corporation,20
FLYN.MX,997479,Fonciere Lyonnaise,20
FOX.MX,997480,Twenty-First Century Fox Inc,20
GNW.MX,997481,Genworth Financial Inc,20
HMCN.MX,997484,Honda Motor Co Ltd ADR,20
HPE.MX,997485,Hewlett Packard Enterprise Co,20
IBEN.MX,997486,Iberdrola,20
ICE.MX,997487,Intercontinental Exchange Inc,20
INTU.MX,997489,Intuit Inc,20
JKSN.MX,997491,JinkoSolar Holding Company Limited,20
KSS.MX,997493,Kohl’s Corporation,20
LYGN.MX,997495,Lloyds Banking Group PLC ADR,20
MD.MX,997496,Mednax Inc,20
MTG.MX,997497,MGIC Investment Corporation,20
MTN.MX,997498,ArcelorMittal SA ADR,20
NOMDN.MX,997499,Nomad Foods Ltd,20
NTESN.MX,997500,NetEase Inc,20
NVON.MX,997502,Novo Nordisk A/S,20
NWL.MX,997503,Newell Brands Inc,20
NXPIN.MX,997504,NXP Semiconductors NV,20
NXTN.MX,997505,Next PLC,20
PPG.MX,997506,PPG Industries Inc,20
RACEN.MX,997509,Ferrari NV,20
RYAN.MX,997513,Ryanair Holdings PLC,20
SABEN.MX,997514,B. Sabadell,20
SHW.MX,997516,Sherwin-Williams Co,20
SIMON.MX,997517,Silicon Motion Technology,20
SPGI.MX,997518,S&P Global Inc,20
TECKN.MX,997522,Teck Resources Ltd B,20
TKR.MX,997523,Timken Company,20
TREN.MX,997524,Tecnicas Reunidas,20
TSMN.MX,997525,Taiwan Semiconductor Manufacturing,20
TWLO.MX,997526,Twilio Inc,20
VOWG_P.MX,997529,Volkswagen AG VZO O.N,20
WBN.MX,997530,Weibo Corp,20
AVGO.MX,1043296,Broadcom Inc,20
DWDP.MX,1052721,DowDuPont Inc,20
SHGN.MX,1055028,Shinhan Financial Group Co Ltd,20
ACOFN.MX,1061612,Atlas Copco AB Class A,20
AENAN.MX,1061614,Aena SME SA,20
AIN.MX,1061615,Air Liquide SA,20
ALB.MX,1061616,Albemarle Corp,20
AMP.MX,1061617,Ameriprise Financial Inc,20
ASMLN.MX,1061618,ASML Holding NV,20
BEN.MX,1061619,Franklin Resources Inc,20
BZUNN.MX,1061620,Baozun Inc,20
CI.MX,1061621,Cigna Corporation,20
DB1N.MX,1061622,Deutsche Boerse AG,20
DVMT.MX,1061623,Dell Technologies Inc,20
ELISN.MX,1061624,Elis Services SA,20
ESNTN.MX,1061625,Essentra PLC,20
FGEN.MX,1061626,FibroGen Inc,20
GLENN.MX,1061627,Glencore PLC,20
HLT.MX,1061628,Hilton Worldwide Holdings Inc,20
ITW.MX,1061629,Illinois Tool Works Inc,20
LRN.MX,1061631,Legrand SA,20
LUXN.MX,1061632,Luxottica Group SpA,20
PII.MX,1061633,Polaris Industries Inc,20
SGON.MX,1061635,Compagnie de Saint Gobain SA,20
SY1N.MX,1061636,Symrise AG Inh. O.N,20
SYK.MX,1061637,Stryker Corporation,20
TALN.MX,1061638,TAL Education Group,20
VISTAA.MX,1061639,Vista Oil & Gas SA de CV,20
YYN.MX,1061640,YY Inc Class A,20
NTT1N.MX,1072265,Nippon Telegraph & Telephone Corp,20
NTDOYN.MX,1072266,Nintendo Co Ltd,20
ATHMN.MX,1072267,Autohome Inc ADR,20
NOC.MX,1072268,Northrop Grumman Corporation,20
RRCO.MX,1072269,Range Resources Corporation,20
RJF.MX,1072270,Raymond James Financial Inc,20
TGSN.MX,1072271,Transportadora de Gas del Sur SA ADR,20
VMW.MX,1072272,VMware Inc,20
ALFAA.MX,1089566,Alfa S.A.B. De C.V,20
ALPEKA.MX,1089567,Alpek S.A.B. De C.V,20
ALSEA.MX,1089568,Alsea S.A.B. De C.V,20
AMD.MX,1089569,Advanced Micro Devices Inc,20
AMXL.MX,1089570,America Movil SAB de CV,20
ASURB.MX,1089571,Grupo Aeroportuario Del Sureste,20
BAC.MX,1089572,Bank of America Corp,20
BBVA.MX,1089573,BBVA,20
BIMBOA.MX,1089574,Grupo Bimbo S.A.B. De C.V,20
BSMXB.MX,1089575,Grupo Financiero Santander Mexico SAB de CV Class B,20
CUERVO.MX,1089576,Becle SA de CV,20
CVX.MX,1089577,Chevron Corp,20
ELEKTRA.MX,1089578,Grupo Elektra S.A.B. De C.V,20
FIBRAMQ12.MX,1089579,Macquarie Mexico Real Estate Management SA de CV,20
FIBRAPL14.MX,1089580,Prologis Property Mexico SA de CV,20
FUNO11.MX,1089581,Fibra Uno Administracion SA de CV,20
GAPB.MX,1089582,Grupo Aeroportuario del Pacifico SAB De CV Class B,20
GENTERA.MX,1089583,Gentera SAB de CV,20
GMEXICOB.MX,1089584,Grupo Mexico S.A.B. De C.V,20
GRUMAB.MX,1089585,Gruma SAB de CV,20
IENOVA.MX,1089586,Infraestructura Energetica Nova SAB,20
KIMBERA.MX,1089587,Kimberly - Clark De Mexico A,20
KOFL.MX,1089588,Coca Cola Femsa SAB De CV,20
LALAB.MX,1089589,Grupo LALA SA de CV,20
MEXCHEM.MX,1089590,Mexichem S.A.B. De C.V,20
NEMAKA.MX,1089591,Nemak SAB de CV,20
OMAB.MX,1089592,Grupo Aeroportuario Del CentroNorte,20
PAPPEL.MX,1089593,Bio Pappel S.A.B. De C.V,20
PEOLES.MX,1089594,Industrias Penoles Sab De CV,20
PINFRA.MX,1089595,PINFRA SAB De CV,20
SITESB1.MX,1089596,Telesites SAB de CV,20
TERRA13.MX,1089597,CI Banco SA Institucion de Banca Multiple FF/00939,20
VOLARA.MX,1089599,VOLARIS A,20
WALMEX.MX,1089600,Wal - Mart De Mexico SAB De CV,20
CAPGN.MX,1096015,Capgemini SE,20
VACNN.MX,1096016,VAT Group AG,20
TKCN.MX,1097452,Turkcell Iletisim Hizmetleri AS,20

#JK INDONESIA
AMAN.JK,1158997,Makmur Berkah Amanda,12
CSRA.JK,1156364,Cisadane Sawit Raya,12
ABMM.JK,101278,Abm Investama Tbk,12
ACES.JK,101279,Ace Hardware Indonesia Tbk,12
ACST.JK,101280,Acset Indonusa Tbk,12
ADRO.JK,101281,Adaro Energy Tbk,12
ADHI.JK,101282,Adhi Karya Persero Tbk,12
ASSA.JK,101283,Adi Sarana Armada Tbk,12
ADMF.JK,101284,Adira Dinamika Multi Finance,12
APLN.JK,101286,Agung Podomoro Land Tbk,12
ADES.JK,101287,Akasha Wira International Tbk,12
AIMS.JK,101288,Akbar Indomakmur Stimec Tbk,12
AKRA.JK,101289,Akr Corporindo Tbk,12
ALKA.JK,953124,Alakasa Industrindo Tbk,12
ASRI.JK,101290,Alam Sutera Realty Tbk,12
FIRE.JK,1025106,Alfa Energi Investama Tbk PT,12
ALDO.JK,101291,Alkindo Naratama Tbk,12
ALMI.JK,101292,Alumindo Light Metal Industry,12
ATIC.JK,955951,Anabatic Technologies Tbk PT,12
OKAS.JK,101293,Ancora Indonesia Resources Tbk,12
ANDI.JK,1091190,Andira Agro Tbk PT,12
AGII.JK,991135,Aneka Gas Industri Tbk PT,12
ANTM.JK,101294,Aneka Tambang Persero Tbk,12
AKKU.JK,998092,Anugerah Kagum Karya Utama Tbk PT,12
MYTX.JK,101208,Apac Citra Centertex Tbk,12
APEX.JK,101295,Apexindo Pratama Duta Tbk,12
AKPI.JK,101209,Argha Karya Prima Ind Tbk,12
ARGO.JK,953931,Argo Pantes Tbk,12
APII.JK,101296,Arita Prima Indonesia Tbk,12
DIGI.JK,1096062,Arkadia Digital Media Tbk PT,12
ARKA.JK,1141610,Arkha Jayanti Persada PT,12
JAYA.JK,1122744,Armada Berjaya Trans Tbk PT,12
ARMY.JK,1025099,Armidian Karyatama Tbk PT,12
APOL.JK,102130,Arpeni Pratama Ocean Line Tbk,12
ARTA.JK,101297,Arthavest Tbk,12
ARNA.JK,101298,Arwana Citramulia Tbk,12
AMFG.JK,101302,Asahimas Flat Glass Tbk,12
POLY.JK,101303,Asia Pacific Fibers Tbk,12
AGAR.JK,1155848,Asia Sejahtera Mina Tbk,12
APLI.JK,101304,Asiaplast Industries Tbk,12
AALI.JK,101305,Astra Agro Lestari Tbk,12
ASGR.JK,101306,Astra Graphia Tbk,12
ASII.JK,101307,Astra International Tbk,12
AUTO.JK,101308,Astra Otoparts Tbk,12
ABDA.JK,102973,Asuransi Bina Dana Arta Tbk,12
ASBI.JK,102978,Asuransi Bintang Tbk,12
ASDM.JK,101299,Asuransi Dayin Mitra Tbk,12
ASJT.JK,943651,Asuransi Jasa Tania Tbk,12
LIFE.JK,1141612,Asuransi Jiwa Sinarmas Msig PT,12
JMAS.JK,1056518,Asuransi Jiwa Syariah Jasa Mitra Abadi Tbk PT,12
ASMI.JK,101309,Asuransi Kresna Mitra Tbk PT,12
ASRM.JK,101301,Asuransi Ramayana Tbk,12
TUGU.JK,1079934,Asuransi Tugu Pratama Indonesia Tbk PT,12
AMIN.JK,962000,Ateliers Mecaniques D’Indonesie Tbk PT,12
ARII.JK,101310,Atlas Resources Tbk,12
ANJT.JK,101210,Austindo Nusantara Jaya Tbk,12
NASA.JK,1031278,Ayana Land International Tbk PT,12
BNBR.JK,101312,Bakrie & Brothers Tbk,12
UNSP.JK,101313,Bakrie Sumatera Plantations,12
BTEL.JK,101314,Bakrie Telecom Tbk,12
ELTY.JK,101315,Bakrieland Development Tbk,12
BOLA.JK,1137584,Bali Bintang Sejahtera Tbk PT,12
BALI.JK,102131,Bali Towerindo Sentra Tbk,12
AGRS.JK,943645,Bank Agris Tbk,12
INPC.JK,101316,Bank Artha Graha Internasional,12
ARTO.JK,962597,Bank Artos Indonesia Tbk PT,12
BRIS.JK,1076597,Bank BRISyariah Tbk PT,12
BBKP.JK,101318,Bank Bukopin Tbk,12
BNBA.JK,101211,Bank Bumi Arta Tbk,12
BACA.JK,101319,Bank Capital Indonesia Tbk,12
BBCA.JK,101354,Bank Central Asia Tbk,12
BNGA.JK,943652,Bank Cimb Niaga Tbk,12
BDMN.JK,101320,Bank Danamon Indonesia Tbk,12
DNAR.JK,943661,Bank Dinar Indonesia Tbk,12
BGTG.JK,978769,Bank Ganesha Tbk PT,12
BBHI.JK,958362,Bank Harda Internasional Tbk PT,12
BINA.JK,101323,Bank Ina Perdana Tbk,12
BMRI.JK,101325,Bank Mandiri Persero Tbk,12
BMAS.JK,101213,Bank Maspion Indonesia Tbk,12
MAYA.JK,101326,Bank Mayapada Internasional,12
BNII.JK,101324,Bank Maybank Indonesia Tbk PT,12
MEGA.JK,101327,Bank Mega Tbk,12
BBMD.JK,101328,Bank Mestika Dharma Tbk,12
NAGA.JK,101214,Bank Mitraniaga Tbk,12
BABP.JK,101322,Bank Mnc Internasional Tbk,12
NOBU.JK,101329,Bank Nationalnobu Tbk,12
BBNI.JK,101317,Bank Negara Indonesia Tbk,12
NISP.JK,101216,Bank Ocbc Nisp Tbk,12
BSWD.JK,101217,Bank Of India Indonesia Tbk,12
PNBN.JK,101331,Bank Pan Indonesia Tbk,12
PNBS.JK,101332,Bank Panin Syariah Tbk,12
BJBR.JK,101330,Bank Pembangunan Barat Dan Banten,12
BEKS.JK,101335,Bank Pembangunan Daerah Banten Tbk PT,12
BJTM.JK,101333,Bank Pembangunan Timur Tbk,12
BNLI.JK,101334,Bank Permata Tbk,12
BKSW.JK,101218,Bank Qnb Indonesia Tbk,12
AGRO.JK,101356,Bank Rakyat Indonesia Agroniaga,12
BBRI.JK,101336,Bank Rakyat Indonesia Persero,12
BSIM.JK,101337,Bank Sinarmas Tbk,12
BTPN.JK,101339,Bank Tabungan Pensiunan Nasional,12
BBTN.JK,101338,Bank Tabungan Negara Persero,12
BTPS.JK,1084855,Bank Tabungan Pensiunan Nasional Syariah PT,12
BVIC.JK,101340,Bank Victoria International,12
MCOR.JK,101341,Bank Windu Kentjana Int,12
SDRA.JK,101321,Bank Woori Saudara Indonesia 1906,12
BBYB.JK,945176,Bank Yudha Bhakti Tbk,12
BSSR.JK,101342,Baramulti Suksessarana Tbk,12
BRPT.JK,101343,Barito Pacific Tbk,12
BPFI.JK,102974,Batavia Prosperindo Finance,12
BPII.JK,943658,Batavia Prosperindo Int,12
BPTR.JK,1088203,Batavia Prosperindo Trans Tbk PT,12
BYAN.JK,101344,Bayan Resources Tbk,12
BAYU.JK,101219,Bayu Buana Tbk,12
BAPA.JK,101345,Bekasi Asri Pemula Tbk,12
BEST.JK,101346,Bekasi Fajar Industrial Estate,12
BIPI.JK,101347,Benakat Integra Tbk,12
RMBA.JK,101220,Bentoel International Investama,12
BLUE.JK,1141290,Berkah Prima Perkasa Tbk PT,12
BRNA.JK,101349,Berlina Tbk,12
BTON.JK,101350,Betonjaya Manunggal Tbk,12
BFIN.JK,101351,BFI Finance Indonesia Tbk,12
BAPI.JK,1152820,Bhakti Agung Propertindo,12
BIPP.JK,101352,Bhuwanatala Indah Permai Tbk,12
PAMG.JK,1141285,Bima Sakti Pertiwi Tbk PT,12
BIKA.JK,955952,Binakarya Jaya Abadi Tbk PT,12
BMSR.JK,945724,Bintang Mitra Semestaraya Tbk,12
BOGA.JK,994431,Bintang Oto Global Tbk PT,12
BISI.JK,101353,Bisi International Tbk,12
POSA.JK,1130941,Bliss Properti Indonesia Tbk PT,12
BIRD.JK,943663,Blue Bird Tbk,12
BORN.JK,101355,Borneo Lumbung Energi & Metal,12
BOSS.JK,1062863,Borneo Olah Sarana Sukses PT,12
BBLD.JK,101221,Buana Finance Tbk,12
BULL.JK,101357,Buana Listya Tama Tbk PT,12
BUDI.JK,101358,Budi Starch & Sweetener Tbk,12
BUKK.JK,955767,Bukaka Teknik Utama Tbk Pt,12
BKDP.JK,101359,Bukit Darmo Property Tbk,12
BUVA.JK,101360,Bukit Uluwatu Villa Tbk,12
BCIP.JK,101361,Bumi Citra Permai Tbk,12
BUMI.JK,101363,Bumi Resources Tbk,12
BRMS.JK,101362,Bumi Resources Minerals Tbk,12
BSDE.JK,101364,Bumi Serpong Damai Tbk,12
BTEK.JK,101365,Bumi Teknokultura Unggul Tbk,12
HOKI.JK,1025102,Buyung Poetra Sembada Tbk PT,12
CAKK.JK,1097641,Cahayaputra Asa Keramik Tbk PT,12
CKRA.JK,101222,Cakra Mineral Tbk,12
CAMP.JK,1056519,Campina Ice Cream Industry Tbk PT,12
CASA.JK,986048,Capital Financial Indonesia Tbk PT,12
MTFN.JK,101367,Capitalinc Investment Tbk,12
CANI.JK,101368,Capitol Nusantara Indonesia,12
CPRI.JK,1128658,Capri Nusa Satu Properti Tbk PT,12
CASS.JK,101369,Cardig Aero Services Tbk,12
CSAP.JK,101370,Catur Sentosa Adiprana Tbk,12
CNTX_P.JK,102969,Centex Tbk Prf,12
DKFT.JK,998093,Central Omega Resources Tbk PT,12
CPRO.JK,101371,Central Proteina Prima Tbk,12
CENT.JK,101372,Centratama Telekomunikasi Ind,12
IGAR.JK,101374,Champion Pacific Indonesia Tbk,12
TPIA.JK,101375,Chandra Asri Petrochemical Tbk,12
NICK.JK,1084856,Charnic Capital Tbk PT,12
CPIN.JK,101376,Charoen Pokphand Indonesia TBK PT,12
CINT.JK,102979,Chitose Internasional Tbk,12
POWR.JK,985288,Cikarang Listrindo Tbk PT,12
XCID.JK,1141772,Ciptadana Asset Management REIT,12
CTRA.JK,101378,Ciputra Development Tbk,12
CITA.JK,1059849,Cita Mineral Investindo Tbk PT,12
CTTH.JK,101381,Citatah Tbk,12
CMNP.JK,101382,Citra Marga Nusaphala Persada,12
CLAY.JK,1118028,Citra Putra Realty Tbk PT,12
CTBN.JK,945180,Citra Tubindo Tbk,12
CFIN.JK,101383,Clipan Finance Indonesia Tbk,12
CLPI.JK,101384,Colorpak Indonesia Tbk,12
CCSI.JK,1137585,Communication Cable Systems Indonesia Tbk PT,12
KPAS.JK,1096524,Cottonindo Ariesta Tbk PT,12
COWL.JK,101385,Cowell Development Tbk,12
TEBE.JK,1155552,Dana Brata Luhur PT,12
DEFI.JK,945182,Danasupra Erapacific Tbk,12
SCBD.JK,101223,Danayasa Arthatama Tbk,12
DEWA.JK,101386,Darma Henwa Tbk,12
KAYU.JK,1141286,Darmi Bersaudara Tbk PT,12
DVLA.JK,101387,Darya-Varia Laboratoria Tbk,12
DLTA.JK,101224,Delta Djakarta Tbk,12
DOID.JK,101388,Delta Dunia Makmur Tbk,12
PDES.JK,101225,Destinasi Tirta Nusantara Tbk,12
DEAL.JK,1097838,Dewata Freight International Tbk PT,12
DSFI.JK,101389,Dharma Samudera Fishing Tbk,12
DSNG.JK,101390,Dharma Satya Nusantara Tbk,12
DSSA.JK,102977,Dian Swastatika Sentosa Tbk,12
DMMX.JK,1153258,Digital Mediatama Maxima PT,12
KOTA.JK,1141614,DMS Propertindo Tbk PT,12
DPUM.JK,962002,Dua Putra Utama Makmur PT,12
DART.JK,101392,Duta Anggada Realty Tbk,12
DAYA.JK,985737,Duta Intidaya Tbk PT,12
DUTI.JK,101393,Duta Pertiwi Tbk,12
DPNS.JK,101391,Duta Pertiwi Nusantara Tbk,12
DWGL.JK,1057061,Dwi Guna Laksana Tbk PT,12
DYAN.JK,101394,Dyandra Media International,12
BWPT.JK,101366,Eagle High Plantations Tbk,12
EAST.JK,1141611,Eastparc Hotel Tbk PT,12
LRNA.JK,102133,Eka Sari Lorena Transport Tbk,12
EKAD.JK,101395,Ekadharma International Tbk,12
EMTK.JK,101226,Elang Mahkota Teknologi Tbk,12
ECII.JK,101396,Electronic City Indonesia Tbk,12
ELSA.JK,101397,Elnusa Tbk,12
MDKI.JK,1050170,Emdeki Utama Tbk PT,12
ENRG.JK,101398,Energi Mega Persada Tbk,12
EPMT.JK,101227,Enseval Putra Megatrading Tbk,12
ENVY.JK,1141289,Envy Technologies Indonesia Tbk PT,12
GSMF.JK,101228,Equity Development Investment,12
ERAA.JK,101399,Erajaya Swasembada Tbk,12
ERTX.JK,101229,Eratex Djaja Tbk,12
BEEF.JK,1117906,Estika Tata Tiara Tbk PT,12
ETWA.JK,101400,Eterindo Wahanatama Tbk,12
LCGP.JK,101401,Eureka Prima Jakarta Tbk,12
ESTI.JK,101230,Ever Shine Textile Industry,12
GREN.JK,101402,Evergreen Invesco Tbk,12
CNKO.JK,101403,Exploitasi Energi Indonesia,12
TAXI.JK,101404,Express Transindo Utama Tbk,12
FASW.JK,101405,Fajar Surya Wisesa Tbk,12
FAST.JK,101231,Fast Food Indonesia Tbk,12
KBLV.JK,101406,First Media Tbk,12
FISH.JK,101232,Fks Multi Agro Tbk,12
FORU.JK,101407,Fortune Indonesia Tbk,12
FMII.JK,101408,Fortune Mate Indonesia Tbk,12
FORZ.JK,1009373,Forza Land Indonesia Tbk PT,12
FUJI.JK,1141613,Fuji Finance Indonesia Tbk PT,12
GAMA.JK,101409,Gading Development Tbk,12
GJTL.JK,101410,Gajah Tunggal Tbk,12
GLVA.JK,1156094,Galva Technologies Tbk PT,12
GTBO.JK,101411,Garda Tujuh Buana Tbk,12
GIAA.JK,101412,Garuda Indonesia Persero Tbk,12
GMFI.JK,1052356,Garuda Maintenance Facility AeroAsia Tbk PT,12
BOLT.JK,955953,Garuda Metalindo Tbk PT,12
GOOD.JK,1097268,Garudafood Putra Putri Jaya Tbk PT,12
SLIS.JK,1153099,Gaya Abadi Sempurna ,12
GEMA.JK,101413,Gema Grahasarana Tbk,12
GHON.JK,1073263,Gihon Telekomunikasi Indonesia Tbk PT,12
WOWS.JK,1155107,Ginting Jaya Energi,12
BMTR.JK,101414,Global Mediacom Tbk,12
GLOB.JK,101415,Global Teleshop Tbk,12
SMMT.JK,101416,Golden Eagle Energy Tbk,12
GEMS.JK,101233,Golden Energy Mines Tbk,12
POLU.JK,1138474,Golden Flower Tbk PT,12
GOLL.JK,943646,Golden Plantation Tbk,12
GDYR.JK,943650,Goodyear Indonesia Tbk,12
GMTD.JK,101418,Gowa Makassar Tourism Develop,12
GZCO.JK,101419,Gozco Plantations Tbk,12
JGLE.JK,985853,Graha Andrasentra Propertindo Tbk PT,12
BLTZ.JK,101420,Graha Layar Prima Tbk,12
KRAH.JK,101421,Grand Kartech Tbk,12
GWSA.JK,101422,Greenwood Sejahtera Tbk,12
GGRM.JK,101423,Gudang Garam Tbk,12
TRUK.JK,1078225,Guna Timur Raya PT,12
GDST.JK,101424,Gunawan Dianjaya Steel Tbk,12
GGRP.JK,1152962,Gunung Raja Paksi,12
MYRX.JK,101425,Hanson International Tbk,12
MYRX_P.JK,101426,Hanson International Tbk Prf,12
AHAP.JK,101207,Asuransi Harta Aman Pratama Tbk PT,12
HRTA.JK,1025104,Hartadinata Abadi Tbk PT,12
HRUM.JK,101427,Harum Energy Tbk,12
HADE.JK,943655,Hd Capital Tbk,12
HDIT.JK,1141607,Hensel Davest Indonesia Tbk PT,12
HERO.JK,101428,Hero Supermarket Tbk,12
HEXA.JK,101429,Hexindo Adiperkasa Tbk,12
HKMU.JK,1096523,HK Metals Utama Tbk PT,12
HMSP.JK,943648,Hm Sampoerna Tbk,12
SMCB.JK,101430,Holcim Indonesia Tbk,12
FITT.JK,1137430,Hotel Fitra International Tbk PT,12
HOME.JK,101431,Hotel Mandarine Regency Tbk PT,12
SHID.JK,101432,Hotel Sahid Jaya Tbk,12
HITS.JK,943656,Humpuss Intermoda Transportasi,12
KARW.JK,101433,Ictsi Jasa Prima Tbk,12
IFSH.JK,1155911,Ifishdeco PT,12
IMPC.JK,943664,Impack Pratama Industri Tbk,12
INKP.JK,101435,Indah Kiat Pulp & Paper Tbk,12
INPS.JK,1073264,Indah Prakasa Sentosa PT Tbk,12
INAI.JK,101436,Indal Aluminium Industry Tbk,12
INDY.JK,101437,Indika Energy Tbk,12
SRSN.JK,101438,Indo Acidatama Tbk,12
INCF.JK,987137,Indo Komoditi Korpora Tbk PT,12
BRAM.JK,101234,Indo Kordsa Tbk,12
PTIS.JK,101235,Indo Straits Tbk,12
ITMG.JK,101439,Indo Tambangraya Megah Tbk,12
INTP.JK,101440,Indocement Tunggal Prakarsa,12
INAF.JK,101441,Indofarma Tbk,12
INDF.JK,101443,Indofood Sukses Makmur Tbk,12
ICBP.JK,101442,Indofood Cbp Sukses Makmur Tbk,12
IMJS.JK,101444,Indomobil Multi Jasa Tbk,12
IMAS.JK,101445,Indomobil Sukses Internasional,12
IFII.JK,1155954,Indonesia Fibreboard Industry PT,12
IDPR.JK,962003,Indonesia Pondasi Raya Tbk PT,12
OMRE.JK,943994,Indonesia Prima Property Tbk,12
IATA.JK,101434,Indonesia Transport & Infrastructure,12
INPP.JK,102970,Indonesian Paradise Property,12
ITIC.JK,1141287,Indonesian Tobacco Tbk PT,12
IPOL.JK,101446,Indopoly Swakarsa Industry Tbk,12
INDR.JK,101236,Indorama Synthetics Tbk,12
DNET.JK,101447,Indoritel Makmur Internasional,12
ISAT.JK,101448,Indosat Tbk,12
INDS.JK,101449,Indospring Tbk,12
CARS.JK,1008687,Industri Dan Perdagangan Bintraco Dharma Tbk PT,12
INOV.JK,1141609,Inocycle Technology Tbk PT,12
IBFN.JK,943644,Intan Baruprana Finance Tbk,12
INCI.JK,101452,Intanwijaya Internasional Tbk,12
WOOD.JK,1025105,Integra Indocabinet Tbk PT,12
INTD.JK,946578,Inter-Delta Tbk,12
MDIA.JK,101453,Intermedia Capital Tbk,12
IBST.JK,101454,Inti Bangun Sejahtera Tbk,12
IIKP.JK,945183,Inti Kapuas Arowana Tbk,12
IKAI.JK,101455,Intikeramik Alamasri Industri,12
DILD.JK,101456,Intiland Development Tbk,12
INTA.JK,101457,Intraco Penta Tbk,12
ICON.JK,101458,Island Concepts Indonesia Tbk,12
IRRA.JK,1153173,Itama Ranoraya,12
PSAB.JK,101459,J Resources Asia Pasifik Tbk,12
JIHD.JK,101468,Jakarta Int Hotels & Dev,12
JKSW.JK,101237,Jakarta Kyoei Steel Works Tbk,12
JSPT.JK,945179,Jakarta Setiabudi Internasional,12
SIDO.JK,101450,Industri Jamu dan Farmasi Sido Muncul Tbk PT,12
JPFA.JK,101461,Japfa Comfeed Indonesia Tbk,12
IPCM.JK,1057069,Jasa Armada Indonesia Tbk PT,12
JSMR.JK,101462,Jasa Marga Tbk,12
JAST.JK,1131181,Jasnita Telekomindo Tbk PT,12
JTPE.JK,101463,Jasuindo Tiga Perkasa Tbk,12
JAWA.JK,101460,Jaya Agra Wattie Tbk,12
JKON.JK,101464,Jaya Konstruksi Manggala Pratama,12
JRPT.JK,101466,Jaya Real Property Tbk,12
RISE.JK,1088205,Jaya Sukses Makmur Sentosa Tbk PT,12
HELI.JK,1073106,Jaya Trishindo Tbk PT,12
JECC.JK,101467,Jembo Cable Company Tbk,12
KBLM.JK,101238,Kabelindo Murni Tbk,12
KLBF.JK,101470,Kalbe Farma Tbk,12
ZINC.JK,1052430,Kapuas Prima Coal Tbk PT,12
KIJA.JK,101469,Kawasan Industri Jababeka Tbk,12
KICI.JK,101239,Kedaung Indah Can Tbk,12
KDSI.JK,101471,Kedawung Setia Industrial Tbk,12
KEEN.JK,1152348,Kencana Energi Lestari,12
KIAS.JK,101472,Keramika Indonesia Assosiasi,12
KBRI.JK,101473,Kertas Basuki Rachmat Indonesia,12
KAEF.JK,101474,Kimia Farma Persero Tbk,12
KINO.JK,962004,Kino Indonesia Tbk PT,12
KIOS.JK,1052236,Kioson Komersial Indonesia Tbk PT,12
KMTR.JK,1025103,Kirana Megatara Tbk PT,12
KBLI.JK,101475,Kmi Wire And Cable Tbk,12
KOBX.JK,101476,Kobexindo Tractors Tbk,12
KOIN.JK,101240,Kokoh Inti Arebama Tbk,12
SATU.JK,1097709,Kota Satu Properti Tbk PT,12
KRAS.JK,101477,Krakatau Steel Persero Tbk,12
KREN.JK,101478,Kresna Graha Investama Tbk PT,12
KJEN.JK,1141288,Krida Jaringan Nusantara Tbk PT,12
LMPI.JK,101480,Langgeng Makmur Industri Tbk,12
LTLS.JK,101481,Lautan Luas Tbk,12
LCKM.JK,1057991,LCK Global Kedaton,12
LAPD.JK,101482,Leyand International Tbk,12
LMAS.JK,101241,Limas Indonesia Makmur Tbk,12
LINK.JK,102980,Link Net Tbk,12
LION.JK,102975,Lion Metal Works Tbk,12
LMSH.JK,101242,Lionmesh Prima Tbk,12
LPCK.JK,101483,Lippo Cikarang Tbk,12
LPGI.JK,101484,Lippo General Insurance Tbk,12
LPKR.JK,101485,Lippo Karawaci Tbk,12
LPPS.JK,101486,Lippo Securities Tbk,12
LEAD.JK,101487,Logindo Samudramakmur Tbk,12
FPNI.JK,101243,Lotte Chemical Titan Tbk PT,12
MCAS.JK,1056016,M Cash Integrasi Tbk PT,12
MOLI.JK,1095932,Madusari Murni Indah Tbk PT,12
MGNA.JK,943659,Magna Finance Tbk,12
ABBA.JK,101489,Mahaka Media Tbk,12
MARI.JK,963746,Mahaka Radio Integra Tbk PT,12
MGRO.JK,1088700,Mahkota Group Tbk PT,12
AKSI.JK,1052879,Majapahit Inti Corpora Tbk PT,12
MTWI.JK,1052365,Malacca Trust Wuwungan Insurance PT,12
MAIN.JK,101490,Malindo Feedmill Tbk,12
MFIN.JK,101244,Mandala Multifinance Tbk,12
TCID.JK,101491,Mandom Indonesia Tbk,12
MAPA.JK,1088206,MAP Aktif Adiperkasa Tbk PT,12
MAPB.JK,1025107,Map Boga Adiperkasa Tbk PT,12
MABA.JK,1025108,Marga Abhinaya Abadi Tbk PT,12
MARK.JK,1025109,Mark Dynamics Indonesia Tbk PT,12
MBTO.JK,101492,Martina Berto Tbk,12
MAMI.JK,943649,Mas Murni Indonesia Tbk,12
MREI.JK,101245,Maskapai Reasuransi Indonesia,12
LPPF.JK,101493,Matahari Department Store Tbk,12
MPPA.JK,101494,Matahari Putra Prima Tbk,12
MYOR.JK,101495,Mayora Indah Tbk,12
FILM.JK,1089909,MD Pictures Tbk PT,12
MEDC.JK,101496,Medco Energi Internasional Tbk,12
MNCN.JK,101497,Media Nusantara Citra Tbk,12
HEAL.JK,1076873,Medikaloka Hermina PT,12
MMLP.JK,954961,Mega Manunggal Property TBK PT,12
ZONE.JK,1115772,Mega Perintis Tbk PT,12
EMDE.JK,101498,Megapolitan Developments Tbk,12
MPOW.JK,1024518,Megapower Makmur TBK PT,12
HRME.JK,1128812,Menteng Heritage Realty Tbk PT,12
MERK.JK,945178,Merck Tbk,12
MDKA.JK,954960,Merdeka Copper Gold TBK PT,12
MTPS.JK,1128657,Meta Epsi Tbk PT,12
MTSM.JK,101246,Metro Realty Tbk,12
MTDL.JK,101499,Metrodata Electronics Tbk,12
MKPI.JK,101247,Metropolitan Kentjana Tbk,12
MTLA.JK,101500,Metropolitan Land Tbk,12
MIDI.JK,101501,Midi Utama Indonesia Tbk,12
SDPC.JK,101502,Millennium Pharmacon International,12
PADI.JK,101503,Minna Padi Investama Tbk,12
MAPI.JK,101504,Mitra Adiperkasa Tbk,12
KOPI.JK,951639,Mitra Energi Persada Tbk PT,12
MIRA.JK,101505,Mitra International Resources,12
MITI.JK,101506,Mitra Investindo Tbk,12
MIKA.JK,948393,Mitra Keluarga Karyasehat Tbk PT,12
MKNT.JK,960819,Mitra Komunikasi Nusantara Tbk PT,12
MTRA.JK,963747,Mitra Pemuda Tbk PT,12
MPMX.JK,101507,Mitra Pinasthika Mustika,12
MBSS.JK,101508,Mitrabahtera Segara Sejati Tbk,12
MBAP.JK,943662,Mitrabara Adiperdana Tbk,12
BHIT.JK,101509,Mnc Investama Tbk,12
BCAP.JK,101510,Mnc Kapital Indonesia Tbk,12
KPIG.JK,101511,Mnc Land Tbk,12
MSKY.JK,101512,Mnc Sky Vision Tbk,12
MSIN.JK,1081669,MNC Studios International Tbk PT,12
IPTV.JK,1141298,MNC Vision Networks PT,12
MDRN.JK,101513,Modern Internasional Tbk,12
MDLN.JK,101514,Modernland Realty Ltd Tbk,12
KEJU.JK,1155743,Mulia Boga Raya PT,12
MLIA.JK,101515,Mulia Industrindo Tbk,12
MAGP.JK,101516,Multi Agro Gemilang Plantation Tbk PT,12
AMAG.JK,101300,Asuransi Multi Artha Guna Tbk PT,12
MLBI.JK,101517,Multi Bintang Indonesia Tbk,12
MICE.JK,101518,Multi Indocitra Tbk,12
LPIN.JK,101519,Multi Prima Sejahtera Tbk,12
MFMI.JK,101248,Multifiling Mitra Indonesia,12
MLPL.JK,101520,Multipolar Tbk,12
MLPT.JK,101521,Multipolar Technology Tbk,12
MASA.JK,101522,Multistrada Arah Sarana Tbk,12
MRAT.JK,101523,Mustika Ratu Tbk,12
CITY.JK,1096519,Natura City Developments Tbk PT,12
NFCX.JK,1088701,NFC Indonesia PT Tbk,12
ROTI.JK,101524,Nippon Indosari Corpindo Tbk,12
NIPS.JK,101525,Nipress Tbk,12
NIRO.JK,101526,Nirvana Development Tbk,12
DGIK.JK,101527,Nusa Konstruksi Enjiniring Tbk,12
NRCA.JK,101528,Nusa Raya Cipta Tbk,12
NZIA.JK,1153026,Nusantara Almazia,12
META.JK,101529,Nusantara Infrastructure Tbk,12
UNIT.JK,102971,Nusantara Inti Corpora Tbk,12
PORT.JK,997895,Nusantara Pelabuhan Handal Tbk PT,12
NATO.JK,1118029,Nusantara Properti International Tbk PT,12
DIVA.JK,1114107,Nusantara Voucher Distribution Tbk PT,12
OCAP.JK,101249,Onix Capital Tbk,12
OPMS.JK,1153000,Optima Prima Metal Sinergi,12
TKIM.JK,101608,Pabrik Kertas Tjiwi Kimia Tbk,12
APIC.JK,101532,Pacific Strategic Financial,12
PWON.JK,101533,Pakuwon Jati Tbk,12
PSGO.JK,1155744,Palma Serasih PT,12
PBRX.JK,101534,Pan Brothers Tbk,12
HDTX.JK,101252,Panasia Indo Resources Tbk,12
PBID.JK,1057073,Panca Budi Idaman Tbk PT,12
PEGE.JK,943654,Panca Global Securities Tbk,12
PNLF.JK,101535,Panin Financial Tbk,12
PANS.JK,101537,Panin Sekuritas Tbk,12
PNIN.JK,101536,Paninvest Tbk,12
PANR.JK,101538,Panorama Sentrawisata Tbk,12
PBSA.JK,991136,Paramita Bangun Sarana Tbk PT,12
PICO.JK,101540,Pelangi Indah Canindo Tbk,12
NIKL.JK,101541,Pelat Timah Nusantara Tbk,12
BBRM.JK,101542,Pelayaran Nasional Bina Buana Raya,12
NELY.JK,101253,Pelayaran Nelly Dwi Putri Tbk,12
TMAS.JK,101251,Pelayaran Tempuran Emas Tbk,12
PSSI.JK,1056131,Pelita Samudera Shipping Tbk PT,12
PGLI.JK,101250,Pembangunan Graha Lestari Tbk,12
PJAA.JK,101531,Pembangunan Jaya Ancol Tbk,12
PPRE.JK,1055263,Pembangunan Perumahan Presisi PT,12
KONI.JK,998095,Perdana Bangun Pusaka Tbk PT,12
GPRA.JK,101543,Perdana Gapura Prima Tbk,12
PKPK.JK,101544,Perdana Karya Perkasa Tbk,12
PGAS.JK,101530,Perusahaan Gas Negara Persero,12
PTRO.JK,101546,Petrosea Tbk,12
PEHA.JK,1116267,Phapros Tbk PT,12
RODA.JK,101254,Pikko Land Development Tbk,12
PTSP.JK,101255,Pioneerindo Gourmet International,12
PLIN.JK,101256,Plaza Indonesia Realty Tbk,12
PLAS.JK,101547,Polaris Investama Tbk,12
POLI.JK,1117907,Pollux Investasi Internasional Tbk PT,12
POLL.JK,1088678,Pollux Properti Indonesia Tbk PT,12
ADMG.JK,101548,Polychem Indonesia Tbk,12
POLA.JK,1097904,Pool Advista Finance Tbk PT,12
POOL.JK,101257,Pool Advista Indonesia Tbk,12
LSIP.JK,101488,PP London Sumatra Indonesia,12
PTPP.JK,101549,Pp Persero Tbk,12
PPRO.JK,953597,PP Properti Tbk PT,12
PSDN.JK,101258,Prasidha Aneka Niaga Tbk,12
PANI.JK,1096064,Pratama Abadi Nusa Industri Tbk PT,12
PRAS.JK,101550,Prima Alloy Steel Universal,12
PCAR.JK,1057208,Prima Cakrawala Abadi PT,12
BIMA.JK,962001,Primarindo Asia Infrastructure Tbk PT,12
PRDA.JK,994054,Prodia Widyahusada Tbk PT,12
MPRO.JK,1096528,Propertindo Mulia Investama Tbk PT,12
OASA.JK,986049,Protech Mitra Perkasa Tbk PT,12
PALM.JK,101259,Provident Agro Tbk,12
CSIS.JK,1010638,PT Cahayasakti Investindo Sukses Tbk,12
DFAM.JK,1075239,PT Dafam Property Indonesia Tbk,12
FINN.JK,1025100,PT First Indo American Leasing Tbk,12
DUCK.JK,1097269,PT Jaya Bersama Indo Tbk,12
IPCC.JK,1088204,PT Indonesia Kendaraan Terminal Tbk,12
TAMU.JK,1010639,PT Pelayaran Tamarin Samudra Tbk,12
PZZA.JK,1078226,PT Sarimelati Kencana Tbk,12
SPTO.JK,1076784,PT Surya Pertiwi Tbk,12
TNCA.JK,1084863,PT Trimuda Nuansa Citra Tbk,12
COCO.JK,1123886,PT Wahana Interfood Nusantara Tbk,12
PNSE.JK,101260,Pudjiadi & Sons Tbk,12
PUDP.JK,101551,Pudjiadi Prestige Tbk,12
DMAS.JK,953932,Puradelta Lestari Tbk Pt,12
PMJS.JK,1156089,Putra Mandiri Jembar Tbk PT,12
PYFA.JK,101552,Pyridam Farma Tbk,12
HDFA.JK,953933,Radana Bhaskara Finance Tbk,12
RUIS.JK,101553,Radiant Utama Interinsco Tbk,12
RALS.JK,101554,Ramayana Lestari Sentosa Tbk,12
ARTI.JK,101555,Ratu Prabu Energi Tbk,12
PSKT.JK,950067,Red Planet Indonesia Tbk,12
RELI.JK,101261,Reliance Securities Tbk,12
REAL.JK,1155912,Repower Asia Indonesia PT,12
KKGI.JK,101557,Resource Alam Indonesia Tbk,12
RICY.JK,101262,Ricky Putra Globalindo Tbk,12
RIGS.JK,101263,Rig Tenders Tbk,12
CMPP.JK,101373,Rimau Multi Putra Pratama,12
RIMO.JK,101558,Rimo International Lestari Tbk PT,12
RBMS.JK,101559,Ristia Bintang Mahkotasejati,12
RDTX.JK,945177,Roda Vivatex Tbk,12
PRIM.JK,1084857,Royal Prima PT,12
RAJA.JK,101560,Rukun Raharja Tbk,12
SIMP.JK,101561,Salim Ivomas Pratama Tbk,12
MYOH.JK,101562,Samindo Resources Tbk,12
SGRO.JK,101563,Sampoerna Agro Tbk,12
SMDR.JK,101264,Samudera Indonesia Tbk,12
MINA.JK,1009374,Sanurhasta Mitra PT,12
SAME.JK,101564,Sarana Meditama Metropolitan,12
TOWR.JK,101565,Sarana Menara Nusantara Tbk,12
BAJA.JK,101566,Saranacentral Bajatama Tbk,12
HOTL.JK,101567,Saraswati Griya Lestari Tbk,12
SRTG.JK,101568,Saratoga Investama Sedaya,12
CLEO.JK,1010637,Sariguna Primatirta PT,12
PTSN.JK,101569,Sat Nusapersada Tbk,12
SAPX.JK,1096530,Satria Antaran Prima Tbk PT,12
SOTS.JK,1115731,Satria Mega Kencana Tbk PT,12
SMKL.JK,1141608,Satyamitra Kemas Lestari Tbk PT,12
SSMS.JK,101570,Sawit Sumbermas Sarana Tbk,12
SRAJ.JK,101571,Sejahteraraya Anugrahjaya Tbk,12
SKBM.JK,101265,Sekar Bumi Tbk,12
SKLT.JK,945181,Sekar Laut Tbk,12
SIAP.JK,943657,Sekawan Intipratama Tbk,12
SMSM.JK,101572,Selamat Sempurna Tbk,12
SMBR.JK,101573,Semen Baturaja Persero Tbk,12
SMGR.JK,101574,Semen Indonesia Persero Tbk,12
FOOD.JK,1117859,Sentra Food Indonesia Tbk PT,12
LUCK.JK,1114548,Sentral Mitra Informatika Tbk PT,12
BKSL.JK,101575,Sentul City Tbk,12
BATA.JK,101266,Sepatu Bata Tbk,12
SOSS.JK,1097763,Shield On Service Tbk PT,12
STTP.JK,101576,Siantar Top Tbk,12
SDMU.JK,101577,Sidomulyo Selaras Tbk,12
SIPD.JK,101578,Sierad Produce Tbk,12
TMPI.JK,101285,Sigmagold Inti Perkasa Tbk,12
SHIP.JK,985738,Sillo Maritime Perdana Tbk PT,12
SILO.JK,101579,Siloam International Hospitals,12
SMMA.JK,101580,Sinar Mas Multiartha Tbk,12
ESIP.JK,1155549,Sinergi Inti Plastindo,12
NUSA.JK,1088702,Sinergi Megah Internusa Tbk PT,12
SINI.JK,1155108,Singaraja Putra,12
TARA.JK,943660,Sitara Propertindo Tbk,12
SIMA.JK,943995,Siwani Makmur Tbk,12
JSKY.JK,1073138,Sky Energy Indonesia Tbk PT,12
SKYB.JK,1084858,Skybee Tbk PT,12
SULI.JK,101581,Slj Global Tbk,12
SMAR.JK,101582,Smart Tbk,12
FREN.JK,101583,Smartfren Telecom Tbk,12
SMRU.JK,101267,Smr Utama Tbk,12
SOCI.JK,942839,Soechi Lines Tbk,12
SUPR.JK,101584,Solusi Tunas Pratama Tbk,12
SONA.JK,101268,Sona Topas Tourism Industry,12
SRIL.JK,101586,Sri Rejeki Isman Tbk,12
SWAT.JK,1079915,Sriwahana,12
LPLI.JK,101587,Star Pacific Tbk,12
STAR.JK,101588,Star Petrcohem Tbk,12
KPAL.JK,1081670,Steadfast Marine PT,12
SAFE.JK,954962,Steady Safe TBK PT,12
ISSP.JK,101589,Steel Pipe Industry Of Indonesia,12
SUGI.JK,101590,Sugih Energy Tbk,12
AMRT.JK,101591,Sumber Alfaria Trijaya Tbk,12
ITMA.JK,998094,Sumber Energi Andalan Tbk PT,12
IKBI.JK,102976,Sumi Indo Kabel Tbk,12
SMRA.JK,101592,Summarecon Agung Tbk,12
SSTM.JK,101270,Sunson Textile Manufacturer,12
SPMA.JK,101593,Suparma Tbk,12
SURE.JK,1096532,Super Energy Tbk PT,12
SKRN.JK,1097270,Superkrane Mitra Utama Tbk PT,12
RANC.JK,101594,Supra Boga Lestari Tbk,12
SCCO.JK,101269,Supreme Cable Manufacturing Corp,12
SCMA.JK,101595,Surya Citra Media Tbk,12
ESSA.JK,101596,Surya Esa Perkasa Tbk,12
SFAN.JK,1137586,Surya Fajar Capital Tbk PT,12
SSIA.JK,101597,Surya Semesta Internusa Tbk,12
TOTO.JK,101271,Surya Toto Indonesia Tbk,12
SMDM.JK,101272,Suryamas Dutamakmur Tbk,12
SQBI_P.JK,945184,Taisho Pharmaceutical Ind,12
PTBA.JK,101599,Tambang Batubara Bukit Asam,12
INDX.JK,101598,Tanah Laut Tbk,12
TFAS.JK,1152819,Telefast Indonesia ,12
TLKM.JK,101600,Telekomunikasi Indonesia Persero,12
TBMS.JK,943647,Tembaga Mulia Semanan Tbk,12
TMPO.JK,101601,Tempo Inti Media Tbk,12
TSPC.JK,101602,Tempo Scan Pacific Tbk,12
TGRA.JK,1010706,Terregra Asia Energy PT,12
TIFA.JK,101603,Tifa Finance Tbk,12
TFCO.JK,101273,Tifico Fiber Indonesia Tbk,12
TGKA.JK,101274,Tigaraksa Satria Tbk,12
TINS.JK,101605,Timah Persero Tbk,12
TELE.JK,101606,Tiphone Mobile Indonesia Tbk,12
TIRA.JK,946577,Tira Austenite Tbk,12
TIRT.JK,101607,Tirta Mahakam Resources Tbk,12
TOBA.JK,101609,Toba Bara Sejahtra Tbk,12
INRU.JK,101610,Toba Pulp Lestari Tbk,12
TOTL.JK,101611,Total Bangun Persada Tbk,12
TOPS.JK,1025101,Totalindo Eka Persada Tbk PT,12
PGJO.JK,1156306,Tourindo Guide Indonesia Pt,12
TBIG.JK,101612,Tower Bersama Infrastructure Tbk PT,12
TRAM.JK,101613,Trada Maritime Tbk,12
TPMA.JK,101275,Trans Power Marine Tbk,12
TCPI.JK,1088207,Transcoal Pacific Tbk PT,12
ALTO.JK,101614,Tri Banyan Tirta Tbk,12
TRST.JK,101276,Trias Sentosa Tbk,12
TDPM.JK,1073265,Tridomain Performance Materials PT,12
TRIO.JK,101277,Trikomsel Oke Tbk,12
TRIM.JK,101615,Trimegah Securities Tbk,12
LAND.JK,1094003,Trimitra Propertindo Tbk PT,12
PURE.JK,1153149,Trinitan Metals and Minerals,12
TRIS.JK,101616,Trisula International Tbk,12
BELL.JK,1052111,Trisula Textile Industries Tbk PT,12
TRIL.JK,101617,Triwira Insanlestari Tbk,12
TRUS.JK,945723,Trust Finance Indonesia Tbk,12
TALF.JK,101618,Tunas Alfin Tbk,12
TBLA.JK,101619,Tunas Baru Lampung Tbk,12
TURI.JK,101620,Tunas Ridean Tbk,12
ULTJ.JK,101621,Ultra Jaya Milk Industry Tbk,12
UNIC.JK,102972,Unggul Indah Cahaya Tbk,12
UCID.JK,1156088,Uni Charm Indonesia PT,12
UNVR.JK,101622,Unilever Indonesia Tbk,12
UNTR.JK,101623,United Tractors Tbk,12
URBN.JK,1115732,Urban Jakarta Propertindo Tbk PT,12
INCO.JK,101624,Vale Indonesia Tbk,12
VRNA.JK,101625,Verena Multi Finance Tbk,12
VINS.JK,959126,Victoria Insurance Tbk PT,12
VICO.JK,101626,Victoria Investama Tbk,12
VIVA.JK,101627,Visi Media Asia Tbk,12
GOLD.JK,101417,Visi Telekomunikasi Infrastruktur Tbk PT,12
VOKS.JK,101628,Voksel Electric Tbk,12
WOMF.JK,101629,Wahana Ottomitra Multiartha,12
WAPO.JK,101630,Wahana Pronatural,12
WSBP.JK,989631,Waskita Beton Precast Tbk PT,12
WSKT.JK,101631,Waskita Karya Persero Tbk,12
WEHA.JK,101539,Weha Transportasi Indonesia TBK,12
WICO.JK,101632,Wicaksana Overseas International,12
WIKA.JK,101633,Wijaya Karya Tbk,12
WEGE.JK,1055306,Wijaya Karya Bangunan Gedung Tbk PT,12
WTON.JK,101634,Wijaya Karya Beton,12
CEKA.JK,101635,Wilmar Cahaya Indonesia Tbk,12
SQMI.JK,101556,Wilton Makmur Indonesia Tbk,12
WINS.JK,101636,Wintermar Offshore Marine Tbk,12
WIIM.JK,101637,Wismilak Inti Makmur Tbk,12
EXCL.JK,101638,Xl Axiata Tbk,12
YPAS.JK,101639,Yanaprima Hastapersada Tbk,12
YELO.JK,1097715,Yelooo Integra Datanet Tbk PT,12
YULE.JK,943653,Yulie Sekurindo Tbk,12
ZBRA.JK,101640,Zebra Nusantara Tbk,12
JKSE.JK,29049,Jakarta Stock Exchange Composite Index,12
 
#SW SWITZERLAND
ARYN.SW,49837,Aryzta AG,38
ABBN.SW,320,ABB Ltd,38
UBSG.SW,943811,UBS Group AG,38
CSGN.SW,316,Credit Suisse Group AG,38
NOVN.SW,332,Novartis AG,38
NESN.SW,334,Nestle SA,38
CFR.SW,318,Compagnie Financiere Richemont SA,38
ROG.SW,337,Roche Holding AG Participation,38
MBTN.SW,949724,Meyer Burger Tech AG,38
LHN.SW,321,LafargeHolcim Ltd,38
SRENH.SW,335,Swiss Re AG,38
BAER.SW,319,Julius Baer Gruppe AG,38
ADEN.SW,317,Adecco SA,38
EVE.SW,48546,Evolva Holding SA,38
AMS.SW,48525,Ams AG,38
ZURN.SW,329,Zurich Insurance Group AG,38
SIKA.SW,49827,Sika AG,38
VACN.SW,976465,VAT Group AG,38
LONN.SW,338,Lonza Group AG,38
LOGN.SW,324,Logitech International SA,38
CLN.SW,326,Clariant AG,38
GEBN.SW,39129,Geberit AG,38
UHR.SW,330,Swatch Group I,38
STLN.SW,955634,Schmolz & Bickenbach AG,38
VIFN.SW,49957,Vifor Pharma AG,38
GAMH.SW,49959,GAM Holding AG,38
SCMN.SW,339,Swisscom AG,38
EFGN.SW,949695,EFG International AG,38
SLHN.SW,331,Swiss Life Holding AG,38
SOON.SW,49955,Sonova H Ag,38
NESNEE.SW,941180,Nestle SA,38
CEVAL.SW,1075552,CEVA Logistics AG,38
DUFN.SW,949693,Dufry AG,38
SCHP.SW,49834,Schindler Ps,38
TEMN.SW,949732,Temenos Group AG,38
PGHN.SW,49833,Partners Group,38
KNIN.SW,49835,Kuehne & Nagel,38
BALN.SW,322,Baloise Holding AG,38
UHRN.SW,943210,The Swatch Group SA Class N,38
BARN.SW,49829,Barry Callebaut AG,38
IDIA.SW,1017260,Idorsia Ltd,38
TECN.SW,48540,Tecan Group AG,38
NEWN.SW,949727,New Value AG,38
ARBNO.SW,48552,Arbonia AG,38
FHZN.SW,48534,Flughafen Zurich,38
BION.SW,48555,BB Biotech AG,38
RO.SW,955621,Roche Holding AG,38
SPSN.SW,49828,Swiss Prime Site AG,38
PWTN.SW,955618,Panalpina Welttransport Holding AG,38
MOZN.SW,953068,mobilezone ag,38
MCHN.SW,955602,MCH Group AG,38
NWRN.SW,955607,Newron Pharmaceuticals SpA,38
PSPN.SW,49832,PSP Swiss Property AG,38
LECN.SW,949719,Leclanche SA,38
LUMX.SW,949702,LumX Group Ltd,38
GIVN.SW,986242,Givaudan SA,38
SUN.SW,49836,Sulzer AG,38
PARG.SW,49958,Pargesa I,38
BLS.SW,1088124,Blackstone Resources Ltd,38
SRCG.SW,945677,Sunrise Communications AG,38
VONN.SW,48542,Vontobel Holding,38
ADXN.SW,949649,Addex Therapeutics Ltd,38
BKWB.SW,949668,BKW AG,38
SCHN.SW,48548,Schindler Holding AG,38
SGSN.SW,13818,SGS SA,38
SFZN.SW,955626,Siegfried Holding Ltd,38
ROSEG.SW,1024762,Zur Rose Group AG,38
LEON.SW,949721,Leonteq AG,38
GALE.SW,1008651,Galenica Sante SA,38
EMSN.SW,48545,Ems Chemie Hld,38
TOHN.SW,955641,Tornos Holding AG,38
VLLP.SW,993620,Vallourec,38
ROL.SW,955622,Von Roll Holding AG,38
WIHN.SW,976078,Wisekey International Holding AG,38
HELN.SW,49831,Helvetia Holding AG,38
CMBN.SW,949685,Cembra Money Bank AG,38
BBN.SW,949662,Bellevue Group AG,38
LANDI.SW,1027140,Landis&Gyr Group AG,38
SQN.SW,955632,Swissquote Group Holding SA,38
DOKA.SW,48539,Dorma Kaba Holding AG,38
ALLN.SW,48533,Allreal Holding,38
SENSI.SW,1073053,Sensirion Holding AG,38
BOS.SW,48541,Bossard Holding AG,38
DAE.SW,48549,Daetwyl I,38
ZEHN.SW,48553,Zehnder,38
STMN.SW,949731,Straumann Holding AG,38
KOMN.SW,48535,Komax Holding AG,38
SIMA.SW,993578,UBS CH Property Fund Swiss Mixed Sima,38
SFSN.SW,945096,SFS Group AG,38
FTON.SW,949699,Feintool International Holding,38
VALN.SW,48528,Valora Holding,38
BUCN.SW,48529,Bucher Industries AG,38
DKSH.SW,49838,DKSH Holding AG,38
IMPN.SW,48547,Implenia AG,38
AUTON.SW,949660,Autoneum Holding AG,38
KURN.SW,14155,Kuros Biosciences AG,38
KUD.SW,949718,Kudelski,38
UBXN.SW,955642,U Blox Holding AG,38
GBMN.SW,949701,Goldbach Group AG,38
UHRNE.SW,963716,Swatch Group N 2,38
FIN.SW,49954,Georg Fischer AG,38
AMD.SW,993340,Advanced Micro Devices Inc,38
MEDA.SW,1081655,Medartis Holding AG,38
BSLN.SW,949676,Basilea Pharmaceutica AG,38
VPBN.SW,955650,VP Bank AG,38
ASCN.SW,48538,Ascom Holding AG,38
KARN.SW,48551,Kardex,38
IFCN.SW,48536,Inficon Holding,38
CSLP.SW,993396,Credit Suisse Real Estate Fund LivingPlus,38
RIGN.SW,14619,Transocean Ltd,38
CASN.SW,949679,Castle Alternative Invest AG,38
LLBN.SW,955599,Liechtensteinische Landesbank AG,38
ALSN.SW,949655,Also Holding AG,38
SWTQ.SW,955636,Schweiter Technologies AG,38
BELL.SW,945097,Bell AG,38
SOL.SW,993584,Solvalor 61 Fonds De Placement Immobilier,38
COPN.SW,48554,COSMO Pharmaceuticals SA,38
SREA.SW,993588,UBS SW Swissreal,38
HUBN.SW,949712,Huber+suhner AG,38
UHRE.SW,963715,Swatch Group I 2,38
PEAN.SW,955613,Peach Property Group AG,38
PNHO.SW,1055082,Poenina Holding AG,38
HOCN.SW,949710,Hochdorf Holding AG,38
BOBNN.SW,949671,Bobst Group SA,38
PSREF.SW,993544,Patrimonium Swiss Real Estate Fund,38
BCHN.SW,949665,Burckhardt Compression,38
SANN.SW,955624,Santhera Pharmaceuticals Holding AG,38
COTNE.SW,949687,Comet Holding AG,38
SGKN.SW,955627,St Galler Kantonalbank AG,38
KTMI.SW,993241,KTM Industries AG,38
AIRN.SW,949652,Airopack Tech Group AG,38
ALPH.SW,949653,Alpiq Holding AG,38
YPSN.SW,955655,Ypsomed Holding AG,38
EPH.SW,993424,Eastern Property Holdings Ltd,38
KLIN.SW,1081717,Klingelnberg AG,38
CONC.SW,949686,Conzzeta AG,38
INRN.SW,949715,Interroll Holding AG,38
BEKN.SW,949667,Berner Kantonalbank AG,38
HBMN.SW,949707,HBM Healthcare Investments,38
EMMN.SW,48543,Emmi AG,38
CICN.SW,949681,Cicor Technologies Ltd,38
LUKN.SW,955601,Luzerner Kantonalbank AG,38
TWTR.SW,993608,Twitter Inc,38
BCGE.SW,949664,Banque Cantonale de Geneve,38
FORN.SW,949698,Forbo Holding AG,38
ORON.SW,955610,Orior AG,38
MOBN.SW,48537,Mobimo Hldg,38
CALN.SW,949678,Calida Holding AG,38
GUR.SW,949705,Gurit Holding AG,38
HIAG.SW,949708,HIAG Immobilien Holding AG,38
BCVN.SW,48544,Banque Cantonale,38
LISP.SW,943209,Lindt & Sp Ps,38
CLTN.SW,949683,Coltene Holding AG,38
ODHN.SW,955608,Orascom Development Holding AG,38
NVDA STOCK PRICE.SW,993526,NVIDIA Corporation,38
BALNE.SW,951010,Baloise Holding Ltd N 2L,38
GLKBN.SW,958264,Glarner Kantonalbank,38
AIR.SW,993336,Airbus Group SE,38
ESUN.SW,949697,Edisun Power Europe AG,38
BABAUSD.SW,986306,Alibaba Group Holdings Ltd,38
BAYGN.SW,993357,Bayer AG NA,38
SAPG.SW,993562,SAP SE,38
SIAT.SW,993576,CS Real Estate Fund Siat,38
APGN.SW,949657,APG SGA SA,38
JFN.SW,949717,Jungfraubahn Holding AG,38
LEHN.SW,949720,Lem Holding SA,38
TAMN.SW,955637,Tamedia AG,38
LINN.SW,949723,Bank Linth LLB AG,38
STGN.SW,955633,Starrag Group Holding AG,38
AMZN.SW,993342,Amazon.com Inc,38
WDIG.SW,993628,Wirecard AG,38
ISN.SW,949716,Intershop Holding AG,38
FREGEUR.SW,953838,Fresenius SE & Co KGAA O.N,38
PM.SW,955616,Phoenix Mecano AG,38
GREEN.SW,993455,Credit Suisse Real Estate Fund Green Property,38
SIC.SW,993577,Swisscanto CH Real Estate Fund Ifca,38
TSLA.SW,993605,Tesla Inc,38
RIEN.SW,48531,Rieter Holding AG,38
BSKP.SW,949675,Basler Kantonalbank,38
METG.SW,955654,Walter Meier AG,38
AAPL.SW,993325,Apple Inc,38
AEVS.SW,949650,Aevis Holding SA,38
NTIV.SW,955611,Native SA,38
VET.SW,955647,Vetropack Holding SA,38
TUSD.SW,987099,AT&T Inc,38
MSFT.SW,993511,Microsoft Corporation,38
LISN.SW,49830,Chocoladefabriken Lindt & Spruengli AG,38
VATN.SW,49956,Valiant Holding AG,38
BCJ.SW,949666,Banque Cantonale Du Jura SA,38
BLKB.SW,949670,Basellandschaftliche Kantonalbank,38
SKIN.SW,955629,Cassiopea SpA,38
VLRT.SW,955649,Valartis Group AG,38
GOOGL.SW,993453,Alphabet Inc Class A,38
IM.SW,993476,Immofonds Immobilien AG,38
SLB.SW,993580,Schlumberger NV,38
BTC.SW,1055957,Bitcoin Group SE,38
POLN.SW,1076609,Polyphor AG,38
BASFZ.SW,26981,BASF SE NA O.N,38
SIEGN.SW,26983,Siemens AG Class N,38
DANO.SW,26986,Danone SA,38
GE.SW,30254,General Electric Company,38
BEAN.SW,48527,Belimo Holding,38
LMN.SW,100240,Lastminute.com NV,38
HBMNN.SW,942512,HBM Healthcare Investments AG,38
MOLN.SW,942513,Molecular Partners AG,38
SPCE.SW,945906,Spice Priv AG,38
ADVN.SW,949648,Adval Tech Holding AG,38
AIRE.SW,949651,Airesis SA,38
ALPN.SW,949654,Alpine Select AG,38
BANB.SW,949661,BACHEM HOLDING AG,38
BC.SW,949663,Bank Coop AG,38
BLIN.SW,949669,BFW Liegenschaften AG,38
BPDG.SW,949673,Banque Profil De Gestion SA,38
BRKN.SW,949674,Burkhalter Holding AG,38
BVZN.SW,949677,BVZ Holding AG,38
CFT.SW,949680,Compagnie Financiere Tradition,38
CIE.SW,949682,CI Com SA,38
CLXN.SW,949684,Crealogix Holding AG,38
CPE.SW,949688,Castle Private Equity AG,38
CHAMA.SW,949689,Cham Group AG,38
CPHN.SW,949690,CPH Chemie und Papier Holding,38
DCN.SW,949691,Datacolor AG,38
DESN.SW,949692,Dottikon Es Holding AG,38
EDHN.SW,949694,Energiedienst Holding AG,38
ELMN.SW,949696,Elma Electronic AG,38
GAV.SW,949700,Carlo Gavazzi Holding AG,38
GMI.SW,949703,Groupe Minoteries SA,38
GRKP.SW,949704,Graubuendner Kantonalbank,38
HBLN.SW,949706,Hypothekarbank Lenzburg AG,38
HLEE.SW,949709,Highlight Event Entertainment,38
HREN.SW,949711,Romande Energie Holding SA,38
HUE.SW,949713,Huegli Holding AG,38
NBEN.SW,949725,Nebag ag,38
NEV.SW,949726,New Venturetec AG,38
PEHN.SW,949728,Private Equity Holding AG,38
BAP.SW,953536,Groupe Baumgartner Holding SA,38
AAPLEUR.SW,953832,Apple Inc,38
BAYGNEUR.SW,953833,Bayer AG NA,38
BEIGEUR.SW,953834,Beiersdorf AG O.N,38
DAIGN.SW,953836,Daimler AG NA O.N,38
HEIGEUR.SW,953839,Heidelbergcement AG O.N,38
IFXGNEUR.SW,953840,Infineon Technologies AG NA O.N,38
MRCGEUR.SW,953841,Merck KGaA,38
RWEGEUR.SW,953842,RWE AG ST O.N,38
TKAGEUR.SW,953843,Thyssenkrupp AG O.N,38
BMWGEUR.SW,954895,Bayerische Motoren Werke AG,38
DPWGNEUR.SW,954896,Deutsche Post AG NA O.N,38
DTEGNEUR.SW,954897,Deutsche Telekom AG Na,38
LHAGEUR.SW,954898,Deutsche Lufthansa AG,38
LXSGEUR.SW,954899,Lanxess AG,38
FMEGEUR.SW,955598,Fresenius Medical Care KGAA ST,38
METN.SW,955603,Metall Zug AG,38
MIKN.SW,955604,Mikron Holding AG,38
MUVGNEUR.SW,955605,Muench. Rueckvers. VNA O.N,38
OFN.SW,955609,Orell Fuessli Holding AG,38
PEDU.SW,955614,Perrot Duval Holding SA,38
PLANZ.SW,955615,Plazza Immobilien AG,38
PRFN.SW,955617,Perfect Holding SA,38
RLD.SW,955620,Edmond de Rothschild Suisse SA,38
SAHN.SW,955623,Schaffner Holding AG,38
SFPN.SW,955625,Swiss Finance & Property Investment AG,38
SHLTN.SW,955628,S H L Telemedicine Ltd,38
SNBN.SW,955631,Schweizerische Nationalbank,38
STRN.SW,955635,Schlatter Industries AG,38
TIBN.SW,955638,Bergbahnen Engelberg Truebsee Titlis Bet AG,38
TKBP.SW,955639,Thurgauer Kantonalbank,38
RLFB.SW,955640,Therametrics holding AG,38
ARONL.SW,955643,Arundel AG,38
VAHN.SW,955644,Vaudoise Assurances Holding SA,38
VBSN.SW,955645,IVF Hartmann Holding AG,38
VILN.SW,955648,Villars Holding SA,38
VZN.SW,955651,VZ Holding AG,38
WARN.SW,955652,Warteck Invest Ltd,38
WKB.SW,955653,Banque Cantonale du Valais,38
ZBH.SW,955656,Zimmer Biomet Holdings Inc,38
ZG.SW,955657,Zuger Kantonalbank,38
ZUBN.SW,955658,Zueblin Immobilien Holding AG,38
ZUGN.SW,955659,Zug Estates Holding AG,38
ZWM.SW,955660,Zwahlen et Mayr SA,38
ALVGEUR.SW,955867,Allianz SE VNA O.N,38
DB1GNEUR.SW,955868,Deutsche Boerse AG,38
EONGNEUR.SW,955869,E.ON SE NA,38
SAPGEUR.SW,955870,SAP SE,38
SIEGNEUR.SW,955871,Siemens AG Class N,38
KHC.SW,958265,Kraft Heinz Co,38
ENGIE.SW,958850,Engie SA,38
HNKG_PEUR.SW,958851,Henkel & Co KGaA AG Pref,38
ADSGNEUR.SW,960693,Adidas AG,38
CONGEUR.SW,960694,Continental AG O.N,38
PYPL.SW,960696,PayPal Holdings Inc,38
RACE.SW,960697,Ferrari NV,38
SDFGNEUR.SW,960698,K+S AG NA O.N,38
VNAN.SW,960700,Vonovia SE,38
FTI.SW,963442,TechnipFMC PLC,38
EW.SW,968988,Edwards Lifesciences Corporation,38
TSC.SW,976077,Tractor Supply Company,38
TELIA.SW,976464,Telia Company AB,38
RDSB.SW,977681,Royal Dutch Shell PLC Class B,38
NTES.SW,978747,NetEase Inc,38
IREN.SW,985791,Investis Holding SA,38
GLJ.SW,985886,Grenke N AG,38
INGA.SW,985963,ING Groep NV,38
AAPLUSD.SW,986251,Apple Inc,38
AMZNUSD.SW,986252,Amazon.com Inc,38
BMYUSD.SW,986253,Bristol-Myers Squibb Company,38
MOUSD.SW,986254,Altria Group,38
QCOMUSD.SW,986256,Qualcomm Incorporated,38
TSLA.SW,986257,Tesla Inc,38
WFCUSD.SW,986258,Wells Fargo & Company,38
AMDUSD.SW,987089,Advanced Micro Devices Inc,38
GILDUSD.SW,987090,Gilead Sciences Inc,38
GMUSD.SW,987091,General Motors Company,38
IBMUSD.SW,987092,International Business Machines,38
JNJUSD.SW,987093,Johnson & Johnson,38
JPMUSD.SW,987094,JPMorgan Chase & Co,38
MDLZUSD.SW,987095,Mondelez International Inc,38
MRKUSD.SW,987096,Merck & Company Inc,38
RIGNUSD.SW,987097,Transocean Ltd,38
SBUXUSD.SW,987098,Starbucks Corporation,38
TWTR.SW,987100,Twitter Inc,38
VLOF.SW,987101,Valeo SA,38
INTCUSD.SW,989450,Intel Corporation,38
CSCOUSD.SW,989539,Cisco Systems Inc,38
NKEUSD.SW,989541,Nike Inc,38
UNIPE.SW,989542,Uniper SE,38
CELGUSD.SW,989996,Celgene Corporation,38
CUSD.SW,989997,Citigroup Inc,38
XOMUSD.SW,989999,Exxon Mobil Corp,38
GPROUSD.SW,991237,GoPro Inc,38
INNOG.SW,991238,Innogy SE,38
CVXUSD.SW,992772,Chevron Corp,38
GLWUSD.SW,992774,Corning Incorporated,38
VZUSD.SW,992775,Verizon Communications Inc,38
AABAUSD.SW,992776,Altaba Inc,38
MSFTUSD.SW,993183,Microsoft Corporation,38
FCXUSD.SW,993240,Freeport-McMoran Copper & Gold Inc,38
PGUSD.SW,993242,Procter & Gamble Company,38
DISUSD.SW,993277,Walt Disney Company,38
FSLRUSD.SW,993278,First Solar Inc,38
HPQAUSD.SW,993279,HP Inc,38
MUUSD.SW,993280,Micron Technology Inc,38
0992.SW,993319,Lenovo Group,38
AAL.SW,993324,Anglo American PLC,38
ABI.SW,993327,Anheuser Busch Inbev SA NV,38
ABT.SW,993328,Abbott Laboratories,38
ACCP.SW,993330,Accor SA,38
ADBE.SW,993331,Adobe Systems Incorporated,38
ADSGN.SW,993332,Adidas AG,38
AEGN.SW,993333,Aegon NV,38
AEM.SW,993334,Agnico Eagle Mines Limited,38
AFXG.SW,993335,Carl Zeiss Meditec AG,38
AIRP.SW,993337,Air Liquide SA,38
ALSO.SW,993338,Alstom SA,38
ALVG.SW,993339,Allianz SE VNA O.N,38
AMGN.SW,993341,Amgen Inc,38
ANFO.SW,993344,UBS CH Property Fund Leman Residential Foncipars,38
ASML.SW,993347,ASML Holding NV,38
ATSV.SW,993348,AT & S Austria Technologie & Systemtechnik AG,38
AUDKT.SW,993349,RTL Group,38
AXAF.SW,993350,AXA SA,38
AXP.SW,993351,American Express Company,38
AZN.SW,993352,AstraZeneca PLC,38
BA.SW,993353,Boeing Co,38
BAC.SW,993354,Bank of America Corp,38
BARC.SW,993355,Barclays PLC,38
BATS.SW,993356,British American Tobacco PLC,38
BEIG.SW,993359,Beiersdorf AG O.N,38
BHP1.SW,993360,BHP Billiton Ltd,38
BIIB.SW,993361,Biogen Inc,38
BIM.SW,993362,Bonhote Immobilier,38
BLD.SW,993364,Ballard Power Systems Inc,38
BLT.SW,993365,BHP Billiton PLC,38
BMWG.SW,993366,Bayerische Motoren Werke AG,38
BMY.SW,993367,Bristol-Myers Squibb Company,38
BNPP.SW,993368,BNP Paribas SA,38
BOSSN.SW,993369,Hugo Boss AG NA O.N,38
BP.SW,993370,BP PLC,38
BRKB.SW,993371,Berkshire Hathaway B,38
BVB.SW,993373,Borussia Dortmund GmbH & Co KGaA,38
BWOA.SW,993374,Buwog AG VI,38
C.SW,993375,Citigroup Inc,38
CADON.SW,993376,Sociedad Comercial del Plata SA Class N,38
CAGR.SW,993377,Credit Agricole SA,38
CARR.SW,993378,Carrefour SA,38
CAT.SW,993379,Caterpillar Inc,38
CBKG.SW,993380,Commerzbank AG O.N,38
CCO.SW,993381,Cameco Corp,38
CDE.SW,993382,Coeur Mining Inc,38
CELG.SW,993383,Celgene Corporation,38
CHD.SW,993384,Church & Dwight Company Inc,38
CL.SW,993385,Colgate-Palmolive Company,38
CNAT.SW,993386,Natixis,38
COKG.SW,993387,Cancom SE O.N,38
COLOB.SW,993388,Coloplast A/S,38
CONG.SW,993389,Continental AG O.N,38
COP.SW,993390,ConocoPhillips,38
CRDI.SW,993392,UniCredit SpA,38
CRMS.SW,993393,Salesforce.com Inc,38
CSCO.SW,993394,Cisco Systems Inc,38
CTSH.SW,993397,Cognizant Technology Solutions,38
CVX.SW,993398,Chevron Corp,38
DAIGN.SW,993399,Daimler AG NA O.N,38
DALI.SW,993400,Delta Air Lines Inc,38
DB1GN.SW,993401,Deutsche Boerse AG,38
DBANN.SW,993402,Deutsche Beteiligungs AG O.N,38
DBK.SW,993403,Deutsche Bank AG NA O.N,38
DDD.SW,993404,3D Systems Corporation,38
DEZG.SW,993405,Deutz AG,38
DIS.SW,993407,Walt Disney Company,38
DPWGN.SW,993409,Deutsche Post AG NA O.N,38
DRPF.SW,993410,UBS CH Property Fund Direct Residential,38
DTEGN.SW,993411,Deutsche Telekom AG Na,38
DUEG.SW,993412,Duerr AG,38
DWNG.SW,993413,Deutsche Wohnen AG,38
EDF.SW,993414,Electricite de France SA,38
EDP.SW,993415,EDP,38
EMR.SW,993418,Emerson Electric Company,38
ENEI.SW,993419,Enel,38
ENI.SW,993420,ENI,38
EONGN.SW,993422,E.ON SE NA,38
EPED.SW,993423,Faurecia,38
ERRES.SW,993425,Edmond de Rothschild Real Estate SICAV,38
ESSI.SW,993426,EssilorLuxottica SA,38
EVKN.SW,993427,Evonik Industries AG,38
EVTG.SW,993428,Evotec AG O.N,38
FB.SW,993429,Facebook Inc,38
FCX.SW,993430,Freeport-McMoran Copper & Gold Inc,38
FIEG.SW,993432,Fielmann AG,38
FIR.SW,993433,Fonds Immobilier Romand FIR,38
FMEG.SW,993434,Fresenius Medical Care KGAA ST,38
FNTGN.SW,993435,Freenet AG NA,38
FOC.SW,993437,La Fonciere,38
FONC.SW,993438,Ubs (Ch) Property Fd Leman Residential Foncipars,38
FREG.SW,993440,Fresenius SE & Co KGAA O.N,38
FSLR.SW,993441,First Solar Inc,38
G1AG.SW,993443,GEA Group AG,38
GASI.SW,993444,Generali,38
GBFG.SW,993445,Bilfinger SE O.N,38
GFIJ.SW,993446,Gold Fields Ltd,38
GILD.SW,993448,Gilead Sciences Inc,38
GIS.SW,993449,General Mills Inc,38
GLOBI.SW,993450,Credit Suisse Real Estate Fund Global,38
GMMG.SW,993452,Grammer AG,38
GPRO.SW,993454,GoPro Inc,38
GSK.SW,993457,GlaxoSmithKline PLC,38
GXIG.SW,993460,Gerresheimer AG,38
HABG.SW,993461,Hamborner Reit AG O.N,38
HAL.SW,993462,Halliburton Company,38
HD.SW,993463,Home Depot Inc,38
HDDG.SW,993464,Heidelberger Druckmaschinen O.N,38
HEIG.SW,993465,Heidelbergcement AG O.N,38
HEIN.SW,993466,Heineken,38
HHFGN.SW,993467,Hamburger Hafen Und Logistik A-SP,38
HL.SW,993468,Hecla Mining Company,38
HMB.SW,993469,H & M Hennes & Mauritz AB B,38
HNRGN.SW,993470,Hannover Rueck SE,38
HOSP.SW,993472,CS Real Estate Fund Hospitality,38
HOTG.SW,993473,Hochtief AG,38
IBM.SW,993474,International Business Machines,38
IFXGN.SW,993475,Infineon Technologies AG NA O.N,38
IMHE.SW,993477,Immo Helvetic,38
INGC.SW,993478,Ingenico Group,38
INT.SW,993479,Credit Suisse Real Estate Fund Interswiss,38
INTC.SW,993480,Intel Corporation,38
ISP.SW,993481,Intesa Sanpaolo SpA,38
ISRGS.SW,993482,Intuitive Surgical Inc,38
JNJ.SW,993484,Johnson & Johnson,38
JPM.SW,993485,JPMorgan Chase & Co,38
KGC.SW,993486,Kinross Gold Corp,38
KGX.SW,993487,Kion Group AG,38
KO.SW,993489,Coca-Cola Company,38
KU2G.SW,993490,Kuka AG,38
LHAG.SW,993491,Deutsche Lufthansa AG,38
LLOY.SW,993493,Lloyds Banking Group PLC,38
LMT.SW,993494,Lockheed Martin Corporation,38
MCD.SW,993502,McDonald’s Corporation,38
MDLZ.SW,993503,Mondelez International Inc,38
MDT.SW,993504,Medtronic PLC,38
CECG.SW,993505,Metro AG,38
MMM.SW,993507,3M Company,38
MO.SW,993508,Altria Group,38
MORG.SW,993509,Morphosys AG O.N,38
MRCG.SW,993510,Merck KGaA,38
MU.SW,993512,Micron Technology Inc,38
MUVGN.SW,993513,Muench. Rueckvers. VNA O.N,38
NCM.SW,993515,Newcrest Mining Ltd,38
NDB.SW,993516,Nordea Bank Abp,38
NDXG.SW,993517,Nordex SE O.N,38
NEM.SW,993518,Newmont Mining Corporation,38
NHY.SW,993520,Norsk Hydro ASA,38
NKE.SW,993523,Nike Inc,38
NOEJ.SW,993524,Norma Group AG NA O.N,38
NOVOB.SW,993525,Novo Nordisk A/S Class B,38
NZYMB.SW,993527,Novozymes A/S B,38
O2DN.SW,993528,Telefonica Deutschland Holding AG,38
ORCL.SW,993530,Oracle Corporation,38
OSRN.SW,993531,Osram Licht AG,38
P1ZGN.SW,993532,Patrizia Immobilien AG,38
PAA.SW,993533,Pan American Silver Corp,38
BKNG.SW,993534,Booking Holdings Inc,38
PEP.SW,993535,PepsiCo Inc,38
PEUP.SW,993536,Peugeot SA,38
PG.SW,993538,Procter & Gamble Company,38
PMI.SW,993540,Philip Morris International Inc,38
PNDORA.SW,993541,Pandora A/S,38
PSCF.SW,993542,Procimmo Swiss Commercial Fund,38
PSMGN.SW,993543,Prosiebensat 1 Media AG,38
PTNL.SW,993545,PostNL,38
PUMG.SW,993546,Puma SE,38
QCOM.SW,993547,Qualcomm Incorporated,38
RBIV.SW,993549,Raiffeisen Bank International AG,38
RBS.SW,993550,Royal Bank of Scotland Group PLC,38
RDSA.SW,993551,Royal Dutch Shell PLC Class A,38
RENA.SW,993553,Renault SA,38
RHMG.SW,993554,Rheinmetall AG,38
RIO.SW,993555,Rio Tinto PLC,38
RLIN.SW,993556,Rolinco NV,38
RSPF.SW,993558,Realstone Swiss Pro-RTS,38
RUSE.SW,993559,ENR Russia Invest SA,38
RWEG.SW,993560,RWE AG ST O.N,38
S92G.SW,993561,SMA Solar Technology AG,38
SASY.SW,993563,Sanofi SA,38
SAXG.SW,993564,Stroeer SE,38
SBOE.SW,993566,Schoeller-Bleckmann AG,38
SBUX.SW,993567,Starbucks Corporation,38
SCAB.SW,993568,Svenska Cellulosa SCA AB B,38
SCR.SW,993569,SCOR SE,38
SDFGN.SW,993571,K+S AG NA O.N,38
SGEF.SW,993572,Vinci SA,38
SGOB.SW,993574,Compagnie de Saint Gobain SA,38
SIXG.SW,993579,Sixt AG ST O.N,38
SLW.SW,993582,Wheaton Precious Metals Corp,38
SOGN.SW,993583,Societe Generale SA,38
SPLK.SW,993585,Splunk Inc,38
SREIF.SW,993589,Swissinvest Real Estate Investment Fund,38
SRI.SW,993590,Schroder Immoplus,38
STAFR.SW,993592,RESIDENTIA CHF,38
STL.SW,993593,Equinor ASA,38
SW.SW,993595,Sierra Wireless Inc,38
SW1.SW,993596,SHW AG,38
T.SW,993598,AT&T Inc,38
TLXGN.SW,993601,Talanx AG NA O.N,38
TMUS.SW,993602,T-Mobile US Inc,38
TTIGN.SW,993606,Tom Tailor Holding AG,38
TTKG.SW,993607,Takkt AG O.N,38
UAAA.SW,993611,Under Armour Inc A,38
UBIP.SW,993612,Ubisoft Entertainment,38
UIS.SW,993613,Unisys Corporation,38
UTDI.SW,993615,United Internet AG NA,38
UTX.SW,993616,United Technologies Corporation,38
V.SW,993617,Visa Inc,38
VIE.SW,993618,Veolia Environnement VE SA,38
VIV.SW,993619,Vivendi SA,38
VLS.SW,993621,Valneva,38
VOD.SW,993622,Vodafone Group PLC,38
VOWG.SW,993623,Volkswagen AG,38
VRX.SW,993624,Bausch Health Companies Inc,38
VWS.SW,993625,Vestas Wind Systems A/S,38
WACGN.SW,993626,Wacker Neuson NA O.N,38
WBSV.SW,993627,Wienerberger AG,38
WFC.SW,993629,Wells Fargo & Company,38
WMT.SW,993630,Walmart Inc,38
WPL.SW,993631,Woodside Petroleum Ltd,38
XOM.SW,993632,Exxon Mobil Corp,38
XRX.SW,993634,Xerox Corp,38
YAR.SW,993635,Yara International ASA,38
YRI.SW,993636,Yamana Gold Inc,38
ZALG.SW,993637,Zalando SE,38
ZNGA.SW,993638,Zynga Inc,38
ZO1G.SW,993639,Zooplus AG,38
CLUSD.SW,993978,Colgate-Palmolive Company,38
BAUSD.SW,994257,Boeing Co,38
GSUSD.SW,994258,Goldman Sachs Group Inc,38
BKNGUSD.SW,994259,Booking Holdings Inc,38
VARN.SW,994260,Varia US Properties Ltd,38
PYPLUSD.SW,994482,PayPal Holdings Inc,38
TOTF.SW,994730,Total SA,38
SNAP.SW,997437,Snap Inc,38
SNAPC.SW,997804,Snap Inc,38
GEBNE.SW,1027139,Geberit AG 2L,38
ASWN.SW,1072993,Asmallworld AG,38
SPF.SW,1081656,Spotify Technology SA,38
UBSGE.SW,1081657,UBS Group AG,38
LLQ.SW,1084287,Lalique Group SA,38
OBSN.SW,1088710,ObsEva SA,38
FORNE.SW,1095158,Forbo Holding AG,38
SIGNC.SW,1096149,SIG Combibloc Group AG,38

#BA BUENOS AIRES
VALO.BA,1052113,Grupo Financiero Valores Sociedad Anonima,6
GGAL.BA,13304,Grupo Financiero Galicia,6
COME.BA,13332,Sociedad Comercial del Plata SA,6
TXAR.BA,13305,Ternium Argentina SA,6
PAMP.BA,13306,Pampa Energia SA,6
CEPU.BA,13329,Central Puerto SA,6
APBR.BA,13303,Petroleo Brasileiro SA,6
TGNO4.BA,13371,Transportadora de Gas del Norte SA Class C,6
SUPV.BA,978761,Grupo Supervielle SA,6
BMA.BA,13311,Banco Macro,6
CRES.BA,13335,Cresud SA,6
TRAN.BA,13314,Compania de Transporte de Energia Electrica en Alta Tension Transener SA,6
ALUA.BA,13309,Aluar Aluminio Argentino,6
TGSU2.BA,13372,Transportadora de Gas del Sur SA,6
LOMA.BA,1055132,Loma Negra Compania Industrial Argentina SA,6
CARC.BA,13325,Carboclor,6
BYMA.BA,1010847,Bolsas y Mercados Argentinos SA,6
EDN.BA,13313,Empresa Distribuidora y Comercializadora Norte SA,6
TECO2.BA,13307,Telecom Argentina,6
METR.BA,13351,Metrogas SA,6
PGR.BA,992998,Phoenix Global Resources PLC,6
CECO2.BA,13327,Enel Generacion Costanera SA,6
OEST.BA,13354,Grupo Concesionario del Oeste SA,6
BOLT.BA,13322,Boldt,6
PATY.BA,13359,Quickfood SA,6
CVH.BA,1037060,Cablevision Holding SA,6
DGCU2.BA,13337,Distribuidora de Gas Cuyana SA,6
FRAN.BA,13310,BBVA Banco Frances SA,6
YPFD.BA,13373,YPF,6
INDU.BA,13346,Solvay Indupa SAIC,6
AUSO.BA,13320,Autopistas del Sol,6
AGRO.BA,13318,Agrometal,6
BHIP.BA,13316,Banco Hipotecario SA,6
MORI.BA,13353,Morixe Hermanos SACI,6
SEMI.BA,13366,Molinos Juan Semino SA,6
FERR.BA,13339,Ferrum SA de Ceramica y Metalurgia,6
MIRG.BA,13315,Mirgor,6
TGLT.BA,962567,TGLT SA,6
TS.BA,13302,Tenaris,6
CADO.BA,13324,Carlos Casado,6
LONG.BA,13350,Longvie SA,6
HARG.BA,13348,Holcim Argentina SA,6
RICH.BA,1057300,Laboratorios Richmond SACIF,6
GARO.BA,13342,Garovaglio y Zorroaquin,6
SAMI.BA,13367,San Miguel AG,6
INVJ.BA,19022,Inversora Juramento SA,6
FIPL.BA,13340,Fiplasto SA,6
OGZD.BA,30359,Gazprom PAO,6
VALE.BA,30353,VALE SA,6
CELU.BA,13328,Celulosa Argentina SA,6
DYCA.BA,13336,Dycasa SA,6
BBD.BA,30418,Banco Bradesco SA ADR,6
DOME.BA,962557,Domec Compania de Artefactos Domesticos SAIC y F,6
INTR.BA,962561,Compania Introductora de Buenos Aires SA,6
IRSA.BA,13347,IRSA Inversiones y Representaciones SA,6
C.BA,29977,Citigroup Inc DRC,6
KO.BA,962562,Coca Cola Co DRC,6
PSUR.BA,13358,Petrolera del Conosur SA,6
MOLI.BA,13352,Molinos Rio de la Plata SA,6
BPAT.BA,13308,Banco Patagonia,6
GCLA.BA,13330,Grupo clarin,6
MSFT.BA,29991,Microsoft Corp DRC,6
GRIM.BA,13344,Grimoldi SA,6
CGPA2.BA,13323,Camuzzi Gas Pampeana SA,6
STD.BA,13369,Banco Santander,6
CAPX.BA,13334,Capex,6
BRIO.BA,13362,Banco Santander Rio SA,6
MOLA.BA,1024827,Molinos Agro SA,6
LOMAH.BA,1055994,Loma Negra Compania Industrial Argentina SA,6
TEF.BA,13370,Telefonica,6
GBAN.BA,13343,Naturgy Energy Group SA,6
ROSE.BA,13363,Instituto Rosenbusch SA de Biologia Experimental Agropecuaria,6
LEDE.BA,13349,Ledesma SAAI,6
DISN.BA,30006,Walt Disney Company DRC,6
POLL.BA,13357,Polledo SAIC,6
GOOGL.BA,962559,Alphabet Inc,6
HAVA.BA,985733,Havanna Holding SA,6
RIGO.BA,13361,Rigolleau SA,6
MELI.BA,962564,MercadoLibre Inc DRC,6
CAPU.BA,13326,Caputo,6
COLO.BA,13331,Colorin Industria de Materiales Sinteticos SA,6
PATA.BA,13355,Importadora y Exportadora de la Patagonia SA,6
REP.BA,13360,Repsol,6
IRCP.BA,13365,IRSA Propiedades Comerciales SA,6
CVX.BA,29974,Chevron Corp DRC,6
BAC.BA,29979,Bank of America Corp DRC,6
CAT.BA,29984,Caterpillar Inc DRC,6
INTC.BA,29987,Intel Corp DRC,6
CSCO.BA,30012,Cisco Systems DRC,6
MCD.BA,30023,McDonald Corp DRC,6
MMM.BA,30029,3M Co DRC,6
RDS.BA,30040,Royal Dutch Shell A DRC,6
PHG.BA,30044,Koninklijke Philips NV DRC,6
NVS.BA,30054,Novartis DRC,6
TOT.BA,30075,Total CEDEAR DRC,6
BBV.BA,30081,Banco Bilbao Vizcaya Argentaria DRC,6
NOKA.BA,30087,Nokia Oyj CEDEAR,6
BHP.BA,30091,BHP Billiton Ltd CEDEAR,6
SAP.BA,30096,SAP AG ADR,6
NGG.BA,30179,National Grid PLC DRC,6
UN.BA,30183,Unilever NV DRC,6
CL.BA,30202,Colgate-Palmolive Company DRC,6
DWDP.BA,30208,E I du Pont de Nemours and Co,6
PFE.BA,30213,Pfizer Inc. DRC,6
WMT.BA,30215,Wal Mart Stores Inc DRC,6
IBM.BA,30226,International Business Machines DRC,6
SNE.BA,30229,Sony Corp ADR,6
NEM.BA,30240,Newmont Mining DRC,6
JNJ.BA,30246,Johnson & Johnson Co DRC,6
AUY.BA,30259,Yamana Gold Inc DRC,6
HPQ.BA,30276,HP Inc DRC,6
TM.BA,30284,Toyota Motor Corporation ADR,6
PEP.BA,30289,PepsiCo Inc DRC,6
PTR.BA,30297,PetroChina Co DRC,6
CHL.BA,30301,China Mobile Ltd CEDEAR,6
NKE.BA,30308,Nike Inc DRC,6
PG.BA,30311,Procter & Gamble DRC,6
ABX.BA,30374,Barrick Gold DRC,6
GG.BA,30497,GoldCorp DRC,6
OVOP.BA,40419,Ovoprot International SA,6
ESME.BA,955693,Bodegas Esmeralda SA,6
AIG.BA,962553,American International Group Inc,6
APBRA.BA,962554,Petroleo Brasileiro SA PN,6
AXP.BA,962555,American Express Co DRC,6
BSBR.BA,962556,Banco Santander Brasil SA,6
HMC.BA,962560,Honda Motor Co Ltd ADR,6
LMT.BA,962563,Lockheed Martin Corp DRC,6
BRIO6.BA,962566,Banco Santander Rio SA Pref,6
EMDE.BA,992999,Empresa Distribuidora Electrica Regional SA,6
INAG.BA,993000,Insumos Agroquimicos SA,6
MERA.BA,993001,Meranol SACI,6
EDLH.BA,1073217,EDESAL Holding SA,6
EDSH.BA,1073218,Edesa Holding SA,6

#SA SAO PAOLO
BVSP.SA,17920,Bovespa,32
PETR4.SA,18750,Petroleo Brasileiro SA PN,32
CRFB3.SA,1025085,Atacadao SA,32
VIVR3.SA,18816,Viver Incorporadora e Construtora,32
VALE3.SA,18814,Vale SA,32
USIM5.SA,18812,Usinas Siderurgicas de Minas Gerais,32
CIEL3.SA,18639,Cielo SA,32
ABEV3.SA,18599,Ambev SA,32
KROT3.SA,40433,Kroton Educacional SA,32
ITSA4.SA,18706,Itausa - Investimentos Itau SA,32
ITUB4.SA,18708,Itau Unibanco Banco Holding SA,32
BBDC4.SA,18606,Banco Bradesco SA Pref,32
CMIG4.SA,18642,CEMIG - Companhia Energetica Minas Gerais Pref,32
BBAS3.SA,18604,Banco do Brasil SA,32
NATU3.SA,18742,Natura Cosmeticos SA,32
GGBR4.SA,18689,Gerdau SA Pref,32
B3SA3.SA,18628,B3 SA Brasil Bolsa Balcao,32
GOAU4.SA,18691,Metalurgica Gerdau SA,32
ESTC3.SA,18673,Estacio Participacoes SA,32
JBSS3.SA,18709,JBS SA,32
GOLL4.SA,18692,Gol Linhas Aereas Inteligentes SA Pref,32
PETR3.SA,18749,Petroleo Brasileiro SA,32
OIBR3.SA,18624,Oi SA,32
PDGR3.SA,18748,PDG Realty SA,32
CSNA3.SA,18653,Cia Siderurgica Nacional SA,32
TIMP3.SA,18797,Tim Participacoes SA,32
SUZB3.SA,1055002,Suzano Papel e Celulose SA,32
RAIL3.SA,18593,RUMO Logistica Operadora Multimodal SA,32
BRFS3.SA,18617,BRF SA,32
BRML3.SA,18621,BR Malls Participacoes SA,32
JHSF3.SA,18711,JHSF Participacoes SA,32
CCRO3.SA,18633,CCR SA,32
VVAR11.SA,50518,Viavarejo Unt,32
CYRE3.SA,18657,Cyrela Brazil Realty SA,32
TCSA3.SA,18791,Tecnisa SA,32
MRVE3.SA,18738,MRV Engenharia e Participacoes SA,32
RENT3.SA,18770,Localiza Rent a Car SA,32
BPAC11.SA,996550,Banco BTG Pactual SA,32
ELET3.SA,18666,Centrais Eletricas Brasileiras SA,32
MRFG3.SA,18736,Marfrig Alimentos SA,32
BTOW3.SA,18626,B2W Cia Digital,32
BBSE3.SA,50509,BB Seguridade Participacoes SA,32
LAME4.SA,18717,Lojas Americanas SA,32
POMO4.SA,18756,Marcopolo SA,32
RAPT4.SA,18766,Randon Participacoes SA,32
KLBN11.SA,102072,Klabin Unt,32
DTEX3.SA,18662,Duratex SA,32
WEGE3.SA,18820,WEG SA,32
UGPA3.SA,18807,Ultrapar Participacoes SA,32
ECOR3.SA,18663,EcoRodovias SA,32
EMBR3.SA,18669,Embraer SA,32
BEEF3.SA,18608,Minerva SA/Brazil,32
BBDC3.SA,18605,Banco Bradesco SA,32
BRAP4.SA,18616,Bradespar SA,32
FIBR3.SA,18680,Fibria Celulose SA,32
LREN3.SA,18724,Lojas Renner SA,32
FJTA4.SA,18681,Forjas Taurus SA,32
ENBR3.SA,18670,EDP - Energias do Brasil SA,32
TAEE11.SA,18804,TAESA UNT N2,32
BRDT3.SA,1056489,Petrobras Distribuidora SA,32
ELET6.SA,18667,Centrais Eletricas Brasileiras SA,32
GFSA3.SA,18687,Gafisa SA,32
OIBR4.SA,18625,Oi SA Pref,32
LIGT3.SA,18719,Light SA,32
MGLU3.SA,18729,Magazine Luiza SA,32
MULT3.SA,18740,Multiplan SA,32
PCAR4.SA,18747,Companhia Brasileira deDistribuicao,32
QUAL3.SA,18764,Qualicorp SA,32
AMAR3.SA,18597,Marisa Lojas SA,32
VIVT4.SA,18818,Telefonica Brasil SA,32
BKBR3.SA,1056491,BK BRASIL OPERACAO E ASSESSORIA A RESTAURANTES SA,32
CSAN3.SA,18651,Cosan SA Industria e Comercio,32
BRKM5.SA,18620,Braskem SA,32
AZUL4.SA,1008677,Azul SA Pref,32
IRBR3.SA,1030995,IRB Brasil Resseguros SA,32
FLRY3.SA,18682,Fleury SA,32
SULA11.SA,18786,Sul America SA,32
SBSP3.SA,18776,Cia de Saneamento Basico do Estado,32
LINX3.SA,50514,Linx ON,32
BRSR6.SA,18623,BANRISUL PNB N1,32
MEAL3.SA,18702,International Meal Company,32
TIET11.SA,962574,AES Tiete Energia SA,32
MYPK3.SA,18741,Iochpe-Maxion SA,32
HYPE3.SA,18698,Hypermarcas SA,32
HGTX3.SA,18696,Cia Hering,32
PMAM3.SA,18754,Paranapanema SA,32
HAPV3.SA,1073236,Hapvida Participacoes e Investimentos,32
SANB11.SA,18775,Banco Santander Brasil SA Unit,32
CVCB3.SA,50513,Cvc Brasil ON,32
DMMO3.SA,986043,Ogx Petroleo e Gas SA em Recuperacao Judicial,32
CESP6.SA,18636,Cia Energetica de Sao Paulo,32
ENEV3.SA,18735,Eneva SA,32
ODPV3.SA,18743,Odontoprev SA,32
CMIG3.SA,18641,Cia Energetica de Minas Gerais,32
STBP3.SA,30642,Santos Brasil Participacoes SA,32
GNDI3.SA,1073664,Notre Dame Intermedica Participacoes,32
ENGI11.SA,977700,Energisa SA,32
EQTL3.SA,18672,Equatorial Energia SA,32
FHER3.SA,18679,Fertilizantes Heringer SA,32
MOVI3.SA,996059,Movida Participacoes SA,32
SEER3.SA,50515,Ser Educa ON,32
BRPR3.SA,18622,BR Properties SA,32
HBOR3.SA,18695,Helbor Empreendimentos SA,32
FNAM11.SA,986373,Fundo de Investimento da Amazonia,32
CPLE6.SA,18647,Cia Paranaense de Energia,32
EGIE3.SA,18790,Engie Brasil Energia SA,32
IGTA3.SA,18701,IGUATEMI ON NM,32
LAME3.SA,18716,Lojas Americanas SA,32
TEND3.SA,1009367,Construtora Tenda SA,32
SMLS3.SA,50516,Smiles Fidelidade SA,32
EVEN3.SA,18676,Even Construtora e Incorporadora SA,32
RADL3.SA,40436,Raia Drogasil SA,32
SLCE3.SA,18781,SLC Agricola SA,32
WIZS3.SA,953902,FPC Par Corretora De Seguros S/A,32
MILS3.SA,18730,MILLS ON EJ NM,32
SLED4.SA,18782,Saraiva SA Livreiros Editores,32
GRND3.SA,18693,Grendene SA,32
MPLU3.SA,18734,Multiplus SA,32
QGEP3.SA,18763,QGEP Participacoes SA,32
DIRR3.SA,18661,Direcional Engenharia SA,32
PARD3.SA,996172,Instituto Hermes Pardini SA,32
ALSC3.SA,18596,Aliansce Shopping Centers SA,32
SMTO3.SA,18783,Sao Martinho SA,32
TESA3.SA,18813,Terra Santa Agro SA,32
ALUP11.SA,50506,Alupar Unt,32
TUPY3.SA,50517,Tupy ON,32
FSRF11.SA,986374,Fdo Inv Setorial FL E Ref Fiset FL Ref,32
PSSA3.SA,18760,Porto Seguro SA,32
TRPL4.SA,18805,CTEEP Cia de Transmissao de Energia,32
PTBL3.SA,18761,Portobello SA,32
CSMG3.SA,18652,Cia de Saneamento de Minas Gerais,32
PFRM3.SA,18751,PROFARMA ON NM,32
RLOG3.SA,950047,Cosan Logistica SA,32
ANIM3.SA,50507,Anima ON,32
TGMA3.SA,18796,Tegma Gestao Logistica,32
FJTA3.SA,40432,Forjas Taurus SA,32
BPAN4.SA,18614,Banco Pan SA,32
VLID3.SA,18819,VALID ON NM,32
EZTC3.SA,18677,Ez Tec SA,32
ETER3.SA,18674,Eternit SA,32
CAML3.SA,1050758,Camil Alimentos SA,32
MDIA3.SA,18727,M Dias Branco SA,32
ABCB4.SA,18589,Banco ABC Brasil SA,32
LIQO3.SA,18654,Contax Participacoes SA,32
RSID3.SA,18774,Rossi Residencial SA,32
TIET4.SA,18686,Aes Tiete Energia SA,32
TOTS3.SA,18801,Totvs SA,32
TRIS3.SA,18803,Trisul SA,32
LPSB3.SA,18723,LPS Brasil Consultoria de Imoveis,32
SHOW3.SA,18780,T4F Entretenimento SA,32
ARZZ3.SA,18602,Arezzo Industria e Comercio SA,32
MAGG3.SA,18726,Magnesita Refratarios SA,32
CPFE3.SA,18645,CPFL Energia SA,32
RNEW4.SA,1006466,Renova Energia SA Pref,32
LEVE3.SA,18718,Mahle-Metal Leve SA,32
TPIS3.SA,18802,TRIUNFO PART ON NM,32
ROMI3.SA,18773,Industrias Romi SA,32
JSLG3.SA,18712,JSL SA,32
IDVL4.SA,18700,Banco Indusval SA,32
SAPR11.SA,1055134,Companhia de Saneamento do Parana Sanepar Unit,32
BIDI4.SA,1075215,Banco Inter SA Pref,32
ALPA4.SA,18595,Alpargatas SA,32
LOGN3.SA,18722,Log-in Logistica Intermodal SA,32
LCAM3.SA,40434,Cia de Locacao das Americas,32
SAPR4.SA,969126,Companhia de Saneamento do Parana Sanepar,32
WSON33.SA,992817,Wilson Sons Ltd,32
IGBR3.SA,959111,Gradiente Electronica SA,32
AALR3.SA,993004,Centro de Imagem Diagnosticos SA,32
CARD3.SA,18630,CSU Cardsystem SA,32
CPLE3.SA,18646,Cia Paranaense de Energia,32
CELP3.SA,986349,Centrais Eletricas do Para SA CELPA,32
KLBN4.SA,18714,Klabin SA,32
CGAS5.SA,18637,Companhia de Gas de Sao Paulo,32
VULC3.SA,986420,Vulcabras Azaleia SA,32
FESA4.SA,18678,Cia de Ferro Ligas da Bahia Ferbasa,32
VIVT3.SA,18817,Telefonica Brasil SA,32
GBIO33.SA,1025086,Biotoscana Investments SA,32
GPIV33.SA,1075237,GP Investments Ltd DRC Class A,32
RNEW11.SA,18772,Renova Energia SA Unit,32
VVAR3.SA,986421,Via Varejo SA,32
UNIP6.SA,18809,Unipar Carbocloro SA,32
LUPA3.SA,18725,Lupatech SA,32
POSI3.SA,18757,Positivo Informatica SA,32
OMGE3.SA,1030994,Omega Geracao SA,32
VVAR4.SA,986422,Via Varejo SA Pref,32
BEES3.SA,986330,Banestes SA Banco do Estado do Espirito Santo,32
POMO3.SA,18755,Marcopolo SA,32
TECN3.SA,18792,Technos SA,32
BBRK3.SA,18607,Brasil Brokers Participacoes SA,32
GUAR3.SA,958338,Guararapes Confeccoes SA,32
TIET3.SA,18685,Aes Tiete Energia SA,32
UCAS3.SA,40437,UNICASA Industria de Moveis SA,32
BPHA3.SA,18613,Brasil Pharma SA,32
PPLA11.SA,997133,BTG Pactual Participations Ltd Unit,32
FRAS3.SA,950042,Fras Le SA,32
RCSL4.SA,986401,Recrusul SA Pref,32
RNEW3.SA,1006465,Renova Energia SA,32
ITUB3.SA,18707,Itau Unibanco Holding SA ON,32
BRIN3.SA,18618,BR INSURANCE ON NM,32
ITSA3.SA,18705,Itausa - Investimentos Itau SA,32
OGXP3.SA,18744,OGX Petroleo e Gas Participacoes SA,32
GGBR3.SA,18688,Gerdau SA,32
CPRE3.SA,50511,Cpfl Renovav ON,32
CRDE3.SA,18648,CR2 Empreendimentos Imobiliarios SA,32
PRIO3.SA,18697,Petro Rio SA,32
MXRF11.SA,940960,FII MAXI REN,32
BRAP3.SA,18615,Bradespar SA,32
SGPS3.SA,18779,Springs Global Participacoes SA,32
BOBR4.SA,986341,Bombril SA,32
AZEV4.SA,986325,Azevedo & Travassos SA Pref,32
SHUL4.SA,961996,Schulz SA,32
BIDI4T.SA,1088179,Banco Inter SA Pref,32
AGRO3.SA,18592,BrasilAgro - Co ON NM,32
ATOM3.SA,962572,Atom Participacoes SA em Recuperacao Judicial,32
KEPL3.SA,18713,Kepler Weber SA,32
CESP3.SA,40428,Cia Energetica de Sao Paulo,32
CTNM4.SA,18656,COTEMINAS PN,32
GOAU3.SA,18690,Metalurgica Gerdau SA,32
VISC11.SA,1054839,Vinci Shopping Centers Fundo de Investimento Imobiliario FII,32
ENGI4.SA,18671,Energisa SA,32
RDNI3.SA,18768,Rodobens Negocios Imobiliarios SA,32
FSPE11.SA,993018,Fundo de Investimentos Setoriais Fiset Pesca,32
BSEV3.SA,50510,Biosev ON,32
CRPG6.SA,986356,Cristal Pigmentos do Brasil SA Pref B,32
ABCP11.SA,940934,FII ABC IMOB,32
TRPN3.SA,18806,Tarpon Investimentos SA,32
HGLG11.SA,940953,FII CSHG LOG,32
BRCR11.SA,940941,FII BC FUND,32
GGRC11.SA,1031342,GGR Covepi Renda Fundo de Investimento Imobiliario,32
FLMA11.SA,940948,FII S F LIMA,32
FRTA3.SA,18771,Pomifrutas SA,32
CRPG5.SA,986355,Cristal Pigmentos do Brasil SA Pref A,32
KNCR11.SA,940956,FII KINEA RI,32
ELPL3.SA,30640,ELETROPAULO ON N2,32
GUAR4.SA,958339,Guararapes Confeccoes SA,32
USIM3.SA,18811,Usinas Siderurgicas de Minas Gerais,32
RAPT3.SA,18765,Randon Participacoes SA,32
TCNO4.SA,986414,Tecnosolo Engenharia SA,32
MMXM11.SA,993023,MMX Mineracao e Metalicos SA,32
JPSA3.SA,1075236,Jereissati Participacoes SA,32
SEDU3.SA,950041,Somos Educacao SA,32
BMEB4.SA,986334,Banco Mercantil do Brasil SA Pref,32
PINE4.SA,18752,Banco Pine SA,32
SAPR3.SA,1037051,Companhia de Saneamento do Parana Sanepar,32
HGRE11.SA,940954,FII HG REAL,32
PLAS3.SA,18753,Plascar Participacoes Industriais,32
TCNO3.SA,940791,Tecnosolo Engenharia SA ON,32
CGRA4.SA,18638,Grazziotin SA,32
XPLG11.SA,1089403,XP LOG FDO INV IMOB CF,32
SNSL3.SA,102070,Senior Sol,32
SSBR3.SA,18784,Sonae Sierra Brasil SA,32
SLED3.SA,986409,Saraiva SA Livreiros Editores,32
BBPO11.SA,940937,FII BB PRGII,32
KNIP11.SA,1009365,Kinea Private Equity Investimentos SA,32
CLSC4.SA,40430,Celesc SA,32
KNRI11.SA,940958,FII KINEA,32
CGAS3.SA,986352,Companhia de Gas de Sao Paulo Comgas,32
UNIP3.SA,18808,Unipar Carbocloro SA,32
BIOM3.SA,102071,Biomm On,32
MTSA4.SA,986392,METISA Metalurgica Timboense SA Pref,32
WLMM4.SA,986408,WLM Industria e Comercio SA,32
RBRR11.SA,1091188,FII RBR Rendimento High Grade,32
INEP4.SA,18704,Inepar SA Industria e Construcoes,32
BCFF11.SA,986550,BB Renda Corporativa Fundo de Investimento Imobiliario FII,32
JSRE11.SA,940955,FII JS REAL,32
AAPL34.SA,953555,Apple Inc BDR,32
EUCA4.SA,18675,Eucatex SA Industria e Comercio,32
FNOR11.SA,993017,FI do Nordeste FINOR,32
FSTU11.SA,993019,Fuente Internacional de Servicios para Turistas Ltd,32
SANB4.SA,30641,Banco Santander Brasil SA,32
FIGS11.SA,940946,FII GEN SHOP,32
MFII11.SA,955714,Fundo Investimento Imobil Merito,32
SANB3.SA,943639,Banco Santander SA B3,32
HGBS11.SA,940787,CSHG Brasil Shopping,32
VRTA11.SA,940980,FII FATOR VE,32
OFSA3.SA,950046,Ouro Fino Saude Animal Particip,32
TGAR11.SA,1097557,FII TG Ativo Real,32
GSHP3.SA,18694,General Shopping Brasil SA,32
XTED11.SA,940983,FII TRXE COR,32
WHRL4.SA,986423,Whirlpool SA Pref,32
CCPR3.SA,18632,Cyrela Commercial Properties SA,32
CTXT11.SA,940942,FII C TEXTIL,32
BEES4.SA,986331,Banestes SA Banco do Estado do Espirito Santo Pref,32
SAAG11.SA,940973,FII SANT AGE,32
SDIL11.SA,940974,FII SDI LOG,32
MGEL4.SA,18728,Mangels Industrial SA,32
HGRU11.SA,1097720,CSHG RENDA URBANA FII,32
GOGL34.SA,987165,Alphabet Inc A BDR,32
BAUH4.SA,986328,Excelsior Alimentos SA pref,32
TXRX4.SA,1072033,Textil Renauxview SA Pref,32
IRDM11.SA,1075601,IRIDIUM RECEBÍVEIS IMOBILIÁRIOS,32
ADHM3.SA,18601,Advanced Digital Health Medicina Preventiva SA,32
FEXC11.SA,986564,Fundo de Investimento Imobiliario Excellence,32
INEP3.SA,18703,Inepar SA Industria e Construcoes,32
KLBN3.SA,986386,Klabin SA,32
CTKA4.SA,986358,Karsten SA Pref,32
SCAR3.SA,18777,SAO CARLOS ON NM,32
CCXC3.SA,40427,CCX Carvao da Colombia SA,32
CGRA3.SA,40429,Grazziotin SA,32
HGJH11.SA,940788,CSHG JHSF Prime Offices,32
RBVO11.SA,940969,FII RIOBCRI2,32
HGCR11.SA,940952,FII CSHG CRI,32
WALM34.SA,953593,Wal Mart Stores Inc BDR,32
EALT4.SA,986365,Electro Aco Altona SA,32
TAEE4.SA,1081679,Transmissora Alianca de Energia Eletrica SA Pref,32
RANI3.SA,986398,Celulose Irani SA,32
EDGA11.SA,986559,FI Imobiliario BM Edificio Galeria,32
RNGO11.SA,940972,FII RIONEGRO,32
MMXM3.SA,18732,MMX Mineracao e Metalicos SA,32
GPCP3.SA,986375,GPC Participacoes SA em Recuperacao Judicial,32
ALPA3.SA,18594,Alpargatas SA,32
CTSA4.SA,986361,Companhia Tecidos Santanense Pref,32
SCPF11.SA,993031,SCP FII,32
TBOF11.SA,940977,FII TBOFFICE,32
FIXX11.SA,940947,FII FATORFIX,32
NUTR3.SA,102073,Nutriplant,32
BAZA3.SA,940786,Banco da Amazonia SA ON,32
RBBV11.SA,940964,FII JHSF FBV,32
CTSA3.SA,986360,Companhia Tecidos Santanense,32
CVCB3T.SA,986362,CVC Brasil Operadora e Agencia de Viagens SA,32
VLOL11.SA,940979,FII OLIMPIA,32
JRDM11.SA,986570,FII BM Jardim Sul,32
FIIB11.SA,993014,FII Industrial do Brasil,32
TRXL11.SA,940978,FII TRX LOG,32
BRSR3.SA,977698,Banco do Estado do Rio Grande do Sul SA,32
EMAE4.SA,986368,EMAE Empresa Metropolitana de Aguas e Energia SA,32
CAMB4.SA,18629,Cambuci SA,32
REDE3.SA,986402,Rede Energia SA,32
GRLV11.SA,993021,CSHG GR Louveira FII,32
HFOF11.SA,1073009,Hedge Top Fofii 3 Fundo De Investimento Imobiliario,32
FVBI11.SA,986567,Fundo de Investimento Imobiliario VBI FL 4440 FII,32
FFCI11.SA,940945,FII RIOB RC,32
DISB34.SA,953568,Walt Disney Co BDR,32
DTCY3.SA,986364,Dtcom Direct to Company SA,32
BBVJ11.SA,940939,FII C JARDIM,32
CEOC11.SA,986552,FI Imobiliario CEO Cyrela Commercial Properties,32
IDNT3.SA,18699,IdeiasNet SA,32
BCRI11.SA,987151,Banestes Recebiveis Imobiliarios FII,32
SPTW11.SA,940976,FII SP DOWNT,32
HTMX11.SA,986569,FII Hotel Maxinvest,32
RPMG3.SA,976493,Refinaria de Petroleos de Manguinhos SA,32
ALZR11.SA,1059885,Alianza Trust Renda Imobiliaria FII,32
XPCM11.SA,940981,FII XP MACAE,32
RBRD11.SA,940968,FII RB II,32
THRA11.SA,1079237,FII CYRELA THERA CORPORATE,32
PFIZ34.SA,953588,Pfizer Inc BDR,32
RANI4.SA,986399,Celulose Irani SA Pref,32
CPTS11B.SA,986555,FII Capitania Securities II,32
RBRF11.SA,1073104,FII RBR ALPHA Fundo de Fundos,32
NSLU11.SA,986572,FII Nossa Senhora De Lourdes,32
MCDC34.SA,955713,McDonalds Corp BDR,32
ENGI3.SA,986369,Energisa SA ORD,32
HAGA4.SA,986376,Haga SA Industria e Comercio Pref,32
COCE5.SA,18644,Cia Energetica do Ceara,32
CBOP11.SA,993009,FII Castello Branco Office,32
FIIP11B.SA,986565,RB Capital Holding SA,32
MGFF11.SA,1097556,FII Mogno Fundo De Fundos,32
BBRC11.SA,940938,FII BB CORP,32
PEPB34.SA,955717,PepsiCo Inc BDR,32
RCSL3.SA,986400,Recrusul SA,32
OUJP11.SA,1072297,Ourinvest JPP Fundo de Investimento Imobiliario FII,32
HOME34.SA,953575,Home Depot Inc BDR,32
BPFF11.SA,940940,FII ABSOLUTO,32
JPMC34.SA,953579,JPMorgan Chase & Co BDR,32
LLIS3.SA,18720,LE LIS BLANC ON NM,32
ATTB34.SA,953560,AT&T Inc BDR,32
TEXA34.SA,960780,Texas Instruments Inc BDR,32
BRIV3.SA,986342,Banco Alfa de Investimento SA,32
AEFI11.SA,940935,FII AESAPAR,32
BCIA11.SA,1072298,Bradesco Carteira Imobiliária Ativa FII  ,32
KNRE11.SA,940957,FII KII REAL,32
FAED11.SA,986561,FII Anhanguera Educacional,32
HMOC11.SA,940951,FII GWI RI,32
MMMC34.SA,953582,3M Co BDR,32
SBUB34.SA,953590,Starbucks Corp BDR,32
TELB4.SA,959114,Telecomunicacoes Brasileiras SA Telebras Pref,32
OSXB3.SA,18746,OSX Brasil SA,32
BOAC34.SA,953563,Bank of America Corp BDR,32
EXXO34.SA,953569,Exxon Mobil Corp BDR,32
GEOO34.SA,953571,General Electric Co BDR,32
FCXO34.SA,960773,Freeport Mcmoran Copper Gold Inc BD,32
HETA4.SA,986378,Hercules SA Fabrica De Talheres,32
AGCX11.SA,940936,FII AG CAIXA,32
PORD11.SA,993027,Polo FII Recebiveis Imobiliarios II,32
BBFI11B.SA,986549,BB Fundo de Investimento Imobiliario Progressivo,32
BRKM3.SA,18619,Braskem SA,32
CEED3.SA,18635,CEEE-D ON N1,32
JNJB34.SA,953578,Johnson & Johnson BDR,32
VISA34.SA,953592,Visa Inc BDR,32
CHVX34.SA,955706,Chevron Corp BDR,32
NFLX34.SA,955716,Netflix Inc DRC,32
BDLL4.SA,986329,Bardella SA Industrias Mecanicas Pref,32
GOGL35.SA,987166,Alphabet Inc C BDR,32
GMCO34.SA,998082,General Motors Co,32
CNES11.SA,986553,Fundo de Investimento Imobiliario FII Cenesp,32
ONEF11.SA,940961,FII THE ONE,32
BNFS11.SA,993008,FII Banrisul Novas Fronteiras,32
EURO11.SA,940944,FII EUROPAR,32
FIVN11.SA,993015,FII Vida Nova,32
MTIG4.SA,18739,Metalgrafica Iguacu SA,32
AMZO34.SA,953558,Amazon.com Inc BDR,32
BERK34.SA,953562,Berkshire Hathaway Inc BDR,32
CSCO34.SA,953567,Cisco Systems Inc BDR,32
ITLC34.SA,953577,Intel Corp BDR,32
MSCD34.SA,953584,MasterCard Inc BDR,32
MSFT34.SA,953585,Microsoft Corp BDR,32
CTGP34.SA,955708,Citigroup Inc BDR,32
FBOK34.SA,955710,Facebook Inc BDR,32
LILY34.SA,955712,Eli Lilly and Co BDR,32
MOSC34.SA,960778,The Mosaic Company BDR,32
CTNM3.SA,986359,Companhia de Tecidos Norte de Minas COTEMINAS,32
UNIP5.SA,986418,Unipar Carbocloro SA Pref,32
ALMI11.SA,986546,Fundo de Investimento Imobiliario FII Torre Almirante,32
CHKE34.SA,987154,Chesapeake Energy Corp,32
GILD34.SA,987164,Gilead Sciences Inc,32
ROST34.SA,987173,Ross Stores Inc,32
VLOE34.SA,987182,Valero Energy Corp DRC,32
AFLT3.SA,993005,Afluente Transmissao de Energia Eletrica SA,32
SHPH11.SA,940975,FII HIGIENOP,32
RBDS11.SA,993028,FII RB Capital Desenvolvimento Residencial II,32
EEEL3.SA,18664,CEEE-GT ON N1,32
FRIO3.SA,18684,Metalfrio Solutions SA,32
JFEN3.SA,18710,Joao Fortes Engenharia SA,32
PTNT4.SA,18762,Pettenati SA Industria Textil,32
PRSV11.SA,940963,FII P VARGAS,32
GEPA4.SA,950043,Duke Energy Intl Geracao Para,32
TOYB3.SA,950048,Tec Toy SA,32
ARMT34.SA,953559,ArcelorMittal BDR,32
CMCS34.SA,953565,Comcast Corp BDR,32
COCA34.SA,953566,The Coca-Cola Co BDR,32
GSGI34.SA,953573,Goldman Sachs Group BDR,32
LMTB34.SA,953581,Lockheed Martin Corp BDR,32
NIKE34.SA,953586,Nike Inc BDR,32
PGCO34.SA,953589,Procter & Gamble Co BDR,32
WFCO34.SA,953594,Wells Fargo & Co BDR,32
COPH34.SA,955707,ConocoPhillips DRC,32
MSBR34.SA,955715,Morgan Stanley Bank AG,32
AVON34.SA,960768,Avon Products Inc BDR,32
BMYB34.SA,960769,Bristol-Myers Squibb Company BDR,32
MDLZ34.SA,960777,Mondelez International Inc BDR,32
WUNI34.SA,960783,The Western Union Company BDR,32
BAHI3.SA,986326,Bahema SA,32
BGIP4.SA,986332,Banco do Estado de Sergipe SA Pref,32
BMIN4.SA,986336,Banco Mercantil de Investimentos SA Pref,32
CELP5.SA,986350,Centrais Eletricas do Para SA CELPA Pref,32
HOOT4.SA,986379,Hoteis Othon SA,32
JOPA3.SA,986384,Josapar Joaquim Oliveira SA Participacoes,32
TRPL3.SA,986417,CTEEP Companhia de Transmissao de Energia Eletrica Paulista,32
ABBV34.SA,987149,AbbVie Inc,32
BIIB34.SA,987152,Biogen Inc,32
DEAI34.SA,987159,Delta Air Lines Inc,32
MDTC34.SA,987170,Medtronic PLC DRC,32
AETB34.SA,994836,Aetna Inc BDR,32
GEPA3.SA,1036829,Rio Paranapanema Energia SA,32
BOXP34.SA,1072433,Boston Properties Inc DRC,32
GPRO34.SA,1072436,GoPro Inc BDR,32
MBRF11.SA,940789,Mercantil do Brasil,32
RBGS11.SA,940966,FII RB GSB I,32
FAMB11B.SA,986562,Fundo de Investimento Imobiliario FII Edificio Almirante Barroso,32
FPAB11.SA,940949,FII A BRANCA,32
HCRI11.SA,986568,Fundo de Investimento Imobiliario FII Hospital da Crianca,32
RBCB11.SA,940965,FII RIOBRCIB,32
PQDP11.SA,940962,FII D PEDRO,32
DOMC11.SA,977699,FII Domo,32
CXCE11B.SA,986556,FII CAIXA CEDAE,32
FMOF11.SA,993016,FII Memorial Office,32
BMLC11B.SA,986551,Fundo de Investimento Imobiliario BM Brascan Lajes Corporativas FII,32
MAXR11.SA,986571,Fundo de Investimento Imobiliario Max Retail FII,32
TRNT11.SA,986574,Fundo de Investimento Imobiliario FII Torre Norte,32
CXRI11.SA,987158,FII Caixa Rio Bravo,32
PLRI11.SA,993026,Polo FII Recebiveis Imobiliarios I,32
FOFT11.SA,1076734,CSHG TOP FOFII 2 FII,32
BTTL4.SA,18627,BATTISTELLA PN,32
CEDO4.SA,18634,CEDRO PN N1,32
CREM3.SA,18649,Cremer SA,32
DASA3.SA,18659,Diagnosticos da America SA,32
ELEK4.SA,18665,Elekeiroz SA,32
TEKA4.SA,18793,Teka Tecelagem Kuehnrich SA,32
BRSR5.SA,30637,BANRISUL PNA N1,32
CESP5.SA,30638,Cia Energetica de Sao Paulo,32
COCE3.SA,40431,Cia Energetica do Ceara,32
CXTL11.SA,940943,FII CX TRX,32
RDES11.SA,940970,FII RD ESCRI,32
RNDP11.SA,940971,FII BB R PAP,32
ABTT34.SA,953556,Abbott Laboratories BDR,32
AMGN34.SA,953557,Amgen Inc BDR,32
AXPB34.SA,953561,American Express Co BDR,32
CATP34.SA,953564,Caterpillar Inc BDR,32
FDMO34.SA,953570,Ford Motor Co BDR,32
HALI34.SA,953574,Halliburton Co BDR,32
HPQB34.SA,953576,Hewlett-Packard Co BDR,32
MRCK34.SA,953583,Merck & Co Inc BDR,32
ORCL34.SA,953587,Oracle Corp BDR,32
VERZ34.SA,953591,Verizon Communications Inc BDR,32
BOEI34.SA,955705,Boeing Co BDR,32
IBMB34.SA,955711,International Business Machines BDR,32
SLBG34.SA,955718,Schlumberger AG,32
UPSS34.SA,955720,United Parcel Service Inc,32
USBC34.SA,955721,U.S. Bancorp DRC,32
ACNB34.SA,959108,Accenture PLC,32
BONY34.SA,959109,Bank of New York Mellon Corp,32
DHER34.SA,959110,Danaher Corp,32
KMBB34.SA,959112,Kimberly Clark Corp,32
METB34.SA,959113,Metlife Inc,32
TGTB34.SA,959115,Target Corp,32
WHRL3.SA,959116,Whirlpool SA,32
COLG34.SA,960770,Colgate-Palmolive Co BDR,32
COTY34.SA,960771,Coty Inc BDR,32
EBAY34.SA,960772,eBay Inc BDR,32
FDXB34.SA,960774,FedEx Corp BDR,32
GDBR34.SA,960775,General Dynamics Corp BDR,32
HSHY34.SA,960776,The Hershey Company BDR,32
QCOM34.SA,960779,Qualcomm Inc BDR,32
TIFF34.SA,960781,Tiffany Co BDR,32
UTEC34.SA,960782,United Technologies Corp BDR,32
XRXB34.SA,960784,Xerox Corp BDR,32
KHCB34.SA,962573,Kraft Heinz Co DRC,32
CRIV4.SA,976215,Financeira Alfa SA CFI,32
SNSY5.SA,985735,Sansuy SA Industria de Plasticos,32
ANIM3T.SA,986324,GAEC Educacao SA,32
BALM4.SA,986327,Baumer SA Pref,32
BMEB3.SA,986333,Banco Mercantil do Brasil SA,32
BMIN3.SA,986335,Banco Mercantil de Investimentos SA,32
BMKS3.SA,986337,Bicicletas Monark SA,32
BNBR3.SA,986340,Banco do Nordeste do Brasil SA,32
BRIV4.SA,986343,Banco Alfa de Investimento SA Pref,32
BSLI4.SA,986344,BRB Banco de Brasilia SA Pref,32
BTTL3.SA,986345,Battistella Administracao e Participacoes SA,32
CBEE3.SA,986346,Ampla Energia e Servicos SA,32
CEEB3.SA,986347,Companhia de Eletricidade do Estado da Bahia Coelba,32
CEEB5.SA,986348,Companhia de Eletricidade do Estado da Bahia Coelba Pref,32
CEPE5.SA,986351,Companhia Energetica de Pernambuco Celpe Pref,32
CPRE3T.SA,986353,CPFL Energias Renovaveis SA,32
CRIV3.SA,986354,Financeira Alfa SA CFI ORD,32
CSRN3.SA,986357,Companhia Energetica do Rio Grande do Norte Cosern,32
DOHL4.SA,986363,Dohler SA Pref,32
EKTR4.SA,986366,Elektro Eletricidade e Servicos SA,32
ELEK3.SA,986367,Elekeiroz SA,32
ENMT3.SA,986370,Energisa Mato Grosso Distribuidora de Energia SA,32
ESTR4.SA,986371,Manufatura de Brinquedos Estrela SA,32
FESA3.SA,986372,Companhia de Ferro Ligas da Bahia Ferbasa,32
HBTS5.SA,986377,Companhia Habitasul de Participacoes,32
IDVL3.SA,986380,Banco Indusval SA,32
JBDU3.SA,986382,Industrias JB Duarte SA,32
JBDU4.SA,986383,Industrias JB Duarte SA Pref,32
JOPA4.SA,986385,Josapar Joaquim Oliveira SA Participacoes Pref,32
MEND5.SA,986389,Mendes Junior Engenharia SA,32
MNDL3.SA,986390,Mundial SA Produtos de Consumo,32
MNPR3.SA,986391,Minupar Participacoes SA,32
MWET4.SA,986393,Wetzel SA Pref,32
DMMO3T.SA,986394,Ogx Petroleo e Gas SA em Recuperacao Judicial,32
PEAB4.SA,986395,Companhia de Participacoes Alianca da Bahia,32
PNVL3.SA,986396,Dimed SA Distribuidora De Medicamentos,32
PNVL4.SA,986397,Dimed SA Distribuidora De Medicamentos Pref,32
RPAD5.SA,986404,Alfa Holdings SA Pref A,32
RPAD6.SA,986405,Alfa Holdings SA Pref B,32
SEER3T.SA,986406,Ser Educacional SA,32
WLMM3.SA,986407,WLM Industria e Comercio SA,32
SMLS3T.SA,986410,Smiles Fidelidade SA,32
SOND5.SA,986411,Sondotecnica Engenharia de Solos SA Pref A,32
SOND6.SA,986412,Sondotecnica Engenharia de Solos SA Pref B,32
SPRI3.SA,986413,Springer SA,32
TELB3.SA,986415,Telecomunicacoes Brasileiras SA Telebras,32
TOYB4.SA,986416,Tec Toy SA Pref,32
USIM6.SA,986419,Usinas Siderurgicas de Minas Gerais SA Usiminas Pref,32
ANCR11B.SA,986547,Fundo De Investimento Imobiliario Ancar IC,32
ATSA11B.SA,986548,Fundo de Investimento Imobiliario Cshg Atrium Shopping Santo Andre,32
DRIT11B.SA,986557,Multigestao Renda Comercial Fundo de Investimento Imobiliario FII,32
EDFO11B.SA,986558,Fundo de Investimento Imobiliario Edificio Ourinvest,32
ENMA3B.SA,986560,Companhia Energetica do Maranhao CEMAR,32
FCFL11.SA,986563,FI Imobiliario Campus Faria Lima,32
FLRP11.SA,986566,Floripa Shopping FII,32
WPLZ11B.SA,986576,Fundo Inves Imb Sh,32
ARNC34.SA,987148,Arconic Inc BDR,32
BBYY34.SA,987150,Best Buy Co Inc,32
BLAK34.SA,987153,BlackRock Inc DRC,32
COWC34.SA,987155,Costco Wholesale Corp DRC,32
CTSH34.SA,987156,Cognizant Technology Solutions Corp DRC,32
CVSH34.SA,987157,CVS Health Corp,32
ESRX34.SA,987162,Express Scripts Inc,32
FSLR34.SA,987163,First Solar Inc,32
GPSI34.SA,987167,Gap Inc,32
JCPC34.SA,987168,J C Penney Company Inc,32
MACY34.SA,987169,Macy’s Inc,32
RIGG34.SA,987172,Transocean Inc,32
SANC34.SA,987174,Sanchez Energy Corp,32
SCHW34.SA,987175,Charles Schwab Corp,32
SPRN34.SA,987176,Sprint Corp DRC,32
SSFO34.SA,987177,Salesforce com Inc DRC,32
TMOS34.SA,987178,Thermo Fisher Scientific Inc,32
TRVC34.SA,987179,Travelers Companies Inc DRC,32
USSX34.SA,987181,United States Steel Corp,32
BGIP3.SA,993007,Banco do Estado de Sergipe SA,32
CEBR3.SA,993010,Companhia Energetica de Brasilia CEB,32
CEDO3.SA,993011,Companhia de Fiacao e Tecidos Cedro Cachoeira,32
ESUD11.SA,993012,FIP Infra-Estr BB Votorantim Ener Sustentavel II A,32
ESUT11.SA,993013,FIP Infra-Estr BB Votorantim Ener Sustentavel III A,32
GPAR3.SA,993020,Companhia Celg de Participacoes Celgpar,32
MAPT3.SA,993022,Cemepe Investimentos SA,32
PABY11.SA,993024,FII Panamby,32
PATI3.SA,993025,Panatlantica SA,32
RPAD3.SA,993030,Alfa Holdings SA,32
VSPT3.SA,993032,Ferrovia Centro Atlantica SA,32
XPOM11.SA,993033,FIP XP Omega I,32
AIGB34.SA,994837,American International Group BDR,32
DUKB34.SA,996058,Duke Energy Corp,32
AALL34.SA,998081,American Airlines Group Inc DRC,32
LBRN34.SA,998083,L Brands Inc DRC,32
TWTR34.SA,998084,Twitter Inc,32
UPAC34.SA,998085,Union Pacific Corp,32
TSLA34.SA,1013379,Tesla Motors Inc DRC,32
FMXB34.SA,1057064,Fomento Economico Mexicano SAB de CV DRC,32
CLGN34.SA,1059850,Celgene Corp DRC,32
HONB34.SA,1059858,Honeywell International Inc DRC,32
DWDP34.SA,1062873,DowDuPont Inc BDR,32
UBSG34.SA,1062877,UBS Group AG BDR,32
MSPA3.SA,1072991,Companhia Melhoramentos de Sao Paulo,32
WPLZ11.SA,1096212,Fundo Inves Imb Sh,32

#BVC COLUMBIA
ECO.BVC,102109,Ecopetrol SA,14
GAA_P.BVC,102120,Grupo Aval Acciones y Valores SA Pref,14
BIC_P1.BVC,102122,Bancolombia Pf,14
EEB.BVC,102110,Empresa de Energia de Bogota SA ESP,14
SIS.BVC,102115,Grupo de Inversiones Suramericana SA,14
ARG.BVC,102113,Grupo Argos SA,14
BIC.BVC,102106,Bcolombia,14
CCB.BVC,102100,Cemargos,14
ETB.BVC,102111,Etb,14
ISA.BVC,102117,Interconnection Electric SA ESP,14
BVC.BVC,102107,Bolsa De Valores De Colombia,14
ARG_P.BVC,102125,Pfgrupoarg,14
NCH.BVC,102119,Grupo Nutresa SA,14
DVI_P.BVC,102124,Banco Davivienda Pf,14
AVT_P.BVC,102121,Avianca Holdings Pf,14
CIC.BVC,102103,Conconcret,14
CLH.BVC,102102,Cemex Latam Holdings SA,14
IMI.BVC,102112,Almacenes Exito SA,14
BBO.BVC,102108,Banco De Bogota SA,14
SIS_P.BVC,102126,Pfgrupsura,14
GAA.BVC,102114,Grupoaval,14
CEL.BVC,102101,Celsia SA,14
CFV.BVC,102105,Corporacion Financiera Colombiana SA,14
CCB_P.BVC,102123,Cementos Argos Pf,14
CNE.BVC,102104,Canacol Energy Ltd,14

#SR SAUDI STOCK EXCHANGE
TASI.SR,11319,Tadawul All Share,33
2222.SR,1153650,Saudi Aramco,33
4001.SR,11719,Abdullah Al Othaim Markets Company,33
3010.SR,11711,Arabian Cement Co,33
8240.SR,11637,ACE ARABIA COOPERATIVE INSURANCE,33
8150.SR,11628,Allied Cooperative Insurance Group,33
2330.SR,11705,Advanced Petrochemical Company,33
8160.SR,11629,Arabia Insurance Cooperative Co,33
8280.SR,11641,Al Alamiya Cooperative Insurance,33
4320.SR,962550,Al Andalus Property Co SJSC,33
4130.SR,1025126,Al Baha Investment and Development Company SJSC,33
4007.SR,940928,Al Hammadi Co,33
1820.SR,103950,Al Hokair Group,33
4334.SR,1053058,Al Maather REIT,33
4337.SR,1062590,Al Mashaar REIT,33
1120.SR,11665,Al Rajhi Bank,33
1304.SR,980213,Al Yamamah Steel Industries Co,33
8140.SR,11627,Al-Ahlia Insurance Company,33
2320.SR,11704,AL-BABTAIN POWER &TELECOM CO,33
2340.SR,11706,ALABDULLATIF CO,33
4338.SR,1057695,AlAhli Fund of REITs,33
1040.SR,11660,Alawwal Bank,33
1140.SR,11666,BANK ALBILAD,33
4200.SR,11738,Aldrees Petroleum & Transport Svcs,33
4240.SR,11742,Fawaz Abdulaziz AlHokair Company,33
1150.SR,11667,Alinma Bank,33
8312.SR,40411,Alinma Tokio Marine Co,33
4331.SR,996548,AlJazira Mawten REIT,33
8012.SR,48638,Aljazira Takaful Taawuni Company,33
6070.SR,11654,Al-Jouf Agriculture Development Co,33
4290.SR,11747,Alkhaleej Training & Education Co,33
1330.SR,19028,Abdullah A. M. Al-Khodari Sons Co,33
8040.SR,11617,Allianz SE VNA O.N,33
8230.SR,11636,Al-Rajhi Cooperative Insurance,33
1213.SR,11671,Al Sorayai Trading&Industrial Group,33
1810.SR,40406,Al-Tayyar Travel Group Holding Co,33
2170.SR,11691,Alujain Corporation,33
8310.SR,19027,Amana Cooperative Insurance Co,33
2160.SR,11690,Saudi Arabian Amiantit Co,33
4061.SR,11646,Anaam International Holding Group,33
8011.SR,103953,Anb Insurance,33
2200.SR,11694,Arabian Pipes Company,33
8070.SR,11620,Arabian Shield Coop Insurance Co,33
4150.SR,11733,Arriyadh Development Co,33
1080.SR,11663,Arab National Bank,33
4080.SR,11727,Aseer Trading Tourism&Manufacturing,33
1301.SR,19029,United Wire Factories Company,33
1212.SR,11670,Astra Industrial Group,33
8130.SR,11626,ALAHLI TAKAFUL COMPANY,33
7040.SR,11753,Etihad Atheeb Telecommunication,33
8250.SR,11638,AXA SA,33
4030.SR,11723,The National Shipping Co,33
1302.SR,103949,Bawan,33
1210.SR,11668,Basic Chemical Industries Co,33
1020.SR,11658,Bank AlJazira,33
1050.SR,11661,Banque Saudi Fransi,33
4260.SR,11744,United Int Transportation Company,33
8210.SR,11634,Bupa Arabia for Coop. Insurance,33
8270.SR,11640,BURUJ COOPERATIVE INSURANCE CO,33
4005.SR,40966,National Medical Care Company,33
6004.SR,40409,Saudi Airlines Catering Company,33
2001.SR,11675,Methanol Chemicals Company,33
3003.SR,40408,City Cement Co,33
4004.SR,40965,Dallah Healthcare Holding Company,33
4300.SR,11748,Dar Alarkan Real Estate Development,33
4010.SR,11721,Dur Hospitality,33
1303.SR,943613,Electrical Industries Co,33
4220.SR,11740,Emaar The Economic City,33
8311.SR,40410,Saudi Enaya Cooperative Insurance,33
3080.SR,11717,Eastern Province Cement Co,33
7020.SR,11751,Etihad Etisalat Co,33
4003.SR,19031,United Electronics Company,33
9400.SR,37529,FALCOM Financial Services,33
9401.SR,39002,Falcom Petrochemical,33
2180.SR,11692,Filing & Packing Materials Co,33
4180.SR,11736,Fitaihi Holding Group,33
6020.SR,11650,Qassim Agriculture Co,33
2080.SR,11683,National Gas & Industrialization Co,33
2100.SR,11643,Food Products Co,33
8260.SR,11639,Gulf General Cooperative Insurance,33
8120.SR,11625,Gulf Union Cooperative Insurance,33
6001.SR,11647,Halwani Bros,33
3001.SR,19032,Hail Cement Company,33
6002.SR,11648,Herfy Food Services Co,33
9402.SR,39003,HSBC Amanah Saudi 20,33
4250.SR,11743,Jabal Omar Development Company,33
4332.SR,1010626,Jadwa REIT Al Haramain Fund,33
4190.SR,11737,Jarir Marketing Co,33
6090.SR,11656,Jazan Development Co,33
3091.SR,19023,AL JOUF CEMENT COMPANY,33
4310.SR,19030,Knowledge Economic City,33
4280.SR,11746,Kingdom Holding Company,33
4011.SR,985835,Lazurde for Jewelry Co,33
1211.SR,11669,Saudi Arabian Mining Company,33
2220.SR,11696,National Metal Manufacturing Co,33
8020.SR,11615,Malath Cooperative Insurance Co,33
4100.SR,11729,Makkah Construction&Development Co,33
8030.SR,11616,The Mediterranean&Gulf Insurance Co,33
2370.SR,11709,Middle East Specialized Cables Co,33
4009.SR,969107,Middle East Healthcare Co CJSC,33
1202.SR,953109,Middle East Paper Co,33
4002.SR,11720,Mouwasat Medical Services Company,33
4110.SR,11730,Saudi Transport & Investment Co,33
4336.SR,1054997,Mulkia Gulf Real Estate REIT,33
4335.SR,1054998,Musharaka REIT,33
6010.SR,11649,National Agriculture Development Co,33
3002.SR,40407,Najran Cement Company,33
2210.SR,11695,Nama Chemicals Co,33
1180.SR,942783,National Com Bnk,33
2090.SR,11684,National Gypsum Company,33
3004.SR,48637,Northern Region Cement Co,33
2380.SR,11710,Rabigh Refining & Petrochemical Co,33
2002.SR,11676,National Petrochemical Company,33
3040.SR,11714,The Qassim Cement Co,33
4230.SR,11741,Red Sea Housing Services Company,33
1010.SR,11657,Riyad Bank,33
4330.SR,994496,Riyad REIT,33
1060.SR,11662,The Saudi British Bank,33
8080.SR,11621,SABB Takaful,33
2010.SR,11677,Saudi Basic Industries Corp,33
2270.SR,11644,Saudia Dairy and Foodstuff .Co,33
2020.SR,11678,Saudi Arabia Fertilizers Co,33
8180.SR,11631,Al Sagr Co-operative Insurance Co,33
2260.SR,11700,Sahara,33
1030.SR,11659,The Saudi Investment Bank,33
2120.SR,11686,Saudi Advanced Industries Co,33
8100.SR,11623,Saudi Arabian Cooperative Insurance,33
8050.SR,11618,Salama Cooperative Insurance Co,33
1090.SR,11664,Samba Financial Group,33
4040.SR,11724,Saudi Public Transport Co,33
2030.SR,11679,Saudi Arabia Refineries Co,33
4050.SR,11725,Saudi Automotive Services Co,33
2110.SR,11685,Saudi Cable Company,33
3030.SR,11713,Saudi Cement Company,33
2040.SR,11680,Saudi Ceramic Co,33
2230.SR,11697,Saudi Chemical Company,33
4008.SR,953110,Saudi Company for Hardware,33
5110.SR,11749,Saudi Electricity Company,33
4031.SR,954945,Saudi Ground Services Co,33
2350.SR,11707,Saudi Kayan Petrochemical Company,33
4006.SR,103952,Saudi Marke,33
8200.SR,11633,Saudi RE Cooperative Reinsurance,33
2050.SR,11642,Savola Group,33
6050.SR,11652,Saudi Fisheries Co,33
1214.SR,11672,Al Hassan Ghazi Ibrahim Shaker,33
6060.SR,11653,Ash-Sharqiyah Development Company,33
2130.SR,11687,Saudi Industrial Development Co,33
4140.SR,11732,Saudi Industrial Export Co,33
2250.SR,11699,Saudi Industrial Investment Group,33
2310.SR,11703,Saudi Int Petrochemical Co,33
2190.SR,11693,Saudi Industrial Services Co,33
8290.SR,19026,Solidarity Saudi Takaful Co,33
3050.SR,11715,Southern Province Cement Co,33
2070.SR,11682,Saudi Pharmaceutical Appliances,33
2300.SR,11702,Saudi Paper Manufacturing Co,33
4270.SR,11745,Saudi Printing & Packaging Company,33
4020.SR,11722,Saudi Real Estate Co,33
4210.SR,11739,Saudi Research and Marketing Group,33
1320.SR,11674,Saudi Steel Pipe Company,33
7010.SR,11750,Saudi Telecom,33
2360.SR,11708,Saudi vitrified clay pipes co,33
6040.SR,11651,Tabuk Agriculture Development Co,33
4090.SR,11728,Taiba Holding Co,33
1201.SR,40405,Takween Advanced Industries,33
4333.SR,1011863,Taleem REIT Fund,33
4070.SR,11726,Tihama Advertising&Public Relations,33
2060.SR,11681,National Industrialization Co,33
8010.SR,11614,The Company for Coop. Insurance,33
3090.SR,11718,Tabuk Cement Co,33
4170.SR,11735,Tourism Enterprise Co,33
4160.SR,11734,National Agriculture Marketing Co,33
8170.SR,11630,Trade Union Cooperative Insurance,33
8190.SR,11632,United Cooperative Assurance Co,33
3005.SR,103951,Umm Al-Qura,33
8110.SR,11624,Saudi Indian Company Insurance,33
8060.SR,11619,Saudi United Cooperative Insurance,33
8300.SR,19025,Wataniya Insurance Company,33
2290.SR,11701,Yanbu National Petrochemical Co,33
3060.SR,11716,Yanbu Cement Co,33
3020.SR,11712,Yamamah Saudi Cement Co,33
7030.SR,11752,Mobile Telecommunications Company,33
2240.SR,11698,Zamil Industrial Investment Co,33
2150.SR,11689,The National Co for Glass Industrie,33

#BR BRUSELL
INGA.BR,301,ING Groep NV,28
ENGIE.BR,395,Engie SA,28
ABI.BR,13111,Anheuser Busch Inbev SA NV,28
BPOST.BR,49947,bpost NV,28
APAM.BR,13813,Aperam SA,28
UMI.BR,13831,Umicore SA,28
KBC.BR,539,KBC,28
PROX.BR,531,Proximus NV,28
AGES.BR,13129,Ageas,28
SOLB.BR,541,Solvay SA,28
UCB.BR,547,UCB,28
GLPG.BR,15225,Galapagos NV,28
COLR.BR,535,Etablissementen Fr Colruyt NV,28
TNET.BR,7134,Telenet Group Holding NV,28
ONTEX.BR,943394,Ontex Group,28
GBLB.BR,545,Groupe Bruxelles Lambert SA,28
ARGX.BR,943396,Argen-X,28
COFB.BR,538,Cofinimmo-Sicafi,28
SOF.BR,15264,Sofina,28
ACKB.BR,534,Ackermans & Van Haaren NV,28

#EGX EGYPT
ACGC.EGX,12861,Arab Cotton Ginning,13
AJWA.EGX,12862,AJWA for Food Industries company,13
APSW.EGX,12863,Unirab Polvara Spinning&Weaving Co,13
CCAP.EGX,12864,Citadel Capital - Common Shares,13
COMI.EGX,12865,Commercial International Bank,13
EDBM.EGX,12866,Egyptian for Developing Materials,13
EGTS.EGX,12867,Egyptian for Tourism Resorts,13
EKHO.EGX,12868,Egyptian Kuwaiti Holding,13
ELEC.EGX,12869,Electro Cable Egypt,13
ELKA.EGX,12870,El Kahera Housing,13
OREG.EGX,12871,Orange Egypt for Telecommunications SAE,13
EPCO.EGX,12872,Egypt for Poultry,13
ESRS.EGX,12873,Ezz Steel,13
ETEL.EGX,12874,Telecom Egypt,13
HRHO.EGX,12875,Egyptian Financial Group-Hermes Hld,13
MOIL.EGX,12876,Maridive & oil services,13
MPRC.EGX,12877,Egyptian Media Production City,13
NCMP.EGX,12878,National company for maize products,13
NRPD.EGX,12879,National Real Estate Bank,13
OCDI.EGX,12880,Six of October Development & Invest,13
GTHE.EGX,12882,Global Telecom Holding SAE,13
PHDC.EGX,12883,Palm Hills Development Company,13
PIOH.EGX,12884,Pioneers Holding,13
RTVC.EGX,12885,Remco Touristic Villages Constr,13
SKPC.EGX,12886,Sidi Kerir Petrochemicals,13
SVCE.EGX,12887,South Valley Cement,13
SWDY.EGX,12888,El Sewedy Electric Co SAE,13
TMGH.EGX,12889,T M G Holding,13
UEGC.EGX,12890,El Saeed Contracting & Real Estate Investment,13
ABRD.EGX,12892,Egyptians Abroad Invest&Development,13
ACRO.EGX,12893,Acrow Misr,13
AFDI.EGX,12894,El Ahli Investment and Development,13
AITG.EGX,12896,Assiut Islamic Trading,13
AREH.EGX,12897,Egyptian Real Estate Group,13
ASCM.EGX,12898,Asek Company for Mining - Ascom,13
AUTO.EGX,12899,GB AUTO,13
CCRS.EGX,12900,Gulf Canadian RE Investment Co,13
CEFM.EGX,12901,Middle Egypt Flour Mills,13
COSG.EGX,12903,Cairo Oils & Soap,13
CSAG.EGX,12904,Canal Shipping Agencies,13
DAPH.EGX,12905,Development&Engineering Consultants,13
DCRC.EGX,12906,Delta Construction & Rebuilding,13
DTPP.EGX,12908,Delta For Printing & Packaging,13
ECAP.EGX,12909,Al Ezz Ceramic & Porcelain,13
EFIC.EGX,12910,Egyptian Financial & Industrial,13
EHDR.EGX,12911,Egyptians Housing Development,13
ELNA.EGX,12912,El Nasr Agricultural Crops,13
ELSH.EGX,12913,El Shams Housing & Urbanization,13
ENGC.EGX,12914,Industrial Engineering Co,13
ETRS.EGX,12915,Egyptian Transport & Commercial Services Co SAE,13
GGCC.EGX,12916,Giza General Contracting,13
GIHD.EGX,12917,Gharbia Islamic Housing Development,13
GMCI.EGX,12919,GMC Group Industrial Commercial,13
GRCA.EGX,12920,Grand Investment Capital,13
HDBK.EGX,12921,Housing & Development Bank,13
HELI.EGX,12922,Heliopolis Housing,13
ICID.EGX,12923,International Co Invest&Development,13
IFAP.EGX,12925,International Agricultural Products,13
IRON.EGX,12926,Egyptian Iron & Steel,13
ISMA.EGX,12927,Ismailia Misr Poultry,13
KABO.EGX,12928,El Nasr Clothing & Textiles,13
LCSW.EGX,12929,Lecico Egypt,13
MENA.EGX,12930,Mena Touristic & Real Estate Invest,13
MICH.EGX,12931,Misr Chemical Industries,13
MNHD.EGX,12932,Medinet Nasr Housing,13
MOSC.EGX,12933,Misr Oils & Soap,13
MPCO.EGX,12934,Mansourah Poultry,13
NCCW.EGX,12937,Nasr Company for Civil Works,13
NEDA.EGX,12940,Northern Upper Egypt Development,13
NINH.EGX,12941,Nozha International Hospital,13
ORWE.EGX,12943,Oriental Weavers,13
POUL.EGX,12945,Cairo Poultry,13
PRCL.EGX,12946,Ceramic & Porcelain,13
RAKT.EGX,12947,Rakta Paper Manufacturing,13
RAYA.EGX,12948,Raya Holding for Financial Investment SAE,13
ROTO.EGX,12949,Rowad Tourism Co SAE,13
RUBX.EGX,12950,Rubex Plastics,13
SAUD.EGX,12951,Al Baraka Bank Egypt,13
SIMO.EGX,12952,Paper Middle East SAE,13
SMFR.EGX,12953,Samad Misr -EGYFERT,13
SNFC.EGX,12954,Sharkia National Food,13
SPIN.EGX,12955,Alexandria Spinning & Weaving,13
SUGR.EGX,12956,Delta Sugar,13
TRTO.EGX,12957,TransOceans Tours,13
UASG.EGX,12958,United Arab Shipping,13
UNIP.EGX,12959,Universal Co Packaging Materials,13
UNIT.EGX,12960,United Housing & Development,13
ZEOT.EGX,12961,Extracted Oils,13
ZMID.EGX,12962,Zahraa Maadi Investment&Development,13
ABUK.EGX,12964,Abou Kir Fertilizers,13
MBSC.EGX,12965,Misr Beni Suef Cement,13
MCQE.EGX,12966,Misr Cement Co ESC,13
AFMC.EGX,12967,Alexandria Flour Mills,13
MFSC.EGX,12968,Misr Duty Free Shops,13
MHOT.EGX,12970,Misr Hotels,13
AMOC.EGX,12971,Alexandria Mineral Oils Company,13
MILS.EGX,12972,North Cairo Mills,13
MOIN.EGX,12973,Mohandes Insurance,13
AXPH.EGX,12974,Alexandria Pharmaceuticals,13
BIOC.EGX,12975,Glaxo Smith Kline,13
CANA.EGX,12977,Suez Canal Bank,13
CIEB.EGX,12979,Credit Agricole SA,13
NIPH.EGX,12980,Nile Pharmaceuticals,13
QNBA.EGX,12982,Qatar Natl Bank,13
DEIN.EGX,12983,Delta Insurance,13
EAST.EGX,12986,Eastern Tobacco,13
EDFM.EGX,12987,East Delta Flour Mills,13
PACH.EGX,12988,Paint & Chemicals Industries,13
EGAS.EGX,12989,Natural Gas & Mining Project,13
PHAR.EGX,12990,Egyptian International Pharma,13
EGBE.EGX,12991,Egyptian Gulf Bank,13
EGCH.EGX,12992,Egyptian Chemical Industries,13
PHTV.EGX,12993,Pyramisa Hotels,13
PRMH.EGX,12994,Prime Holding,13
SAIB.EGX,12996,Societe Arabe Internationale Banque,13
ESGI.EGX,12997,Egyptian Starch & Glucose,13
SCEM.EGX,12998,Sinai Cement,13
SCFM.EGX,12999,South Cairo & Giza Mills & Bakeries,13
SEIG.EGX,13000,Saudi Egyptian Investment & Finance,13
EXPA.EGX,13001,Export Development Bank of Egypt,13
FAIT.EGX,13002,Faisal Islamic Bank of Egypt - EGP,13
GSSC.EGX,13003,General Silos & Storage,13
TORA.EGX,13004,Torah Cement,13
UEFM.EGX,13005,Upper Egypt Flour Mills,13
IRAX.EGX,13006,EL Ezz Aldekhela Steel - Alexandria,13
WCDF.EGX,13007,Middle & West Delta Flour Mills,13
KZPC.EGX,13008,Kafr El Zayat Pesticides,13
AALR.EGX,40558,General Co Land Recl Devel Reconst,13
ADCI.EGX,40559,Arab Pharmaceuticals,13
AIND.EGX,40561,Arabia Invest Development Hld-Cash,13
ALCN.EGX,40563,Alexandria Containers and goods,13
ALEX.EGX,40564,Alexandria Cement,13
ALRA.EGX,40565,Atlas For Land Reclamation,13
ALUM.EGX,40566,Arab Aluminum,13
AMER.EGX,40567,Amer Group Holding,13
AMES.EGX,40568,Alexandria New Medical Center,13
AMIA.EGX,40569,Arab Moltaka Investments Co,13
ANFI.EGX,40570,Alexandria National Company Fin Inv,13
AREHA.EGX,40572,Egyptian RE Group Bearer Shares,13
ARVA.EGX,40573,Arab Valves Company,13
ATQA.EGX,40574,Misr National Steel SAE,13
BTFH.EGX,40576,Belton Financial Holding,13
CAED.EGX,40577,Cairo Educational Services,13
CERA.EGX,40579,The Arab Ceramic Ceramica Remas,13
DSCW.EGX,40581,Dice Sport & Casual Wear,13
EALR.EGX,40582,El Arabia for Land Reclamation,13
EASB.EGX,40583,Egyptian Arabian Secur Brokerage,13
EBSC.EGX,40584,Osool ESB Securities Brokerage Co,13
EEII.EGX,40586,El Arabia Engineering Industries,13
EGAL.EGX,40587,Egypt Aluminum,13
EGSA.EGX,40588,Egyptian Satellite Co SAE,13
EITP.EGX,40589,Egyptian International Tourism,13
EIUD.EGX,40590,Egyptians For Invest&Urban Develop,13
ELWA.EGX,40591,El Wadi Co. Touristic Investement,13
EOSB.EGX,40592,El Orouba Securities Brokerage,13
EPPK.EGX,40593,El Ahram Co. For Printing & Packing,13
FAITA.EGX,40594,Faisal Islamic Bank of Egypt - USD,13
GOCO.EGX,40597,Golden Coast Company,13
GPPL.EGX,40598,Golden Pyramids Plaza,13
GTWL.EGX,40599,Golden Textiles & Clothes Wool,13
IDRE.EGX,40602,Ismailia Development & Real Estate,13
INFI.EGX,40603,Ismailia National Food Industries,13
JUFO.EGX,40604,Juhayna Food Industries,13
KWIN.EGX,40605,El Kahera El Watania Investment,13
MEGM.EGX,40608,Middle East Glass Manufacturing,13
MEPA.EGX,40609,Medical Packaging Company,13
MIPH.EGX,40610,Minapharm Pharmaceuticals,13
MPCI.EGX,40612,Memphis Pharmaceuticals,13
NCIN.EGX,40614,Nile City Investment,13
NDRL.EGX,40615,National Drilling,13
NHPS.EGX,40616,National Housing Prof. Syndicates,13
OBRI.EGX,40618,El Obour Real Estate Investment,13
ORHD.EGX,40620,Orascom Hotels and Development SAE,13
OIH.EGX,40621,Orascom Investment Holding SAE,13
REAC.EGX,40622,Reacap Financial Investments,13
SBAG.EGX,40624,Suez Bags,13
SCTS.EGX,40625,Sues Canal Co Technology Settling,13
SUCE.EGX,40633,Suez Cement,13
UNBE.EGX,40635,Union National Bank,13
NBKE.EGX,40636,National Bank of Kuwait Egypt,13
WATP.EGX,40637,Modern Company for water proofing,13
WKOL.EGX,40638,Wadi Kom Ombo Land Reclamation,13
ADIB.EGX,40917,Abu Dhabi Islamic Bank- Egypt,13
ARCC.EGX,950023,Arabian Cement Co SAE,13
IEEC.EGX,950024,Industrial Engineer Enterprises,13
ORAS.EGX,950025,Orascom Construction Ltd,13
EMFD.EGX,960752,Emaar Misr for Development SAE,13
PORT.EGX,960753,Porto Group Holding SAE,13
DOMT.EGX,969108,Arabian Food Industries Co,13
CLHO.EGX,985148,Cleopatra Hospital,13
EFID.EGX,992622,Edita Food Industries SAE,13
AGIN.EGX,992993,Gulf Arab Investment Co SAE,13
HCFI.EGX,992994,Holding Company for Financial Investments SAE,13
SIPC.EGX,992995,Sabaa International Company for Pharmaceutical and Chemical Industries SAE,13
SNFI.EGX,992996,Souhag National Company Food Industries SAE,13
VODE.EGX,992997,Vodafone Egypt Telecommunications Co SAE,13
OLFI.EGX,994418,Obour Land for Food Industries,13
MFPC.EGX,997882,Misr Fertilizers Production Co SAE,13
MTIE.EGX,1010530,MM Group for Industry,13
RACC.EGX,1036884,Raya Contact Center Co,13
INEG.EGX,1052608,Integrated Engineering Group SAE,13
ARPI.EGX,1052609,Arabian Rocks Plastic Industries,13
GETO.EGX,1052610,Genial Tours,13
PSAD.EGX,1052611,Port Saied for Agricultural Development and Construction,13
UNFO.EGX,1052612,Univert Food Industries,13
PTCC.EGX,1052613,Pharaoh tech for control and communication systems,13
MKIT.EGX,1052614,Misr Kuwait Investment & Trading Co,13
AMPI.EGX,1052615,Al Moasher for Programming and Information Dissemination,13
ICFC.EGX,1052616,International Company For Fertilizers & Chemicals,13
BIGP.EGX,1052617,Barbary Investment Group,13
UTOP.EGX,1052618,UTOPIA,13
MOED.EGX,1052619,The Egyptian Modern Education Systems,13
FNAR.EGX,1052620,Al Fanar Contracting Construction Trade Import And Export Co,13
ICMI.EGX,1052621,International company For Medical Industries,13
BSRF.EGX,1052622,Brothers Solidarity For Real Estate Investment & Food Security,13
VERT.EGX,1052623,Vertika,13
DIFC.EGX,1052624,International Dry Ice Company,13
ADRI.EGX,1052625,Arab Development & Real Estate Investment,13
MBEN.EGX,1052626,M.B Engineering,13
ISPH.EGX,1056341,Ibnsina Pharma Co,13
ATLC.EGX,1057138,Al Tawfeek Company for Financial Leasing,13
BINV.EGX,1073052,BPE Holding For Financial Investments SAE,13
CICH.EGX,1075451,CI Capital Holding Co SAE,13

#TA ISRAEL
RTIP_T18.TA,997862,Ratio Oil Exploration 1992 W18,40
ISRAP.TA,10926,Isramco Negev 2 LP,40
RATIP.TA,11062,Ratio L,40
BEZQ.TA,10880,Bezeq Israeli Telecommunication Corp Ltd,40
ELAL.TA,11003,El Al,40
DSCT.TA,10899,Israel Discount Bank Ltd,40
XTL.TA,12131,XTL Bio,40
LUMI.TA,10932,Leumi,40
POLI.TA,10952,Poalim,40
ORL.TA,10946,Bazan Oil Refineries Ltd,40
MDGS.TA,11035,Medigus Ltd,40
INCR.TA,12080,Intercure,40
ICL.TA,10923,ICL Israel Chemicals Ltd,40
DEDRP.TA,10890,Delek Drilling LP,40
KDST.TA,942766,Kadimastem Ltd,40
OPK.TA,41400,Opko Health Inc,40
MRHL.TA,12103,Merchavia Holdings and Investments Ltd,40
TEVA.TA,10963,Teva Pharmaceutical Industries Ltd,40
KTOV.TA,11950,Kitov Pharma,40
ENRG.TA,942758,Energix,40
NNDM.TA,12133,Nano Dimension Ltd,40
RTPTP.TA,997121,Ratio Petroleum Energy LP,40
SAE.TA,10958,Shufersal,40
SFET.TA,942771,Safe-T Group Ltd,40
TGTR.TA,942764,Together Startup Network Ltd,40
INRM.TA,942782,Inrom Construction Industries Ltd,40
BONS.TA,11970,Bonus Biogroup,40
RIT1.TA,11064,Reit 1,40
MGDL.TA,10934,Migdal Insurance,40
GKL.TA,1024900,Global Knafaim Leasing Ltd,40
DNA.TA,942753,DNA Biomed Solns,40
SNCM.TA,10959,Suny Cellular Communication Ltd,40
FVT.TA,11858,Formula Visn-L,40
MZTF.TA,10939,Mizrahi Tefahot,40
RDHL.TA,15298,Redhill,40
MCTC.TA,11937,Micromedic,40
ALHE.TA,10870,Alony Hetz Properties and Investments Ltd,40
ENLT.TA,102939,Enlight Ene,40
AMOT.TA,10873,Amot Investments Ltd,40
BLLCF.TA,942773,Blockchain Mining Ltd,40
FRSX.TA,11790,Foresight Autonomous Holdings Ltd,40
PHOE1.TA,10950,Phoenix Holdings Ltd,40
BBYL.TA,10976,Babylon Ltd,40
PSTI.TA,15297,Pluristem,40
TSEM.TA,10964,Tower Semiconductor Ltd,40
UNVO.TA,11000,Univo Pharmaceuticals Ltd,40
ALMD.TA,11774,Allium Medical Solutions Ltd,40
ARKO.TA,11787,Arko Holdings Ltd,40
SLARL.TA,11072,Sella Real Estate,40
LUZN.TA,10999,Amos Luzon Development and Energy Group Ltd,40
MNRT.TA,1008671,Menivim The New REIT Ltd,40
YAAC.TA,1057298,Yaacobi Brothers Group YSB Ltd,40
HARL.TA,10920,Harel,40
MTMY.TA,963735,Matomy Media Group Ltd,40
ECJM.TA,10900,Jerusalem Economy Ltd,40
TDGN.TA,12034,Tadir Gan,40
SKBN.TA,10960,Shikun & Binui,40
YBOX.TA,11034,Ybox Real Estate Ltd,40
PRGO.TA,10953,Perrigo Co,40
NICE.TA,10941,Nice Ltd,40
PTNR.TA,10954,Partner,40
FTIN.TA,10912,First International Bank of Israel Ltd,40
NVLG.TA,997120,Novolog Pharm-Up 1966 Ltd,40
CBI.TA,10885,Clal Biotechnology Industries Ltd,40
SHOM.TA,11881,EN Shoham Business Ltd,40
MLD.TA,994495,Mirland Development Corporation PLC,40
ITMR.TA,11023,Itamar,40
GZT.TA,10915,Gazit Globe Ltd,40
MTRN.TA,11041,Maytronics,40
BLRX.TA,10978,BioLine RX Ltd,40
IBLD.TA,10922,Indus Building,40
PLX.TA,15296,Protalix Biotherapeutics Inc,40
MLD_T1.TA,1061375,Mirland Development Warrants 1,40
OPCT.TA,10997,Ophectra Real Estate & Investments Ltd,40
STRS.TA,10961,Strauss Group,40
ICCM.TA,942760,Icecure Medical,40
ARPT.TA,10875,Airport City Ltd,40
AURA.TA,10974,Aura Investments Ltd,40
YBOX_T1.TA,997880,Ybox Real Estate W1,40
SPEN.TA,945144,Shapir Engineering Industry,40
WSMK.TA,11839,Whitesmoke,40
FNTS_T1.TA,997841,Fantasy Network W1,40
AZRG.TA,11316,Azrieli Group Ltd,40
IGLD.TA,10924,Internet Gold Golden Lines Ltd,40
TMRP.TA,1031286,Tamar Petroleum Ltd,40
MZOR.TA,11042,Mazor Robotics,40
BTX.TA,959071,BioTime Inc,40
MDTR.TA,102938,Mediterranean Towers Ltd,40
CEL.TA,10886,Cellcom Israel Ltd,40
PTXP.TA,12135,PetroTx LP,40
AVGL.TA,10876,Avgol Industries 1953 Ltd,40
EMIT.TA,10905,Elbit Imaging Ltd,40
ISCN.TA,11058,Israel Canada,40
GLEXP.TA,12073,Glob Explor L,40
LPSN.TA,24045,LivePerson Inc,40
OPAL.TA,12074,Opal Balance,40
APLP.TA,11886,Apollo Power Ltd,40
VTNA.TA,959074,Vitania Ltd,40
LEOF.TA,11996,Levinski Ofer,40
MDVI.TA,942768,Medivie Therap,40
ESLT.TA,10906,Elbit Systems Ltd,40
FOX.TA,11854,FOX,40
INCR_T3.TA,1061373,Intercure 3 Warrants,40
TEFN.TA,12036,Tefen,40
DIFI.TA,10995,Direct Insuranc,40
LDER.TA,11899,Leader,40
ORA.TA,945707,Ormat Technologies Inc,40
ISOP.TA,24054,Israel Op L,40
AZRM.TA,10878,Azorim Investment Development and Construction Co Ltd,40
AMRK.TA,11776,Amir Marketing and Investments in Agriculture Ltd,40
GOLF.TA,10916,Golf,40
FNTS.TA,10977,Fantasy Network Ltd,40
MTRX.TA,10938,Matrix,40
MGIC.TA,11037,Magic,40
MDINP.TA,12094,Modiin L,40
CANF.TA,10990,Can Fite Biopharma Ltd,40
BCOM.TA,10879,B Communications Ltd,40
ADGR.TA,10966,Adgar Investments and Development Ltd,40
GILT.TA,10913,Gilat,40
IDIN.TA,102941,IDI Insurance Company Ltd,40
CHR.TA,942762,Chiron Refineries Ltd,40
LZNR.TA,942774,A Luzon Real Estate & Finance Ltd,40
PRTL.TA,11089,Proteologics,40
DLEA.TA,10893,Delek Automotive Systems Ltd,40
SHNP.TA,12020,Schnapp,40
OPCE.TA,1043291,OPC Energy Ltd,40
VNTZ.TA,986631,Vonetize Plc,40
NXGN.TA,11968,Nextgen,40
SHGR.TA,986630,Shagrir Group Vehicle Services Ltd,40
ASPR.TA,11793,Ashtrom Properties Ltd,40
PNTR.TA,11988,Pointer Telocation Ltd,40
CLIS.TA,10888,Clal Insurance Enterprises Holdings Ltd,40
MYDS.TA,11956,Mydas,40
SPNS.TA,11090,Sapiens International Corporation NV,40
SMTO.TA,102943,Somoto Ltd,40
RTPTP_T2.TA,997864,Ratio Petroleum Energy WL2,40
KARE.TA,11889,Kardan Real Es,40
NAVB.TA,959072,Navidea Biopharmaceuticals Inc,40
MGRT.TA,991127,MeguREIT Israel,40
DISI.TA,10892,Discount Investment Corp Ltd,40
ZUR.TA,12064,Zur,40
NVMI.TA,11047,Nova,40
AUDC.TA,10973,AudioCodes Ltd,40
MLSR.TA,10936,Melisron,40
PLCR.TA,11987,Plasto-Cargal Group Ltd,40
SODA.TA,962023,Sodastream International Ltd,40
MMHD.TA,10937,Menora Miv Hld,40
ASHG.TA,940927,Ashtrom Group Ltd,40
NAWI.TA,40972,Nawi,40
PZOL.TA,10955,Paz Oil,40
MCRNL.TA,12093,Micronet 0.1,40
WLFD.TA,11083,Willy Food,40
CPTP.TA,11821,Capital Point,40
DLEKG.TA,10891,Delek Group,40
HLAN.TA,11016,Hilan,40
PIU.TA,11055,Poalim Ibi,40
CFX.TA,11771,Cofix Group Ltd,40
BRIN.TA,10984,Brainsway,40
PCBT.TA,27520,P.C.B Tec,40
ALMO.TA,11912,Algomaizer Ltd,40
GAGR.TA,11080,Gaon Group Ltd,40
OVRS.TA,996168,Overseas Commerce Ltd,40
CRSO.TA,40402,Carasso,40
ECP.TA,24052,Electra Co Pr,40
KMDA.TA,11026,Kamada,40
KEN.TA,945143,Kenon Holdings,40
RVL.TA,12009,Raval,40
PEN.TA,942772,Peninsula Group Ltd,40
SMT.TA,11074,Summit,40
ELCO.TA,10901,Elco Ltd,40
LPHLP.TA,12090,Lapidot Hel L,40
NFTA.TA,10940,Naphtha,40
CAMT.TA,10987,Camtek,40
KAFR.TA,11888,Kafrit,40
ARCS.TA,1018677,Aeronautics Ltd,40
SCC.TA,12012,Space Com,40
TLRD.TA,1011862,Telrad Networks Ltd,40
EMCO.TA,11844,E&M,40
SRFT.TA,12027,Sarfati,40
HAMAT.TA,11951,Hamat Group Ltd,40
GNGR.TA,11010,Ginegar,40
DCI.TA,11826,Direct Capita,40
WTS.TA,11051,BH Whitestone Group Ltd,40
CYRN.TA,11084,Cyren Ltd,40
RPAC.TA,11065,Rapac,40
ASGR.TA,10972,Aspen Group Ltd,40
ARD.TA,10971,Arad Ltd,40
UNON.TA,10965,Union,40
MTDS.TA,10898,Meitav Dash Investments Ltd,40
KNFM.TA,11896,Knafaim,40
MNIN.TA,942770,Mendelson Infrastructures and Industries Ltd,40
MRIN.TA,1031272,YD More Investments Ltd,40
MGOR.TA,11942,Mega Or,40
HAP.TA,10919,Hadera Paper,40
GBUD.TA,12037,Gabay Urban Development Ltd,40
CGEN.TA,10991,Compugen,40
BIOV.TA,11803,Bio-View Ltd,40
AFIL01.TA,10868,Africa Israel Investments Ltd,40
INFR.TA,11851,Infimer Ltd,40
MYSZ.TA,12044,My Size Inc,40
HROD.TA,11880,Herodium Investments Ltd,40
FCRE.TA,40404,FC Global Realty Inc,40
SPNTC.TA,12026,Spuntech,40
AVIV.TA,11796,Mordechai Aviv Taasiot Beniyah 1973 Ltd,40
APLY.TA,11879,Apply Advanced Mobile Technologies Ltd,40
UNIT.TA,12053,Unitronics,40
ADO.TA,24048,A.D.O. Group Ltd,40
HGG.TA,102940,Hagag Group,40
SKLN.TA,985834,Skyline Investments Inc,40
FIBI.TA,10909,FIBI Holdings Ltd,40
SCOP1.TA,11068,Scope,40
HAML.TA,11014,Hamlet,40
NSTR.TA,24056,Norstar,40
TDRN.TA,942777,Tadiran Hldg,40
TFR.TA,12120,Tefron,40
SHOM_T1.TA,1061372,EN Shoham Business Warrants 1,40
ICB.TA,11809,Icb Biotechnology Investments Ltd,40
BSEN.TA,11808,Bet Shemesh Engines Holdings 1997 Ltd,40
ILCO.TA,10925,Israel Corp,40
ARYT1.TA,11917,Aryt Industries Ltd,40
ELCRE.TA,10902,Electra Real Estate Ltd,40
ELTR.TA,10904,Electra Ltd,40
DLRL.TA,1094228,Delek Royalties 2012 Ltd,40
ADKA.TA,1072988,Adika Style,40
RTPTP_T1.TA,997863,Ratio Petroleum Energy WL1,40
FORTY.TA,11007,Formula,40
RMLI.TA,10956,Rami Levi,40
ILDA.TA,24060,Israel Land Development Alpha Ltd,40
SEFA.TA,41026,Shefa Yamim,40
SALG.TA,11067,Shalag,40
LVPR.TA,11910,Levinstein Prop,40
DLMT.TA,11011,Dolomite Holdings Ltd,40
ILDC.TA,11020,Land Dev,40
DRAL.TA,11831,Dor Alon,40
FATTAL.TA,1072172,Fattal 1998 Holdings Ltd,40
ASHO.TA,11791,Ashot Ashkelon Industries Ltd,40
MMAN.TA,11948,Maman,40
ORBTC6.TA,1061378,Orbit Tech Warrants 6,40
TTAM.TA,11079,Tiv Taam,40
ELLO.TA,102937,Ellomay Capital Ltd,40
LSCO.TA,1011023,Lesico Ltd,40
ATRY.TA,11900,Atreyu Capital Markets Ltd,40
MLD_T2.TA,1061376,Mirland Development Warrants 2,40
ENDY.TA,11782,Endymed,40
KRNV.TA,10931,Kardan NV,40
JBNK.TA,11887,Jerusalem,40
PTBL.TA,11994,Propert & Buil,40
GLPL.TA,11866,Golan Plastic,40
MDPR.TA,11939,Medipower -M,40
MDCL.TA,11938,Medical,40
TAMDA.TA,11941,Mayanot Tamda Ltd,40
RANI.TA,1073020,Rani Zim Shopping Centers,40
AFPR.TA,10869,Africa Israel Properties Ltd,40
ALGS.TA,11773,Alon Natural Gas Exploration Ltd,40
TUZA.TA,12127,Teuza A Fairchild Technology Venture Ltd,40
EXEN.TA,11006,Exalenz,40
LAHAV.TA,12028,Lahav,40
ALLT.TA,24044,Allot Communications Ltd,40
EVGN.TA,11005,Evogene,40
RAVD.TA,11999,Ravad,40
TEDE.TA,12035,Tedea,40
BCNV.TA,27521,Brack Capit N V,40
DANE.TA,10993,Danel,40
ELDAV.TA,11838,Eldav-L,40
ISTA.TA,12083,ISSTA,40
BIG.TA,11802,Big Shopping Centers Ltd,40
EMTC.TA,942755,Elbit Med Tech,40
HDST.TA,11873,Hadasit Bio,40
ALRPR.TA,11775,Alrov Properties & Lodgings Ltd,40
DIMRI.TA,10996,Dimri,40
KRUR.TA,11029,Kerur,40
LUDN.TA,11909,Ludan,40
DELT.TA,10994,Delta,40
APOS.TA,11783,Aposense Ltd,40
GLTC.TA,11979,Galileo Tech Ltd,40
BRAN.TA,10982,Baran Group Ltd,40
SPIR.TA,11837,Sapir Corp Ltd,40
ELRN.TA,10903,Elron Electronic Industries Ltd,40
JOEL5.TA,10928,Joel,40
ORMP.TA,1031283,Oramed Pharmaceuticals Inc,40
MSHR.TA,11040,Mishorim Real Estate Investments,40
NTO.TA,11046,Neto,40
DXIL.TA,11002,Dexia Israel,40
ELMR.TA,1057296,El-Mor Electric Installation & Services 1986 Ltd,40
CLBV.TA,1088132,Clal Industries and Beverages Ltd,40
SHAN.TA,12016,Shaniv,40
PLSN.TA,10951,Plasson Indus,40
NVPTP.TA,1057408,Navitas Petroleum LP Unit,40
GLRS.TA,1080140,Globrands Group Ltd,40
RMN.TA,11059,Ram-On Investments and Holdings Ltd,40
ORON.TA,959073,Oron Group Investments & Holdings Ltd,40
PAYT.TA,12107,Payton -L,40
FBRT.TA,10908,FMS Enterprises Migun Ltd,40
VILR.TA,12054,Villar,40
BRND.TA,11926,Brand,40
KDST_T2.TA,997847,Kadimastem W2,40
BLSR.TA,10881,Blue Square Real Estate Ltd,40
ALMD_T7.TA,997818,Allium Medical Solutions W7,40
IES.TA,11019,IES,40
ONE.TA,11973,One Software Technologies Ltd,40
MISH.TA,11945,Mivtach Shamir,40
VCTR.TA,942780,Victory Supermarket Chain Ltd,40
SUNY.TA,10962,Suny,40
GBPR.TA,11847,Gabay Rental and Development Ltd,40
ORBI.TA,11088,Orbit,40
KRDI.TA,1094227,Kardan Israel Ltd,40
BRAM.TA,11807,Bram Indus,40
QLTU.TA,11997,Qualitau,40
DISI_T6.TA,997836,Discount Investment Corp W6,40
LBTL.TA,11898,Libental,40
BOTI.TA,11806,Bonei Hatichon Civil Engineering and Infrastructures Ltd,40
INSL.TA,40403,Insuline,40
AMAN.TA,24051,Amanet Management & Systems Ltd,40
AFHL.TA,24049,Afcon Holdings Ltd,40
ALBA.TA,10969,Al-Bad Massuot Yitzhak Ltd,40
TOPS.TA,12045,Top Systems-L,40
INBR.TA,942763,Inbar Group Finance Ltd,40
BYAR.TA,11812,B Yair Building Corporation 1988 Ltd,40
HNMR.TA,11875,Hanan Mor,40
ELSPC.TA,11842,Elspec,40
NXTM.TA,11969,Nextcom,40
SRAC.TA,942776,SR Accord,40
MNGN.TA,11008,Min Hagoren Development Ltd,40
MRIN_T1.TA,1061380,YD More Investments Warrnats 1,40
ZMH.TA,12062,ZMH,40
GSFI.TA,11012,Gan Shmuel,40
LUZN_T4.TA,1061370,Amos Luzon Development and Energy Group Ltd Warrants 4,40
ANCN.TA,11801,Anchiano Therapeutics Ltd,40
AVIA.TA,11795,Aviation Links Ltd,40
CMCTP.TA,1055992,CIM Commercial Trust Corp Series L Pref,40
CISY.TA,11816,C I Systems,40
MNPR.TA,1014105,Minrav Projects Ltd,40
KLIL.TA,11025,Klil,40
CAST.TA,10988,Castro,40
NTGR.TA,11965,Netanel Group,40
LEVI.TA,11903,Levinstein Eng,40
TATTF.TA,11077,Tat Techno,40
PLRM.TA,11057,Palram,40
ISRS.TA,11883,Isras,40
ELWS.TA,10979,Electreon Wireless Ltd,40
ORIN.TA,11052,Orian,40
KMNK.TA,11895,Kmn Capital-M,40
SANO1.TA,12114,Sano,40
ABIL.TA,962549,Ability Inc,40
ANLT.TA,10970,Analyst IMS Investment Management Services Ltd,40
BOLT.TA,11805,BioLight Life Sciences Ltd,40
HAIN.TA,942769,Halman Aldubi Investment House Ltd,40
BYSD.TA,10884,Bayside Land Corporation Ltd,40
EQTL.TA,11004,Equital,40
PRSK.TA,11993,Prashkovsky,40
MSAH.TA,11952,Hamashbir 365,40
LHIS.TA,11905,Lachish,40
BRIL.TA,10983,Brill,40
ILX.TA,11021,Ilex Medical,40
CRMT.TA,11822,Carmit,40
NISA.TA,11961,Nissan,40
QNCO.TA,11061,Queenco-L,40
HLMS.TA,1057297,Holmes Place International Ltd,40
SMNIN.TA,12019,Shemen Industries Ltd,40
HOD.TA,11017,Hod,40
POLY.TA,11989,Polygon -L,40
GOLD.TA,11870,The Gold Bond Group Ltd,40
TREN.TA,12048,Trendline,40
PERI.TA,24046,Perion Network,40
MLTM.TA,11038,Malam Team,40
MNRV.TA,11039,Minrav,40
ARAD.TA,942781,Arad Investment & Industrial Development Ltd,40
MEDN.TA,11940,Mehadrin,40
CDEV.TA,10989,Cohen Dev,40
AVER.TA,10975,Averbuch Formica Center Ltd,40
RIMO.TA,11063,Rimoni,40
SNEL.TA,12024,Synel,40
ORAD.TA,11974,Orad-M,40
TALD.TA,12031,Taldor,40
BRMG.TA,10985,Brimag -L,40
GOHO.TA,11869,Golden House,40
BNRG.TA,1043290,Brenmiller Energy Ltd,40
AYAL.TA,11798,Ayalon Holdings Ltd,40
CMDR.TA,11927,Computer Direct,40
RLCO.TA,12002,Ralco,40
CHR_T5.TA,1061371,Chiron Refineries Warrants 5,40
DUNI.TA,11835,Duniec,40
PRTC.TA,24047,Priortech,40
ISRO.TA,11882,Isrotel -L,40
ORTC.TA,11053,O.R.T,40
MEDI.TA,11036,Medtechnica,40
TLSY.TA,11078,Telsys,40
BIRM.TA,11923,Birman Wood and Hardware Ltd,40
LAPD.TA,11030,Lapidoth,40
REKA.TA,12000,Rekah,40
INTR.TA,12081,Intergama,40
NTML.TA,12104,Neto Malinda,40
TGBR.TA,12121,TGBR,40
DRSL.TA,11834,Dorsel,40
EMDV.TA,11845,Emilia Devel,40
CMER.TA,10992,Mer,40
IBI.TA,11018,IBI Inv House,40
DANH.TA,11825,Dan Hotels,40
CTPL5.TA,11935,Citrus Plant5-L,40
ANGL.TA,11779,Salomon A Angel Ltd,40
ARAN.TA,11785,Aran Research and Development 1982 Ltd,40
TAYA.TA,12033,Taya Inv-L,40
ZLKL1.TA,12134,Zanlakol,40
AFRE.TA,24050,Africa Israel Residences Ltd,40
ININ.TA,942761,Inter Industries,40
SNFL.TA,942778,Sunflow Sustain,40
ILDA_T6.TA,997843,Israel Land Development Alpha W6,40
GPGB.TA,1073377,GP Global Power Ltd,40
AFID.TA,10967,Africa Israel Industries Ltd,40
GIVOP.TA,11009,Givot L,40
IMCO.TA,11022,IMCO,40
PTCH.TA,11060,Petrochemical,40
STCM.TA,11076,Satcom System,40
CPHO.TA,11091,TF Capital Holdings 2016 Ltd,40
ABTR.TA,11765,Abetrans Ltd,40
ALD.TA,11772,ALD Advanced Logistics Developments Ltd,40
AVLN.TA,11797,Aviv Arlon Ltd,40
BGI.TA,11800,BGI Investments 1961 Ltd,40
CHAM.TA,11813,Cham,40
PLTF.TA,11833,PLT Financial Services Ltd,40
EDRL.TA,11836,Edri-El,40
EXPO.TA,11849,Export Inv,40
FRDN.TA,11855,Fridenson,40
GAON.TA,11859,Gaon,40
VTLC-M.TA,11864,Vitala Capital Ltd,40
HMAM.TA,11874,Hamama,40
HRON.TA,11876,Hiron,40
BIMC.TA,11884,Amnis Therapeutics Ltd,40
LODZ.TA,11907,Lodzia,40
ARNA.TA,11911,Arena Star Group Ltd,40
MAXM.TA,11913,Maxima,40
AVRT.TA,11933,Avrot Industries Ltd,40
CTPL.TA,11934,Citrus Plt1-L,40
MBMX.TA,11936,Mobile Max-M,40
MSLA.TA,11953,Maslavi,40
NERZ.TA,11958,New Horizon,40
SPRG.TA,11966,Spring Ventures Ltd,40
MRP.TA,11985,MRP Investments Ltd,40
PPIL.TA,11990,Plastofil -L,40
SLGN.TA,11991,Solegreen Ltd,40
ROBO.TA,12004,Robogroup,40
ROTS.TA,12006,Rotshtein,40
RSEL.TA,12008,RSL,40
STG.TA,12029,STG,40
TNPV.TA,12043,Tchnopls Vent,40
USER.TA,12046,User Trend Ltd,40
UNCR.TA,12050,Unet Credit Finance Services Ltd,40
ULTR.TA,12052,Ultra Equity Investments Ltd,40
VISN.TA,12055,Vision Sigma,40
XENA.TA,12059,Xenia Venture Capital,40
BNTM.TA,12061,Beyond Time Holdings Ltd,40
GODM.TA,12071,Godm,40
HAHO.TA,12076,Hachshara-L,40
GLVR.TA,24053,Gulliver,40
SMOG.TA,24058,Shemen Oil& Gas,40
APIO.TA,942752,APIO Africa Ltd,40
GFC.TA,942757,GFC Green Fields,40
JTI.TA,942765,JTI,40
PLAZ.TA,942775,Plaza Centers NV,40
OBAS.TA,951028,Optibase,40
ALD_T3.TA,997817,ALD Advanced Logistics Developments W3,40
ANSL_T7.TA,997820,Insuline Medical W7,40
APOP_T1.TA,997821,Cellect Biotechnology W1,40
AURA_T5.TA,997822,Aura Investments W5,40
AVRT_T5.TA,997823,Avrot Industries W5,40
BCNV_T1.TA,997824,Brack Capital Properties W1,40
BIG_T4.TA,997825,Big Shopping Centers W4,40
BRAN_T4.TA,997826,Baran Group W4,40
BVXV_T5.TA,997827,Biondvax Pharmaceuticals W5,40
CLPT_T11.TA,997828,Collplant Holdings W11,40
CLPT_T12.TA,997829,Collplant Holdings W12,40
CLPT_T7.TA,997830,Collplant Holdings W7,40
CLPT_T8.TA,997831,Collplant Holdings W8,40
CLPT_T9.TA,997832,Collplant Holdings W9,40
CNFI_T10.TA,997833,Can Fite Biopharma W10,40
DISI_T5.TA,997835,Discount Investment Corp W5,40
ECJM_T9.TA,997838,E.C.J W9,40
ENDY_T5.TA,997839,Endymed W5,40
ENRG_T2.TA,997840,Energix Renwable Energies W2,40
GLV_T5.TA,997842,Gulliver Energy W5,40
INM_T2.TA,997844,Intercure W2,40
ISCN_T4.TA,997845,Israel Canada TR W4,40
ITMR_T4.TA,997846,Itamar Medical W4,40
KDST_T3.TA,997848,Kadimastem W3,40
LEV_T4.TA,997849,A Levi Investment And Construction W4,40
MBMX_T5.TA,997850,Mobile Max Technologies W5,40
MCTC_T20.TA,997851,Micromedic Technologies W20,40
MDGS_T9.TA,997852,Medigus W9,40
MDNP_T15.TA,997853,Modiin Energy WL15,40
MDVI_T2.TA,997854,Medivie Therapeutic W2,40
MGOR_T2.TA,997855,Mega Or Holdings W2,40
MNPR_T1.TA,997856,Minrav Projects W1,40
MNPR_T2.TA,997857,Minrav Projects W2,40
MYDS_T4.TA,997858,Mydas Investment Fund W4,40
OPAL_T2.TA,997859,Opal Balance Investments W2,40
RTIP_T14.TA,997860,Ratio Oil Exploration 1992 LP 14,40
RTIP_T17.TA,997861,Ratio Oil Exploration 1992 W17,40
SAFE_T2.TA,997866,Safe-T Group W2,40
SKLN_T2.TA,997867,Skyline International W2,40
SLARL_T3.TA,997868,Sella Capital Real Estate W3,40
SLGN_T5.TA,997869,Solegreen W5,40
SPRG_T1.TA,997870,Spring Ventures W1,40
SPRG_T2.TA,997871,Spring Ventures W2,40
STCM_T1.TA,997872,Satcom Systems W1,40
TGTR_T3.TA,997874,Together Startup Network W3,40
TMD_T1.TA,997875,Tamda W1,40
VCTR_T1.TA,997877,Victory Supermarket Chain W1,40
XENA_T4.TA,997878,Xenia Venture Capital W4,40
XENA_T5.TA,997879,Xenia Venture Capital W5,40
ZRAH_T8.TA,997881,Zerah Oil and Gas Explorations W8,40
ELDT_P3.TA,1028151,Eldan Transportation Ltd Pref,40
CMCT.TA,1055991,Cim Commerical Trust,40
PFLT.TA,1055993,PennantPark Floating Rate Capital Ltd,40
MRHL_T1.TA,1061374,Merchavia Holdings and Investments Warrants 1,40
OPAL_T3.TA,1061377,Opal Balance Investments Warrants 3,40
RIT1_TB7.TA,1061379,Reit 1 Warrants 7,40
MCC.TA,1062249,Medley Capital Corporation,40

#BSE BEIRUT
4001.BSE,11719,Abdullah Al Othaim Markets Company,50
3010.BSE,11711,Arabian Cement Co,50
8240.BSE,11637,ACE ARABIA COOPERATIVE INSURANCE,50
8150.BSE,11628,Allied Cooperative Insurance Group,50
2330.BSE,11705,Advanced Petrochemical Company,50
8160.BSE,11629,Arabia Insurance Cooperative Co,50
8280.BSE,11641,Al Alamiya Cooperative Insurance,50
4320.BSE,962550,Al Andalus Property Co SJSC,50
4130.BSE,1025126,Al Baha Investment and Development Company SJSC,50
4007.BSE,940928,Al Hammadi Co,50
1820.BSE,103950,Al Hokair Group,50
4334.BSE,1053058,Al Maather REIT,50
4337.BSE,1062590,Al Mashaar REIT,50
1120.BSE,11665,Al Rajhi Bank,50
1304.BSE,980213,Al Yamamah Steel Industries Co,50
8140.BSE,11627,Al-Ahlia Insurance Company,50
2320.BSE,11704,AL-BABTAIN POWER &TELECOM CO,50
2340.BSE,11706,ALABDULLATIF CO,50
4338.BSE,1057695,AlAhli Fund of REITs,50
1040.BSE,11660,Alawwal Bank,50
1140.BSE,11666,BANK ALBILAD,50
4200.BSE,11738,Aldrees Petroleum & Transport Svcs,50
4240.BSE,11742,Fawaz Abdulaziz AlHokair Company,50
1150.BSE,11667,Alinma Bank,50
8312.BSE,40411,Alinma Tokio Marine Co,50
4331.BSE,996548,AlJazira Mawten REIT,50
8012.BSE,48638,Aljazira Takaful Taawuni Company,50
6070.BSE,11654,Al-Jouf Agriculture Development Co,50
4290.BSE,11747,Alkhaleej Training & Education Co,50
1330.BSE,19028,Abdullah A. M. Al-Khodari Sons Co,50
8040.BSE,11617,Allianz SE VNA O.N,50
8230.BSE,11636,Al-Rajhi Cooperative Insurance,50
1213.BSE,11671,Al Sorayai Trading&Industrial Group,50
1810.BSE,40406,Al-Tayyar Travel Group Holding Co,50
2170.BSE,11691,Alujain Corporation,50
8310.BSE,19027,Amana Cooperative Insurance Co,50
2160.BSE,11690,Saudi Arabian Amiantit Co,50
4061.BSE,11646,Anaam International Holding Group,50
8011.BSE,103953,Anb Insurance,50
2200.BSE,11694,Arabian Pipes Company,50
8070.BSE,11620,Arabian Shield Coop Insurance Co,50
4150.BSE,11733,Arriyadh Development Co,50
1080.BSE,11663,Arab National Bank,50
4080.BSE,11727,Aseer Trading Tourism&Manufacturing,50
1301.BSE,19029,United Wire Factories Company,50
1212.BSE,11670,Astra Industrial Group,50
8130.BSE,11626,ALAHLI TAKAFUL COMPANY,50
7040.BSE,11753,Etihad Atheeb Telecommunication,50
8250.BSE,11638,AXA SA,50
4030.BSE,11723,The National Shipping Co,50
1302.BSE,103949,Bawan,50
1210.BSE,11668,Basic Chemical Industries Co,50
1020.BSE,11658,Bank AlJazira,50
1050.BSE,11661,Banque Saudi Fransi,50
4260.BSE,11744,United Int Transportation Company,50
8210.BSE,11634,Bupa Arabia for Coop. Insurance,50
8270.BSE,11640,BURUJ COOPERATIVE INSURANCE CO,50
4005.BSE,40966,National Medical Care Company,50
6004.BSE,40409,Saudi Airlines Catering Company,50
2001.BSE,11675,Methanol Chemicals Company,50
3003.BSE,40408,City Cement Co,50
4004.BSE,40965,Dallah Healthcare Holding Company,50
4300.BSE,11748,Dar Alarkan Real Estate Development,50
4010.BSE,11721,Dur Hospitality,50
1303.BSE,943613,Electrical Industries Co,50
4220.BSE,11740,Emaar The Economic City,50
8311.BSE,40410,Saudi Enaya Cooperative Insurance,50
3080.BSE,11717,Eastern Province Cement Co,50
7020.BSE,11751,Etihad Etisalat Co,50
4003.BSE,19031,United Electronics Company,50
9400.BSE,37529,FALCOM Financial Services,50
9401.BSE,39002,Falcom Petrochemical,50
2180.BSE,11692,Filing & Packing Materials Co,50
4180.BSE,11736,Fitaihi Holding Group,50
6020.BSE,11650,Qassim Agriculture Co,50
2080.BSE,11683,National Gas & Industrialization Co,50
2100.BSE,11643,Food Products Co,50
8260.BSE,11639,Gulf General Cooperative Insurance,50
8120.BSE,11625,Gulf Union Cooperative Insurance,50
6001.BSE,11647,Halwani Bros,50
3001.BSE,19032,Hail Cement Company,50
6002.BSE,11648,Herfy Food Services Co,50
9402.BSE,39003,HSBC Amanah Saudi 20,50
4250.BSE,11743,Jabal Omar Development Company,50
4332.BSE,1010626,Jadwa REIT Al Haramain Fund,50
4190.BSE,11737,Jarir Marketing Co,50
6090.BSE,11656,Jazan Development Co,50
3091.BSE,19023,AL JOUF CEMENT COMPANY,50
4310.BSE,19030,Knowledge Economic City,50
4280.BSE,11746,Kingdom Holding Company,50
4011.BSE,985835,Lazurde for Jewelry Co,50
1211.BSE,11669,Saudi Arabian Mining Company,50
2220.BSE,11696,National Metal Manufacturing Co,50
8020.BSE,11615,Malath Cooperative Insurance Co,50
4100.BSE,11729,Makkah Construction&Development Co,50
8030.BSE,11616,The Mediterranean&Gulf Insurance Co,50
2370.BSE,11709,Middle East Specialized Cables Co,50
4009.BSE,969107,Middle East Healthcare Co CJSC,50
1202.BSE,953109,Middle East Paper Co,50
4002.BSE,11720,Mouwasat Medical Services Company,50
4110.BSE,11730,Saudi Transport & Investment Co,50
4336.BSE,1054997,Mulkia Gulf Real Estate REIT,50
4335.BSE,1054998,Musharaka REIT,50
6010.BSE,11649,National Agriculture Development Co,50
3002.BSE,40407,Najran Cement Company,50
2210.BSE,11695,Nama Chemicals Co,50
1180.BSE,942783,National Com Bnk,50
2090.BSE,11684,National Gypsum Company,50
3004.BSE,48637,Northern Region Cement Co,50
2380.BSE,11710,Rabigh Refining & Petrochemical Co,50
2002.BSE,11676,National Petrochemical Company,50
3040.BSE,11714,The Qassim Cement Co,50
4230.BSE,11741,Red Sea Housing Services Company,50
1010.BSE,11657,Riyad Bank,50
4330.BSE,994496,Riyad REIT,50
1060.BSE,11662,The Saudi British Bank,50
8080.BSE,11621,SABB Takaful,50
2010.BSE,11677,Saudi Basic Industries Corp,50
2270.BSE,11644,Saudia Dairy and Foodstuff .Co,50
2020.BSE,11678,Saudi Arabia Fertilizers Co,50
8180.BSE,11631,Al Sagr Co-operative Insurance Co,50
2260.BSE,11700,Sahara,50
1030.BSE,11659,The Saudi Investment Bank,50
2120.BSE,11686,Saudi Advanced Industries Co,50
8100.BSE,11623,Saudi Arabian Cooperative Insurance,50
8050.BSE,11618,Salama Cooperative Insurance Co,50
1090.BSE,11664,Samba Financial Group,50
4040.BSE,11724,Saudi Public Transport Co,50
2030.BSE,11679,Saudi Arabia Refineries Co,50
4050.BSE,11725,Saudi Automotive Services Co,50
2110.BSE,11685,Saudi Cable Company,50
3030.BSE,11713,Saudi Cement Company,50
2040.BSE,11680,Saudi Ceramic Co,50
2230.BSE,11697,Saudi Chemical Company,50
4008.BSE,953110,Saudi Company for Hardware,50
5110.BSE,11749,Saudi Electricity Company,50
4031.BSE,954945,Saudi Ground Services Co,50
2350.BSE,11707,Saudi Kayan Petrochemical Company,50
4006.BSE,103952,Saudi Marke,50
8200.BSE,11633,Saudi RE Cooperative Reinsurance,50
2050.BSE,11642,Savola Group,50
6050.BSE,11652,Saudi Fisheries Co,50
1214.BSE,11672,Al Hassan Ghazi Ibrahim Shaker,50
6060.BSE,11653,Ash-Sharqiyah Development Company,50
2130.BSE,11687,Saudi Industrial Development Co,50
4140.BSE,11732,Saudi Industrial Export Co,50
2250.BSE,11699,Saudi Industrial Investment Group,50
2310.BSE,11703,Saudi Int Petrochemical Co,50
2190.BSE,11693,Saudi Industrial Services Co,50
8290.BSE,19026,Solidarity Saudi Takaful Co,50
3050.BSE,11715,Southern Province Cement Co,50
2070.BSE,11682,Saudi Pharmaceutical Appliances,50
2300.BSE,11702,Saudi Paper Manufacturing Co,50
4270.BSE,11745,Saudi Printing & Packaging Company,50
4020.BSE,11722,Saudi Real Estate Co,50
4210.BSE,11739,Saudi Research and Marketing Group,50
1320.BSE,11674,Saudi Steel Pipe Company,50
7010.BSE,11750,Saudi Telecom,50
2360.BSE,11708,Saudi vitrified clay pipes co,50
6040.BSE,11651,Tabuk Agriculture Development Co,50
4090.BSE,11728,Taiba Holding Co,50
1201.BSE,40405,Takween Advanced Industries,50
4333.BSE,1011863,Taleem REIT Fund,50
4070.BSE,11726,Tihama Advertising&Public Relations,50
2060.BSE,11681,National Industrialization Co,50
8010.BSE,11614,The Company for Coop. Insurance,50
3090.BSE,11718,Tabuk Cement Co,50
4170.BSE,11735,Tourism Enterprise Co,50
4160.BSE,11734,National Agriculture Marketing Co,50
8170.BSE,11630,Trade Union Cooperative Insurance,50
8190.BSE,11632,United Cooperative Assurance Co,50
3005.BSE,103951,Umm Al-Qura,50
8110.BSE,11624,Saudi Indian Company Insurance,50
8060.BSE,11619,Saudi United Cooperative Insurance,50
8300.BSE,19025,Wataniya Insurance Company,50
2290.BSE,11701,Yanbu National Petrochemical Co,50
3060.BSE,11716,Yanbu Cement Co,50
3020.BSE,11712,Yamamah Saudi Cement Co,50
7030.BSE,11752,Mobile Telecommunications Company,50
2240.BSE,11698,Zamil Industrial Investment Co,50
2150.BSE,11689,The National Co for Glass Industrie,50

#VI,AUSTRIA
ANDR.VI,590,Andritz AG,45
ERST.VI,592,Erste Group Bank AG,45
AGRV.VI,593,Agrana Beteiligungs AG,45
IMFI.VI,598,Immofinanz AG,45
EVNV.VI,599,EVN AG,45
TELA.VI,600,Telekom Austria AG,45
OMVV.VI,601,OMV AG,45
RBIV.VI,602,Raiffeisen Bank International AG,45
PALF.VI,604,Palfinger AG,45
SBOE.VI,605,Schoeller-Bleckmann AG,45
MMKV.VI,606,Mayr-Melnhof Karton AG,45
RHIM.VI,607,RHI Magnesita NV,45
SMPV.VI,608,Semperit AG Holding,45
VIEV.VI,609,Flughafen Wien AG,45
VOES.VI,610,Voestalpine AG,45
VERB.VI,612,Verbund AG Kat. A,45
WBSV.VI,613,Wienerberger AG,45
UNIQ.VI,615,Uniqa Insurance Group AG,45
DBK.VI,8090,Deutsche Bank AG NA O.N,45
CAIV.VI,9219,CA Immobilien Anlagen AG,45
POST.VI,9233,Oesterr. Post AG,45
STRV.VI,9239,Strabag SE,45
ZUMV.VI,9249,Zumtobel Group AG,45
VIGR.VI,13056,Vienna Insurance Group AG,45
ATRS.VI,13172,Atrium Europ.Real Est.Ltd,45
DOCO.VI,13806,DO & CO AG,45
LENV.VI,18894,Lenzing AG,45
AXAF.VI,22959,AXA SA,45
AMAV.VI,40903,Amag Austria Metall AG,45
ATSV.VI,48630,AT & S Austria Technologie & Systemtechnik AG,45
FKAV.VI,49822,Frauenthal,45
WXFB.VI,49823,Warimpex Finanz Und Bet AG,45
RBAV.VI,49824,Rosenbauer,45
POLV.VI,49825,Polytec,45
KTCG.VI,49826,Kapsch Traffic,45
VLAV.VI,49839,Valneva,45
SIAG.VI,49952,S Immo Ag,45
WLFD.VI,49953,Wolford AG,45
BWOA.VI,943397,Buwog AG VI,45
KTMI.VI,945131,KTM Industries AG,45
ABGV.VI,949778,Porr AG,45
BHAV.VI,949780,Burgenland Holding AG,45
FACC.VI,949782,Facc AG,45
GAGS.VI,949783,Gurktaler AG ST,45
GAGV.VI,949784,Gurktaler AG VZ,45
HEDV.VI,949785,Maschinenfabrik Heid AG,45
HTPV.VI,949787,HTI High Tech Industries AG,45
KAER.VI,949788,BKS Bank AG,45
LTXV.VI,949789,Linz Textil Holding AG,45
MANV.VI,949790,Josef Manner Comp AG,45
OBER.VI,949792,Oberbank AG ST,45
OBER_P.VI,949793,Oberbank AG VZ,45
OBHV.VI,949794,Ottakringer Getraenke AG ST,45
OBHV_P.VI,949795,Ottakringer Getraenke AG VZ,45
RATV.VI,949797,Rath AG,45
SWUT.VI,949799,SW Umwelttechnik Stoiser Wolschner,45
TIRO_P.VI,949801,Bank fuer Tirol und Vorarlberg,45
UBMV.VI,949802,UBM Development AG,45
UIAV.VI,949803,Unternehmens Invest AG,45
WPBI.VI,949805,Wiener Privatbank SE,45
GVC.VI,963725,GVC Holdings PLC,45
SCPH.VI,969007,Sanochemia Pharmazeutika AG,45
TIRO.VI,977690,Bank fuer Tirol und Vorarlberg AG,45
ABEV.VI,985977,Ab Effectenbeteiligungen,45
ATHO.VI,985979,Athos Immobilien AG,45
DBI.VI,985982,Dr Bock Industries AG,45
EYBL.VI,985983,EAG Beteiligungs AG,45
HSTV.VI,985984,Hutter & Schrantz Stahlbau AG,45
HUTV.VI,985985,Hutter & Schrantz AG,45
KAER_P.VI,985986,BKS Bank AG,45
MLZV.VI,985987,Stadlauer Malzfabrik AG,45
MTRH.VI,985988,Management Trust Holding AG,45
OESD.VI,985989,Oesterreichische Staatsdruckerei Holding AG,45
VLAP.VI,985993,Valneva SE Pref,45
PFE.VI,993537,Pfizer Inc,45
BPGR.VI,997113,BPG Hramba Plemenitih Kovin dd,45
CLEN.VI,1008987,Cleen Energy AG,45
GOOG.VI,1010843,Alphabet Inc Class C,45
AALD.VI,1010891,American Airlines Group,45
AAPL.VI,1010892,Apple Inc,45
ADBE.VI,1010893,Adobe Systems Incorporated,45
ADI.VI,1010894,Analog Devices Inc,45
ADPD.VI,1010895,Automatic Data Processing Inc,45
ADSK.VI,1010896,Autodesk Inc,45
AKAM.VI,1010897,Akamai Technologies Inc,45
AMAT.VI,1010899,Applied Materials Inc,45
AMGN.VI,1010900,Amgen Inc,45
AMZN.VI,1010901,Amazon.com Inc,45
ATVI.VI,1010902,Activision Blizzard Inc,45
AVGO.VI,1010903,Broadcom Inc,45
AXP.VI,1010904,American Express Company,45
BA.VI,1010905,Boeing Co,45
BIDU.VI,1010906,Baidu Inc,45
BIIB.VI,1010907,Biogen Inc,45
BMRN.VI,1010908,Biomarin Pharmaceutical Inc,45
CAT.VI,1010910,Caterpillar Inc,45
CELG.VI,1010911,Celgene Corporation,45
CERN.VI,1010912,Cerner Corporation,45
CHKP.VI,1010913,Check Point Software Technologies Ltd,45
CHTR.VI,1010914,Charter Communications Inc,45
CMCSA.VI,1010915,Comcast Corp,45
COST.VI,1010916,Costco Wholesale Corporation,45
CSCO.VI,1010917,Cisco Systems Inc,45
CSX.VI,1010918,CSX Corporation,45
CTAS.VI,1010919,Cintas Corporation,45
CTRP.VI,1010920,Ctrip.Com International Ltd ADR,45
CTSH.VI,1010921,Cognizant Technology Solutions,45
CTXS.VI,1010922,Citrix Systems Inc,45
CVX.VI,1010923,Chevron Corp,45
DIS.VI,1010925,Walt Disney Company,45
DISCA.VI,1010926,Discovery Inc Class A,45
DISCK.VI,1010927,Discovery Communications C Inc,45
DISH.VI,1010928,DISH Network Corporation,45
DLTR.VI,1010929,Dollar Tree Inc,45
EA.VI,1010930,Electronic Arts Inc,45
EBAY.VI,1010931,eBay Inc,45
ESRX.VI,1010932,Express Scripts Holding Co,45
EXPE.VI,1010933,Expedia Inc,45
FAST.VI,1010934,Fastenal Company,45
FB.VI,1010935,Facebook Inc,45
FISV.VI,1010936,Fiserv Inc,45
FOXA.VI,1010937,Twenty-First Century Fox Inc A,45
FOXB.VI,1010938,Twenty-First Century Fox Inc,45
GE.VI,1010939,General Electric Company,45
GILD.VI,1010940,Gilead Sciences Inc,45
GOOGL.VI,1010941,Alphabet Inc Class A,45
GS.VI,1010942,Goldman Sachs Group Inc,45
HAS.VI,1010943,Hasbro Inc,45
HD.VI,1010944,Home Depot Inc,45
HOLX.VI,1010945,Hologic Inc,45
HSIC.VI,1010946,Henry Schein Inc,45
IBM.VI,1010947,International Business Machines,45
IDXX.VI,1010948,IDEXX Laboratories Inc,45
INCY.VI,1010950,Incyte Corporation,45
INTC.VI,1010951,Intel Corporation,45
INTU.VI,1010952,Intuit Inc,45
ISRGE.VI,1010953,Intuitive Surgical Inc,45
JBHT.VI,1010954,JB Hunt Transport Services Inc,45
JDE.VI,1010955,Jd.Com Inc Adr,45
JNJ.VI,1010956,Johnson & Johnson,45
JPM.VI,1010957,JPMorgan Chase & Co,45
KHC.VI,1010958,Kraft Heinz Co,45
KLAC.VI,1010959,KLA-Tencor Corporation,45
KO.VI,1010960,Coca-Cola Company,45
LBTYA.VI,1010961,Liberty Global PLC,45
LBTYK.VI,1010962,Liberty Global PLC Class C,45
LRCX.VI,1010965,Lam Research Corp,45
GLIBA.VI,1010966,GCI Liberty Inc Class A,45
MAR.VI,1010967,Marriott International Inc,45
MAT.VI,1010968,Mattel Inc,45
MCD.VI,1010969,McDonald’s Corporation,45
MCHP.VI,1010970,Microchip Technology Incorporated,45
MDLZ.VI,1010971,Mondelez International Inc,45
MMM.VI,1010972,3M Company,45
MNST.VI,1010973,Monster Beverage Corp,45
MRK.VI,1010974,Merck & Company Inc,45
MSFT.VI,1010975,Microsoft Corporation,45
MU.VI,1010976,Micron Technology Inc,45
MXIM.VI,1010977,Maxim Integrated Products Inc,45
MYL.VI,1010978,Mylan Inc,45
NCLH.VI,1010979,Norwegian Cruise Line Holdings Ltd,45
NKE.VI,1010981,Nike Inc,45
NTES.VI,1010982,NetEase Inc,45
NVDA STOCK PRICE.VI,1010983,NVIDIA Corporation,45
ORLY.VI,1010984,O Reilly Automotive Inc,45
PAYX.VI,1010985,Paychex Inc,45
PCAR.VI,1010986,PACCAR Inc,45
BKNG.VI,1010987,Booking Holdings Inc,45
PG.VI,1010988,Procter & Gamble Company,45
PYPL.VI,1010989,PayPal Holdings Inc,45
QCOM.VI,1010990,Qualcomm Incorporated,45
QRTEA.VI,1010991,Qurate Retail Group Inc Series A,45
ROST.VI,1010993,Ross Stores Inc,45
SBUX.VI,1010994,Starbucks Corporation,45
SHPG.VI,1010995,Shire PLC ADR,45
SIRI.VI,1010996,Sirius XM Holding Inc,45
STX.VI,1010997,Seagate Technology PLC,45
SWKS.VI,1010998,Skyworks Solutions Inc,45
SYMC.VI,1010999,Symantec Corporation,45
TMUS.VI,1011000,T-Mobile US Inc,45
TRIPA.VI,1011001,TripAdvisor Inc,45
TRV.VI,1011002,The Travelers Companies Inc,45
TSCOA.VI,1011003,Tractor Supply Company,45
TSLA.VI,1011004,Tesla Inc,45
TXN.VI,1011005,Texas Instruments Incorporated,45
ULTA.VI,1011006,Ulta Beauty Inc,45
UNH.VI,1011007,UnitedHealth Group Incorporated,45
UTX.VI,1011008,United Technologies Corporation,45
V.VI,1011009,Visa Inc,45
VIAB.VI,1011010,Viacom B Inc,45
VODA.VI,1011011,Vodafone Group PLC ADR,45
VRSK.VI,1011012,Verisk Analytics Inc,45
VRTX.VI,1011013,Vertex Pharmaceuticals Inc,45
VZ.VI,1011014,Verizon Communications Inc,45
WBAE.VI,1011015,Walgreens Boots Alliance Inc,45
WDC.VI,1011016,Western Digital Corporation,45
WMT.VI,1011017,Walmart Inc,45
XLNX.VI,1011018,Xilinx Inc,45
XOM.VI,1011019,Exxon Mobil Corp,45
XRAY.VI,1011020,Dentsply Sirona Inc,45
AABA.VI,1011021,Altaba Inc,45
MSBT.VI,1048903,MS Biotech SPA,45
1COV.VI,1052641,Covestro AG,45
ADAG.VI,1052681,Adva Optical Networking SE,45
ADJ.VI,1052682,ADO Properties SARL,45
ADLG.VI,1052683,Adler Real Estate AG,45
AFXG.VI,1052684,Carl Zeiss Meditec AG,45
AIXGN.VI,1052687,Aixtron SE,45
AM3D.VI,1052689,SLM Solutions Group AG,45
AMDG.VI,1052690,Amadeus Fire AG,45
AOXG.VI,1052693,Alstria Office Reit-Ag,45
ARLG.VI,1052695,Aareal Bank AG,45
ARTG.VI,1052696,bet at home com AG,45
AUDK.VI,1052697,RTL Group,45
BC8G.VI,1052698,Bechtle AG,45
BDTG.VI,1052699,Bertrandt AG,45
BIO3.VI,1052700,Biotest AG VZ O.N,45
BNRGN.VI,1052701,Brenntag AG,45
BOSSN.VI,1052702,Hugo Boss AG NA O.N,45
BVB.VI,1052704,Borussia Dortmund GmbH & Co KGaA,45
BYWGNX.VI,1052705,Baywa AG Vink. NA O.N,45
CECG.VI,1052707,Metro AG,45
COKG.VI,1052708,Cancom SE O.N,45
COPMA.VI,1052709,CompuGroup Medical AG O.N,45
CWCG.VI,1052711,Cewe Color Holding O.N,45
DBANN.VI,1052712,Deutsche Beteiligungs AG O.N,45
DEQGN.VI,1052713,Deutsche Euroshop AG,45
DEZG.VI,1052714,Deutz AG,45
DICN.VI,1052716,DIC Asset AG,45
DLGS.VI,1052717,Dialog Semiconductor,45
DRIG.VI,1052718,Drillisch AG,45
DRW3.VI,1052719,Draegerwerk VZO O.N,45
DUEG.VI,1052720,Duerr AG,45
DWNG.VI,1052722,Deutsche Wohnen AG,45
EVDG.VI,1052724,CTS Eventim AG,45
EVKN.VI,1052725,Evonik Industries AG,45
EVTG.VI,1052726,Evotec AG O.N,45
FIEG.VI,1052727,Fielmann AG,45
FNTGN.VI,1052728,Freenet AG NA,45
FPEG_P.VI,1052729,Fuchs Petrolub AG VZO Pref,45
FRAG.VI,1052730,Fraport AG,45
G1AG.VI,1052731,GEA Group AG,45
G24N.VI,1052732,Scout24 AG,45
GBFG.VI,1052733,Bilfinger SE O.N,45
GFTG.VI,1052736,GFT Technologies AG,45
GILG.VI,1052737,DMG Mori AG,45
GLJN.VI,1052739,Grenke N AG,45
GMMG.VI,1052740,Grammer AG,45
GWIG.VI,1052742,Gerry Weber Intl AG,45
GXIG.VI,1052743,Gerresheimer AG,45
GYC.VI,1052744,Grand City Properties SA,45
HABG.VI,1052745,Hamborner Reit AG O.N,45
HBH.VI,1052746,Hornbach Holding VZO O.N,45
HDDG.VI,1052747,Heidelberger Druckmaschinen O.N,45
HHFGN.VI,1052748,Hamburger Hafen Und Logistik A-SP,45
HLAG.VI,1052749,Hapag Lloyd AG,45
HLE.VI,1052750,Hella KGaA Hueck & Co,45
HNRGN.VI,1052751,Hannover Rueck SE,45
HOTG.VI,1052752,Hochtief AG,45
HWAG.VI,1052753,Capital Sta,45
HYQGN.VI,1052754,Hypoport AG,45
IGY.VI,1052756,Innogy SE,45
INHG.VI,1052757,Indus Holding AG,45
JENG.VI,1052759,Jenoptik AG,45
JUNG_P.VI,1052760,Jungheinrich AG O.N.VZO,45
KCOGN.VI,1052761,Kloeckner & Co SE NA,45
KGX.VI,1052763,Kion Group AG,45
KRNG.VI,1052764,Krones AG O.N,45
KWSG.VI,1052765,KWS SAAT AG O.N,45
LEGN.VI,1052767,LEG Immobilien AG,45
LEOGN.VI,1052768,Leoni AG,45
LXSG.VI,1052770,Lanxess AG,45
MDG1K.VI,1052771,Medigene NA O.N,45
MLPG.VI,1052773,MLP AG,45
MORG.VI,1052775,Morphosys AG O.N,45
MTXGN.VI,1052776,MTU Aero Engines NA O.N,45
NAFG.VI,1052778,Aurubis AG,45
NDXG.VI,1052779,Nordex SE O.N,45
NEKG.VI,1052780,Nemetschek AG O.N,45
NOEJ.VI,1052782,Norma Group AG NA O.N,45
O2DN.VI,1052784,Telefonica Deutschland Holding AG,45
OBCGN.VI,1052785,Xing AG,45
OSRN.VI,1052787,Osram Licht AG,45
P1ZGN.VI,1052788,Patrizia Immobilien AG,45
PBBG.VI,1052789,Deutsche Pfandbriefbank AG,45
PUMG.VI,1052794,Puma SE,45
PV.VI,1052795,Pfeiffer Vacuum Technology O.N,45
QGEN.VI,1052796,Qiagen NV,45
RAAG.VI,1052797,Rational AG,45
RHKG.VI,1052798,Rhoen Klinikum AG,45
RHMG.VI,1052799,Rheinmetall AG,45
RIB.VI,1052800,RIB Software AG Na,45
RKET.VI,1052801,Rocket Internet,45
S92G.VI,1052803,SMA Solar Technology AG,45
SANT1.VI,1052804,S&T AG,45
SAXG.VI,1052805,Stroeer SE,45
SDFGN.VI,1052806,K+S AG NA O.N,45
SFQN.VI,1052808,SAF Holland SA,45
SGCG.VI,1052810,SGL Carbon SE,45
SHA_P.VI,1052811,Schaeffler AG,45
SIXG.VI,1052813,Sixt AG ST O.N,45
SKBG.VI,1052814,Koenig & Bauer AG ST O.N,45
SNHG.VI,1052817,Steinhoff International Holdings Ltd,45
SOWG.VI,1052818,Software AG,45
SPRGN.VI,1052819,Axel Springer SE,45
SRT3.VI,1052822,Sartorius AG VZO O.N,45
STAB.VI,1052824,Stabilus,45
STAGN.VI,1052825,STADA Arzneimittel VNA O.N,45
SY1G.VI,1052826,Symrise AG Inh. O.N,45
SZGG.VI,1052827,Salzgitter AG,45
SZUG.VI,1052828,Suedzucker AG,45
TC1N.VI,1052829,Tele Columbus AG,45
TEGG.VI,1052831,Tag Immobilien AG,45
TLGG.VI,1052833,TLG Immobilien AG,45
TLXGN.VI,1052834,Talanx AG NA O.N,45
TTKG.VI,1052836,Takkt AG O.N,45
UN01.VI,1052838,Uniper SE,45
UTDI.VI,1052839,United Internet AG NA,45
VOSG.VI,1052842,Vossloh AG,45
VT9G.VI,1052843,VTG AG O.N,45
WACGN.VI,1052844,Wacker Neuson NA O.N,45
WAFGN.VI,1052845,Siltronic AG,45
WCHG.VI,1052846,Wacker Chemie O.N,45
WCMKK.VI,1052847,WCM Beteiligungs und Grundbesitz AG,45
WDIG.VI,1052848,Wirecard AG,45
WING.VI,1052849,Diebold Nixdorf AG,45
WSUG.VI,1052850,WashTec AG O.N,45
WUWGN.VI,1052851,Wuestenrot & Wuerttembergische AG,45
ZALG.VI,1052853,Zalando SE,45
ZILGN.VI,1052854,Elringklinger AG NA O.N,45
ZO1G.VI,1052855,Zooplus AG,45
BAWG.VI,1054668,BAWAG Group AG,45
CONG.VI,1055010,Continental AG O.N,45
DAIGN.VI,1055012,Daimler AG NA O.N,45
IFXGN.VI,1055020,Infineon Technologies AG NA O.N,45
PSMGN.VI,1055027,Prosiebensat 1 Media AG,45
VOWG_P.VI,1055033,Volkswagen AG VZO O.N,45
BVOLT.VI,1055960,Biovolt AG,45
SIGN.VI,1055961,Signature AG,45
AMS.VI,1072039,Ams AG,45
UMI.VI,1072043,Umicore SA,45
SHLG.VI,1073362,Siemens Healthineers AG,45
COLOB.VI,1073363,Coloplast A/S,45
CLBM.VI,1073364,Cleantech Building Materials PLC,45
EDF.VI,1084248,Electricite de France SA,45
T.VI,1084249,AT&T Inc,45
AMD.VI,1084250,Advanced Micro Devices Inc,45
MO.VI,1084251,Altria Group,45
AIG.VI,1084252,American International Group Inc,45
BAC.VI,1084253,Bank of America Corp,45
BRKB.VI,1084254,Berkshire Hathaway B,45
CL.VI,1084255,Colgate-Palmolive Company,45
DWDP.VI,1084256,DowDuPont Inc,45
DBX.VI,1084257,Dropbox Inc,45
FSLR.VI,1084258,First Solar Inc,45
F.VI,1084259,Ford Motor Company,45
FCX.VI,1084260,Freeport-McMoran Copper & Gold Inc,45
GIS.VI,1084261,General Mills Inc,45
GM.VI,1084262,General Motors Company,45
GPRO.VI,1084263,GoPro Inc,45
HAL.VI,1084264,Halliburton Company,45
HOG.VI,1084265,Harley-Davidson Inc,45
LMT.VI,1084266,Lockheed Martin Corporation,45
M.VI,1084267,Macy’s Inc,45
MA.VI,1084268,Mastercard Inc,45
MWD.VI,1084269,Morgan Stanley,45
NEM.VI,1084270,Newmont Mining Corporation,45
ORCL.VI,1084271,Oracle Corporation,45
PEP.VI,1084272,PepsiCo Inc,45
PMOR.VI,1084273,Philip Morris International Inc,45
CRME.VI,1084274,Salesforce.com Inc,45
SNAP.VI,1084275,Snap Inc,45
TWTR.VI,1084276,Twitter Inc,45
UUAM.VI,1084277,Under Armour Inc A,45

#LS PORTUGAL
BCP.LS,430,Banco Comercial Portugues,29
PHRA.LS,435,Pharol SGPS SA,29
EDP.LS,424,EDP,29
YSO.LS,439,Sonae SGPS SA,29
GALP.LS,421,Galp Energia Nom,29
MOTA.LS,433,Mota Engil,29
NVGR.LS,431,The Navigator Company SA,29
JMT.LS,423,J. Martins SGPS,29
RENE.LS,434,REN,29
NOS.LS,13807,Nos SGPS SA,29
ALSS.LS,428,Altri SGPS,29
CTT.LS,49929,CTT Correios de Portugal SA,29
BBPI.LS,429,Banco BPI,29
TDSA.LS,15184,Teixeira Duarte,29
SONAC.LS,15180,Sonae Capital,29
SEM.LS,437,Semapa,29
EDPR.LS,14606,EDP Renovaveis,29
INA.LS,15166,Inapa - Inv. P. Gestao,29
IMPA.LS,425,Impresa SGPS,29
MARTI.LS,15168,Martifer,29
CORA.LS,15156,Corticeira Amorim,29
CFN.LS,15154,Cofina SGPS,29
SONI.LS,438,Sonae Industria Sgps SA,29
SNC.LS,440,Sonaecom SGPS,29
IBS.LS,15165,Ibersol SGPS,29
SLBEN.LS,15177,Benfica,29
RSGP.LS,15173,Reditus SGPS,29
NBA.LS,15170,Novabase SGPS,29
RAMA.LS,15172,Ramada Investimentos e Industria SA,29
SVA.LS,15182,Sag Gest,29
VAF.LS,15185,VAA Vista Alegre Atlantis SGPS SA,29
FCPP.LS,15161,Futebol Clube Do Porto,29
SCT.LS,15176,Toyota Caetano,29
SPSO.LS,15181,Sporting Clube De Portugal,29
COMAE.LS,15155,Compta,29
GLINT.LS,15163,Glintt,29
GPA.LS,15164,Imobili C Grao Para,29
LIG.LS,15167,Lisgrafica,29
MCP.LS,15169,Media Capital,29
ORE.LS,15171,Orey Antunes Esc,29
LUZ.LS,943381,Luz Saude SA,29
INAN.LS,943382,Inapa Inv NV,29
ALNOR.LS,954904,Nexponor Sociedade Especial De Investimento Imobiliario,29
CDUL.LS,989612,Conduril Engenharia SA,29
GFIBI.LS,989614,Fundiestamo I,29
SCLB.LS,989615,Sporting Clube de Braga Futebol SAD,29
ALPTR.LS,994483,Patris Investimentos SGPS SA,29
ESON.LS,1057063,Estoril Sol SGPS SA,29
MLRZE.LS,1090527,Raize Servicos de Gestao SA,29
PSI20.LS,14600,PSI20,29

#ICE ICELAND
EIKF.ICE,953121,Eik Fasteignafelag HF,46
REGINN.ICE,40507,Reginn hf,46
REITIR.ICE,953596,Reitir Fasteignafelag HF,46
ICEAIR.ICE,26484,Icelandair Group hf,46
ARION.ICE,1081897,Arion Bank,46
VISS.ICE,40508,Vatryggingfelag Islands,46
SIMINN.ICE,960817,Siminn hf,46
SKEL.ICE,994430,Skeljungur Ltd,46
TMGN.ICE,40969,Tryggingamidstoedin hf,46
HAGA.ICE,26483,Hagar hf,46
SYN.ICE,40509,Fjarskipti hf,46
MARL.ICE,26485,Marel hf,46
SJOVA.ICE,941223,Sjova,46
HEIMA.ICE,1079292,Heimavellir,46
FESTI.ICE,941222,N1 hf,46
EIMS.ICE,40506,Eimskipafelag Islands hf,46
ICESEA.ICE,980216,Iceland Seafood International,46
GRND.ICE,941221,Grandi,46
KVIKA.ICE,1072325,Kvika banki hf,46
ORIGO.ICE,26486,Nyherji hf,46
HAPD.ICE,998087,Hampidjan hf,46
KLAPPB.ICE,1050162,Klappir Graenar Lausnir hf,46

#BVB ROMANIA
CEON.BVB,50424,Cemacon Zalau,3
CNTE.BVB,50425,Conted Sa Doro,3
COMI.BVB,50426,Condmag Brasov,3
COTE.BVB,50427,Conpet Sa Ploi,3
COTR.BVB,50428,Transilvania C,3
DAFR.BVB,50429,Dafora Sa Medi,3
ELGS.BVB,50430,Electroarges S,3
EPT.BVB,50431,Electroputere,3
FP.BVB,50432,Fondul Proprietatea SA,3
IMP.BVB,50433,Impact Develop,3
MECF.BVB,50434,Mecanica Sa Ce,3
RMAH.BVB,50436,Farmaceutica R,3
ROALR.BVB,50437,Alro Slatina,3
ROALT.BVB,50438,Altur Slatina,3
ROALU.BVB,50439,Alumil Rom Ind,3
ROAMO.BVB,50440,Amonil Slobozi,3
ROARS.BVB,50442,Aerostar Bacau,3
ROART.BVB,50443,T.M.K. - Artro,3
ROARTE.BVB,50444,Artego Tg. Jiu,3
ROATB.BVB,50445,Antibiotice Ia,3
ROPBK.BVB,50446,Patria Bank SA,3
ROBCM.BVB,50447,Casa De Bucovi,3
ROBIO.BVB,50448,Biofarm Bucure,3
ROBRD.BVB,50449,BRD Groupe Societe Generale SA,3
ROBRK.BVB,50450,Ssif Broker Cl,3
ROBVB.BVB,50451,Bursa De Valor,3
ROCE.BVB,50452,Romcarbon Sa B,3
ROCMP.BVB,50454,Compa Sibiu,3
ROEFO.BVB,50455,Turism Hotelur,3
ROELMA.BVB,50456,Electromagneti,3
ROOIL.BVB,50457,Oil Terminal C,3
ROPEI.BVB,50458,Petrolexportim,3
ROPPL.BVB,50459,Prodplast Bucu,3
ROPTR.BVB,50460,Rompetrol Well,3
RORPH.BVB,50461,Ropharma Bras,3
RORRC.BVB,50462,Rompetrol Rafi,3
ROSCD.BVB,50463,Zentiva Bucure,3
ROSNG.BVB,50464,S.N.G.N Romgaz,3
ROSNN.BVB,50465,S N Nuclearele,3
ROSNO.BVB,50466,Santierul Nava,3
ROSNP.BVB,50467,Omv Petrom S.A,3
ROSOCP.BVB,50468,Socep Constant,3
ROTBM.BVB,50470,Turbomecanica,3
ROTEL.BVB,50471,C.N.T.E.E. Tra,3
ROTGN.BVB,50472,Sntgn Transgaz,3
ROTLV.BVB,50473,Banca Transilv,3
ROTRP.BVB,50474,Teraplast Bist,3
ROUAM.BVB,50475,Uamt Oradea,3
ROUZT.BVB,50476,Uztel Ploiesti,3
ROVNC.BVB,50477,Vrancart Adjud,3
RTRA.BVB,50478,Retrasib Sibiu,3
SPCU.BVB,50479,Boromir Prod S,3
TUFE.BVB,50481,Turism Felix B,3
VESY.BVB,50482,Ves,3
ROECT.BVB,50735,Grupul Industr,3
ELJ.BVB,50736,Electroaparata,3
CMCM.BVB,50737,S.C. Comcm S.A,3
ROSTZ.BVB,50738,Sinteza Oradea,3
SIF3.BVB,50739,Sif Transilvan,3
SIF4.BVB,50740,Sif Muntenia B,3
SIF1.BVB,50741,Sif Banat Cris,3
SIF2.BVB,50742,SIF Moldova SA,3
SIF5.BVB,50743,Sif Oltenia Cr,3
PREH.BVB,50744,Prefab Bucures,3
ROCBC.BVB,50745,Carbochim SA,3
EBS.BVB,945708,Erste Group Bank AG,3
ROEL.BVB,945709,Electrica,3
PACY.BVB,954949,Palace SA,3
ARCV.BVB,958306,Imotrust SA,3
ATRD.BVB,958307,Atelierele CFR Grivita SA,3
BUCU.BVB,958308,Bucur Obor SA,3
CMVX.BVB,958309,Comvex SA,3
COCR.BVB,958310,Cocor SA,3
ELZY.BVB,958311,Electroprecizia SA,3
IASX.BVB,958312,Iasitex SA,3
METY.BVB,958313,Mecanica Rotes SA,3
NACH.BVB,958314,Napochim SA,3
ROAMY.BVB,958315,Amylon SA,3
ROARJI.BVB,958316,Arteca Jilava SA,3
ROCACU.BVB,958317,Sifi CJ Logistic SA,3
ROCBOT.BVB,958318,Comcereal SA,3
ROCHOB.BVB,958319,Chimcomplex SA Borzesti,3
ROCOSC.BVB,958320,Comnord SA,3
ROEPN.BVB,958321,Ema SA,3
ROIORB.BVB,958322,Ior SA,3
ROMACO.BVB,958323,Macofil SA,3
ROMEBY.BVB,958324,Luceafarul SA,3
ROMECE.BVB,958325,Mecanica Fina SA,3
ROMOBT.BVB,958326,Mobila Radauti SA,3
RORANT.BVB,958327,Granitul SA,3
ROUNIT.BVB,958328,Uniteh SA,3
UNISEM.BVB,958329,Unisem SA,3
UZIN.BVB,958330,Uzinexport SA,3
IARV.BVB,959076,IAR SA,3
NCHI.BVB,959077,Napochim Imobiliare SA,3
REFE.BVB,959078,Remarul 16 Februarie SA,3
ROANTE.BVB,959079,Anteco SA,3
ROARMT.BVB,959080,Caromet SA,3
ROBALN.BVB,959081,Societatea Comerciala de Tratament Balnear Buzias SA,3
ROFORO.BVB,959082,Foros SA,3
ROMETV.BVB,959083,Metav SA,3
ROMINX.BVB,959084,Minexfor SA,3
RONEOL.BVB,959085,Neptun Olimp SA,3
ROSIDG.BVB,959086,ArcelorMittal Hunedoara SA,3
ROURUL.BVB,959087,URB Rulmenti Suceava SA,3
ROAVBW.BVB,960755,Avicola Bucuresti SA,3
ROCOEC.BVB,960756,Conect Business Park SA,3
ROCOKG.BVB,960757,Comalex SA,3
ROCPHA.BVB,960758,Ceprohart SA,3
ROFLAU.BVB,960759,Flamura SA,3
ROGDP.BVB,960760,Grupul Editorilor si Difuzorilor de Presa SA,3
RORORX.BVB,960761,Romaero SA,3
ROUZC.BVB,960762,Uzuc SA,3
MOBG.BVB,961698,Mobex SA,3
ROSINT.BVB,961699,Sintofarm SA,3
INBO.BVB,961984,Lactate Natura SA,3
INEM.BVB,961985,Lacta SA,3
LACT.BVB,961986,Lactag SA,3
ROSEOM.BVB,961987,Semrom Muntenia SA,3
ROCEPO.BVB,962421,Ceprocim SA,3
ROCOBU.BVB,962422,Concifor SA,3
ROCODG.BVB,962423,Comtram SA,3
ROPOTI.BVB,962424,Potis Capital SA,3
ROSTNM.BVB,962569,Santierul Naval 2 Mai SA,3
ROMCAB.BVB,969115,Romcab SA,3
ROSOPL.BVB,969116,Somplast SA,3
MECPM.BVB,976194,Mecon SA,3
ROUNP.BVB,993002,Uniper SE,3
PREB.BVB,994420,Prebet Aiud SA,3
ROOLT.BVB,994421,Oltchim SA,3
ROM.BVB,994497,Med Life SA,3
SCPS.BVB,998079,Natura Quattuor Energia Holdings SA,3
DIGI.BVB,1010699,Digi Communications NV,3
ROAAG.BVB,1030979,AAGES SA,3
BAYN.BVB,1030980,Bayer AG NA,3
DBK.BVB,1030981,Deutsche Bank AG NA O.N,3
DAIGN.BVB,1030982,Daimler AG NA O.N,3
ALVG.BVB,1030983,Allianz SE VNA O.N,3
ROSFG.BVB,1055995,Sphera Franchise Group SA MiFID Eligible Security,3
TRA.BVB,1056134,Transilvania Broker de Asigurare SA,3
AMAL.BVB,1056384,International Caviar Corporation SA,3
ATPA.BVB,1056385,Athenee Palace SA,3
AVIO.BVB,1056386,Avioane Craiova SA,3
BBGA.BVB,1056387,Alum SA,3
BNET.BVB,1056388,Bittnet Systems SA,3
BRCR.BVB,1056389,Braiconf SA,3
BUCV.BVB,1056390,Bucur SA,3
CCOM.BVB,1056391,Cerealcom SA,3
CRPC.BVB,1056392,Diy Financial Pty Ltd,3
EOAN.BVB,1056393,E.ON SE NA,3
FPDL.BVB,1056394,Fondul Proprietatea SA,3
ICMR.BVB,1056395,ICMRS SA,3
IPRO.BVB,1056396,Iprolam SA,3
IPRU.BVB,1056397,Iproeb SA,3
IUBR.BVB,1056398,IUS SA,3
MEGU.BVB,1056399,Mecanoenergetica SA,3
PRIB.BVB,1056400,Primcom SA,3
PRSN.BVB,1056401,Prospectiuni SA,3
RCHI.BVB,1056402,Compania Hoteliera InterContinental Romania SA,3
ROADS.BVB,1056403,Adidas AG,3
ROALB.BVB,1056404,Albapam SA,3
ROARO.BVB,1056405,Aro Palace SA,3
ROBRDDL.BVB,1056406,BRD Groupe Societe Generale SA,3
ROCORO.BVB,1056407,Constructii Feroviare Galati SA,3
ROENP.BVB,1056408,Compania Energopetrol SA,3
ROFEP.BVB,1056409,Feper SA,3
ROFMAR.BVB,1056410,Faimar SA,3
ROINMA.BVB,1056411,Industrie Mica Prahova SA,3
ROLHA.BVB,1056412,Deutsche Lufthansa AG,3
ROLIH.BVB,1056413,Life Is Hard SA,3
RONORD.BVB,1056414,Nord SA,3
ROPOBR.BVB,1056415,Poiana Brasov SA,3
ROTSLA.BVB,1056416,Transilvania Leasing si Credit IFN SA,3
ROTSND.BVB,1056417,Tusnad SA,3
SAP.BVB,1056418,SAP SE,3
SCDM.BVB,1056419,Unirea Shopping Center SA,3
TRSK.BVB,1056420,Transilana SA,3
TRVM.BVB,1056421,Transcom SA,3
TUAA.BVB,1056422,Turism Covasna SA,3
UARG.BVB,1056423,Argus SA,3
UPET.BVB,1056424,Upet SA,3
XFOA.BVB,1056425,Fondul Oamenilor de Afaceri,3
ROWINE.BVB,1072247,IM Vinaria Purcari SRL,3

#ETF
QCLN.ETF,45475,First Trust NASDAQ Clean Edge Green Energy,47
TLT.ETF,40654,iShares 20+ Year Treasury Bond,47
TQQQ.ETF,45494,ProShares UltraPro QQQ,47
UGLD.ETF,942631,VelocityShares 3x Long Gold ETN,47
QQQ.ETF,651,Invesco QQQ Trust,47
TVIX.ETF,38153,VelocityShares Daily 2x,47
UBOT.ETF,1075252,Direxion Daily Robotics, Artificial Intelligence
NAIL.ETF,959270,Direxion Daily Homebuilders & Supplies,47
SOXL.ETF,45073,Direxion Daily Semiconductor Bull,47
LABU.ETF,956230,Direxion Daily S&P Biotech Bull,47
OILU.ETF,1013304,ProShares UltraPro 3x Crude Oil,47
EEM.ETF,505,iShares MSCI Emerging Markets,47
SPY.ETF,525,SPDR S&P 500,47
DGAZ.ETF,44987,VelocityShares 3x Inverse Natural Gas,47
XLF.ETF,40668,Financial Select Sector SPDR,47
HYG.ETF,40650,iShares iBoxx $ High Yield Corporate Bond,47
JNK.ETF,40651,SPDR Barclays High Yield Bond,47
FXI.ETF,512,iShares China Large-Cap,47
GDX.ETF,40681,VanEck Vectors Gold Miners,47
VXX.ETF,40671,iPath S&P 500 VIX Short-Term Futures Exp 30 Jan 2019,47
EWZ.ETF,509,iShares MSCI Brazil Capped,47
EFA.ETF,510,iShares MSCI EAFE,47
USO.ETF,44794,United States Oil,47
IWM.ETF,14202,iShares Russell 2000,47
IEMG.ETF,44875,iShares Core MSCI Emerging Markets,47
XOP.ETF,38284,SPDR S&P Oil & Gas Exploration & Production,47
XLU.ETF,45385,Utilities Select Sector SPDR,47
XLE.ETF,40657,Energy Select Sector SPDR,47
VWO.ETF,40696,Vanguard FTSE Emerging Markets,47
XLK.ETF,45384,Technology Select Sector SPDR,47
VEA.ETF,44838,Vanguard FTSE Developed Markets,47
XLP.ETF,40690,Consumer Staples Select Sector SPDR,47
BKLN.ETF,45254,PowerShares Senior Loan Portfolio,47
XLI.ETF,40670,Industrial Select Sector SPDR,47
AMLP.ETF,45035,ALPS Alerian MLP,47
TZA.ETF,14216,Direxion Daily Small Cap Bear 3X Shares,47
LQD.ETF,40648,iShares iBoxx $ Investment Grade Corporate Bond,47
SJNK.ETF,45358,SPDR Barclays Short Term High Yield Bond,47
IEFA.ETF,44809,iShares Core MSCI EAFE,47
GDXJ.ETF,40682,VanEck Vectors Junior Gold Miners,47
SMH.ETF,45118,VanEck Vectors Semiconductor,47
IYR.ETF,514,iShares US Real Estate,47
UNG.ETF,9246,United States Natural Gas,47
XLV.ETF,40691,Health Care Select Sector SPDR,47
NUGT.ETF,44639,Direxion Daily Gold Miners Bull 3X Shares,47
EWW.ETF,8933,iShares MSCI Mexico Capped,47
EZU.ETF,44686,iShares MSCI Eurozone,47
XRT.ETF,38282,SPDR S&P Retail,47
RSX.ETF,38174,VanEck Vectors Russia,47
IAU.ETF,38181,iShares Gold,47
JNUG.ETF,941457,Direxion Daily Junior Gold Miners Bull 3X Shares,47
SDS.ETF,14210,ProShares UltraShort S&P500,47
SLV.ETF,9236,iShares Silver,47
XLB.ETF,14226,Materials Select Sector SPDR,47
GLD.ETF,9227,SPDR Gold Shares,47
XBI.ETF,38293,SPDR S&P Biotech,47
SDOW.ETF,14209,ProShares UltraPro Short Dow 30,47
OIH.ETF,40683,VanEck Vectors Oil Services,47
KRE.ETF,38281,SPDR S&P Regional Banking,47
BIL.ETF,45360,SPDR Barclays 1-3 Month T-Bill,47
SPXS.ETF,14175,Direxion Daily S&P 500 Bear 3X Shares,47
EWJ.ETF,37487,iShares MSCI Japan,47
SCHF.ETF,44825,Schwab International Equity,47
UPRO.ETF,14220,ProShares UltraPro S&P500,47
UVXY.ETF,40689,ProShares Ultra VIX Short-Term Futures,47
DWT.ETF,44797,VelocityShares 3x Inverse Crude,47
SOXS.ETF,45072,Direxion Daily Semiconductor Bear 3X Shares,47
SH.ETF,45279,ProShares Short S&P500,47
EWT.ETF,506,iShares MSCI Taiwan Capped,47
FLRN.ETF,45357,SPDR Barclays Invest Grade Floating Rate,47
SPXU.ETF,14211,ProShares UltraPro Short S&P500,47
XLY.ETF,40656,Consumer Discretionary Select Sector SPDR,47
UWT.ETF,44798,VelocityShares 3x Long Crude,47
EWH.ETF,40661,iShares MSCI Hong Kong,47
ITB.ETF,45143,iShares US Home Construction,47
INDA.ETF,44929,iShares MSCI India,47
SPXL.ETF,14174,Direxion Daily S&P 500 Bull 3X Shares,47
NEAR.ETF,941536,iShares Short Maturity Bond,47
YINN.ETF,44766,Direxion Daily FTSE China Bull 3x Shares,47
DIA.ETF,504,SPDR Dow Jones Industrial Average,47
EMLC.ETF,38130,VanEck Vectors JP Morgan EM Local Currency Bd,47
VNQ.ETF,40699,Vanguard REIT,47
FEZ.ETF,38273,SPDR Euro Stoxx 50,47
EWY.ETF,511,iShares MSCI South Korea Capped,47
EWG.ETF,40658,iShares MSCI Germany,47
DXJ.ETF,44948,WisdomTree Japan Hedged Equity,47
XHB.ETF,38294,SPDR S&P Homebuilders,47
TNA.ETF,14214,Direxion Daily Small Cap Bull 3X Shares,47
VGK.ETF,40698,Vanguard FTSE Europe,47
IVV.ETF,518,ishares S&P 500,47
IJR.ETF,44501,iShares Core S&P Small-Cap,47
QID.ETF,14206,ProShares UltraShort QQQ,47
SCO.ETF,14208,ProShares UltraShort Bloomberg Crude Oil,47
UCO.ETF,14218,ProShares Ultra Bloomberg Crude Oil,47
UGAZ.ETF,44988,VelocityShares 3x Long Natural Gas,47
CWI.ETF,44735,SPDR MSCI ACWI ex-US,47
DUST.ETF,44638,Direxion Daily Gold Miners Bear 3X Shares,47
ERX.ETF,44542,Direxion Daily Energy Bull 3X Shares,47
FAZ.ETF,14193,Direxion Daily Financial Bear 3X Shares,47
AGG.ETF,503,iShares Core US Aggregate Bond,47
RWX.ETF,44732,SPDR Dow Jones International Real Estate,47
USMV.ETF,45172,iShares Edge MSCI Minimum Volatility,47
XME.ETF,9248,SPDR S&P Metals & Mining,47
PSQ.ETF,38262,ProShares Short QQQ,47
EWU.ETF,40664,iShares MSCI United Kingdom,47
DRIP.ETF,956221,Direxion Daily S&P Oil & Gas Exp & Prod Bear 3X Shares,47
SVXY.ETF,40686,ProShares Short VIX Short-Term Futures,47
ASHR.ETF,941434,Deutsche X-trackers Harvest CSI 300 China A-Shares,47
EFV.ETF,44814,iShares MSCI EAFE Value,47
SPLV.ETF,45253,Powershares S&P 500 Low Volatility Portfolio,47
IWD.ETF,44603,iShares Russell 1000 Value,47
BRZU.ETF,941478,Direxion Daily Brazil Bull 3X Shares,47
TBT.ETF,14213,ProShares UltraShort 20+ Year Treasury,47
VOO.ETF,38165,Vanguard S&P 500,47
KWEB.ETF,941591,KraneShares CSI China Internet,47
VTI.ETF,523,Vanguard Total Stock Market,47
FLOT.ETF,38137,iShares Floating Rate Bond,47
VEU.ETF,44577,Vanguard FTSE All World ex US,47
AMJ.ETF,45192,JP Morgan Chase Alerian Exp 24 May 2024,47
EWA.ETF,14191,iShares MSCI Australia,47
SSO.ETF,14212,ProShares Ultra S&P500,47
SCHE.ETF,44893,Schwab Emerging Markets Equity,47
LABD.ETF,956229,Direxion Daily S&P Biotech Bear 3X Shares,47
EIDO.ETF,38129,iShares MSCI Indonesia,47
ILF.ETF,44682,iShares Latin America 40,47
TMV.ETF,40652,Direxion Daily 20+ Year Treasury Bear 3X Shares,47
MINT.ETF,38144,PIMCO Enhanced Short Maturity Active Exchange-Traded,47
GUSH.ETF,956220,Direxion Daily S&P Oil & Gas Exp & Prod Bull 3X Shares,47
IDV.ETF,38206,iShares International Select Dividend,47
EPI.ETF,44932,WisdomTree India Earnings,47
HEDJ.ETF,44842,WisdomTree Europe Hedged Equity,47
BND.ETF,45423,Vanguard Total Bond Market,47
DBC.ETF,14178,PowerShares DB Commodity Tracking,47
DXD.ETF,14184,ProShares UltraShort Dow30,47
PGX.ETF,44565,PowerShares Preferred Portfolio,47
IWF.ETF,44554,iShares Russell 1000 Growth,47
QLD.ETF,14207,ProShares Ultra QQQ,47
VIXY.ETF,40667,ProShares VIX Short-Term Futures,47
ITOT.ETF,38141,iShares Core S&P Total US Stock Market,47
ANGL.ETF,45194,VanEck Vectors Fallen Angel High Yield Bond,47
TFI.ETF,45364,SPDR Nuveen Barclays Municipal Bond,47
KBE.ETF,38289,SPDR S&P Bank,47
IVW.ETF,45184,iShares S&P 500 Growth,47
IJH.ETF,14200,iShares S&P Midcap 400,47
EWC.ETF,38184,iShares MSCI Canada,47
SCHO.ETF,45341,Schwab Short Term US Treasury,47
DEM.ETF,40666,WisdomTree Emerging Markets High Dividend,47
SRLN.ETF,941556,SPDR Blackstone/GSO Senior Loan,47
SPSB.ETF,45386,SPDR Barclays Short Term Corporate Bond,47
EWL.ETF,45027,iShares MSCI Switzerland Capped,47
SPYG.ETF,45375,SPDR S&P 500 Growth,47
IWO.ETF,14203,iShares Russell 2000 Growth,47
DBEF.ETF,44802,Deutsche X-trackers MSCI EAFE Hedged Equity,47
TIP.ETF,8941,iShares TIPS Bond,47
VTV.ETF,40700,Vanguard Value,47
IWB.ETF,44602,iShares Russell 1000,47
SCHX.ETF,45345,Schwab US Large-Cap,47
TBF.ETF,45269,ProShares Short 20+ Yr Treasury,47
EWM.ETF,38190,iShares MSCI Malaysia,47
FAS.ETF,14192,Direxion Daily Financial Bull 3X Shares,47
SCHB.ETF,45343,Schwab US Broad Market,47
VT.ETF,38224,Vanguard Total World Stock,47
BSV.ETF,14177,Vanguard Short-Term Bond,47
MTUM.ETF,941534,iShares Edge MSCI USA Momentum Factor,47
EFG.ETF,44813,iShares MSCI EAFE Growth,47
VIG.ETF,40695,Vanguard Dividend Appreciation,47
XES.ETF,38285,SPDR S&P Oil & Gas Equipment & Services,47
VYM.ETF,45410,Vanguard High Dividend Yield,47
UUP.ETF,37471,PowerShares DB US Dollar Bullish,47
PCY.ETF,37437,PowerShares Emerging Markets Sovereign Debt,47
MLPA.ETF,44658,Global X MLP,47
SPYV.ETF,38150,SPDR S&P 500 Value,47
SPDW.ETF,44740,SPDR S&P World ex US,47
SCHZ.ETF,45342,Schwab US Aggregate Bond,47
TWM.ETF,14215,ProShares UltraShort Russell2000,47
UDOW.ETF,14219,ProShares UltraPro Dow30,47
MDY.ETF,44558,SPDR S&P MidCap 400,47
SPEM.ETF,38276,SPDR S&P Emerging Markets,47
SRTY.ETF,45396,ProShares UltraPro Short Russell2000,47
CWB.ETF,45354,SPDR Barclays Convertible Securities,47
FNDC.ETF,941444,Schwab amental Intl Small Company,47
IVE.ETF,40679,iShares S&P 500 Value,47
ERY.ETF,44543,Direxion Daily Energy Bear 3X Shares,47
EZA.ETF,44491,iShares MSCI South Africa,47
RSP.ETF,44599,Guggenheim Invest S&P 500 Equal Weight,47
RWM.ETF,45278,ProShares Short Russell2000,47
SCHD.ETF,45344,Schwab US Dividend Equity,47
GOVT.ETF,45136,iShares Core US Treasury Bond,47
HDV.ETF,45152,iShares Core High Dividend,47
SOXL.ETF,45073,Direxion Daily Semiconductor Bull 3X Shares,47
EWP.ETF,40663,iShares MSCI Spain Capped,47
EUM.ETF,44889,ProShares Short MSCI Emerging Markets,47
SCHH.ETF,45010,Charles Schwab US REIT,47
VUG.ETF,40697,Vanguard Growth,47
EFAV.ETF,44811,iShares Edge MSCI Minimum Volatility EAFE,47
IEV.ETF,44497,iShares Europe,47
SHYG.ETF,941549,iShares 0-5 Year High Yield Corporate Bond,47
IWS.ETF,45180,iShares Russell Mid-Cap Value,47
DDM.ETF,14179,ProShares Ultra Dow30,47
MUB.ETF,45187,iShares National AMT-Free Muni Bond,47
FPE.ETF,941504,First Trust Preferred Securities And Income,47
IWR.ETF,44605,iShares Russell Mid-Cap,47
OEF.ETF,38191,iShares S&P 100,47
BIV.ETF,14176,Vanguard Intermediate-Term Bond,47
BNO.ETF,44634,United States Brent Oil,47
QUAL.ETF,941545,iShares Edge MSCI USA Quality Factor,47
SHM.ETF,45366,SPDR Nuveen Barclays Short Term Municipal Bond,47
IYE.ETF,40673,iShares US Energy,47
FNDE.ETF,941445,Schwab amental EM Large Company,47
SPLG.ETF,941539,SPDR Russell 1000,47
DBO.ETF,44792,PowerShares DB Oil,47
SCHM.ETF,45403,Schwab US Mid-Cap,47
HYS.ETF,45206,PIMCO 0-5 Year High Yield Corporate Bond,47
SPTS.ETF,941557,SPDR Barclays Short Term Treasury,47
EDC.ETF,14187,Direxion Daily Emerging Markets Bull 3X Shares,47
YANG.ETF,44765,Direxion Daily FTSE CHINA Bear 3x Shares,47
GSG.ETF,515,iShares S&P GSCI Commodity-Indexed,47
RIGS.ETF,941462,ALPS RiverFront Strategic Income,47
KOLD.ETF,44984,ProShares UltraShort Bloomberg Natural Gas,47
VB.ETF,522,Vanguard Small-Cap,47
VGT.ETF,45412,Vanguard Information Technology,47
EWS.ETF,45018,iShares MSCI Singapore Capped,47
NML.ETF,941537,Neuberger Berman MLP Income Fund Inc,47
SCHV.ETF,45347,Schwab US Large-Cap Value,47
VFH.ETF,45408,Vanguard Financials,47
IWV.ETF,45175,iShares Russell 3000,47
IWN.ETF,44604,iShares Russell 2000 Value,47
DOG.ETF,45272,ProShares Short Dow30,47
SPAB.ETF,45353,SPDR Barclays Aggregate Bond,47
SJB.ETF,45274,ProShares Short High Yield,47
EWQ.ETF,40660,iShares MSCI France,47
UST.ETF,45281,ProShares Ultra 7-10 Year Treasury,47
PHB.ETF,45243,PowerShares amental High Yield Corporate Bond Portfolio,47
GSY.ETF,45107,Guggenheim Enhanced Short Duration,47
SCHA.ETF,45348,Schwab US Small-Cap,47
PHYS.ETF,40693,Sprott Physical Gold,47
SPIB.ETF,45355,SPDR Barclays Intermediate Term Corporate Bond,47
FVD.ETF,45105,First Trust Value Line Dividend,47
FDN.ETF,45093,First Trust Dow Jones Internet,47
BWZ.ETF,44730,SPDR Barclays Short Term Intl Treasury Bond,47
SCHC.ETF,44826,Schwab International Small-Cap Equity,47
HDGE.ETF,45032,Ranger Equity Bear,47
HEZU.ETF,956182,iShares Currency Hedged MSCI Eurozone,47
PSLV.ETF,40694,Sprott Physical Silver,47
EPOL.ETF,38133,iShares MSCI Poland Capped,47
IWP.ETF,45179,iShares Russell Mid-Cap Growth,47
PGF.ETF,45238,PowerShares Financial Preferred,47
SPHD.ETF,45338,PowerShares S&P 500 High Div Low Volatility Portfolio,47
BOIL.ETF,44983,ProShares Ultra Bloomberg Natural Gas,47
TMF.ETF,45061,Direxion Daily 20+ Year Treasury Bull 3X Shares,47
CHAU.ETF,956215,Direxion Daily CSI 300 China A Share Bull 2X Shares,47
SCHG.ETF,45346,Schwab US Large-Cap Growth,47
TDTT.ETF,45121,FlexShares iBoxx 3-Year Target Duration TIPS,47
MOAT.ETF,45196,VanEck Vectors Morningstar Wide Moat,47
EEMV.ETF,44881,iShares Edge MSCI Minimum Volatility Emerging Markets,47
MVV.ETF,45287,ProShares Ultra MidCap400,47
FXR.ETF,38239,First Trust Industrials/Producer Durables AlphaDEX,47
TECS.ETF,45070,Direxion Daily Technology Bear 3X Shares,47
SCHP.ETF,45349,Schwab US TIPS,47
FXY.ETF,14194,Guggenheim CurrencyShares Japanese Yen,47
EWI.ETF,40674,iShares MSCI Italy Capped,47
SDY.ETF,38286,SPDR S&P Dividend,47
FCG.ETF,38235,First Trust ISE-Revere Natural Gas,47
NOBL.ETF,941538,ProShares S&P 500 Dividend Aristocrats,47
LRGF.ETF,956216,iShares Edge MSCI Multifactor USA,47
DBA.ETF,40684,PowerShares DB Agriculture,47
SPHQ.ETF,45339,PowerShares S&P 500 High Quality,47
VV.ETF,45413,Vanguard Large-Cap,47
AOM.ETF,38217,iShares Core Moderate Allocation,47
INTF.ETF,956223,iShares Edge MSCI Multifactor International,47
BSCK.ETF,45055,Guggenheim BulletShares 2020 Corporate Bond,47
DJP.ETF,44850,iPath Bloomberg Commodity Total Return Exp 12 June 2036,47
SPSM.ETF,941563,SPDR Russell 2000,47
BDCL.ETF,45079,UBS E-TRACS 2xLeveraged Long Wells Fargo Business Development Company,47
MLPI.ETF,45081,UBS E-TRACS Alerian MLP Infrastructure Exp 02 Apr 2040,47
MDYG.ETF,45373,SPDR S&P 400 Mid Cap Growth,47
IGV.ETF,45150,iShares North American Tech-Software,47
GREK.ETF,44914,Global X FTSE Greece 20,47
MLPX.ETF,941532,Global X MLP & Energy Infrastructure,47
GASL.ETF,45068,Direxion Daily Natural Gas Related Bull 3X Shares,47
FTEC.ETF,941506,Fidelity MSCI Information Technology,47
ECH.ETF,14186,iShares MSCI Chile Capped,47
HYD.ETF,14196,VanEck Vectors High-Yield Municipal,47
FNDF.ETF,941446,Schwab amental Intl Large Company,47
RODM.ETF,956186,Hartford Multifactor Developed Markets ex US,47
TECL.ETF,45071,Direxion Daily Technology Bull 3X Shares,47
GWX.ETF,38278,SPDR S&P International Small Cap,47
FXE.ETF,38232,Guggenheim CurrencyShares Euro,47
DFJ.ETF,44947,WisdomTree Japan SmallCap Dividend,47
VHT.ETF,45409,Vanguard Health Care,47
EDZ.ETF,14188,Direxion Daily Emerging Markets Bear 3X Shares,47
THD.ETF,9243,iShares MSCI Thailand Capped,47
JDST.ETF,941456,Direxion Daily Junior Gold Miners Bear 3X Shares,47
VLUE.ETF,941569,iShares Edge MSCI USA Value Factor,47
SPLB.ETF,45367,SPDR Barclays Long Term Corporate Bond,47
EPP.ETF,508,iShares MSCI Pacific ex Japan,47
EWD.ETF,45025,iShares MSCI Sweden Capped,47
URTY.ETF,45393,ProShares UltraPro Russell2000,47
SPMD.ETF,941547,SPDR Russell Small Cap Completeness,47
BSCJ.ETF,45054,Guggenheim BulletShares 2019 Corporate Bond,47
UWM.ETF,14222,ProShares Ultra Russell2000,47
EBND.ETF,37436,SPDR Barclays Emerging Markets Local Bond,47
ERUS.ETF,38134,iShares MSCI Russia Capped,47
PZA.ETF,38260,PowerShares National AMT-Free Municipal Bond Portfolio,47
TDTF.ETF,45122,FlexShares iBoxx 5-Year Target Duration TIPS,47
IYZ.ETF,38198,iShares US Telecommunications,47
GNR.ETF,44737,SPDR S&P Global Natural Resources,47
DBEU.ETF,941466,Deutsche X-trackers MSCI Europe Hedged Equity,47
IXC.ETF,520,iShares Global Energy,47
BSJK.ETF,941485,Guggenheim Invest BulletShares 2020 High Yield Corporate Bond,47
IAI.ETF,38214,iShares US Broker Dealers and Securities Exchanges,47
VO.ETF,45414,Vanguard Mid-Cap,47
BSCL.ETF,941482,Guggenheim BulletShares 2021 Corporate Bond,47
FNDX.ETF,941503,Schwab amental US Large Company,47
MGK.ETF,38222,Vanguard Mega Cap Growth,47
BWX.ETF,44734,SPDR Barclays International Treasury Bond,47
FNCL.ETF,941500,Fidelity MSCI Financials,47
IYT.ETF,40672,iShares Transportation Average,47
REM.ETF,45003,iShares Mortgage Real Estate Capped,47
KIE.ETF,38288,SPDR S&P Insurance,47
FXN.ETF,45095,First Trust Energy AlphaDEX,47
VOE.ETF,38171,Vanguard Mid-Cap Value,47
VSS.ETF,44578,Vanguard FTSE All-World ex-US Small-Cap,47
IAT.ETF,44550,iShares US Regional Banks,47
BSJJ.ETF,941484,Guggenheim Invest BulletShares 2019 High Yield Corporate Bond,47
RDIV.ETF,941546,Oppenheimer Ultra Dividend Revenue,47
SPTM.ETF,38290,SPDR Russell 3000,47
VXF.ETF,45407,Vanguard Extended Market,47
FFTY.ETF,956222,Innovator IBD 50,47
FXL.ETF,38241,First Trust Technology AlphaDEX,47
DON.ETF,45430,WisdomTree MidCap Dividend,47
SLYV.ETF,45377,SPDR S&P 600 Small Cap Value,47
FHLC.ETF,941495,Fidelity MSCI Health Care,47
PXH.ETF,44886,PowerShares FTSE RAFI Emerging Markets,47
IYF.ETF,45139,iShares US Financials,47
XMLV.ETF,941571,PowerShares S&P MidCap Low Volatility Portfolio,47
FNDA.ETF,941501,Schwab amental US Small Company,47
HYMB.ETF,45371,SPDR Nuveen S&P High Yield Municipal Bond,47
FDD.ETF,44642,First Trust STOXX European Select Dividend,47
IYW.ETF,38199,iShares US Technology,47
XSD.ETF,38292,SPDR S&P Semiconductor,47
VDE.ETF,45405,Vanguard Energy,47
RWR.ETF,45009,SPDR Dow Jones REIT,47
BLV.ETF,40649,Vanguard Long-Term Bond,47
FDIS.ETF,941493,Fidelity MSCI Consumer Discretionary,47
VBR.ETF,44576,Vanguard Small-Cap Value,47
FXH.ETF,45097,First Trust Health Care AlphaDEX,47
CQQQ.ETF,44773,Guggenheim Invest China Technology,47
RPG.ETF,45323,Guggenheim Invest S&P 500 Pure Growth,47
FLTR.ETF,45195,VanEck Vectors-Investment Grade Floating Rate,47
QAI.ETF,13085,IQ Hedge Multi-Strategy Tracker,47
SDIV.ETF,44660,Global X SuperDividend,47
IHI.ETF,45146,iShares US Medical Devices,47
IJJ.ETF,38197,iShares S&P Mid-Cap 400 Value,47
URA.ETF,44662,Global X Uranium,47
PWV.ETF,38257,PowerShares Dynamic Large Cap Value,47
JPIN.ETF,945819,JPMorgan Diversified Return International Equity,47
FXO.ETF,45096,First Trust Financial AlphaDEX,47
DBB.ETF,44715,PowerShares DB Base Metals,47
SUB.ETF,45190,iShares Short-Term National AMT-Free Muni Bond,47
TOTL.ETF,956191,SPDR DoubleLine Total Return Tactical,47
ITA.ETF,38213,iShares US Aerospace & Defense,47
MDYV.ETF,45374,SPDR S&P 400 Mid Cap Value,47
IGLB.ETF,45126,iShares Long-Term Corporate Bond,47
EWN.ETF,38189,iShares MSCI Netherlands,47
AOA.ETF,44961,iShares Core Aggressive Allocation,47
FENY.ETF,941494,Fidelity MSCI Energy,47
DIG.ETF,44574,ProShares Ultra Oil & Gas,47
ECON.ETF,44869,Columbia Emerging Markets Consumer,47
AOR.ETF,44963,iShares Core Growth Allocation,47
IBND.ETF,44729,SPDR Barclays International Corporate Bond,47
MGV.ETF,38223,Vanguard Mega Cap Value,47
FXU.ETF,38242,First Trust Utilities AlphaDEX,47
MNA.ETF,44674,IQ Merger Arbitrage,47
FDL.ETF,38170,First Trust Morningstar Dividend Leaders,47
IBDK.ETF,956207,iShares iBonds Dec 2019 Corporate,47
IBDM.ETF,956208,iShares iBonds Dec 2021 Corporate,47
IQDF.ETF,941454,FlexShares International Quality Dividend,47
VPL.ETF,38164,Vanguard FTSE Pacific,47
SPTL.ETF,45363,SPDR Barclays Long Term Treasury,47
BSCM.ETF,941483,Guggenheim BulletShares 2022 Corporate Bond,47
PDN.ETF,44824,PowerShares FTSE RAFI Developed Markets ex-US Small-Mid Portfolio,47
RYE.ETF,45327,Guggenheim Invest S&P 500 Equal Weight Energy,47
CURE.ETF,45064,Direxion Daily Healthcare Bull 3X Shares,47
IBDN.ETF,956209,iShares iBonds Dec 2022 Corporate,47
SDOG.ETF,45037,ALPS Sector Dividend Dogs,47
ITE.ETF,45362,SPDR Barclays Intermediate Term Treas,47
DIV.ETF,941488,Global X SuperDividend US,47
XSLV.ETF,941572,PowerShares S&P SmallCap Low Volatility Portfolio,47
VDC.ETF,38296,Vanguard Consumer Staples,47
PRF.ETF,45239,PowerShares FTSE RAFI US 1000 Portfolio,47
DES.ETF,45434,WisdomTree SmallCap Dividend,47
LIT.ETF,44657,Global X Lithium,47
VNM.ETF,37491,VanEck Vectors Vietnam,47
FREL.ETF,956190,Fidelity MSCI Real Estate,47
IYG.ETF,45140,iShares US Financial Services,47
VPU.ETF,38168,Vanguard Utilities,47
VAW.ETF,38167,Vanguard Materials,47
PXF.ETF,44820,PowerShares FTSE RAFI Developed Markets ex-US,47
VBK.ETF,38225,Vanguard Small-Cap Growth,47
SLYG.ETF,45376,SPDR S&P 600 Small Cap Growth,47
FBT.ETF,45091,First Trust NYSE Arca Biotechnology,47
WTMF.ETF,44920,WisdomTree Managed Futures Strategy,47
VOT.ETF,38172,Vanguard Mid-Cap Growth,47
STIP.ETF,45133,iShares 0-5 Year TIPS Bond,47
QDF.ETF,941543,FlexShares Quality Dividend,47
EUO.ETF,37583,ProShares UltraShort Euro,47
HYEM.ETF,44882,VanEck Vectors Emerging Markets High Yield Bond,47
FXP.ETF,44776,ProShares UltraShort FTSE China 50,47
FEU.ETF,38272,SPDR Stoxx Europe 50,47
IJS.ETF,38203,iShares S&P Small-Cap 600 Value,47
FCOM.ETF,941492,Fidelity MSCI Telecommunications Services,47
EUSC.ETF,949551,WisdomTree Europe Hedged SmallCap Equity,47
UBT.ETF,14217,ProShares Ultra 20+ Year Treasury,47
IYJ.ETF,45144,iShares US Industrials,47
EXT.ETF,941491,WisdomTree Total Earnings,47
SUSA.ETF,45156,iShares MSCI USA ESG Select,47
GSP.ETF,44853,iPath GSCI Total Return Exp 12 Jun 2036,47
IOO.ETF,44500,iShares Global 100,47
DSI.ETF,45155,iShares MSCI KLD 400 Social,47
FM.ETF,44885,MSCI Frontier 100,47
RPV.ETF,45324,Guggenheim Invest S&P 500 Pure Value,47
EWX.ETF,44896,SPDR S&P Emerging Markets Small Cap,47
SPHB.ETF,45252,Powershares S&P 500 High Beta Portfolio,47
FUTY.ETF,941508,Fidelity MSCI Utilities,47
EFZ.ETF,44821,ProShares Short MSCI EAFE,47
RUSS.ETF,45012,Direxion Daily Russia Bear 3X Shares,47
HACK.ETF,956181,PureFunds ISE Cyber Security,47
ROM.ETF,45293,ProShares Ultra Technology,47
IJK.ETF,45186,iShares S&P Mid-Cap 400 Growth,47
LEMB.ETF,44877,iShares Emerging Markets Local Currency Bond,47
AMU.ETF,45080,UBS E-TRACS Alerian MLP,47
IXJ.ETF,38193,iShares Global Healthcare,47
PCEF.ETF,45056,PowerShares CEF Income Composite Portfolio,47
EEMS.ETF,44884,iShares MSCI Emerging Markets Small-Cap,47
INDL.ETF,44925,Direxion Daily MSCI India Bull 3X Shares,47
EWO.ETF,38182,iShares MSCI Austria Capped,47
ICF.ETF,44524,iShares Cohen & Steers REIT,47
DGS.ETF,44899,WisdomTree Emerging Markets SmallCap Dividend,47
IBDP.ETF,956211,iShares iBonds Dec 2024 Corporate,47
IBDO.ETF,956210,iShares iBonds Dec 2023 Corporate,47
DLS.ETF,44752,WisdomTree International SmallCap Dividend,47
AGQ.ETF,14173,ProShares Ultra Silver,47
BZQ.ETF,44632,ProShares UltraShort MSCI Brazil Capped,47
DBL.ETF,949552,Doubleline Opportunistic Credit,47
RWO.ETF,44741,SPDR Dow Jones Global Real Estate,47
RETL.ETF,45069,Direxion Daily Retail Bull 3X Shares,47
PSK.ETF,45387,SPDR Wells Fargo Preferred Stock,47
GXC.ETF,38275,SPDR S&P China,47
AOK.ETF,44962,iShares Core Conservative Allocation,47
DBE.ETF,44717,PowerShares DB Energy,47
BOND.ETF,45390,PIMCO Total Return Active Exchange-Traded,47
VOOG.ETF,45415,Vanguard S&P 500 Growth,47
VOX.ETF,38166,Vanguard Telecommunication Services,47
MUA.ETF,949539,BlackRock MuniAssets,47
XHE.ETF,45379,SPDR S&P Health Care Equipment,47
PSP.ETF,45250,PowerShares Global Listed Private Equity,47
IGHG.ETF,941526,ProShares Investment Grade-Interest Rate Hedged,47
VIS.ETF,45411,Vanguard Industrials,47
DBJP.ETF,44938,Deutsche X-trackers MSCI Japan Hedged Equity,47
USD.ETF,45291,ProShares Ultra Semiconductors,47
GCC.ETF,44848,WisdomTree Continuous Commodity,47
UYG.ETF,45284,ProShares Ultra Financials,47
CMF.ETF,45185,iShares California AMT-Free Muni Bond,47
EZM.ETF,45431,WisdomTree MidCap Earnings,47
DRV.ETF,14182,Direxion Daily Real Estate Bear 3X Shares,47
IYH.ETF,45141,iShares US Healthcare,47
TAN.ETF,9242,Guggenheim Solar,47
SILJ.ETF,941550,PureFunds ISE Junior Silver,47
IYM.ETF,44557,iShares US Basic Materials,47
XAR.ETF,45378,SPDR S&P Aerospace & Defense,47
VCR.ETF,38295,Vanguard Consumer Discretionary,47
DVYE.ETF,44879,iShares Emerging Markets Dividend,47
FPX.ETF,45098,First Trust US IPO,47
RJI.ETF,44846,Rogers International Commodity Total Return,47
IPE.ETF,38178,SPDR Barclays Tips,47
FSTA.ETF,941505,Fidelity MSCI Consumer Staples,47
MGC.ETF,38161,Vanguard Mega Cap,47
ATMP.ETF,956176,Barclays ETN Plus Select MLP,47
BSJI.ETF,45053,Guggenheim Invest BulletShares,47
SLY.ETF,38291,SPDR S&P 600 Small Cap,47
BAB.ETF,45041,PowerShares Build America Bond Port,47
CBND.ETF,45359,SPDR Barclays Issuer Scored Corp Bond,47
BSCI.ETF,45052,Guggenheim BulletShares 2018 Corporate Bond,47
RYT.ETF,45332,Guggenheim Invest S&P 500 Equal Weight Technology,47
RUSL.ETF,45013,Direxion Daily Russia Bull 3X Shares,47
IDU.ETF,38196,iShares US Utilities,47
MBG.ETF,45368,SPDR Barclays Mortgage Backed Bond,47
MORL.ETF,44996,UBS E-TRACS Monthly Pay 2xLeveraged Mortgage REIT,47
PIN.ETF,44931,PowerShares India Portfolio,47
IWY.ETF,45182,iShares Russell Top 200 Growth,47
PSI.ETF,45234,PowerShares Dynamic Semiconductors,47
IXN.ETF,44691,iShares Global Tech,47
IHF.ETF,45142,iShares US Healthcare Providers,47
SIVR.ETF,44582,ETFS Physical Silver Shares,47
PPA.ETF,45219,PowerShares Aerospace & Defense,47
USCI.ETF,44863,United States Commodity,47
URTH.ETF,38156,iShares MSCI World,47
VIOO.ETF,45420,Vanguard S&P Small Cap 600,47
JPEM.ETF,956188,JPMorgan Diversified Return Emerging Markets Equity,47
DGL.ETF,44908,PowerShares DB Gold,47
VIXM.ETF,45439,ProShares VIX Mid Term Futures,47
EES.ETF,45432,WisdomTree SmallCap Earnings,47
HYLD.ETF,37438,Peritus High Yield,47
DRN.ETF,14181,Direxion Daily Real Estate Bull 3X Shares,47
DLN.ETF,45428,WisdomTree LargeCap Dividend,47
PSJ.ETF,45235,PowerShares Dynamic Software,47
ELD.ETF,44898,WisdomTree Emerging Markets Local Debt,47
FXD.ETF,38237,First Trust Consumer Discretionary AlphaDEX,47
SIL.ETF,44728,Global X Silver Miners,47
IXG.ETF,44689,iShares Global Financials,47
FIDU.ETF,941496,Fidelity MSCI Industrials,47
IGM.ETF,45151,iShares North American Tech,47
PXSV.ETF,45264,PowerShares Russell 2000 Pure Value,47
GAL.ETF,44974,SPDR SSgA Global Allocation,47
XLG.ETF,45322,Guggenheim S&P 500 Top 50,47
NHF.ETF,44973,NexPoint Credit Strategies,47
REMX.ETF,38146,VanEck Vectors Rare Earth/Strategic Metals,47
DWX.ETF,44536,SPDR S&P International Dividend,47
YCS.ETF,44951,ProShares UltraShort Yen,47
FRAK.ETF,44817,VanEck Vectors Unconventional Oil & Gas,47
PPLT.ETF,44992,ETFS Physical Platinum Shares,47
IDOG.ETF,941450,ALPS Internatl Sector Dividends Dogs,47
CORN.ETF,44788,Teucrium Corn,47
DWM.ETF,44839,WisdomTree International Equity,47
FMAT.ETF,941499,Fidelity MSCI Materials,47
CHIQ.ETF,38122,Global X China Consumer,47
TLTD.ETF,44818,FlexShares Morningstar Dev Mkts exUS Factors Tilt,47
VXZ.ETF,37551,iPath S&P 500 VIX Mid Term Futures Exp 30 Jan 2019,47
WEAT.ETF,45442,Teucrium Wheat,47
BJK.ETF,44697,VanEck Vectors Gaming,47
EPU.ETF,40662,iShares MSCI All Peru Capped,47
ASHS.ETF,956178,Deutsche X-trackers Harvest CSI 500 China A Shares Small Cap,47
FXG.ETF,38238,First Trust Consumer Staples AlphaDEX,47
SMB.ETF,45200,VanEck Vectors AMT-Free Short Municipal,47
IQDY.ETF,941455,FlexShares International Quality Dividend Dynamic,47
DUG.ETF,45301,ProShares UltraShort Oil and Gas,47
IYC.ETF,38195,iShares US Consumer Services,47
PBP.ETF,45440,PowerShares S&P 500 BuyWrite Portfolio,47
XPH.ETF,38283,SPDR S&P Pharmaceuticals,47
EELV.ETF,44888,PowerShares S&P Emerging Markets Low Volatility,47
USRT.ETF,45004,iShares Real Estate 50,47
FXC.ETF,37469,Guggenheim CurrencyShares Canadian Dollar,47
TIPZ.ETF,38152,PIMCO Broad US TIPS Exchange-Traded,47
IWL.ETF,45181,iShares Russell Top 200,47
FNI.ETF,38234,First Trust ISE Chindia,47
CUT.ETF,44664,Guggenheim MSCI Global Timber,47
SPFF.ETF,45389,Global X SuperIncome Preferred,47
KOL.ETF,9230,VanEck Vectors Coal,47
PST.ETF,45297,ProShares UltraShort 7-10 Year Treasury,47
RWL.ETF,45314,Oppenheimer Large Cap Revenue,47
UDN.ETF,38259,PowerShares DB US Dollar Bearish,47
NFRA.ETF,941458,FlexShares STOXX Global Broad Infrastructure,47
VOOV.ETF,45416,Vanguard S&P 500 Value,47
ENOR.ETF,44990,iShares MSCI Norway Capped,47
MOO.ETF,38176,VanEck Vectors Agribusiness,47
IBMH.ETF,941523,iShares iBonds Sep 2019 AMT-Free Muni Bond,47
XNTK.ETF,45369,SPDR Morgan Stanley Technology,47
STPZ.ETF,45207,PIMCO 1-5 Year US TIPS Exchange-Traded,47
SRS.ETF,38271,ProShares UltraShort Real Estate,47
BIZD.ETF,941481,VanEck Vectors BDC Income,47
PXMG.ETF,45262,PowerShares Russell Midcap Pure Growth,47
JKD.ETF,45162,iShares Morningstar Large-Cap,47
XHS.ETF,45380,SPDR S&P Health Care Services,47
EMHY.ETF,44876,iShares Emerging Markets High Yield Bond,47
TTT.ETF,45394,ProShares UltraPro Short 20+ Year Treasury,47
IDX.ETF,38180,VanEck Vectors Indonesia,47
DOL.ETF,44843,WisdomTree Intenational LargeCap Dividend,47
NORW.ETF,44989,Global X MSCI Norway,47
ACIM.ETF,37514,SPDR MSCI ACWI IMI,47
SGOL.ETF,40655,ETFS Physical Swiss Gold Shares,47
SOYB.ETF,45793,Teucrium Soybean,47
CPER.ETF,44787,United States Copper,47
NIB.ETF,44781,iPath Bloomberg Cocoa Subindex Total Return,47
MUNI.ETF,45211,PIMCO Intermediate Municipal Bond Active,47
USL.ETF,44793,United States 12 Month Oil,47
JKF.ETF,45164,iShares Morningstar Large-Cap Value,47
IWC.ETF,45178,iShares Micro-Cap,47
REGL.ETF,956193,ProShares S&P MidCap 400 Dividend Aristocrats,47
EET.ETF,44890,ProShares Ultra MSCI Emerging Markets,47
RYF.ETF,45328,Guggenheim Invest S&P 500 Equal Weight Financials,47
DNL.ETF,44754,WisdomTree Global ex US Quality Dividend Growth,47
AADR.ETF,44745,WCM/BNY Mellon Focused Growth ADR,47
BRF.ETF,44631,VanEck Vectors Brazil Small-Cap,47
CGW.ETF,44667,Guggenheim Invest S&P Global Water,47
GVI.ETF,45154,iShares Intermediate Govt/Credit Bond,47
PWB.ETF,45216,PowerShares Dynamic Large Cap Growth,47
HSPX.ETF,956183,Horizons S&P 500 Covered Call,47
HAO.ETF,44772,Guggenheim Invest China Small Cap,47
PWZ.ETF,45244,PowerShares California AMT-Free Municipal Bond Portfolio,47
XTN.ETF,45383,SPDR S&P Transportation,47
UGL.ETF,40687,ProShares Ultra Gold,47
CSM.ETF,45267,ProShares Large Cap Core Plus,47
EDIV.ETF,38127,SPDR S&P Emerging Markets Dividend,47
GXG.ETF,44784,Global X MSCI Colombia,47
PALL.ETF,44991,ETFS Physical Palladium Shares,47
TOLZ.ETF,956175,ProShares DJ Brookfield Global Infrastructure,47
SMIN.ETF,44930,iShares MSCI India Small-Cap,47
RWJ.ETF,45316,Oppenheimer Small Cap Revenue,47
RTH.ETF,38169,VanEck Vectors Retail,47
IWX.ETF,45183,iShares Russell Top 200 Value,47
COPX.ETF,44650,Global X Copper Miners,47
IVOO.ETF,45417,Vanguard S&P Mid Cap 400,47
IYLD.ETF,44960,iShares Morningstar Multi-Asset Income,47
KNOW.ETF,941528,Direxion All Cap Insider Sentiment Shares,47
EEV.ETF,44897,ProShares UltraShort MSCI Emerging Markets,47
PGHY.ETF,941460,PowerShares Global Short Term High Yield Bond Portfolio,47
FAN.ETF,44645,First Trust ISE Global Wind Energy,47
SEA.ETF,44663,Guggenheim Invest Shipping,47
UGA.ETF,44901,United States Gasoline,47
DTD.ETF,45433,WisdomTree Total Dividend,47
FXZ.ETF,38240,First Trust Materials AlphaDEX,47
IYY.ETF,38202,iShares Dow Jones US,47
IYK.ETF,38201,iShares US Consumer Goods,47
IMTM.ETF,956189,iShares Edge MSCI International Momentum Factor,47
ARGT.ETF,44620,Global X MSCI Argentina,47
SMDV.ETF,956185,ProShares Russell 2000 Dividend Growers,47
JHDG.ETF,956227,WisdomTree Japan Hedged Quality Dividend Growth,47
KORU.ETF,941441,Direxion Daily South Korea Bull 3X Shares,47
PJP.ETF,45217,PowerShares Dynamic Pharmaceuticals,47
JKG.ETF,45165,iShares Morningstar Mid-Cap,47
JXI.ETF,44693,iShares Global Utilities,47
DRW.ETF,38301,WisdomTree Global ex-US Real Estate,47
IHY.ETF,44696,VanEck Vectors International High Yield Bond,47
DTN.ETF,45425,Wisdom Tree Dividend Ex-Financials,47
SMLF.ETF,956214,iShares Edge MSCI Multifactor USA Small-Cap,47
GRES.ETF,44673,IQ Global Resources,47
RZV.ETF,45337,Guggenheim Invest S&P SmallCap 600 Pure Value,47
DBP.ETF,44718,PowerShares DB Precious Metals,47
HUSE.ETF,45120,US Market Rotation Strategy,47
XMPT.ETF,45197,VanEck Vectors CEF Municipal Income,47
CVY.ETF,45113,Guggenheim Invest Multi-Asset Income,47
FXA.ETF,38230,Guggenheim CurrencyShares Australian Dollar,47
RISE.ETF,956194,Sit Rising Rate,47
WDIV.ETF,941465,SPDR S&P Global Dividend,47
RLY.ETF,44976,SPDR SSgA Multi-Asset Real Return,47
CORP.ETF,45212,PIMCO Investment Grade Corporate Bond,47
FRI.ETF,44998,First Trust S&P REIT,47
SMDD.ETF,45395,ProShares UltraPro Short MidCap400,47
RJA.ETF,44724,Rogers International Commodity Agriculture Total Return,47
MLN.ETF,45202,VanEck Vectors AMT-Free Long Municipal,47
RXL.ETF,45285,ProShares Ultra Health Care,47
TLH.ETF,45157,iShares 10-20 Year Treasury Bond,47
RWK.ETF,45315,Oppenheimer Mid Cap Revenue,47
RYU.ETF,45333,Guggenheim Invest S&P 500 Equal Weight Utilities,47
TLTE.ETF,44883,FlexShares Morningstar Emerging Markets Factors Tilt,47
SCJ.ETF,38186,iShares MSCI Japan Small-Cap,47
PFIG.ETF,45240,PowerShares mntl Invest Grade Corp Bond Portfolio,47
TYO.ETF,45059,Direxion Daily 7-10 Year Treasury Bear 3X Shares,47
EIS.ETF,44934,iShares MSCI Israel Capped,47
DTH.ETF,44840,WisdomTree International High Dividend,47
DBEM.ETF,44866,Deutsche X-trackers MSCI Emerging Markets Hedged Equity,47
PXE.ETF,45226,PowerShares Dynamic Energy Exploration & Production Portfolio,47
RFV.ETF,45335,Guggenheim Invest S&P MidCap 400 Pure Value,47
XSW.ETF,45381,SPDR S&P Software & Services,47
NYF.ETF,45189,iShares New York AMT-Free Muni Bond,47
MIDU.ETF,45066,Direxion Daily Mid Cap Bull 3X Shares,47
FIW.ETF,44646,First Trust ISE Water,47
GII.ETF,44733,SPDR S&P Global Infrastructure,47
IBCD.ETF,941516,iShares iBonds Mar 2020 Corp ex-Financials,47
ZSL.ETF,14227,ProShares UltraShort Silver,47
GMF.ETF,38274,SPDR S&P Emerging Asia Pacific,47
YMLP.ETF,44755,VanEck Vectors High Income MLP,47
TILT.ETF,45203,FlexShares Morningstar US Market Factor Tilt,47
TIPX.ETF,941561,SPDR Barclays 1-10 Year TIPS,47
FINZ.ETF,941575,ProShares UltraPro Short Financial Select Sector,47
SLVP.ETF,44705,iShares MSCI Global Silver Miners,47
JETS.ETF,956228,US Global Jets,47
LBJ.ETF,44640,Direxion Daily Latin America Bull 3X Shares,47
AGZ.ETF,45134,iShares Agency Bond,47
RYH.ETF,45329,Guggenheim Invest S&P 500 Equal Weight Health Care,47
VIOV.ETF,45422,Vanguard S&P Small Cap 600 Value,47
QDEF.ETF,941542,FlexShares Quality Dividend Defensive,47
BKF.ETF,38187,iShares MSCI BRIC,47
AFTY.ETF,956205,CSOP FTSE China A50,47
FNDB.ETF,941502,Schwab amental US Broad Market,47
EWK.ETF,38183,iShares MSCI Belgium Capped,47
VIOG.ETF,45421,Vanguard S&P Small Cap 600 Growth,47
PXJ.ETF,38256,PowerShares Dynamic Oil & Gas Services,47
ROAM.ETF,956195,Hartford Multifactor Emerging Markets,47
CEMB.ETF,44878,iShares Emerging Markets Corporate Bond,47
IVOG.ETF,45418,Vanguard S&P Mid Cap 400 Growth,47
MINC.ETF,941530,Newfleet Multi-Sector Income,47
SCIF.ETF,38148,VanEck Vectors India Small-Cap,47
FRN.ETF,45110,Guggenheim Invest Frontier Markets,47
MORT.ETF,45005,VanEck Vectors Mortgage REIT Income,47
SKF.ETF,38267,ProShares UltraShort Financials,47
EDEN.ETF,44800,iShares MSCI Denmark Capped,47
WIP.ETF,38280,SPDR Citi International Government Inflation-Protected Bond,47
JKE.ETF,45163,iShares Morningstar Large-Cap Growth,47
GHYG.ETF,44810,iShares Global High Yield Corporate Bond,47
SIJ.ETF,38269,ProShares UltraShort Industrials,47
JKH.ETF,45166,iShares Morningstar Mid-Cap Growth,47
QLTA.ETF,45131,iShares Aaa - A Rated Corporate Bond,47
MYY.ETF,45276,ProShares Short MidCap400,47
RSXJ.ETF,45014,VanEck Vectors Russia Small-Cap,47
IBCE.ETF,941517,iShares iBonds Mar 2023 Corp ex-Financials,47
FDM.ETF,45094,First Trust Dow Jones Select MicroCap,47
SYLD.ETF,941558,Cambria Shareholder Yield,47
ROOF.ETF,44999,IQ US Real Estate Small Cap,47
ULST.ETF,941464,SPDR SSgA Ultra Short Term Bond,47
DHVW.ETF,956226,Diamond Hill Valuation Weighted 500,47
EWUS.ETF,45030,iShares MSCI United Kingdom Small-Cap,47
PBE.ETF,45214,PowerShares Dynamic Biotechnology & Genome,47
QQQE.ETF,45074,Direxion NASDAQ-100 Equal Weighted Shares,47
PICB.ETF,44719,PowerShares International Corporate Bond,47
REZ.ETF,45001,iShares Residential Real Estate Capped,47
LGLV.ETF,941529,SPDR Russell 1000 Low Volatility,47
EEMO.ETF,44892,PowerShares S&P Emerging Markets Momentum Portfolio,47
REW.ETF,38268,ProShares UltraShort Technology,47
GDXX.ETF,956200,ProShares Ultra Gold Miners,47
DHS.ETF,45427,WisdomTree High Dividend,47
GYLD.ETF,44637,Arrow Dow Jones Global Yield,47
IQDE.ETF,941453,FlexShares International Quality Dividend Defensive,47
RJN.ETF,44725,Rogers International Commodity Energy Total Return,47
CSD.ETF,45115,Guggenheim S&P Spin-Off,47
EPS.ETF,45426,WisdomTree Earnings 500,47
FXF.ETF,38231,Guggenheim CurrencyShares Swiss Franc,47
ILTB.ETF,45137,iShares Core 10Y US Bond,47
YXI.ETF,44779,ProShares Short FTSE China 50,47
CMBS.ETF,45135,iShares CMBS,47
FINU.ETF,45296,ProShares UltraPro Financial Select Sector,47
DBLV.ETF,45034,AdvisorShares Wilshire Buyback,47
XTL.ETF,45382,SPDR S&P Telecom,47
XPP.ETF,44777,ProShares Ultra FTSE China 50,47
BZF.ETF,44635,WisdomTree Brazilian Real Strategy,47
MIDZ.ETF,45065,Direxion Daily Mid Cap Bear 3X Shares,47
DIM.ETF,44844,WisdomTree International MidCap Dividend,47
EWGS.ETF,44904,iShares MSCI Germany Small-Cap,47
DGP.ETF,14180,DB Gold Double Long Exp 15 Feb 2038,47
SDD.ETF,45304,ProShares UltraShort SmallCap600,47
AFK.ETF,44700,VanEck Vectors Africa,47
IPFF.ETF,44816,iShares International Preferred Stock,47
CPI.ETF,38173,IQ Real Return,47
JKK.ETF,45169,iShares Morningstar Small-Cap Growth,47
JKL.ETF,45170,iShares Morningstar Small-Cap Value,47
GDXS.ETF,956203,ProShares UltraShort Gold Miners,47
PBW.ETF,44708,PowerShares WilderHill Clean Energy,47
DEF.ETF,45108,Guggenheim Invest Defensive Equity,47
UCI.ETF,44862,UBS E-TRACS Bloomberg CMCI,47
YAO.ETF,44771,Guggenheim Invest China All-Cap,47
DVYA.ETF,44677,iShares Asia/Pacific Dividend,47
UPV.ETF,44743,ProShares Ultra FTSE Europe,47
EIRL.ETF,44949,iShares MSCI Ireland,47
IBDC.ETF,941520,iShares iBonds Mar 2020 Corporate,47
CHIX.ETF,44768,Global X China Financials,47
CZA.ETF,45112,Guggenheim Invest Mid-Cap Core,47
SMLV.ETF,941554,SPDR Russell 2000 Low Volatility,47
UBR.ETF,44633,ProShares Ultra MSCI Brazil Capped,47
MXI.ETF,44690,iShares Global Materials,47
BDCS.ETF,45083,UBS E-TRACS,47
SIZE.ETF,941552,iShares Edge MSCI USA Size Factor,47
MRGR.ETF,941582,ProShares Merger,47
NGE.ETF,941459,Global X MSCI Nigeria,47
GHII.ETF,956199,Guggenheim S&P High Income Infrastructure,47
URE.ETF,14221,ProShares Ultra Real Estate,47
CAPE.ETF,45038,Barclays + Shiller CAPE Exp 12 Oct 2022,47
IVOV.ETF,45419,Vanguard S&P Mid Cap 400 Value,47
GOEX.ETF,44655,Global X Gold Explorers,47
PLND.ETF,38145,VanEck Vectors Poland,47
PBS.ETF,45231,PowerShares Dynamic Media,47
KCE.ETF,38287,SPDR S&P Capital Markets,47
IGN.ETF,45149,iShares North American Tech-Multimedia Networking,47
IHE.ETF,45148,iShares US Pharmaceuticals,47
CJNK.ETF,45356,SPDR BofA Merrill Lynch Crossover Corporate Bond,47
FLM.ETF,44644,First Trust ISE Global Engineering & Construction,47
YMLI.ETF,941573,VanEck Vectors High Income Infrastructure MLP,47
FFR.ETF,44997,First Trust FTSE EPRA/NAREIT Global Developed Markets Real Estate,47
HDG.ETF,44922,ProShares Hedge Replication,47
VEGA.ETF,38158,Star Global Buy-Write,47
DPK.ETF,44803,Direxion Daily Developed Markets Bear 3X,47
AXJL.ETF,44747,WisdomTree Asia-Pacific ex-Japan,47
REK.ETF,45008,ProShares Short Real Estate,47
EUSA.ETF,45171,iShares MSCI USA Equal Weighted,47
XRLV.ETF,956219,PowerShares S&P 500 ex-Rate Sensitive Low Volatility Portfolio,47
PEK.ETF,44775,VanEck Vectors ChinaAMC A-Share,47
DAG.ETF,44711,DB Agriculture Double Long Exp 01 Apr 2038,47
INCO.ETF,44926,Columbia India Consumer,47
EXI.ETF,38210,iShares Global Industrials,47
CROP.ETF,44675,IQ Global Agribusiness Small Cap,47
RYJ.ETF,45114,Guggenheim Invest Raymond James SB-1 Equity,47
DTO.ETF,38233,DB Crude Oil Double Short Exp 01 Jun 2038,47
INKM.ETF,44975,SPDR SSgA Income Allocation,47
PVI.ETF,45255,PowerShares VRDO Tax-Free Weekly Portfolio,47
EPV.ETF,44721,ProShares UltraShort FTSE Europe,47
GVAL.ETF,949540,Cambria Global Value,47
EWV.ETF,44944,ProShares UltraShort MSCI Japan,47
JPNL.ETF,941438,Direxion Daily Japan Bull 3x Shares,47
SOIL.ETF,44651,Global X Fertilizers/Potash,47
GBF.ETF,45160,iShares Government/Credit Bond,47
RFG.ETF,45334,Guggenheim Invest S&P MidCap 400 Pure Growth,47
SGDJ.ETF,956212,ALPS Sprott Junior Gold Miners,47
BBRC.ETF,44865,Columbia Beyond BRICs,47
PGAL.ETF,941468,Global X MSCI Portugal,47
TBX.ETF,45271,ProShares Short 7-10 Year Treasury,47
RALS.ETF,45268,ProShares RAFI Long/Short,47
LTPZ.ETF,38142,PIMCO 15+ Year US TIPS Exchange-Traded,47
RZG.ETF,45336,Guggenheim Invest S&P SmallCap 600 Pure Growth,47
GLL.ETF,14195,ProShares UltraShort Gold,47
GASX.ETF,45067,Direxion Daily Natural Gas Related Bear 3X Shares,47
EQWL.ETF,45260,PowerShares Russell Top 200 Equal Weight,47
IAK.ETF,45145,iShares US Insurance,47
MZZ.ETF,45300,ProShares UltraShort MidCap400,47
ENFR.ETF,941489,ALPS Alerian Energy Infrastructure,47
DZZ.ETF,14185,DB Gold Double Short Exp 15 Feb 2038,47
EWMC.ETF,45321,Guggenheim S&P MidCap 400 Equal Weight,47
SPYB.ETF,956192,SPDR S&P 500 Buyback,47
ULE.ETF,38265,ProShares Ultra Euro,47
DJCI.ETF,44847,UBS E-TRACS,47
EGPT.ETF,38128,VanEck Vectors Egypt,47
BTAL.ETF,941486,QuantShares US Market Neutral Anti-Beta,47
BCM.ETF,44855,iPath Pure Beta Broad Commodity Exp 18 Apr 2041,47
PSR.ETF,45006,PowerShares Active US Real Estate,47
PZD.ETF,44710,PowerShares Cleantech,47
RAVI.ETF,44722,FlexShares Ready Access Variable Income,47
DEW.ETF,44749,WisdomTree Global High Dividend,47
PPLC.ETF,956187,Direxion Daily S&P 500 Bull 1.25X Shares,47
DGT.ETF,44731,SPDR Global Dow,47
PHDG.ETF,941541,PowerShares S&P 500 Downside Hedged Portfolio,47
IPO.ETF,949549,Renaissance IPO,47
ALFA.ETF,44916,AlphaClone Alternative Alpha,47
PXLV.ETF,45259,PowerShares Russell Top 200 Pure Value,47
GEX.ETF,38249,VanEck Vectors Global Alternative Energy,47
PBJ.ETF,45215,PowerShares Dynamic Food & Beverage,47
RVNU.ETF,941548,Deutsche X-trackers Municipal Infrastructure Revenue Bond,47
RGI.ETF,45330,Guggenheim Invest S&P 500 Equal Weight Industrials,47
SDEM.ETF,956218,Global X SuperDividend Emerging Markets,47
DOO.ETF,44841,Wisdom Tree International Dividend Ex-Financials,47
TAO.ETF,44995,Guggenheim Invest China Real Estate,47
BFOR.ETF,941480,ALPS Barron’s 400,47
UYM.ETF,38263,ProShares Ultra Basic Materials,47
VEGI.ETF,44702,iShares MSCI Global Agriculture Producers,47
DOD.ETF,45076,ELEMENTS Dogs of the Dow,47
ASEA.ETF,44653,Global X Southeast Asia,47
PMR.ETF,45233,PowerShares Dynamic Retail,47
HECO.ETF,45119,EcoLogical Strategy,47
UPW.ETF,45295,ProShares Ultra Utilities,47
SEF.ETF,45273,ProShares Short Financials,47
FWDD.ETF,45033,Madrona Domestic,47
ENY.ETF,44758,Guggenheim Invest Canadian Energy Income,47
GURU.ETF,44661,Global X Guru,47
TYD.ETF,45060,Direxion Daily 7-10 Year Treasury Bull 3X Shares,47
DSUM.ETF,44764,PowerShares Chinese Yuan Dim Sum Bond Portfolio,47
INXX.ETF,44927,Columbia India Infrastructure,47
EWSC.ETF,45320,Guggenheim S&P SmallCap 600 Equal Weight,47
RXD.ETF,45299,ProShares UltraShort Health Care,47
EEB.ETF,44873,Guggenheim Invest BRIC,47
TUZ.ETF,38253,PIMCO 1-3 Year US Treasury,47
IBDD.ETF,941521,iShares iBonds Mar 2023 Corporate,47
UMDD.ETF,45392,ProShares UltraPro MidCap400,47
DGZ.ETF,44909,DB Gold Short Exp 15 Feb 2038,47
AUSE.ETF,38121,WisdomTree Australia Dividend,47
NLR.ETF,38179,VanEck Vectors Uranium+Nuclear Energy,47
EFNL.ETF,44900,iShares MSCI Finland Capped,47
PZT.ETF,45245,PowerShares New York AMT-Free Municipal Bond Portfolio,47
PXQ.ETF,45232,PowerShares Dynamic Networking,47
RTM.ETF,45331,Guggenheim Invest S&P 500 Equal Weight Materials,47
PWC.ETF,45257,PowerShares Dynamic Market,47
NFO.ETF,45111,Guggenheim Invest Insider Sentiment,47
SCIN.ETF,44928,Columbia India Small Cap,47
SZK.ETF,45266,ProShares UltraShort Consumer Goods,47
FTSD.ETF,941507,Franklin Liberty Short Duration US Government,47
PEX.ETF,941540,ProShares Global Listed Private Equity,47
PUW.ETF,45213,PowerShares WilderHill Progressive Energy Portfolio,47
EZJ.ETF,44943,ProShares Ultra MSCI Japan,47
FVL.ETF,45104,First Trust Value Line 100 Exchange-Traded,47
EFU.ETF,44823,ProShares UltraShort MSCI EAFE,47
DBEZ.ETF,956184,Deutsche X-trackers MSCI Eurozone Hedged Equity,47
EMAG.ETF,44699,VanEck Vectors Emerging Markets Aggregate Bond,47
HYXU.ETF,44679,iShares International High Yield Bond,47
SDP.ETF,45306,ProShares UltraShort Utilities,47
FMF.ETF,941576,First Trust Morningstar Managed Futures Strategy,47
ACWF.ETF,956217,iShares Edge MSCI Multifactor Global,47
EQWM.ETF,45261,PowerShares Russell Midcap Equal Weight,47
EQL.ETF,45036,ALPS Equal Sector Weight,47
LRET.ETF,956224,UBS ETRACS Monthly Pay 2xLeveraged MSCI US REIT,47
MMTM.ETF,45372,SPDR S&P 1500 Momentum Tilt,47
WMCR.ETF,45424,Guggenheim Invest Wilshire Micro-Cap,47
JKJ.ETF,45168,iShares Morningstar Small-Cap,47
WMW.ETF,45204,ELEMENTS Morningstar Wide Moat Focus Total Return,47
QMN.ETF,44918,IQ Hedge Market Neutral Tracker,47
YCL.ETF,44950,ProShares Ultra Yen,47
FXS.ETF,38228,Guggenheim CurrencyShares Swedish Krona,47
DBV.ETF,44859,PowerShares DB G10 Currency Harvest,47
UXI.ETF,45286,ProShares Ultra Industrials,47
GSC.ETF,44849,GS Connect S&P GSCI Enhanced Commodity Total Return Strategy,47
UCC.ETF,45283,ProShares Ultra Consumer Services,47
PZI.ETF,45258,PowerShares Zacks Micro Cap,47
GRU.ETF,44912,Swedish Export Credit ELEMENTS,47
RWW.ETF,45313,Oppenheimer Financials Sector Revenue,47
EMFM.ETF,941473,Global X Next Emerging & Frontier,47
MCRO.ETF,44917,IQ Hedge Macro Tracker,47
SMMU.ETF,45352,PIMCO Short Term Municipal Bond Active Exchange-Traded,47
DZK.ETF,44804,Direxion Daily Developed Markets Bull 3X,47
ICOL.ETF,941448,iShares MSCI Colombia Capped,47
PBD.ETF,44505,PowerShares Global Clean Energy,47
SMEZ.ETF,956172,SPDR EURO STOXX Small Cap,47
SBB.ETF,45280,ProShares Short SmallCap600,47
HGI.ETF,44665,Guggenheim Invest International Mlti-Asset Income,47
JPXN.ETF,44941,Shares JPX-Nikkei 400,47
PXMV.ETF,45263,PowerShares Russell Midcap Pure Value,47
AGF.ETF,44712,DB Agriculture Long Exp 01 Apr 2038,47
MLPG.ETF,45082,UBS E-TRACS Alerian Natural Gas MLP,47
FYLD.ETF,941447,Cambria Foreign Shareholder Yield,47
TOK.ETF,44530,iShares MSCI Kokusai,47
SAA.ETF,45292,ProShares Ultra SmallCap600,47
SAGG.ETF,45063,Direxion Daily Total Bond Market Bear 1X Shares,47
MLPY.ETF,37550,Morgan Stanley Cushing MLP High Income Exp 21 Mar 2031,47
ISRA.ETF,941432,VanEck Vectors Israel,47
PAF.ETF,44503,PowerShares FTSE RAFI Asia Pacific ex-Japan,47
IDHQ.ETF,526,PowerShares S&P International Developed Quality Portfolio,47
DBGR.ETF,941467,Deutsche X-trackers MSCI Germany Hedged Equity,47
CYB.ETF,37470,WisdomTree Chinese Yuan Strategy,47
USV.ETF,45017,UBS E-TRACS Bloomberg CMCI Silver,47
EWEM.ETF,44891,Guggenheim MSCI EM Equal Country Weight,47
FLRT.ETF,949537,AdvisorShares Pacific Asset Enhanced Fl Rate,47
EQWS.ETF,45265,PowerShares Russell 2000 Equal Weight,47
DRR.ETF,38218,Morgan Stanley Market Vectors Double Short Euro,47
CHEP.ETF,45310,QuantShares US Market Neutral Value,47
ALD.ETF,44746,WisdomTree Asia Local Debt,47
OLO.ETF,44799,DB Crude Oil Long Exp 01 Jun 2038,47
EFO.ETF,44822,ProShares Ultra MSCI EAFE,47
FWDI.ETF,44801,Madrona International,47
BOS.ETF,44716,DB Base Metals Short Exp 01 Jun 2038,47
KFYP.ETF,941440,KraneShares Zacks New China,47
LTL.ETF,45294,ProShares Ultra Telecommunications,47
OLEM.ETF,44791,iPath Pure Beta Crude Oil Exp 18 Apr 2041,47
GXF.ETF,44654,Global X FTSE Nordic Region,47
UGE.ETF,45282,ProShares Ultra Consumer Goods,47
UBG.ETF,44911,UBS E-TRACS Bloomberg CMCI Gold,47
SZO.ETF,44533,DB Crude Oil Short Exp 01 Jun 2038,47
FWDB.ETF,37434,Madrona Global Bond,47
FUD.ETF,44742,UBS E-TRACS Bloomberg CMCI Food,47
SDYL.ETF,45085,UBS E-TRACS Monthly Pay 2xLeveraged S&P Dividend,47
CROC.ETF,38123,ProShares UltraShort Australian Dollar,47
XVZ.ETF,45441,iPath S&P 500 Dynamic VIX Exp 18 Aug 2021,47
EEH.ETF,45388,ELEMENTS SPECTRUM Large CAP US Sector Momentum Exp 08-08-2022,47
RJZ.ETF,44726,Rogers International Commodity Metals Total Return,47
DYY.ETF,44856,DB Commodity Double Long Exp 01 Apr 2038,47
DDG.ETF,45277,ProShares Short Oil & Gas,47
DDP.ETF,44858,DB Commodity Short Exp 01 Apr 2038,47
IDMO.ETF,941449,PowerShares S&P International Developed Momentum Portfolio,47
TYBS.ETF,45058,Direxion Daily 20+ Year Treasury Bear 1X Shares,47
QDYN.ETF,941544,FlexShares Quality Dividend Dynamic,47
TAGS.ETF,38151,Teucrium Agricultural,47
TYNS.ETF,941433,Direxion Daily 7-10 Year Treasury Bear 1X Shares,47
VQT.ETF,45039,Barclays + S&P VEQTOR Exp 08 Sep 2020,47
FXCH.ETF,44780,Guggenheim CurrencyShares Chinese Renminbi,47
ECNS.ETF,38126,iShares MSCI China Small-Cap,47
EUFX.ETF,38135,ProShares Short Euro,47
DBAP.ETF,941437,Deutsche X-trackers MSCI Asia Pacific ex Japan Hedged Equity,47
CHIM.ETF,941436,Global X China Materials,47
FAUS.ETF,44623,First Trust Australia AlphaDEX,47
CHIE.ETF,941435,Global X China Energy,47
SIZ.ETF,941551,QuantShares US Market Neutral Size,47
EVX.ETF,941490,VanEck Vectors Environmental Services,47
BDD.ETF,44713,DB Base Metals Double Long Exp 01 Jun 2038,47
CNY.ETF,38251,Morgan Stanley Market Vectors Renminbi USD,47
QSY.ETF,45429,WisdomTree LargeCap Value,47
SBM.ETF,45350,ProShares Short Basic Materials,47
CHII.ETF,44769,Global X China Industrials,47
IPOS.ETF,949550,Renaissance International IPO,47
INR.ETF,38252,Morgan Stanley Market Vectors Rupee USD,47
WREI.ETF,45011,Guggenheim Invest Wilshire US REIT,47
DBS.ETF,45016,PowerShares DB Silver,47
VLU.ETF,941568,SPDR S&P 1500 Value Tilt,47
GCE.ETF,44956,Claymore CEF GS Connect,47
SUSL.ETF,1152751,iShares ESG MSCI USA Leaders ETF,47
IJT.ETF,38204,iShares S&P Small-Cap 600 Growth ETF,47
ACWX.ETF,38304,iShares MSCI ACWI ex U.S. ETF,47
IGF.ETF,38205,iShares Global Infrastructure ETF,47
BBEU.ETF,1086958,JPMorgan BetaBuilders Europe,47
SCZ.ETF,44812,iShares MSCI EAFE Small-Cap ETF,47
TUR.ETF,9244,iShares MSCI Turkey ETF,47
BBJP.ETF,1116319,JPMorgan BetaBuilders Japan ETF,47
ARKG.ETF,959228,ARK Genomic Revolution ETF,47
ESGD.ETF,994110,iShares ESG Aware MSCI EAFE ETF,47
FV.ETF,959496,First Trust Dorsey Wright Focus 5 ETF,47
BBCA.ETF,1091216,JPMorgan BetaBuilders Canada,47
ONEQ.ETF,45474,Fidelity NASDAQ Composite Index Tracking Stock Fund,47
DVY.ETF,40665,iShares Select Dividend ETF,47
SKYY.ETF,47663,First Trust Cloud Computing ETF,47
XT.ETF,1043100,iShares Exponential Technologies ETF,47
IUSV.ETF,45177,iShares Core S&P U.S. Value ETF,47
VXUS.ETF,45462,Vanguard Total International Stock Index Fund ETF Shares,47
USSG.ETF,1123706,Xtrackers MSCI USA ESG Leaders Equity ETF,47
VONG.ETF,45504,Vanguard Russell 1000 Growth Index Fund ETF Shares,47
ENZL.ETF,38131,iShares MSCI New Zealand ETF,47
GUNR.ETF,44701,FlexShares Morningstar Global Upstream Natural Resources Index Fund,47
ARKW.ETF,959231,ARK Next Generation Internet ETF,47
EPHE.ETF,38132,iShares MSCI Philippines ETF,47
VNQI.ETF,45461,Vanguard Global ex-U.S. Real Estate Index Fund ETF Shares,47
CIBR.ETF,959506,First Trust NASDAQ Cybersecurity ETF,47
GSLC.ETF,959306,Goldman Sachs ActiveBeta U.S. Large Cap Equity ETF,47
XLRE.ETF,959413,The Real Estate Select Sector SPDR Fund,47
ACWI.ETF,40659,iShares MSCI ACWI ETF,47
SPYD.ETF,959432,SPDR Portfolio S&P 500 High Dividend ETF,47
ESGE.ETF,994111,iShares ESG Aware MSCI EM ETF,47
QTEC.ETF,45479,First Trust NASDAQ-100-Technology Sector Index Fund,47
IEUR.ETF,959326,iShares Core MSCI Europe ETF,47
HEFA.ETF,959338,iShares Currency Hedged MSCI EAFE ETF,47
IUSG.ETF,45176,iShares Core S&P U.S. Growth ETF,47
IBB.ETF,6381,iShares Nasdaq Biotechnology ETF,47
VONV.ETF,45505,Vanguard Russell 1000 Value Index Fund ETF Shares,47
MCHI.ETF,38143,iShares MSCI China ETF,47
FTCS.ETF,941598,First Trust Capital Strength ETF,47
SOXX.ETF,45481,iShares PHLX Semiconductor ETF,47
REET.ETF,959344,iShares Global REIT ETF,47
DGRW.ETF,959552,WisdomTree U.S. Quality Dividend Growth Fund,47
DGRO.ETF,959325,iShares Core Dividend Growth ETF,47
IDEV.ETF,1011767,iShares Core MSCI International Developed Market,47
VIGI.ETF,986856,Vanguard International Dividend Appreciation Index Fund ETF Shares,47
ESGU.ETF,996499,iShares ESG Aware MSCI USA ETF,47
IXUS.ETF,44678,iShares Core MSCI Total International Stock ETF,47
XLC.ETF,1084244,Communication Services Select Sector SPDR Fund,47
ARKK.ETF,959230,ARK Innovation ETF,47
AAXJ.ETF,38302,iShares MSCI All Country Asia ex Japan ETF,47
ACWV.ETF,44685,iShares MSCI Global Min Vol Factor ETF,47

#VN VIETNAM
TCB.VN,1081734,Vietnam Technological And Commercial Bank,58
ITA.VN,958534,Tan Tao Investment and Industry Corp,58
FLC.VN,958480,FLC Group JSC,58
MBB.VN,958561,Military Commercial Joint Stock Bank,58
HPG.VN,958514,Hoa Phat Group JSC,58
AAA.VN,41912,An Phat Plastic and Green Environment JSC,58
OGC.VN,958589,Ocean Group JSC,58
CTG.VN,958437,Vietnam JSCmmercial Bank for Industry and Trade,58
QCG.VN,958629,Quoc Cuong Gia Lai JSC,58
STB.VN,958676,Sai Gon Thuong Tin Commercial Joint Stock Bank,58
KBC.VN,958539,Kinh Bac City Development Share Holding Corp,58
HAG.VN,958494,Hoang Anh Gia Lai JSC,58
VCB.VN,958731,Joint Stock Commercial Bank for Foreign Trade of Vietnam,58
ASM.VN,958388,Sao Mai Group Corp,58
BID.VN,958398,Joint Stock Commercial Bank for Investment and Development of Vietnam,58
SBT.VN,958641,Thanh Thanh Cong Tay Ninh JSC,58
GMD.VN,958488,Gemadept Corp,58
IDI.VN,958530,International Development & Investment Corp,58
SSI.VN,958674,Saigon Securities Incorporation,58
VIC.VN,958739,Vingroup JSC,58
ROS.VN,987188,Faros Construction Corp,58
JVC.VN,958537,J&V Medical Instrument JSC,58
KSH.VN,958547,KSH Investment and Development JSC,58
HSG.VN,958518,Hoasen Group,58
DPM.VN,958459,PetroVietnam Fertilizer and Chemicals Corp,58
DXG.VN,958469,Dat Xanh Real Estate Service Contructions Corp,58
PVD.VN,958621,PetroVietnam Drilling & Well Service Corp,58
VNM.VN,958751,Vietnam Dairy Products JSC,58
DIG.VN,958452,Development Investment Construction JSC,58
FTM.VN,996144,Duc Quan Investment and Development JSC,58
SCR.VN,42162,Saigon Thuong Tin Real Estate JSC,58
PDR.VN,958596,Phat Dat Real Estate Development Corp,58
VND.VN,42283,VNDIRECT Securities Corp,58
APG.VN,41920,AnPhat Securities JSC,58
VNE.VN,958747,Vietnam Electricity Construction JSC,58
HNG.VN,958512,Hoang Anh Gia Lai Agricultural JSC,58
HHS.VN,958507,Hoang Huy Investment Services JSC,58
GAS.VN,958483,Petrovietnam Gas JSC,58
CII.VN,958421,Ho Chi Minh City Infrastructure Investment JSC,58
ANV.VN,958386,Nam Viet Corp,58
FCN.VN,958478,Fecon Foundation Engineering and Underground Construction JSC,58
DCM.VN,950607,Petrovietnam Camau Fertilizer,58
REE.VN,958633,Refrigeration Electrical Engineering Corp,58
HBC.VN,958501,Hoa Binh Construction & Real Estate Corp,58
CTI.VN,958438,CuongThuan Idico Development Investment Corp,58
SJD.VN,958660,Can Don Hydro Power JSC,58
NTL.VN,958586,Tu Liem Urban Development JSC,58
TNT.VN,958712,Tai Nguyen Corp,58
CMX.VN,958429,CaMau Frozen Seafood Processing Import Export Corp,58
FPT.VN,958482,FPT Corp,58
FMC.VN,958481,Sao Ta Foods JSC,58
HCD.VN,985858,Hcd Investment Producing and Trading JSC,58
TCH.VN,991210,Hoang Huy Investment Financial,58
TTF.VN,958718,Truong Thanh Furniture Corp,58
HAI.VN,958496,HAI Agrochem JSC,58
DLG.VN,958453,Duc Long Gia Lai Group JSC,58
VHG.VN,958738,Quang Nam Rubber Investment JSC,58
TCM.VN,958689,Thanh Cong Textile Garment Investment Trading JSC,58
HVG.VN,958527,Hung Vuong Corp,58
VNG.VN,958748,Thanh Thanh Cong Tourist JSC,58
HQC.VN,958516,Hoang Quan Consulting Trading Service Real Estate Corp,58
HAR.VN,958498,An Duong Thao Dien Real estate Trading Investment JSC,58
VJC.VN,997168,Vietjet Aviation JSC,58
GTN.VN,958492,Thong Nhat Production and Investment JSC,58
PNJ.VN,958607,Phu Nhuan Jewelry JSC,58
SKG.VN,958662,Superdong Fast Ferry Kien Giang JSC,58
MWG.VN,958570,Mobile World Investment Corp,58
VRC.VN,958756,Vung Tau Real Estate and Construction JSC,58
NLG.VN,958579,Nam Long Investment Corp,58
KMR.VN,958544,Mirae JSC,58
HT1.VN,958520,Ha Tien 1 Cement JSC,58
PHR.VN,958602,Phuoc Hoa Rubber JSC,58
MSN.VN,958566,Masan Group Corp,58
FIT.VN,41999,FIT INVEST JSC,58
SFG.VN,958652,Southern Fertilizer JSC,58
AMD.VN,958385,AMD Group Investment JSC,58
CTD.VN,958436,Cotec Construction JSC,58
LHG.VN,958557,Long Hau Corp,58
VSC.VN,958757,Vietnam Container Shipping JSC,58
FCM.VN,958477,Fecon Mining JSC,58
PC1.VN,993259,Power Construction JSC No 1,58
DHM.VN,958450,Duong Hieu Trading and Mining JSC,58
EVE.VN,958475,Everpia Vietnam JSC,58
DAG.VN,958442,Dong A Plastic Group JSC,58
HAX.VN,958500,Hang Xanh Motors Service JSC,58
DRH.VN,958463,Dream House Investment Corp,58
FTS.VN,995120,FPT Securities JSC,58
KSB.VN,958546,Binh Duong Mineral and Construction JSC,58
BFC.VN,959139,Binh Dien Fertilizer JSC,58
VHC.VN,958737,Vinh Hoan Corp,58
QBS.VN,958628,Quang Binh Import and Export JSC,58
TDH.VN,958693,Thu Duc Housing Development Corp,58
SAM.VN,958636,Sacom Development and Investment Corp,58
CVT.VN,41967,CMC JSC,58
KDH.VN,958541,Khang Dien House Trading and Investment JSC,58
ATG.VN,986437,An Truong An JSC,58
DRC.VN,958462,Danang Rubber JSC,58
DAH.VN,992674,Dong A Hotel Group JSC,58
NVL.VN,994755,No Va Land Investment Group Corp,58
HDG.VN,958504,Ha Do Group JSC,58
BMP.VN,958402,Binh Minh Plastics JSC,58
KPF.VN,969180,KPF Consultant International Project JSC,58
EIB.VN,958472,Vietnam Export Import Commercial Joint Stock Bank,58
PPC.VN,958610,Pha Lai Thermal Power JSC,58
TVS.VN,958723,Thien Viet Securities JSC,58
CCL.VN,958417,Cuu Long Petro Urban Development and Investment Corp,58
PHC.VN,42111,Phuc Hung Holdings Construction JSC,58
NAF.VN,959141,Nafoods Group JSC,58
PTB.VN,958616,Phu Tai JSC,58
DHC.VN,958448,Dong Hai JSC of Bentre,58
HCM.VN,958502,Ho Chi Minh City Securities Corp,58
AGR.VN,958384,AgriBank Securities JSC,58
NKG.VN,958578,Nam Kim Steel JSC,58
IJC.VN,958531,Becamex Infrastructure Development JSC,58
LCG.VN,958553,Licogi 16 JSC,58
ACL.VN,958380,Cuulong Fish JSC,58
MHC.VN,958565,MHC JSC,58
TRA.VN,958714,Traphaco JSC,58
LGL.VN,958556,Long Giang Investment and Urban Development JSC,58
HAH.VN,958495,Hai An Transport and Stevedoring JSC,58
TLH.VN,958703,Tienlen Steel Corp JSC,58
TDC.VN,958692,Binh Duong Trade and Development JSC,58
CSV.VN,958434,South Basic Chemicals JSC,58
NT2.VN,958584,PetroVietnam Power Nhon Trach 2 JSC,58
SAB.VN,994073,Saigon Beer Alcohol Beverage Corp,58
TVB.VN,958722,Tri Viet Securities Joint Stock Corp,58
LIX.VN,958558,Lix Detergent JSC,58
C32.VN,958412,Construction Investment Corp 3-2,58
VPH.VN,958754,Van Phat Hung Corp,58
BMI.VN,958400,BaoMinh Insurance Corp,58
STG.VN,958677,South Logistics JSC,58
PVT.VN,958622,PetroVietnam Transportation Corp,58
DHG.VN,958449,DHG Pharmaceutical JSC,58
ELC.VN,958473,Electronics Communications Technology Investment Development Corp,58
PXS.VN,958626,Petroleum Equipment Assembly and Metal Structure JSC,58
NVT.VN,958588,Ninh Van Bay Travel Real Estate JSC,58
DIC.VN,958451,DIC Investment and Trading JSC,58
BVH.VN,958409,BaoViet Holdings,58
SHI.VN,958657,Son Ha International Corp,58
HID.VN,985927,Ha Long Investment & Consulting JSC,58
APC.VN,958387,An Phu Irradiation JSC,58
HDC.VN,958503,Ba Ria Vung Tau House Development JSC,58
GMC.VN,958487,Saigon Garment Manufacturing Trade JSC,58
NNC.VN,958581,Nui Nho Stone JSC,58
VOS.VN,958753,Vietnam Ocean Shipping JSC,58
TSC.VN,958717,Techno Agricultural Supplying JSC,58
D2D.VN,958441,Industrial Urban Development JSC No 2,58
CSM.VN,958433,Southern Rubber Industry JSC,58
SJS.VN,958661,Song Da Urban & Industrial Zone Investment and Development JSC,58
CNG.VN,958431,CNG Vietnam JSC,58
TMS.VN,958706,Transimex Saigon Corp,58
BSI.VN,958404,BIDV Securities JSC,58
STK.VN,959145,Century Synthetic Fiber Corp,58
KDC.VN,958540,Kinh Do Corp,58
TS4.VN,958716,Seafood JSC No 4,58
NCT.VN,958575,NoiBai Cargo Terminal Services JSC,58
DHA.VN,958447,Hoa An JSC,58
VNS.VN,958752,Vietnam Sun Corp,58
DVP.VN,958468,Dinhvu Port Investment Development JSC,58
CHP.VN,953721,Central Hydropower JSC,58
CTS.VN,41963,Vietnam Bank For Industry And Trade Securities JSC,58
ITD.VN,958536,Innovative Technology Development Corp,58
PAN.VN,958592,Pan Pacific Corp,58
ADS.VN,985739,Damsan JSC,58
CMG.VN,958426,CMC Corp,58
AGM.VN,958383,An Giang Import Export Co,58
LSS.VN,958560,Lam Son Sugar JSC,58
GIL.VN,958486,Binh Thanh Import Export Production and Trade JSC,58
BCE.VN,958393,Binh Duong Construction & Civil Engineering JSC,58
VTO.VN,958768,Vietnam Tanker JSC,58
UDC.VN,958725,Urban Development and Construction Corp,58
PXT.VN,958627,Petroleum Pipeline & Tank Construction JSC,58
DPR.VN,958460,Dong Phu Rubber JSC,58
CLC.VN,958422,Cat Loi JSC,58
SBA.VN,958639,Song Ba JSC,58
DCL.VN,958444,Cuu Long Pharmaceutical JSC,58
PPI.VN,958611,Pacific Property and Infrastructure Development JSC,58
BIC.VN,958397,BIDV Insurance Corp,58
CIG.VN,958420,COMA 18 JSC,58
TCL.VN,958688,Tan Cang Logistics and Stevedoring JSC,58
C47.VN,958413,Construction JSC 47,58
NAV.VN,958571,Nam Viet JSC,58
VPD.VN,995174,Viet Nam Power Development JSC,58
THG.VN,958696,Tien Giang Investment and Construction JSC,58
SMA.VN,958663,Saigon Machinery Spare Parts JSC,58
HAP.VN,958497,Hapaco Group JSC,58
BTP.VN,958406,Ba Ria Thermal Power JSC,58
HU1.VN,958524,HUD1 Investment and Construction JSC,58
SMB.VN,958664,Sai Gon Mien Trung Beer JSC,58
IMP.VN,958532,Imexpharm Corp,58
PTL.VN,958619,Petro Capital and Infrastructure Investment JSC,58
DQC.VN,958461,Dien Quang JSC,58
VFG.VN,958736,Viet Nam Fumigation JSC,58
SMC.VN,958665,SMC Investment Trading JSC,58
NBB.VN,958572,NBB Investment Corp,58
PAC.VN,958591,Dry Cell and Storage Battery JSC,58
VIP.VN,958741,Vietnam Petroleum Transport JSC,58
GSP.VN,958490,International Gas Product Shipping JSC,58
AGF.VN,958382,Angiang Fisheries Import & Export JSC,58
DSN.VN,958464,Dam Sen Water Park Corp,58
HTI.VN,958521,Idico Infrastructure Development Investment JSC,58
CCI.VN,958416,CuChi Commercial and Industrial Developing Investment JSC,58
PET.VN,958597,PetroVietnam General Services Corp,58
TNA.VN,958708,Thien Nam Trading Import Export Corp,58
TBC.VN,958686,Thac Ba Hydropower JSC,58
TRC.VN,958715,Tay Ninh Rubber JSC,58
SCD.VN,958643,Chuong Duong Beverages JSC,58
TAC.VN,958685,Tuong An Vegetable Oil JSC,58
HMC.VN,958511,Hochiminh City Metal Corp,58
BMC.VN,958399,Binh Dinh Minerals JSC,58
S4A.VN,980218,Sesan 4A Hydroelectric JSC,58
TCR.VN,958691,Taicera Enterprise Co,58
MCG.VN,958562,Vietnam Mechanization Electrification Construction JSC,58
AAM.VN,958375,Mekong Fisheries JSC,58
PGC.VN,958598,Petrolimex Gas Corp JSC,58
GDT.VN,958484,Duc Thanh Wood Processing JSC,58
CMT.VN,958427,Information and Networking Technology JSC,58
VID.VN,958740,Vien Dong Investment Development Trading Corp,58
SAV.VN,958638,Savimex Corp,58
SZL.VN,958683,Sonadezi Long Thanh Shareholding Co,58
BHN.VN,993046,Hanoi Beer Alcohol and Beverage JSC,58
SVC.VN,958681,Saigon General Service Corp,58
TMT.VN,958707,TMT Motor JSC,58
VPK.VN,958755,Vegetable Oil Packing JSC,58
CLG.VN,958423,Cotec Investment and Land-House Development JSC,58
BTT.VN,958407,Ben Thanh Trading Service JSC,58
BBC.VN,958392,Bibica Corp,58
SFI.VN,958653,Sea & Air Freight International,58
CAV.VN,958415,Vietnam Electric Cable Corp,58
KHP.VN,958543,Khanh Hoa Power JSC,58
LCM.VN,958554,Lao Cai Mineral Exploitation and Processing JSC,58
ABT.VN,958377,Bentre Aquaproduct Import and Export JSC,58
TEG.VN,962453,TECGROUP JSC,58
DTL.VN,958467,Dai Thien Loc Corp,58
TMP.VN,958705,Thac Mo Hydropower JSC,58
RAL.VN,958630,Rangdong Light source and Vacuum flask JSC,58
ST8.VN,958675,Sieu Thanh JSC,58
MDG.VN,958564,Mien Dong JSC,58
L10.VN,958550,Lilama 10 JSC,58
VSI.VN,958760,Water Supply Sewerage Construction and Investment JSC,58
LAF.VN,958551,Long An Food Processing Export JSC,58
PDN.VN,958595,Dong Nai Port JSC,58
TIP.VN,985154,Tin Nghia Industrial Park Development JSC,58
ASP.VN,958389,An Pha Petroleum Group JSC,58
CMV.VN,958428,Camau Trading JSC,58
PIT.VN,958603,Petrolimex International Trading JSC,58
VMD.VN,958745,Vimedimex Medi Pharma JSC,58
VNL.VN,958750,Vinalink International Freight Forwarders,58
TLG.VN,958702,Thien Long Group Corp,58
HAS.VN,958499,Hacisco JSC,58
GTA.VN,958491,Thuan An Wood Processing JSC,58
FDC.VN,958479,Foreign Trade Development and Investment Corp of Ho Chi Minh City,58
RIC.VN,958634,Royal International Corp,58
NSC.VN,958583,National Seed JSC,58
SHP.VN,958658,Southern Hydropower JSC,58
RDP.VN,958632,RangDong Plastic JSC,58
BRC.VN,958403,Ben Thanh Rubber JSC,58
TYA.VN,958724,Taya Vietnam Electric Wire and Cable JSC,58
DMC.VN,958454,DOMESCO Medical Import Export JSC,58
HU3.VN,958525,HUD3 Investment and Construction JSC,58
SII.VN,958659,Sai Gon Water Infrastructure Corp,58
SRF.VN,958671,Seaprodex Refrigeration Industry Corp,58
ITC.VN,958535,Investment and Trading of Real Estate JSC,58
PJT.VN,958605,Petrolimex Joint Stock Tanker Co,58
VIS.VN,958742,Viet Nam Italy Steel JSC,58
HTL.VN,958522,Truong Long Engineering and Auto JSC,58
HRC.VN,958517,Hoa Binh Rubber JSC,58
SSC.VN,958672,Southern Seed Corp,58
ICF.VN,958529,Investment Commerce Fisheries Corp,58
VAF.VN,958729,Van Dien Fused Magnesium Phosphate Fertilizer JSC,58
CDC.VN,958418,Chuong Duong Corp,58
LBM.VN,958552,Lam Dong Mineral and Building Material JSC,58
PGD.VN,958599,Petrovietnam Low Pressure Gas Distribution JSC,58
POM.VN,958608,Pomina Steel Corp,58
TIX.VN,958700,Tan Binh Import Export JSC,58
TPC.VN,958713,Tan Dai Hung Plastic JSC,58
PXI.VN,958623,Petroleum Industrial and Civil Construction JSC,58
SVI.VN,958682,Bien Hoa Packaging Co,58
ACC.VN,958378,Becamex Asphalt and Concrete JSC,58
DTA.VN,958465,De Tam JSC,58
EMC.VN,958474,ThuDuc Electro Mechanical JSC,58
MCP.VN,958563,My Chau Printing & Packaging Holdings Co,58
PTC.VN,958617,Post and Telecommunications Investment and Construction JSC,58
SC5.VN,958642,Construction JSC No5,58
TIE.VN,958698,Telecommunications Industry Electronics JSC,58
DAT.VN,960895,Travel Investment and Seafood Development Corp,58
ACB.VN,41913,Asia Commercial Bank,58
ADC.VN,41914,ADC,58
ALV.VN,41916,VAM,58
AMC.VN,41917,Asia Mineral,58
AME.VN,41918,Alphanam M&E,58
AMV.VN,41919,Amvibiotech,58
API.VN,41921,Apec Investmen,58
APP.VN,41922,APP,58
APS.VN,41923,Apec Securitie,58
ARM.VN,41924,Airimex JSC,58
ASA.VN,41925,WMT Sana Joint,58
B82.VN,41926,JSC No 482,58
BBS.VN,41927,But Son Cement Packing JSC,58
BCC.VN,41928,Bim Son Cement JSC,58
BDB.VN,41929,Bidibook,58
BED.VN,41930,Danangbook,58
BHC.VN,41931,Bien Hoa Concrete JSC,58
BHT.VN,41932,Bach Dang TMC Construction Investment JSC,58
BHV.VN,41933,Viglacera Ba Hien JSC,58
BLF.VN,41935,Bac Lieu Fis,58
BPC.VN,41936,Bim Son Packing JSC,58
BSC.VN,41937,BTSC,58
BST.VN,41938,Bisathico,58
BTS.VN,41940,But Son Cement JSC,58
BVG.VN,41941,Bac Viet Steel JSC,58
BVS.VN,41942,Baoviet Securities Company,58
BXH.VN,41943,HCPC,58
C92.VN,41944,Engineering Construction JSC No492,58
CAN.VN,41945,Ha Long Canned Food JSC,58
CAP.VN,41946,Yen Bai Forest JSC,58
CCM.VN,41947,Can Tho Mineral and Cement JSC,58
CID.VN,41949,Construction and Infrastructure Development JSC,58
CJC.VN,41950,Central Area Electrical Mechanical,58
CKV.VN,41951,Cokyvina,58
CMI.VN,41953,Cavico Mineral,58
CMS.VN,41954,Vietnam Constr,58
CPC.VN,41955,CPC,58
CSC.VN,41956,Cotana. JSC,58
CT6.VN,41957,JSCono6,58
CTA.VN,41958,CTA,58
CTB.VN,41959,Hai Duong Pump Manufacturing JSC,58
CTC.VN,41960,Gialai Ctc,58
CTN.VN,41962,Underground Works Construction JSC,58
CTX.VN,41965,Viet Nam Inves,58
CVN.VN,41966,Vinam.JSC,58
CX8.VN,41968,Constrexim,58
D11.VN,41969,Real Estate 11,58
DAC.VN,41970,Viglacera Dong Anh JSC,58
DAD.VN,41971,Deidco,58
DAE.VN,41972,Educational Book In Da Nang City,58
DBC.VN,41973,Dabaco,58
DBT.VN,41974,Bepharco,58
DC2.VN,41975,DIC No 2,58
DC4.VN,41976,DIC No 4,58
DCS.VN,41977,Dai Chau JSC,58
DHP.VN,41980,Hai Phong Elec,58
DHT.VN,41981,Hataphar,58
DID.VN,41982,DIC DONG TIEN,58
DIH.VN,41983,DIC HOI AN,58
DL1.VN,41984,DLGL INDPS,58
DLR.VN,41985,DALAT REALCO,58
DNC.VN,41986,HEWMAC,58
DNM.VN,41987,DANAMECO MEDIC,58
DNP.VN,41988,Dong Nai Plastic Construction JSC,58
DNY.VN,41989,DNY,58
DPC.VN,41990,Da Nang Plastic JSC,58
DST.VN,41991,Nam Dinh Educational Book&Equipment,58
DXP.VN,41992,Doan Xa Port JSC,58
DZM.VN,41993,DZIMA,58
EBS.VN,41994,Educational Book JSC,58
ECI.VN,41995,ECICO.JSC,58
EFI.VN,41996,Education Financial Investment JSC,58
EID.VN,41997,HEID,58
FDT.VN,41998,FIDITOUR JSC,58
GGG.VN,42001,GiaiPhong Motor JSC,58
GLT.VN,42002,GLT CORP,58
GMX.VN,42003,MY XUAN BRICK,58
HAD.VN,42004,HAD,58
HAT.VN,42005,HABECO TRADING,58
HBE.VN,42006,HTBEECO,58
HBS.VN,42007,HBS,58
HCC.VN,42008,Hoa Cam Concrete JSC,58
HCT.VN,42009,Haiphong Cement Transport JSC,58
HDA.VN,42010,HSDA,58
HDO.VN,42011,Hung Dao Container JSC,58
HEV.VN,42012,Higher Educational&Vocational Book,58
HGM.VN,42013,HGM,58
HHC.VN,42014,Hai Ha Confectionery JSC,58
HHG.VN,42015,HOANG HA JSC,58
HJS.VN,42017,Nam Mu Hydropower JSC,58
HLC.VN,42018,VHLC,58
HLD.VN,42019,HUDLAND REAL E,58
HLY.VN,42020,Ha Long No. 1 Viglacera JSC,58
HMH.VN,42021,HAMI CORP,58
HNM.VN,42022,Hanoimilk JSC,58
HOM.VN,42023,HOM,58
HPB.VN,42024,PP Pack Making JSC,58
HAC.VN,42025,Hai Phong Securities JSC,58
HST.VN,42027,HST,58
HTC.VN,42029,HOTRACO,58
HTP.VN,42030,Hoaphat Textbook Printing JSC,58
HUT.VN,42031,HUD - TASCO,58
HVT.VN,42032,VICCO,58
ICG.VN,42033,INCOMEX,58
IDJ.VN,42034,IDJ FINANCIAL,58
IDV.VN,42035,VPID,58
INC.VN,42037,IDICO INCON,58
INN.VN,42038,APP PRINT JSC,58
ITQ.VN,42039,THIEN QUANG GR,58
IVS.VN,42040,VNS SECURITY,58
KHB.VN,42042,HBM.JSC,58
KHL.VN,42043,Hung Long Mineral and Building Material JSC,58
KKC.VN,42044,PTRAMESCO,58
KMT.VN,42046,CEVIMETAL,58
KSD.VN,42047,KSD,58
KSQ.VN,42048,QUANG ANH MINE,58
KST.VN,42049,KASATI,58
KTS.VN,42050,KTS,58
KTT.VN,42051,KTT,58
L14.VN,42052,LICOGI 14,58
L18.VN,42053,LICOGI - 18,58
L35.VN,42054,LILAMA.EMC,58
L43.VN,42055,LILAMA 45.3 JS,58
L44.VN,42056,Lilama 45.4 JSC,58
L61.VN,42057,LILAMA 69-1,58
L62.VN,42058,LILAMA 69-2 CO,58
LAS.VN,42059,LAM THAO FERTI,58
LBE.VN,42060,LABECO,58
LCD.VN,42061,LILAMA TESTING,58
LCS.VN,42062,LICOGI 16.6 JS,58
LDP.VN,42063,LADOPHAR,58
LHC.VN,42064,LHC,58
LIG.VN,42065,LICOGI 13,58
LM3.VN,42066,Lilama 3 JSC,58
LM7.VN,42067,LILAMA 7,58
LO5.VN,42068,LILAMA 5.JSC,58
LTC.VN,42069,Low Current - Telecom JSC,58
LUT.VN,42070,LUTACO,58
MAC.VN,42071,MASERCO,58
MCC.VN,42073,M & C,58
MCF.VN,42074,MECOFOOD,58
MCO.VN,42076,Investment And Construction JSC No1,58
MDC.VN,42077,VMDC,58
MEC.VN,42078,Song Da Mechanical Assembling JSC,58
MHL.VN,42079,Minh Huu Lien JSC,58
MIC.VN,42080,Quang Nam Mineral Industry Corp,58
MIM.VN,42081,MIMECO JSC,58
MKV.VN,42082,MEKOVET,58
NAG.VN,42085,NAGAKAWA VIETN,58
NBC.VN,42086,VNBC,58
NBP.VN,42087,NBTPC,58
NDN.VN,42088,DANANG HOUSING,58
NDX.VN,42089,DA NANG HOUSIN,58
NET.VN,42090,NETCO,58
NGC.VN,42091,NGOPREXCO,58
NHA.VN,42092,HA NOI SOUTH,58
NHC.VN,42093,Nhi Hiep Brick-Tile JSC,58
NPS.VN,42096,PhuThinh NhaBe Garment JSC,58
NST.VN,42098,Ngan Son JSC,58
NTP.VN,42099,Tien Phong Plastic JSC,58
NVB.VN,42100,NAVIBANK,58
OCH.VN,42102,OCH.JSC,58
ONE.VN,42103,ONE CORP,58
ORS.VN,42104,ORS,58
PCG.VN,42105,PVGASCITY,58
PCT.VN,42106,CGT,58
PDC.VN,42107,PTC,58
PFL.VN,42108,Petroleum Dong Do JSC,58
PGS.VN,42109,Petrovietnam Southern Gas JSC,58
PGT.VN,42110,P TAXI SAIGON,58
PHH.VN,42112,HONGHA VIETNAM,58
PID.VN,42114,Petroleum Interior Decoration JSC,58
PIV.VN,42115,PIV JSC,58
PJC.VN,42116,Petrolimex Hanoi,58
PLC.VN,42117,Petrolimex Petrochemical JSC,58
PMC.VN,42118,PHARMEDIC JSC,58
PMS.VN,42119,Petroleum Mechanical JSC,58
POT.VN,42120,Post&Telecommunication Equipment,58
PPE.VN,42121,PetroVietnam Power Engineering Consulting JSC,58
PPG.VN,42122,Phu Phong Corp,58
PPP.VN,42123,PP PHARCO,58
PPS.VN,42124,PV POWER SERVI,58
PRC.VN,42125,PORTSERCO,58
PSC.VN,42126,Petrolimex Saigon,58
PSD.VN,42127,PETROLEUM GENE,58
PSG.VN,42128,Sai Gon Petroleum Construction and Investment JSC,58
PSI.VN,42129,PSI,58
PTI.VN,42130,POST TELECOMMU,58
PTM.VN,42131,PTM Automobile Service Trading and Manufacturing JSC,58
PTS.VN,42132,Haiphong PTS JSC,58
PV2.VN,42133,PVI INVEST,58
PVA.VN,42134,PetroVietnam Nghe An Construction JSC,58
PVC.VN,42135,Petrovietnam Drilling Mud JSC,58
PVE.VN,42136,Petrovietnam Engineering JSC,58
PVG.VN,42137,PVGAS NORTH,58
PVI.VN,42138,Petrovietnam Insurance JSC,58
PVL.VN,42139,PETROLEUM REAL,58
PVR.VN,42140,Petrovietnam Premier Recreation JSC,58
PVS.VN,42141,Petroleum Technical Services,58
PVV.VN,42142,VINACONEX-PVC,58
PVX.VN,42143,PVC,58
PXA.VN,42144,PetroVietnam Nghe An Investment & Trading JSC,58
QCC.VN,42145,Quangnam Post Telecoms Construction and Services Corp,58
QHD.VN,42146,VIWELCO,58
QNC.VN,42147,QNCC,58
QST.VN,42148,Q.E.E.J.CO,58
QTC.VN,42149,COTRACO-QNA,58
RCL.VN,42150,Cholon Real Estate JSC,58
S12.VN,42152,Song Da No 12 JSC,58
S55.VN,42153,Song Da 505 JSC,58
S96.VN,42156,Song Da No 9.06 JSC,58
S99.VN,42157,Song Da 909 JSC,58
SAF.VN,42158,Safoco Foodstuff JSC,58
SAP.VN,42159,Textbook Printing JSC in Ho Chi Minh City,58
SCJ.VN,42160,Sai Son Cement JSC,58
SCL.VN,42161,SONGDA CAO CUO,58
SD2.VN,42164,Song Da No. 2 JSC,58
SD4.VN,42165,SONG DA 4,58
SD5.VN,42166,Song Da No. 5 JSC,58
SD6.VN,42167,Song Da N0. 6 JSC,58
SD7.VN,42168,Song Da 7 JSC,58
SD9.VN,42169,Song Da No. 9 JSC,58
SDA.VN,42170,Song Da Manpower Supply&Trading JSC,58
SDB.VN,42171,Song Da 207 JSC,58
SDC.VN,42172,Song Da Consulting JSC,58
SDD.VN,42173,SONG DA IC,58
SDE.VN,42174,SEEC,58
SDG.VN,42175,SADICO CAN THO,58
SDN.VN,42177,Dong Nai Paint Corporation,58
SDP.VN,42178,SOTRACO,58
SDT.VN,42179,Song Da N0 10. JSC,58
SDU.VN,42180,SURICOD.JSC,58
SDY.VN,42181,Song Da Yaly Cement JSC,58
SEB.VN,42182,MIEN TRUNG PID,58
SED.VN,42183,EDID,58
SFN.VN,42185,Saigon Fishing Net JSC,58
SGC.VN,42186,Sagiang Import&Export Corporation,58
SGD.VN,42187,Educational Book In Ho Chi Minh,58
SGH.VN,42188,Saigon Hotel JSC,58
SHA.VN,42189,Son Ha Sai Gon JSC,58
SHB.VN,42190,SHB,58
SHN.VN,42191,HANIC,58
SHS.VN,42192,SHS,58
SIC.VN,42193,Song Da Investment Development JSC,58
SJ1.VN,42194,Seafood JSC No 1,58
SJC.VN,42195,Song Da 1.01 JSC,58
SJE.VN,42196,Song Da N011 JSC,58
SJM.VN,42197,Song Da 19 JSC,58
SLS.VN,42199,SON LA SUGAR,58
SMT.VN,42200,SMT,58
SPI.VN,42202,SPILIT STONE,58
SPP.VN,42203,SAPLASTIC. JSC,58
SQC.VN,42204,Sai Gon Quy Nhon Mining Corp,58
SRA.VN,42205,SARA. JSC,58
SRB.VN,42206,Sara Group JSC,58
SSM.VN,42208,VNECO.SSM,58
STC.VN,42209,Book And Educational Equipment JSC,58
STP.VN,42210,Song Da Industry Trade JSC,58
SVN.VN,42211,Solavina JSC,58
TAG.VN,42212,Tran Anh Digital World JSC,58
TBX.VN,42214,TBX,58
TC6.VN,42215,VCSC,58
TCS.VN,42216,VCASC,58
TDN.VN,42218,VDNC,58
TET.VN,42219,TEXTACO,58
THB.VN,42221,THB,58
THT.VN,42222,VHTC,58
TIG.VN,42223,THANGLONG INVE,58
TJC.VN,42224,Transportation&Trading Services JSC,58
TKC.VN,42225,TAKCO,58
TKU.VN,42226,Tung Kuang Industrial JSC,58
TMC.VN,42227,Thu Duc Trading&Import Export JSC,58
TMX.VN,42228,CEMENT.T. JSC,58
TNG.VN,42229,Tng Investment And Trading JSC,58
TPH.VN,42230,Hanoi Textbooks Printing JSC,58
TPP.VN,42231,TAPLAST,58
TSB.VN,42232,TIBACO,58
TST.VN,42234,Telecommunication Technical Service,58
TTC.VN,42235,Thanh Thanh JSC,58
TTZ.VN,42236,TIEN TRUNG INV,58
TV2.VN,42237,PECC 2,58
TV3.VN,42238,PECC3,58
TV4.VN,42239,PECC4,58
TVD.VN,42240,TVD,58
TXM.VN,42241,Gypsum And Cement JSC,58
V12.VN,42243,VINACONEX 12,58
V15.VN,42244,Vinaconex No15 JSC,58
V21.VN,42245,VINACONEX 21,58
VAT.VN,42246,VATEL,58
VBC.VN,42247,VBC,58
VBH.VN,42248,Viettronics Binh Hoa JSC,58
VC1.VN,42249,VINACONEX 1,58
VC2.VN,42250,Viet Nam Construction JSC No. 2,58
VC3.VN,42251,Vietnam Construction JSC No. 3,58
VC5.VN,42252,VINACONEX NO 5,58
VC6.VN,42253,VINACONEX 6,58
VC7.VN,42254,VINACONEX NO7,58
VC9.VN,42255,VINACONEX 9 JS,58
VCC.VN,42256,VINACONEX 25,58
VCG.VN,42257,Vietnam Construction and Import Export JSC,58
VCM.VN,42258,VINACONEX MEC,58
VCR.VN,42259,VINACONEX ITC,58
VCS.VN,42260,Advanced Compound Stone JSC,58
VDL.VN,42262,Lam Dong Foodstuff JSC,58
VE1.VN,42264,VNECO1,58
VE2.VN,42265,VNECO2,58
VE3.VN,42266,VNECO 3,58
VE4.VN,42267,VNECO4 Electricity Construction JSC,58
VE8.VN,42268,VNECO 8 ELECTR,58
VE9.VN,42269,VNECO 9,58
VFR.VN,42270,Transport & Chartering Corp,58
VGP.VN,42271,Vegetable Port JSC,58
VGS.VN,42272,VGS,58
VHH.VN,42273,Thanh Dat Investment House Trading JSC,58
VHL.VN,42274,VIGLACERA HALO,58
VIE.VN,42275,VITECO VIETNAM,58
VIG.VN,42276,VICS,58
VIT.VN,42277,VIT,58
VIX.VN,42278,VINCOMSC,58
VKC.VN,42279,VKC,58
VLA.VN,42280,VLA,58
VMC.VN,42281,Machinery Erection&Construction JSC,58
VNC.VN,42282,Vietnam Superintendence&Inspection,58
VNF.VN,42284,VINAFREIGHT,58
VNR.VN,42286,Vietnam National Reinsurance,58
VNT.VN,42287,VAN CARGOES,58
VPC.VN,42288,Viet Nam Power Investment and Development JSC,58
VTC.VN,42289,VTC Telecommunications JSC,58
VTL.VN,42290,Thanglong JSC,58
VTS.VN,42291,Viglacera Tu Son Ceramic JSC,58
VTV.VN,42292,Materials Transport Cement JSC,58
VXB.VN,42293,VXB,58
WCS.VN,42294,BXMT,58
WSS.VN,42295,WSS,58
YBC.VN,42297,Yenbai Cement and Minerals JSC,58
KLF.VN,43221,FLC Global JSC,58
PBP.VN,945192,Petrovietnam Pac,58
KVC.VN,950608,Kim Vi Inox Import Export,58
DPS.VN,953130,Soc Son Development Investment JSC,58
BII.VN,953719,Bao Thu Industrial Development and Investment JSC,58
CEO.VN,953720,CEO Group JSC,58
DGC.VN,953722,Ducgiang Chemicals & Detergent Powder Joint Co,58
FID.VN,953936,Vietnam Enterprise Investment and Development JSC,58
HKB.VN,955800,Ha Noi Kinh Bac Agriculture and Food JSC,58
KSK.VN,955801,Mineral Ferrous Metallergy JSC,58
MAS.VN,955802,Danang Airport Services JSC,58
NDF.VN,955803,Nam Dinh Export Foodstuff Agricultural Products,58
NHP.VN,955804,NHP Production Import Export JSC,58
PSE.VN,955805,SouthEast Petrovietnam Fertilizer and Chemicals JSC,58
PVB.VN,955806,PetroVietnam Coating JSC,58
THS.VN,955807,Song Da Thanh Hoa JSC,58
TVC.VN,955808,Tri Viet Management Investment Corp,58
VMI.VN,955809,Visaco Mineral and Investment JSC,58
SMN.VN,955957,South Books & Educational Equipment JSC,58
ABI.VN,958376,Agriculture Bank Insurance JSC,58
ACE.VN,958379,An Giang Centrifugal Concrete JSC,58
ACM.VN,958381,A Cuong Mineral Group JSC,58
ATA.VN,958390,NTACO Corp,58
AVF.VN,958391,Anvifish JSC,58
BMJ.VN,958401,Becamex Mineral JSC,58
BT6.VN,958405,Beton 6 Corp,58
BTW.VN,958408,Ben Thanh Water Supply JSC,58
BVN.VN,958410,Vietnam Cotton JSC,58
C21.VN,958411,Century 21 JSC,58
CAD.VN,958414,Cadovimex Seafood Import Export and Processing JSC,58
CDO.VN,958419,Consultancy Design and Urban Development JSC,58
CLL.VN,958424,Cat Lai Port JSC,58
CLW.VN,958425,Cho Lon Water Supply JSC,58
CNC.VN,958430,Traphaco High Tech JSC,58
COM.VN,958432,Materials Petroleum JSC,58
CT3.VN,958435,Project 3 Construction Investment JSC,58
CTT.VN,958439,Vinacomin Machinery JSC,58
CYC.VN,958440,Chang Yih Ceramic JSC,58
DBM.VN,958443,Daklak Pharmaceutical Medical Equipment JSC,58
DDN.VN,958445,Danang Pharmaceutical Medical Equipment JSC,58
DDV.VN,958446,DAP VINACHEM JSC,58
DNL.VN,958456,Da Nang Logistics JSC,58
DNS.VN,958457,Da Nang Steel JSC,58
DP3.VN,958458,Central Pharmaceutical JSC No3,58
DTC.VN,958466,Viglacera Dong Trieu JSC,58
DXL.VN,958470,Lang Son Tourism and Import Export JSC,58
DXV.VN,958471,Da Nang Construction Building Materials Vicem JSC,58
FBA.VN,958476,FBA International Group Corp,58
GHC.VN,958485,Gia Lai Hydropower JSC,58
GSM.VN,958489,Huong Son Hydro Power JSC,58
GTT.VN,958493,Thuan Thao Corp,58
HDM.VN,958505,Hue Textile Garment JSC,58
HHA.VN,958506,Hong Ha Stationery JSC,58
HIG.VN,958508,HIPT Group JSC,58
HLA.VN,958509,Huu Lien Asia Corp,58
HLG.VN,958510,HOANG LONG Group,58
HPD.VN,958513,Dak Doa Hydropower JSC,58
HPP.VN,958515,Hai Phong Paint JSC,58
HSI.VN,958519,General Materials Biochemistry Fertilizer JSC,58
HTV.VN,958523,Ha Tien Transport JSC,58
HVA.VN,958526,Hung Viet Green Agriculture JSC,58
HVX.VN,958528,Vicem Hai Van Cement JSC,58
IN4.VN,958533,No 4 Printing JSC,58
KAC.VN,958538,Khang An Investment Real Estate JSC,58
KHA.VN,958542,Khanh Hoi Investment and Services Corp,58
KTB.VN,958549,Tay Bac Minerals Investment JSC,58
LGC.VN,958555,CII Bridges and Roads Investment JSC,58
LM8.VN,958559,Lilama 18 JSC,58
MTG.VN,958567,MT Gas JSC,58
MTH.VN,958568,Ha Dong Environment Public Service JSC,58
MTP.VN,958569,Medipharco Tenamyd Central Pharmaceutical JSC,58
NDC.VN,958576,Nam Duoc JSC,58
NMK.VN,958580,Civil Engineering Construction JSC No510,58
NOS.VN,958582,Northern Shipping JSC,58
NTB.VN,958585,Transport Engineering Construction and Business Investment JSC 584,58
NTW.VN,958587,Nhon Trach Water Supply JSC,58
OPC.VN,958590,OPC Pharmaceutical JSC,58
PCE.VN,958593,Central PetroVietnam Fertilizer and Chemicals JSC,58
PDB.VN,958594,Pacific Dinco Corp,58
PGI.VN,958600,Petrolimex Insurance Corp,58
PHP.VN,958601,Port of Hai Phong JSC,58
PJS.VN,958604,Phu Hoa Tan Water Supply JSC,58
PNC.VN,958606,Phuong Nam Cultural JSC,58
POV.VN,958609,Vung Ang Petroleum JSC,58
PRO.VN,958612,Procimex Vietnam JSC,58
PSB.VN,958613,Sao Mai Ben Dinh Petroleum Investment JSC,58
PSL.VN,958614,Phu Son Livestock JSC,58
PSP.VN,958615,Dinh Vu Petroleum Service Port JSC,58
PTK.VN,958618,Phu Thinh Metallurgy JSC,58
PTT.VN,958620,Indochina Petroleum Transportation JSC,58
PXL.VN,958624,Idico-Petroleum Trading Construction Investment JSC,58
PXM.VN,958625,Mientrung Petroleum Construction JSC,58
RCD.VN,958631,Rubber Real Estate Construction JSC,58
S27.VN,958635,Song Da 27 JSC,58
SAS.VN,958637,Southern Airports Services JSC,58
SBS.VN,958640,Sacombank Securities JSC,58
SCI.VN,958644,Songda 9 Construction and Investment JSC,58
SD3.VN,958645,Song Da 3 JSC,58
SDI.VN,958647,Saidong Urban Development & Investment JSC,58
SDJ.VN,958648,Song Da No 25 JSC,58
SDK.VN,958649,Mechanical Engineering Metallurgy JSC,58
SFC.VN,958651,Saigon Fuel JSC,58
SGT.VN,958656,Saigon Telecommunication & Technologies Corp,58
SNC.VN,958666,Nam Can Seaproducts Import Export JSC,58
SPC.VN,958667,Saigon Plant Protection JSC,58
SPH.VN,958668,Hanoi Seaproducts Import Export JSC,58
SPM.VN,958669,SPM Corp,58
SRC.VN,958670,Sao Vang Rubber JSC,58
SSF.VN,958673,SaiGon Shoes JSC,58
STL.VN,958678,Song Da Thang Long JSC,58
STT.VN,958679,Saigontourist Transport Corp,58
STV.VN,958680,Viet Nam Stone Work Top Fabrication JSC,58
TA9.VN,958684,Thanh An 96 Installation and Construction JSC,58
TBD.VN,958687,Dong Anh Electrical Equipment Manufacturing JSC,58
TCO.VN,958690,Duyen Hai Multi Modal Transport JSC,58
TDW.VN,958694,Thu Duc Water Supply JSC,58
TGP.VN,958695,Truong Phu JSC,58
TIS.VN,958699,Thai Nguyen Iron And Steel Joint Stock Corp,58
TL4.VN,958701,Hydraulics Construction No4 JSC,58
TLT.VN,958704,Viglacera Thang Long JSC,58
TNB.VN,958709,Nha Be Steel JSC,58
TNC.VN,958710,Thong Nhat Rubber JSC,58
TNM.VN,958711,Tranimexco Transportation Import-Export and Construction JSC,58
TTP.VN,958719,Tan Tien Plastic Packaging JSC,58
TTR.VN,958720,Tourism Trade and Investment JSC,58
TV1.VN,958721,Power Engineering Consulting JSC 1,58
UDJ.VN,958726,Becamex Urban Development JSC,58
UIC.VN,958727,Idico Urban and House Development JSC,58
V11.VN,958728,Vietnam Construction JSC No 11,58
VCA.VN,958730,Bien Hoa Steel JSC,58
VCF.VN,958732,Vinacafe Bien Hoa JSC,58
VDT.VN,958733,Binh Tay Steel Wire Netting JSC,58
VES.VN,958734,Meca Vneco Investment and Electricity Construction JSC,58
VFC.VN,958735,Vinafco JSC,58
VKP.VN,958743,Viky Plastic JSC,58
VLF.VN,958744,Vinh Long Cereal and Food Corp,58
VNA.VN,958746,Vinaship JSC,58
VNH.VN,958749,Viet Nhat Seafood Corp,58
VSG.VN,958758,South Vietnam Container Shipping JSC,58
VSH.VN,958759,Vinh Son Song Hinh Hydropower JSC,58
VSP.VN,958761,Viet Hai Shipping and Real Properties Corp,58
VST.VN,958762,Vietnam Sea Transport and Chartering JSC,58
VT8.VN,958763,Transport Service No 8 JSC,58
VTA.VN,958764,Vitaly JSC,58
VTB.VN,958765,Viettronics Tan Binh JSC,58
VTI.VN,958767,Textile Garment Import Export and Production JSC,58
VTX.VN,958769,Multi Modal Transport Holding Co,58
WSB.VN,958770,Western Sai Gon Beer JSC,58
XPH.VN,958771,Hanoi Soap JSC,58
BCP.VN,959138,Becamex Pharmaceutical JSC,58
G20.VN,959140,G.Home Textile Investment JSC,58
PMB.VN,959142,North PetroVietnam Fertilizer & Chemicals JSC,58
PMP.VN,959143,Dam Phu My Packaging JSC,58
PSW.VN,959144,South West PetroVietnam Fertilizer and Chemicals JSC,58
VNP.VN,959146,Viet Nam Plastic Corp,58
VPS.VN,959147,Vietnam Pesticide JSC,58
CGP.VN,960894,CanGio Pharmaceutical JSC,58
HNF.VN,960898,HuuNghi Food JSC,58
VMS.VN,960899,Vietnam Maritime Development JSC,58
NDP.VN,961713,National Day Pharmaceutical JSC of HCM City,58
KCB.VN,962007,Cao Bang Mineral and Metallurgical JSC,58
MBG.VN,962008,Viet Nam Trading and Construction Development Investment JSC,58
PTD.VN,962009,Phuc Thinh Design Construction Trading Corp,58
TFC.VN,962010,TRANGCORP Corporation JSC,58
HHV.VN,962449,Hai Van Tunnel Management and Operation JSC,58
ITS.VN,962450,TKV Investment Trading and Services JSC,58
PCN.VN,962451,DMC Northern Petroleum Chemicals JSC,58
SGO.VN,962452,Sai Gon Vegetable Oil JSC,58
VEF.VN,962454,Vietnam Exhibition Fair Centre JSC,58
VSA.VN,962455,Vietnam Ocean Shipping Agency Corp,58
HPM.VN,962605,HOANG PHUC Mineral Trading and Construction JSC,58
MPT.VN,962606,Phu Thanh Garment JSC,58
TVN.VN,962607,Viet Nam Steel Corp,58
DNW.VN,969178,Dong Nai Water JSC,58
IFC.VN,969179,Saigon Industrial Foodstuffs JSC,58
PPY.VN,969181,PetroVietnam Oil Phu Yen JSC,58
TND.VN,969182,Tay Nam Da Mai Coal JSC Vinacomin,58
VGG.VN,969183,VietTien Garment Corp,58
ATS.VN,976234,Atesco Industrial Cartering JSC,58
CDN.VN,976235,Danang Port JSC,58
DCT.VN,976236,Dong Nai Roofsheet & Construction Material JSC,58
KDM.VN,976238,Long Thanh Construction and Trading JSC,58
MBS.VN,976239,MB Securities JSC,58
PNG.VN,976241,Phu Nhuan Trading JSC,58
CLM.VN,976501,Vinacomin Coal Import Export JSC,58
SGP.VN,976502,Saigon Port JSC,58
HD2.VN,978777,Housing Development Investment HUD2 JSC,58
MST.VN,978778,1168 Construction JSC,58
MTL.VN,978779,Tu Liem Urban Environment Service JSC,58
NSG.VN,978780,Sai Gon Plastic JSC,58
CNN.VN,980217,Consultant and Inspection of Construction Technology and Equipment JSC,58
CLH.VN,985153,La Hien Cement JSC,58
IPA.VN,985740,Ipa Investments Group JSC,58
MGC.VN,985741,Vinacomin Mining Geology JSC,58
PMJ.VN,985742,Posts and Telecommunications Material Supply JSC,58
BEL.VN,985926,Viettronics Bien Hoa JSC,58
VNB.VN,986055,Viet Nam Books JSC,58
CTP.VN,986224,Thuong Phu JSC,58
KSV.VN,986225,Vinacomin Minerals Holding Corp,58
BSP.VN,986438,Sai Gon Phu Tho Beer JSC,58
RAT.VN,986439,Railway Transport and Trade JSC,58
FDG.VN,986637,Dongthap Trading Corp,58
HMG.VN,989495,Vnsteel Hanoi Steel Corp,58
YRC.VN,989496,Yen Lao Railway JSC,58
VOC.VN,989637,Viet Nam Vegetable Oils Industry Corp,58
VLB.VN,991142,Bien Hoa Building Materials Production and Construction JSC,58
HND.VN,991208,Hai Phong Thermal Power JSC,58
L63.VN,991209,Lilama 69-3 JSC,58
HRG.VN,992675,Hanoi Rubber JSC,58
SHX.VN,992676,Saigon Train JSC,58
TTH.VN,992926,Tien Thanh Service and Trading JSC,58
GTS.VN,993047,Saigon Traffic Construction JSC,58
L45.VN,993049,Lilama 45.1 JSC,58
MVB.VN,993050,Vinacomin Viet Bac Mining Industry Holding Corp,58
SPB.VN,993051,Phu Bai Spinning Mill JSC,58
TW3.VN,993052,Central Pharmaceutical N3 JSC,58
VSN.VN,993053,Vissan JSC,58
DND.VN,993211,Dong Nai Material & Building Investment JSC,58
ACV.VN,993310,Airports Corporation of Viet Nam,58
BSG.VN,993311,Saigon Passenger Transport JSC,58
VCW.VN,993312,Vinaconex Water Supply JSC,58
HLR.VN,994002,Halang Railway JSC,58
AFX.VN,994068,An Giang Agriculture and Foods Import-Export JSC,58
CMF.VN,994069,Cholimex Food JSC,58
HES.VN,994070,Hanoi Entertainment Services Corp,58
NS2.VN,994071,Hanoi Water Supply Number 2 JSC,58
RCC.VN,994072,Railway Construction Corporation JSC,58
CVC.VN,994436,Electromechanics Materials JSC,58
DOC.VN,994437,Dong Nai JSC of Agricultural Material,58
DTK.VN,994438,Vinacomin Power Holding Corp,58
HEC.VN,994439,Hydraulic Engineering Consultant Corp II,58
HNP.VN,994440,Hanel Plastics JSC,58
NTC.VN,994441,Nam Tan Uyen JSC,58
PVM.VN,994442,Petrovietnam Machinery Technology JSC,58
PVP.VN,994443,Pacific Petroleum Transportation JSC,58
QNS.VN,994444,Quang Ngai Sugar JSC,58
SZE.VN,994445,Sonadezi Environment JSC,58
VCP.VN,994446,Vinaconex Power Development and Construction Investment JSC,58
VPR.VN,994447,Vina Printing and Trading Corp,58
ANT.VN,994636,An Giang Fruit-Vegetables & Foodstuff JSC,58
G36.VN,994637,36 Corp,58
MLS.VN,994638,Mitraco Livestock JSC,58
SB1.VN,994639,Saigon Nghetinh Beer JSC,58
SEA.VN,994641,Viet Nam Seaproducts Joint Stock Corp,58
TNP.VN,994642,Thi Nai Port JSC,58
VGC.VN,994643,Viglacera Corporation JSC,58
VTH.VN,994756,Viet Thai Electric Cable Corp,58
GDW.VN,994839,Gia Dinh Water Supply JSC,58
HBD.VN,994840,Binh Duong PP Pack Making JSC,58
HCI.VN,994841,Hanoi Construction Investment JSC,58
HEM.VN,994842,Hanoi Electromechanical Manufacturing JSC,58
HFC.VN,994843,Hanoi Fuel JSC,58
HJC.VN,994844,Hoa Viet JSC,58
HKP.VN,994845,Ha Tien Packaging JSC,58
HNB.VN,994846,Ha Noi Transport Station JSC,58
HNT.VN,994847,Ha Noi Tram JSC,58
HPT.VN,994848,HPT Vietnam Corp,58
HRT.VN,994849,Hanoi Railway Transport JSC,58
HU4.VN,994850,HUD4 Investment and Construction JSC,58
HVN.VN,1136004,Vietnam Airlines JSC,58
ICN.VN,994852,IDICO Investment Construction Oil and Natural Gas JSC,58
IFS.VN,994853,Interfood Shareholding Co,58
IHK.VN,994854,Aviation Printing JSC,58
IME.VN,994855,Mechanical and Industrial Construction JSC,58
ISH.VN,994856,Idico Srok Phu Mieng Hydropower JSC,58
IST.VN,994857,Tan Cang Song Than ICD JSC,58
KCE.VN,994858,Khanh Hoa Power Centrifugal Concrete JSC,58
KTL.VN,994859,Thang Long Metal Wares JSC,58
LKW.VN,994860,Long Khanh Water Supply JSC,58
PIC.VN,994861,PC3 Investment JSC,58
GTH.VN,995121,Thua Thien Hue Construction Transportation JSC,58
HKT.VN,995122,Hiep Khanh Tea JSC,58
ICI.VN,995123,Industrial Construction and Investment JSC,58
KIP.VN,995125,Electrical Devices JSC No1,58
MCH.VN,995126,Masan Consumer Corp,58
MSR.VN,995127,Masan Resources Corp,58
MTA.VN,995128,Hatinh Minerals and Trading Joint Stock Corp,58
NCS.VN,995129,Noi Bai Catering Services JSC,58
ND2.VN,995130,North Electrictiy Development and Investment JSC No2,58
NNG.VN,995131,Ngoc Nghia Industry Service Trading JSC,58
NNT.VN,995132,Ninh Thuan Water Supply JSC,58
NS3.VN,995133,Ha Noi Water Manufacturing JSC No 3,58
PEQ.VN,995134,Petrolimex Equipment JSC,58
PMT.VN,995135,Telvina Vietnam Communication JSC,58
PNT.VN,995136,Phu Nhuan Technical Construction JSC,58
POS.VN,995137,PTSC Offshore Services JSC,58
PTH.VN,995138,Petrolimex Hatay Transportation and Service JSC,58
PVO.VN,995139,PV Oil Lube JSC,58
QPH.VN,995140,Que Phong Hydropower JSC,58
QSP.VN,995141,Quy Nhon New Port JSC,58
RTB.VN,995142,Tan Bien Rubber JSC,58
SD8.VN,995143,Song Da 8 JSC,58
SGS.VN,995145,Saigon Shipping JSC,58
SHG.VN,995146,SongHong Joint Stock Corp,58
SID.VN,995147,Saigon Co.op Investment Development JSC,58
SLC.VN,995148,Labour and Expert Export Service JSC,58
SP2.VN,995149,Supan 2 Hydropower JSC,58
SPA.VN,995150,Sai Gon Packaging JSC,58
SPD.VN,995151,DaNang Seaproducts Import Export Corp,58
SRT.VN,995152,Sai Gon Railway Transport JSC,58
SSN.VN,995153,Saigon Seaproducts Import Export JSC,58
SWC.VN,995154,Southern Waterborne Transport Corp,58
TBT.VN,995155,Bentre Transportation Works Contruction JSC,58
TDS.VN,995156,Thu Duc Steel JSC,58
TMB.VN,995157,Vinacomin Northern Coal Trading JSC,58
TOP.VN,995158,Top One Allot JSC,58
TPS.VN,995159,Sai Gon Transportation Parking JSC,58
TRS.VN,995160,Tracimexco Supply Chains and Agency Services JSC,58
TTG.VN,995161,Thanh Tri Garment JSC,58
TVU.VN,995162,Tra Vinh Urban Project JSC,58
UPH.VN,995163,No 25 Central Pharmaceutical JSC,58
VGT.VN,995164,Vietnam National Textile and Garment Group,58
VIB.VN,995165,Viet Nam International Commercial Joint Stock Bank,58
VIF.VN,995166,Viet Nam Forestry Corporation JSC,58
VIN.VN,995167,Vietnam Foreign Trade Forwarding and Warehousing JSC,58
VKD.VN,995168,Khanh Hoa Mineral Water JSC,58
VLC.VN,995169,Vietnam Livestock Corporation JSC,58
VLG.VN,995170,Vinalines Logistics Viet Nam JSC,58
VMA.VN,995171,Vinacomin Motor Industry JSC,58
VNI.VN,995172,Viet Nam Land Investment Corp,58
VPA.VN,995173,VP Petrochemical Transport JSC,58
VRG.VN,995175,Viet Nam Rubber Industrial Zone and Urban Development JSC,58
VTG.VN,995176,Ba Ria Vung Tau Tourist JSC,58
VWS.VN,995178,Vietnam Water Sanitation and Environment JSC,58
XHC.VN,995179,Xuan Hoa Viet Nam JSC,58
ICC.VN,995717,Industrial Construction JSC,58
MDF.VN,995718,MDF VRG Quang Tri Wood JSC,58
NAS.VN,995719,Noi Bai Airport Services JSC,58
NLS.VN,995720,Lang Son Water Supply and Drainage JSC,58
PEC.VN,995721,Power Engineering JSC,58
PKR.VN,995722,Phu Khanh Railway JSC,58
SAC.VN,995723,Sai Gon Port Stevedoring and Service JSC,58
SBL.VN,995724,Saigon-Baclieu Beer JSC,58
THW.VN,995725,Tan Hoa Water Supply JSC,58
TMW.VN,995726,Tan Mai General Wood JSC,58
VT1.VN,995727,Ben Thanh Material JSC,58
X18.VN,995728,X18 Cement JSC,58
AMS.VN,996100,AMECC Mechanical Construction JSC,58
MSC.VN,996101,Phunhuan Service JSC,58
NBR.VN,996102,Nghiabinh Rail Way JSC,58
PTE.VN,996104,Phu Tho Cement JSC,58
S33.VN,996105,333 Sugar JSC,58
TNS.VN,996107,Thongnhat Flat Steel JSC,58
USC.VN,996108,Union of Survey and Construction JSC,58
VCX.VN,996109,YenBinh Cement JSC,58
VEE.VN,996110,Campha Electrical Equipment JSC,58
VHF.VN,996111,Vinh Ha Food Processing and Construction JSC,58
VIR.VN,996112,Vung Tau Intourco Resort JSC,58
VQC.VN,996113,Vinacomin Quacontrol JSC,58
TTD.VN,996223,Tam Duc Cardiology Hospital JSC,58
EMG.VN,996563,Electrical Mechanical Equipment and Spare Parts JSC,58
GND.VN,996564,Dong Nai Brick and Tile Corp,58
ONW.VN,996565,One World Services JSC,58
PIA.VN,996566,Petrolimex Information Technology and Telecommunication JSC,58
PND.VN,996567,Petrovietnam Oil Nam Dinh JSC,58
SBD.VN,996568,SaoBacDau Technologies Corp,58
X77.VN,996569,Thanh An 77 JSC,58
BSQ.VN,997141,Sai Gon Quang Ngai Beer JSC,58
CLX.VN,997142,Cho Lon Investment and Import Export Corp,58
EIC.VN,997143,EVN International JSC,58
HLB.VN,997144,Halong Beer and Beverage JSC,58
HTR.VN,997145,Ha Thai Railway JSC,58
TUG.VN,997146,Haiphong Port Tugboat and Transport JSC,58
BTD.VN,997536,Thuduc Centrifugal Concrete JSC,58
BTV.VN,997537,Ben Thanh Tourist Service Corp,58
ADP.VN,997901,A Dong Paint JSC,58
BHP.VN,997902,Ha Noi Hai Phong Beer JSC,58
BTC.VN,997903,Binh Trieu Construction and Engineering JSC,58
BWA.VN,997904,Bao Loc Supply Sewerage and Construction JSC,58
CCP.VN,997905,Hai Phong Cua Cam Port JSC,58
CEC.VN,997906,Chemical Industry Engineering JSC,58
CKD.VN,997907,Dong Anh Licogi Mechanical JSC,58
CNT.VN,997908,Construction and Materials Trading JSC,58
VPB.VN,1043364,Vietnam Prosperity Joint Stock Commercial Bank,58
VRE.VN,1056075,Vincom Retail JSC,58
LDG.VN,998172,LDG Investment JSC,58
PLX.VN,1009015,Vietnam National Petroleum Group,58
BWE.VN,1025096,Binh Duong Water Environment JSC,58
VCI.VN,1024916,Viet Capital Securities JSC,58
PME.VN,1054861,Pymepharco JSC,58
THI.VN,1017676,Electrical Equipment JSC,58
PEN.VN,998137,Petrolimex Installation No III JSC,58
BAX.VN,999090,Thong Nhat JSC,58
C69.VN,1009001,1369 Construction JSC,58
VTJ.VN,1009006,Vi Na Ta Ba Trading & Investment JSC,58
TTT.VN,1011873,Tay Ninh Tourist - Trading JSC,58
GKM.VN,1024927,Khang Minh Brick JSC,58
VSM.VN,1024928,Central Container JSC,58
ART.VN,1031245,Artex Securities JSC,58
CET.VN,1031255,Tech-Vina JSC,58
NSH.VN,1031281,Song Hong Aluminum JSC,58
DS3.VN,1032668,Riverway Management JSC No3,58
MEL.VN,1052772,Me Lin Steel JSC,58
CIA.VN,1056029,Cam Ranh International Airport Services JSC,58
DTD.VN,1056030,Thanh Dat Investment Development JSC,58
CAG.VN,1057326,Angiang Port JSC,58
KHS.VN,1057327,Kien Hung JSC VN,58
NBW.VN,1059861,Nha Be Water Supply JSC,58
NFC.VN,1059862,Ninh Binh Phosphate Fertilizer JSC,58
TTL.VN,1059865,Thang Long Joint Stock Corp,58
X20.VN,1072444,X20 JSC,58
NAP.VN,1073110,Nghe Tinh Port JSC,58
NRC.VN,1073361,Netland Real Estate Joint Stock Company,58
HHP.VN,1094229,Hai Phong Hoang Ha Paper JSC,58
AAV.VN,1094230,Viet Tien Son Real Estate Holding Co,58
TDT.VN,1094231,TDT Investment and Development JSC,58
LPB.VN,1052891,Lien Viet Post Joint Stock Commercial Bank,58
VHM.VN,1076910,Vinhomes JSC,58
HNX30.VN,995072,HNX30,58
VN30.VN,41064,VN30,58

#NSE FUTURE
IDEA-I.NS,18200,Vodafone Idea Ltd,59
YESBANK-I.NS,18470,Yes Bank Ltd,59
FEDERALBNK-I.NS,18125,Federal Bank Ltd.,59
IDFCFIRSTB-I.NS,960765,IDFC First Bank Ltd,59
SBIN-I.NS,18376,State Bank Of India,59
INFRATEL-I.NS,39852,Bharti Infratel Ltd,59
BANKBARODA-I.NS,18047,Bank of Baroda Ltd,59
NBCC-I.NS,100271,NBCC India Ltd,59
RELINFRA-I.NS,18364,Reliance Infrastructure Ltd,59
RELCAPITAL-I.NS,18361,Reliance Capital Ltd,59
ZEEL-I.NS,18471,Zee Entertainment Enterprises Ltd.,59
PNB-I.NS,18350,Punjab National Bank,59
BHARTIARTL-I.NS,18041,Bharti Airtel Ltd.,59
TATAMOTORS-I.NS,18425,Tata Motors Ltd,59
IBULHSGFIN-I.NS,100254,Indiabulls Housing Finance Ltd,59
IOC-I.NS,18197,Indian Oil Corporation Ltd,59
DISHTV-I.NS,18097,Dish TV India Ltd,59
JINDALSTEL-I.NS,18241,Jindal Steel & Power Ltd,59
L&TFH-I.NS,39882,L&T Finance Holdings Ltd,59
IRB-I.NS,18223,IRB Infrastructure Developers Ltd,59
ASHOKLEY-I.NS,18010,Ashok Leyland Ltd.,59
RELIANCE-I.NS,18367,Reliance Industries Ltd,59
NTPC-I.NS,18297,NTPC Ltd,59
RBLBANK-I.NS,987147,RBL Bank Ltd,59
SAIL-I.NS,18399,Steel Authority of India Ltd.,59
ICICIBANK-I.NS,18198,ICICI Bank Ltd,59
GAIL-I.NS,18137,GAIL Ltd,59
KOTAKBANK-I.NS,18260,Kotak Mahindra Bank Ltd.,59
TATASTEEL-I.NS,18428,Tata Steel Ltd,59
PFC-I.NS,18341,Power Finance Corporation Ltd,59
BHEL-I.NS,18042,Bharat Heavy Electricals Ltd.,59
ADANIGREEN-I.NS,1088095,Adani Green Energy Ltd,59
MOTHERSUMI-I.NS,18288,Motherson Sumi Systems Ltd.,59
NMDC-I.NS,18309,NMDC Ltd,59
GMRINFRA-I.NS,18150,GMR Infrastructure Ltd,59
JUSTDIAL-I.NS,100244,Just Dial Ltd,59
NCC-I.NS,18302,NCC Ltd,59
AXISBANK-I.NS,18017,AXIS Bank Ltd,59
HDFCBANK-I.NS,18177,HDFC Bank Ltd,59
COALINDIA-I.NS,18075,Coal India Ltd,59
TATAGLOBAL-I.NS,18422,Tata Global Beverages Ltd,59
INDUSINDBK-I.NS,18215,IndusInd Bank Ltd.,59
CANBK-I.NS,18057,Canara Bank Ltd,59
POWERGRID-I.NS,18342,Power Grid Corporation of India Ltd,59
GRANULES-I.NS,947234,Granules India Ltd,59
MAHABANK-I.NS,39854,Bank of Maharashtra Ltd,59
ITC-I.NS,18224,ITC Ltd,59
SUZLON-I.NS,18413,Suzlon Energy Ltd,59
HINDALCO-I.NS,18187,Hindalco Industries Ltd.,59
VEDL-I.NS,18377,Vedanta Ltd,59
RPOWER-I.NS,18366,Reliance Power Ltd,59
NHPC-I.NS,18307,NHPC Ltd,59
ADANIPOWER-I.NS,17985,Adani Power Ltd,59
ONGC-I.NS,18311,Oil And Natural Gas Corporation Ltd,59
BEL-I.NS,18043,Bharat Electronics Ltd,59
PCJEWELLER-I.NS,39896,PC Jeweller Ltd,59
HFCL-I.NS,18182,HFCL Ltd,59
LICHSGFIN-I.NS,18269,Lic Housing Finance Ltd.,59
INFY-I.NS,18217,Infosys Ltd,59
NATIONALUM-I.NS,18299,National Aluminum Co. Ltd.,59
HCLTECH-I.NS,18176,HCL Technologies Ltd,59
SOUTHBANK-I.NS,18395,South Indian Bank Ltd.,59
JSWSTEEL-I.NS,18226,JSW Steel Ltd,59
AVANTIFEED-I.NS,950031,Avanti Feeds Ltd,59
TATAPOWER-I.NS,18426,Tata Power Co. Ltd,59
UPL-I.NS,18450,UPL Ltd,59
CANFINHOME-I.NS,18058,Can Fin Homes Ltd,59
TATAMTRDVR-I.NS,947268,Tata Motors DV Ltd,59
UNIONBANK-I.NS,18447,Union Bank of India Ltd,59
BPCL-I.NS,18040,Bharat Petroleum Corp. Ltd.,59
DLF-I.NS,18100,DLF Ltd,59
HAVELLS-I.NS,18174,Havells India Ltd,59
STRTECH-I.NS,18402,Sterlite Technologies Ltd,59
TV18BRDCST-I.NS,18441,TV18 Broadcast Ltd.,59
MGL-I.NS,985843,Mahanagar Gas Ltd,59
RALLIS-I.NS,18354,Rallis India Ltd,59
TRIDENT-I.NS,100252,Trident Ltd,59
CASTROLIND-I.NS,18061,Castrol India Ltd,59
INDIANB-I.NS,18209,Indian Bank,59
TCS-I.NS,18420,Tata Consultancy Services Ltd.,59
ITI-I.NS,947452,ITI Ltd,59
IGL-I.NS,18213,Indraprastha Gas Ltd,59
KEI-I.NS,947237,KEI Industries Ltd,59
APOLLOTYRE-I.NS,18005,Apollo Tyres Ltd,59
HDFC-I.NS,18191,Housing Development Finance Corporation Ltd,59
IFCI-I.NS,18195,IFCI Ltd.,59
AUROPHARMA-I.NS,18014,Aurobindo Pharma Ltd.,59
MANAPPURAM-I.NS,39888,Manappuram Finance Ltd,59
DHFL-I.NS,18094,Dewan Housing Finance Corp. Ltd.,59
RVNL-I.NS,1123975,Rail Vikas Nigam Ltd,59
GRASIM-I.NS,18156,Grasim Industries Ltd,59
ADANIPORTS-I.NS,18294,Adani Port and Special Economic Zone Ltd,59
JAICORPLTD-I.NS,18229,Jai Corp Ltd,59
LUPIN-I.NS,18270,Lupin Ltd,59
EQUITAS-I.NS,976491,Equitas Holdings Ltd,59
DCAL-I.NS,1052348,Dishman Carbogen Amcis Ltd,59
IDBI-I.NS,18199,IDBI Bank Ltd,59
WIPRO-I.NS,18467,Wipro Ltd,59
ICICIGI-I.NS,1050153,ICICI Lombard General Insurance Company Ltd,59
RECLTD-I.NS,18371,REC Ltd,59
PRESTIGE-I.NS,18344,Prestige Estates Projects Ltd,59
BOMDYEING-I.NS,18050,Bombay Dyeing & Mfg. Co. Ltd.,59
OIL-I.NS,18313,Oil India Ltd,59
MARICO-I.NS,18276,Marico Ltd,59
INDIGO-I.NS,961701,Interglobe Aviation Ltd,59
HDFCLIFE-I.NS,1054973,HDFC Life Insurance Company Ltd,59
IBREALEST-I.NS,39872,Indiabulls Real Estate Ltd,59
SJVN-I.NS,39908,SJVN Ltd,59
ASIANPAINT-I.NS,18011,Asian Paints Ltd.,59
HINDPETRO-I.NS,18184,Hindustan Petroleum Corporation Ltd,59
M&M-I.NS,18273,Mahindra & Mahindra Ltd.,59
ABCAPITAL-I.NS,7310,Aditya Birla Capital Ltd,59
ESCORTS-I.NS,18118,Escorts Ltd,59
RAIN-I.NS,39900,Rain Industries Ltd,59
BANKINDIA-I.NS,18031,Bank of India Ltd,59
MMTC-I.NS,39887,MMTC Ltd,59
WOCKPHARMA-I.NS,18468,Wockhardt Ltd,59
UJJIVAN-I.NS,978766,Ujjivan Financial Services Ltd,59
AMARAJABAT-I.NS,17997,Amara Raja Batteries Ltd,59
JUBILANT-I.NS,18246,Jubilant Life Sciences Ltd,59
SUNTV-I.NS,18406,Sun TV Network Ltd,59
SUNPHARMA-I.NS,18405,Sun Pharmaceutical Industries Ltd.,59
HSCL-I.NS,946680,Himadri Speciality Chemical Ltd,59
BANDHANBNK-I.NS,1072999,Bandhan Bank Ltd,59
GLENMARK-I.NS,18149,Glenmark Pharmaceuticals Ltd,59
PRAJIND-I.NS,18343,Praj Industries Ltd.,59
RCF-I.NS,18357,Rashtriya Chemicals and Fertilizers Ltd,59
ASHOKA-I.NS,947158,Ashoka Buildcon Ltd,59
BIOCON-I.NS,18045,Biocon Ltd.,59
MFSL-I.NS,18279,Max Financial Services Ltd,59
ISEC-I.NS,1073007,ICICI Securities Ltd,59
ADANIGAS-I.NS,1111710,Adani Gas Ltd,59
TITAN-I.NS,18433,Titan Company Ltd,59
GRAPHITE-I.NS,18155,Graphite India Ltd.,59
SRTRANSFIN-I.NS,18386,Shriram Transport Finance Co. Ltd.,59
BAJFINANCE-I.NS,18022,Bajaj Finance Ltd,59
INDIACEM-I.NS,18204,India Cements Ltd.,59
MCX-I.NS,39886,Multi Commodity Exchange of India Ltd,59
LT-I.NS,18268,Larsen & Toubro Ltd,59
UCOBANK-I.NS,18443,UCO Bank,59
DABUR-I.NS,18086,Dabur India Ltd.,59
JKTYRE-I.NS,18242,JK Tyre & Industries Ltd.,59
IOB-I.NS,18211,Indian Overseas Bank,59
INFIBEAM-I.NS,976203,Infibeam Avenues Ltd,59
HUDCO-I.NS,1010531,Housing and Urban Development Corporation Ltd,59
PHILIPCARB-I.NS,946848,Phillips Carbon Black Ltd,59
JINDALSAW-I.NS,39874,Jindal Saw Ltd.,59
TORNTPOWER-I.NS,18436,Torrent Power Ltd,59
HINDZINC-I.NS,18186,Hindustan Zinc Ltd.,59
MRPL-I.NS,18292,Mangalore Refinery and Petrochemicals Ltd,59
IIFL-I.NS,18206,IIFL Fiinance Ltd Class B,59
FSL-I.NS,18131,Firstsource Solutions Ltd.,59
PEL-I.NS,18339,Piramal Enterprises Ltd,59
JKPAPER-I.NS,947404,JK Paper Ltd,59
AMBUJACEM-I.NS,17998,Ambuja Cements Ltd.,59
PETRONET-I.NS,18334,Petronet LNG Ltd,59
FCONSUMER-I.NS,18135,Future Consumer Ltd,59
HINDUNILVR-I.NS,18185,Hindustan Unilever Ltd.,59
M&MFIN-I.NS,18271,Mahindra and Mahindra Financial Services Ltd,59
ICICIPRULI-I.NS,991131,ICICI Prudential Life Insurance Company Ltd,59
JISLJALEQS-I.NS,18230,Jain Irrigation Systems Ltd.,59
IDFC-I.NS,18219,IDFC Ltd,59
RNAM-I.NS,1053096,Reliance Nippon Life Asset Management Ltd,59
BHARATFORG-I.NS,18039,Bharat Forge Ltd,59
NAUKRI-I.NS,18216,Info Edge India Ltd,59
JSL-I.NS,18240,Jindal Stainless Ltd,59
HEROMOTOCO-I.NS,18179,Hero MotoCorp Ltd,59
TVSMOTOR-I.NS,18442,TVS Motor Company Ltd.,59
CADILAHC-I.NS,18055,Cadila Healthcare Ltd.,59
HINDCOPPER-I.NS,39868,Hindustan Copper Ltd,59
SPARC-I.NS,39910,Sun Pharma Advanced Research Company Ltd,59
MINDTREE-I.NS,18283,MindTree Ltd,59
VAKRANGEE-I.NS,39923,Vakrangee Softwares Ltd.,59
DELTACORP-I.NS,18091,Delta Corp Ltd,59
PNBHOUSING-I.NS,993203,PNB Housing Finance Ltd,59
DRREDDY-I.NS,18101,Dr. Reddy’s Laboratories Ltd,59
EXIDEIND-I.NS,18122,Exide Industries Ltd.,59
JUBLFOOD-I.NS,18247,Jubilant Foodworks Ltd,59
HDFCAMC-I.NS,1089258,HDFC Asset Management Company Ltd,59
EMAMILTD-I.NS,18113,Emami Ltd,59
EDELWEISS-I.NS,18106,Edelweiss Financial Services Ltd.,59
MCDOWELL-N-I.NS,18451,United Spirits Ltd,59
CHENNPETRO-I.NS,18069,Chennai Petroleum Corporation Ltd,59
CDSL-I.NS,1013401,Central Depository Services India Ltd,59
CHOLAFIN-I.NS,18070,Cholamandalam Investment and Finance Company Ltd,59
BALRAMCHIN-I.NS,18029,Balrampur Chini Mills Ltd.,59
BERGEPAINT-I.NS,18036,Berger Paints India Ltd,59
CIPLA-I.NS,18071,Cipla Ltd.,59
GHCL-I.NS,18136,GHCL Ltd.,59
TECHM-I.NS,18429,Tech Mahindra Ltd,59
WELCORP-I.NS,18464,Welspun Corp Ltd,59
APOLLOHOSP-I.NS,18004,Apollo Hospitals Enterprises Ltd.,59
NIITTECH-I.NS,39893,NIIT Technologies Ltd,59
POLYCAB-I.NS,1127928,Polycab India Ltd,59
TORNTPHARM-I.NS,18435,Torrent Pharmaceuticals Ltd.,59
DMART-I.NS,997883,Avenue Supermarts Ltd,59
PTC-I.NS,18348,PTC India Ltd,59
GODREJCP-I.NS,18152,Godrej Consumer Products Ltd.,59
GSFC-I.NS,18168,Gujarat State Fertilizers and Chemicals Ltd,59
MUTHOOTFIN-I.NS,39890,Muthoot Finance Ltd,59
GNFC-I.NS,18165,Gujarat Narmada Valley Fert.Co.Ltd,59
ENGINERSIN-I.NS,18114,Engineers India Ltd.,59
J&KBANK-I.NS,18233,Jammu and Kashmir Bank Ltd.,59
WABAG-I.NS,39925,Va Tech Wabag Ltd,59
JSWENERGY-I.NS,18244,JSW Energy Ltd,59
MOIL-I.NS,39889,MOIL Ltd,59
ACC-I.NS,17980,ACC Ltd,59
MARUTI-I.NS,18277,Maruti Suzuki India Ltd.,59
WELSPUNIND-I.NS,100273,Welspun India Ltd,59
GUJGASLTD-I.NS,18171,Gujarat Gas Ltd,59
CARERATING-I.NS,39856,CARE Ratings Ltd,59
LAKSHVILAS-I.NS,18264,Lakshmi Vilas Bank Ltd,59
JAMNAAUTO-I.NS,946845,Jamna Auto Industries Ltd,59
PVR-I.NS,100260,PVR Ltd,59
PIDILITIND-I.NS,18337,Pidilite Industries Ltd.,59
LEMONTREE-I.NS,1073145,Lemon Tree Hotels,59
BEML-I.NS,18035,BEML Ltd,59
RITES-I.NS,1088133,RITES Ltd,59
IBULISL-I.NS,946654,Indiabulls Integrated Services Ltd,59
KTKBANK-I.NS,18254,Karnataka Bank Ltd.,59
CUMMINSIND-I.NS,18084,Cummins India Ltd,59
HEG-I.NS,18178,HEG Ltd.,59
IBVENTURES-I.NS,18203,Indiabulls Ventures Ltd,59
MIDHANI-I.NS,1073003,Mishra Dhatu Nigam Ltd,59
BATAINDIA-I.NS,18034,Bata India Ltd,59
SUNDARMFIN-I.NS,18407,Sundaram Finance Ltd,59
BALKRISIND-I.NS,39853,Balkrishna Industries Ltd.,59
RADICO-I.NS,18352,Radico Khaitan Ltd.,59
SIEMENS-I.NS,18387,Siemens Ltd,59
VOLTAS-I.NS,18462,Voltas Ltd.,59
TAKE-I.NS,947259,Take Solutions Ltd,59
RAYMOND-I.NS,18358,Raymond Ltd,59
ULTRACEMCO-I.NS,18445,UltraTech Cement Ltd,59
NLCINDIA-I.NS,18306,NLC India Ltd,59
COLPAL-I.NS,18076,Colgate-Palmolive (India) Ltd.,59
RENUKA-I.NS,18384,Shree Renuka Sugars Ltd.,59
NFL-I.NS,18298,National Fertilizers Ltd,59
AJANTPHARM-I.NS,947273,Ajanta Pharma Ltd,59
AFFLE-I.NS,1142212,Affle India Ltd,59
CONCOR-I.NS,18077,Container Corporation of India Ltd,59
JAGRAN-I.NS,18227,Jagran Prakashan Ltd,59
TATAELXSI-I.NS,18421,Tata Elxsi Ltd,59
NIACL-I.NS,1054813,New India Assurance Company Ltd,59
COROMANDEL-I.NS,18080,Coromandel International Ltd,59
REDINGTON-I.NS,18359,Redington India Ltd,59
BAJAJFINSV-I.NS,18023,Bajaj Finserv Ltd,59
CENTRALBK-I.NS,18062,Central Bank of India Ltd,59
SADBHAV-I.NS,18375,Sadbhav Engineering Ltd,59
DBL-I.NS,986320,Dilip Buildcon Ltd,59
RESPONIND-I.NS,946851,Responsive Industries Ltd,59
CHAMBLFERT-I.NS,18067,Chambal Fertilisers & Chemicals Ltd,59
CENTURYPLY-I.NS,18064,Century Plyboards Ltd,59
ALKEM-I.NS,962425,Alkem Laboratories Ltd,59
GICRE-I.NS,1052418,General Insurance Corporation of India,59
TIMETECHNO-I.NS,39915,Time Technoplast Ltd,59
COCHINSHIP-I.NS,1031007,Cochin Shipyard Ltd,59
GMDCLTD-I.NS,18164,Gujarat Mineral Development Corporation Ltd,59
DIVISLAB-I.NS,18099,Divis Laboratories Ltd.,59
DCBBANK-I.NS,18093,Development Credit Bank Ltd.,59
GSPL-I.NS,18170,Gujarat State Petronet Ltd.,59
VENKEYS-I.NS,18457,Venkys India Ltd,59
KEC-I.NS,18257,KEC International Ltd.,59
RAJESHEXPO-I.NS,18353,Rajesh Exports Ltd.,59
SBILIFE-I.NS,1050746,SBI Life Insurance Company Ltd,59
SRF-I.NS,18397,SRF Ltd,59
FRETAIL-I.NS,986634,Future Retail Ltd,59
JMFINANCIL-I.NS,18243,JM Financial Ltd,59
PARAGMILK-I.NS,978763,Parag Milk Foods Ltd,59
AUBANK-I.NS,1014099,AU Small Finance Bank Ltd,59
RELAXO-I.NS,947130,Relaxo Footwears Ltd,59
SONATSOFTW-I.NS,18394,Sonata Software Ltd,59
BAJAJ-AUTO-I.NS,18020,Bajaj Auto Ltd,59
BRITANNIA-I.NS,18054,Britannia Industries Ltd,59
PNCINFRA-I.NS,953899,PNC Infratech Ltd,59
ABFRL-I.NS,946826,Aditya Birla Fashion and Retail Ltd,59
HIMATSEIDE-I.NS,18181,Himatsingka Seide Ltd,59
DEEPAKNTR-I.NS,947225,Deepak Nitrite Ltd,59
SWANENERGY-I.NS,39911,Swan Energy Ltd,59
INDHOTEL-I.NS,18210,Indian Hotels Co. Ltd,59
NETWORK18-I.NS,18304,Network 18 Media & Investments Ltd,59
RAMCOCEM-I.NS,18272,The Ramco Cements Ltd,59
CESC-I.NS,18066,CESC Ltd,59
GAYAPROJ-I.NS,947105,Gayatri Projects Ltd,59
CAPLIPOINT-I.NS,946662,Caplin Point Laboratories Ltd,59
LTI-I.NS,986039,Larsen & Toubro Infotech Ltd,59
HEXAWARE-I.NS,18180,Hexaware Technologies Ltd.,59
SPANDANA-I.NS,1142512,Spandana Sphoorty Financial Ltd,59
VIPIND-I.NS,18461,V I P Industries Ltd,59
STARCEMENT-I.NS,1031107,Star Cement Ltd,59
KANSAINER-I.NS,18253,Kansai Nerolac Paints Ltd,59
FORTIS-I.NS,18132,Fortis Healthcare Ltd,59
UBL-I.NS,18449,United Breweries Ltd.,59
IRCON-I.NS,1096083,Ircon International Ltd,59
HEIDELBERG-I.NS,30102,HeidelbergCement India Ltd,59
KSCL-I.NS,39880,Kaveri Seed Company Ltd,59
BSE-I.NS,996056,BSE Ltd,59
MINDACORP-I.NS,947423,Minda Corporation Ltd,59
INOXLEISUR-I.NS,18221,Inox Leisure Ltd,59
APLLTD-I.NS,946738,Alembic Pharmaceuticals Ltd,59
TRENT-I.NS,18437,Trent Ltd,59
SYNGENE-I.NS,958336,Syngene International Ltd,59
VBL-I.NS,993204,Varun Beverages Ltd,59
KPITTECH-I.NS,1130904,KPIT Technologies Ltd,59
NESTLEIND-I.NS,30059,Nestle India Ltd,59
SOBHA-I.NS,18392,Sobha Developers Ltd.,59
VGUARD-I.NS,39926,V Guard Industries Ltd,59
BAJAJELEC-I.NS,18021,Bajaj Electricals Ltd.,59
EICHERMOT-I.NS,18108,Eicher Motors Ltd.,59
NH-I.NS,962571,Narayana Hrudayalaya Ltd,59
SUDARSCHEM-I.NS,946656,Sudarshan Chemical Industries Ltd,59
ITDCEM-I.NS,946844,ITD Cementation India Ltd,59
NATCOPHARM-I.NS,39891,Natco Pharma Ltd.,59
JSLHISAR-I.NS,963742,Jindal Stainless Hisar Ltd,59
STAR-I.NS,18403,Strides Pharma Science Ltd,59
CROMPTON-I.NS,978762,Crompton Greaves Consumer Electricals Ltd,59
GPPL-I.NS,18169,Gujarat Pipavav Port Ltd,59
CUB-I.NS,18072,City Union Bank Ltd,59
INTELLECT-I.NS,943638,Intellect Design Arena Ltd,59
BSOFT-I.NS,18261,Birlasoft Ltd,59
KARURVYSYA-I.NS,18256,Karur Vysya Bank Ltd,59
UFLEX-I.NS,18444,Uflex Ltd,59
GODREJPROP-I.NS,18154,Godrej Properties Ltd,59
INDOSTAR-I.NS,1075519,IndoStar Capital Finance Ltd,59
ALLCARGO-I.NS,17993,Allcargo Logistics Ltd,59
JBCHEPHARM-I.NS,18236,J B Chemicals and Pharmaceuticals Ltd,59
KNRCON-I.NS,947060,KNR Constructions Ltd,59
JYOTHYLAB-I.NS,39877,Jyothy Laboratories Ltd,59
KALPATPOWR-I.NS,18252,Kalpataru Power Transmission Ltd.,59
FLFL-I.NS,946664,Future Lifestyle Fashions Ltd,59
DBCORP-I.NS,18487,D.B.Corp Ltd,59
IEX-I.NS,1052419,Indian Energy Exchange Ltd,59
BAJAJCON-I.NS,39850,Bajaj Corp Ltd,59
GODFRYPHLP-I.NS,18151,Godfrey Phillips India Ltd.,59
ADANITRANS-I.NS,958331,Adani Transmission Ltd,59
AARTIIND-I.NS,17981,Aarti Industries Ltd,59
MOTILALOFS-I.NS,18289,Motilal Oswal Financial Services Ltd,59
MPHASIS-I.NS,18290,Mphasis Ltd,59
NBVENTURES-I.NS,18300,Nava Bharat Ventures Ltd,59
DCMSHRIRAM-I.NS,18087,DCM Shriram Consolidated,59
ASTERDM-I.NS,1064345,Aster DM Healthcare Ltd,59
BIRLACORPN-I.NS,18046,Birla Corporation Ltd,59
BBTC-I.NS,100245,Bombay Burmah Trading Corporation Ltd,59
EIDPARRY-I.NS,18109,E.I.D-Parry Ltd,59
VINATIORGA-I.NS,947206,Vinati Organics Ltd,59
NESCO-I.NS,39894,Nesco Ltd,59
AIAENG-I.NS,17989,AIA Engineering Ltd,59
ADVENZYMES-I.NS,986127,Advanced Enzyme Technologies Ltd,59
CYIENT-I.NS,18218,Cyient Ltd-B,59
PERSISTENT-I.NS,18333,Persistent Systems Ltd,59
MAGMA-I.NS,39883,Magma Fincorp Ltd,59
QUESS-I.NS,985922,Quess Corp Ltd,59
BALMLAWRIE-I.NS,18028,Balmer Lawrie & Co. Ltd.,59
ORIENTELEC-I.NS,1081587,Orient Electric Ltd,59
BLISSGVS-I.NS,947100,Bliss GVS Pharma Ltd,59
ORIENTCEM-I.NS,947293,Orient Cement Ltd,59
CEATLTD-I.NS,947439,CEAT Ltd,59
KAJARIACER-I.NS,18251,Kajaria Ceramics Ltd,59
GREAVESCOT-I.NS,18158,Greaves Cotton Ltd.,59
PRSMJOHNSN-I.NS,18345,Prism Johnson Ltd,59
LINDEINDIA-I.NS,18019,Linde India Ltd,59
KOLTEPATIL-I.NS,100264,Kolte Patil Developers Ltd,59
LTTS-I.NS,991132,L&T Technology Services Ltd,59
OBEROIRLTY-I.NS,18312,Oberoi Realty Ltd,59
GODREJAGRO-I.NS,1052259,Godrej Agrovet Ltd,59
CREDITACC-I.NS,1090471,CreditAccess Grameen Ltd,59
JKLAKSHMI-I.NS,39876,JK Lakshmi Cement Ltd,59
ASTRAL-I.NS,946934,Astral Poly Technik Ltd,59
ECLERX-I.NS,18105,eClerx Services Ltd,59
MINDAIND-I.NS,947119,Minda Industries Ltd,59
PAGEIND-I.NS,18325,Page Industries Ltd.,59
NAVINFLUOR-I.NS,946691,Navin Fluorine International Ltd,59
CCL-I.NS,946995,CCL Products India Ltd,59
JKCEMENT-I.NS,39875,J.K. Cement Ltd,59
SUPREMEIND-I.NS,18410,Supreme Industries Ltd.,59
ZENSARTECH-I.NS,18472,Zensar Technologies Ltd,59
TRITURBINE-I.NS,39918,Triveni Turbine Ltd,59
MAHLOG-I.NS,1054814,Mahindra Logistics Ltd,59
BDL-I.NS,1073001,Bharat Dynamics Ltd,59
AEGISCHEM-I.NS,947157,Aegis Logistics Ltd,59
VTL-I.NS,39924,Vardhman Textiles Ltd,59
VARROC-I.NS,1084839,Varroc Engineering Ltd,59
GET&D-I.NS,39847,Ge T&D India Ltd,59
EIHOTEL-I.NS,18104,EIH Ltd,59
DALBHARAT-I.NS,947396,Dalmia Bharat Ltd B,59
ERIS-I.NS,1013402,Eris Lifesciences Ltd,59
KRBL-I.NS,947442,KRBL Ltd,59
ESSELPACK-I.NS,18120,Essel Propack ltd.,59
DIXON-I.NS,1046345,Dixon Technologies India Pvt Ltd,59
THYROCARE-I.NS,978765,Thyrocare Technologies Ltd,59
AMBER-I.NS,1061909,Amber Enterprises India Ltd,59
GRINDWELL-I.NS,947108,Grindwell Norton Ltd,59
FINEORG-I.NS,1088134,Fine Organic Industries Ltd,59
BRIGADE-I.NS,18053,Brigade Enterprises Ltd,59
VMART-I.NS,947307,V Mart Retail Ltd,59
GLAXO-I.NS,18147,GlaxoSmithkline Pharmaceuticals Ltd,59
PIIND-I.NS,100258,PI Industries Ltd,59
GODREJIND-I.NS,18153,Godrej Industries Ltd.,59
CGCL-I.NS,946883,Capri Global Capital Ltd,59
GEPIL-I.NS,17996,GE Power India Ltd,59
NILKAMAL-I.NS,18308,Nilkamal Ltd,59
LALPATHLAB-I.NS,962426,Dr Lal PathLabs Ltd,59
SUNDRMFAST-I.NS,18408,Sundram Fasteners Ltd,59
GUJALKALI-I.NS,18161,Gujarat Alkalis & Chemicals Ltd.,59
WHIRLPOOL-I.NS,18466,Whirlpool of India Ltd,59
SHK-I.NS,961703,S H Kelkar And Company Ltd,59
SUPRAJIT-I.NS,946907,Suprajit Engineering Ltd,59
THERMAX-I.NS,18430,Thermax Ltd.,59
MAHSEAMLES-I.NS,18275,Maharashtra Seamless Ltd.,59
APLAPOLLO-I.NS,947096,APL Apollo Tubes Ltd,59
FINCABLES-I.NS,18128,Finolex Cables Ltd.,59
MASFIN-I.NS,1052417,MAS Financial Services Ltd,59
FMGOETZE-I.NS,18126,Federal Mogul Goetze Ltd,59
BLUESTARCO-I.NS,18049,Blue Star Ltd,59
CRISIL-I.NS,18082,CRISIL Ltd.,59
BOSCHLTD-I.NS,18052,Bosch Ltd,59
REPCOHOME-I.NS,947017,Repco Home Finance Ltd,59
BASF-I.NS,18033,BASF India Ltd,59
IPCALAB-I.NS,18222,Ipca Laboratories Ltd.,59
KIRLOSENG-I.NS,39879,Kirloskar Oil Engines Ltd,59
LAURUSLABS-I.NS,994422,Laurus Labs Ltd,59
ATUL-I.NS,18013,Atul Ltd,59
OMAXE-I.NS,18314,Omaxe Ltd,59
SUNTECK-I.NS,18409,Sunteck Realty Ltd,59
GESHIP-I.NS,18144,Great Eastern Shipping Co. Ltd.,59
AAVAS-I.NS,1096512,Aavas Financiers Ltd,59
CHOLAHLDNG-I.NS,18438,Cholamandalam Financial Holdings Ltd,59
FDC-I.NS,18123,FDC Ltd.,59
JCHAC-I.NS,946714,Johnson Controls-Hitachi Air Conditioning India Ltd,59
ASAHIINDIA-I.NS,18009,Asahi India Glass Ltd,59
ASAHIINDIA-I.NS,18009,Asahi India Glass Ltd,59
HATSUN-I.NS,946942,Hatsun Agro Product Ltd,59
LUXIND-I.NS,961990,Lux Industries Ltd,59
SHREECEM-I.NS,18383,Shree Cements Ltd.,59
SYMPHONY-I.NS,947411,Symphony Ltd,59
ARVINDFASN-I.NS,1123866,Arvind Fashions Ltd,59
PGHL-I.NS,18282,Procter & Gamble Health Ltd,59
SHOPERSTOP-I.NS,18381,Shoppers Stop Ltd,59
ASTRAZEN-I.NS,18012,AstraZeneca Pharma India Ltd.,59
HAL-I.NS,1072997,Hindustan Aeronautics Ltd,59
FINPIPE-I.NS,18129,Finolex Industries Ltd.,59
TECHNOE-I.NS,39912,Techno Electric & Engineering Company Ltd,59
IFBIND-I.NS,947235,IFB Industries Ltd,59
PHOENIXLTD-I.NS,18336,The Phoenix Mills Ltd.,59
MRF-I.NS,18291,M.R.F. Ltd.,59
BAJAJHLDNG-I.NS,18024,Bajaj Holdings and Investment Ltd,59
TIINDIA-I.NS,1055947,Tube Investments of India Ltd,59
RATNAMANI-I.NS,946718,Ratnamani Metals Tubes Ltd,59
ELGIEQUIP-I.NS,18112,ELGI Equipments Ltd,59
VAIBHAVGBL-I.NS,100272,Vaibhav Global Ltd,59
KPRMILL-I.NS,947406,KPR Mill Ltd,59
OFSS-I.NS,18316,Oracle Financial Services Software Ltd,59
BLUEDART-I.NS,18048,Blue Dart Express Ltd.,59
BAYERCROP-I.NS,39851,Bayer Cropscience Ltd,59
GALAXYSURF-I.NS,1061939,Galaxy Surfactants Limited,59
MHRIL-I.NS,39884,Mahindra Holidays and Resorts India Ltd,59
532189-I.NS,950696,India Tourism Development Corp Ltd,59
ENDURANCE-I.NS,992809,Endurance Technologies Cn Ltd,59
ZYDUSWELL-I.NS,18475,Zydus Wellness Ltd,59
TCIEXP-I.NS,994425,TCI Express Ltd,59
CARBORUNIV-I.NS,18059,Carborundum Universal Ltd,59
SFL-I.NS,994424,Sheela Foam Ltd,59
VSTIND-I.NS,18463,VST Industries Ltd.,59
SIS-I.NS,1031006,Security and Intelligence Services Ltd,59
PFIZER-I.NS,18335,Pfizer Ltd.,59
VRLLOG-I.NS,953119,VRL Logistics Ltd,59
GILLETTE-I.NS,18145,Gillette India Ltd.,59
CHALET-I.NS,1122225,Chalet Hotels Ltd,59
TATAINVEST-I.NS,18423,Tata Investment Corporation Ltd.,59
GARFIBRES-I.NS,947005,Garware Wall Ropes Ltd,59
SCHAEFFLER-I.NS,18124,Schaeffler India Ltd,59
ABBOTINDIA-I.NS,39845,Abbott India Ltd,59
SUNCLAYLTD-I.NS,947135,Sundaram Clayton Ltd,59
METROPOLIS-I.NS,1123976,Metropolis Healthcare Ltd,59
MAHINDCIE-I.NS,946746,Mahindra CIE Automotive Ltd,59
TCNSBRANDS-I.NS,1088705,TCNS Clothing Co Ltd,59
SANOFI-I.NS,18016,Sanofi India Ltd,59
CERA-I.NS,947048,Cera Sanitaryware Ltd,59
LAXMIMACH-I.NS,18266,Lakshmi Machine Works Ltd.,59
HERITGFOOD-I.NS,100253,Heritage Foods Ltd,59
TEAMLEASE-I.NS,963738,Teamlease Services Ltd,59
SKFINDIA-I.NS,18390,SKF India Ltd,59
TVTODAY-I.NS,18440,T.V.Today Network Ltd,59
MAHSCOOTER-I.NS,100265,Maharashtra Scooters Ltd,59
TTKPRESTIG-I.NS,39919,TTK Prestige Ltd.,59
HONAUT-I.NS,18189,Honeywell Automation India Ltd.,59
SHRIRAMCIT-I.NS,39904,Shriram-City Union Finance Ltd.,59
SOLARINDS-I.NS,39909,Solar Industries India Ltd,59
3MINDIA-I.NS,17978,3M India Ltd.,59
AKZOINDIA-I.NS,17990,Akzo Nobel India Ltd,59
PGHH-I.NS,18346,Procter & Gamble Hygiene and Health Care Ltd,59
TIMKEN-I.NS,39916,Timken India Ltd,59
WABCOINDIA-I.NS,39927,WABCO India Ltd,59
SHILPAMED-I.NS,947199,Shilpa Medicare Ltd,59
ICRA-I.NS,39870,ICRA Ltd,59
GULFOILLUB-I.NS,946666,Gulf Oil Lubricants India Ltd,59
ORIENTREF-I.NS,946953,Orient Refractories Ltd,59
SUVEN-I.NS,946968,Suven Life Sciences Ltd,59
519091-I.NS,988681,Tasty Bite Eatables Ltd,59
ZEE-I.NS,998305,Zee Entertainment Enterprises,59
RLCM-I.NS,998277,Reliance Communications Ltd,59
YESB-I.NS,998250,Yes Bank Ltd,59
PWFC-I.NS,998306,Power Finance Corporation Ltd,59
KTKM-I.NS,998281,Kotak Mahindra Bank Ltd,59
SUN-I.NS,998266,Sun Pharmaceutical Industries Ltd,59
JAIA-I.NS,998334,Jaiprakash Associates Ltd,59
VODA-I.NS,998271,Vodafone Idea Ltd,59
SUZL-I.NS,1004963,Suzlon Energy Ltd,59
PNBK-I.NS,998309,Punjab National Bank,59
SAIL-I.NS,998322,Steel Authority of India Ltd,59
BOB-I.NS,998268,Bank of Baroda Ltd,59
ASOK-I.NS,998325,Ashok Leyland Ltd,59
FED-I.NS,998364,Federal Bank Ltd,59
ICBK-I.NS,998270,ICICI Bank Ltd,59
NCCL-I.NS,1008706,NCC Ltd,59
IFIB-I.NS,1008713,Infibeam Avenues Ltd,59
IOC-I.NS,998286,Indian Oil Corporation Ltd,59
TAMO-I.NS,998245,Tata Motors Ltd,59
RECM-I.NS,998313,REC Ltd,59
MUTT-I.NS,1008716,Muthoot Finance Ltd,59
PCJE-I.NS,998406,PC Jeweller Ltd,59
AXBK-I.NS,998247,AXIS Bank Ltd,59
LTFH-I.NS,998376,L&T Finance Holdings Ltd,59
NTPC-I.NS,998274,NTPC Ltd,59
BHEL-I.NS,998259,Bharat Heavy Electricals Ltd,59
JNSP-I.NS,998346,Jindal Steel & Power Ltd,59
ONGC-I.NS,998249,Oil And Natural Gas Corporation Ltd,59
HCLT-I.NS,998283,HCL Technologies Ltd,59
RLCP-I.NS,998323,Reliance Capital Ltd,59
SBI-I.NS,998257,State Bank Of India,59
RPOL-I.NS,998333,Reliance Power Ltd,59
ADAN-I.NS,998307,Adani Power Ltd,59
INBF-I.NS,998370,Indiabulls Housing Finance Ltd,59
VDAN-I.NS,998289,Vedanta Ltd,59
JET-I.NS,998400,Jet Airways Ltd,59
UNBK-I.NS,998310,Union Bank of India Ltd,59
BOI-I.NS,998304,Bank of India Ltd,59
TISC-I.NS,998264,Tata Steel Ltd,59
ITC-I.NS,998255,ITC Ltd,59
GMRI-I.NS,998357,GMR Infrastructure Ltd,59
SIBK-I.NS,998359,South Indian Bank Ltd,59
DWNH-I.NS,998348,Dewan Housing Finance Corp. Ltd,59
MNFL-I.NS,1073512,Manappuram Finance Ltd,59
BAJE-I.NS,998382,Bharat Electronics Ltd,59
GAIL-I.NS,998260,GAIL Ltd,59
RELI-I.NS,998244,Reliance Industries Ltd,59
NBCC-I.NS,1075204,NBCC India Ltd,59
ALBK-I.NS,998339,Allahabad Bank,59
HALC-I.NS,998258,Hindalco Industries Ltd,59
IDFB-I.NS,998410,IDFC Bank Ltd,59
DLF-I.NS,998253,DLF Ltd,59
COAL-I.NS,998282,Coal India Ltd,59
AUROPHARMA-I.NS,998293,Aurobindo Pharma Ltd,59
CNBK-I.NS,998326,Canara Bank Ltd,59
TTPW-I.NS,998262,Tata Power Co. Ltd,59
MOSS-I.NS,998390,Motherson Sumi Systems Ltd,59
INFY-I.NS,998254,Infosys Ltd,59
RLIN-I.NS,998287,Reliance Infrastructure Ltd,59
ORBC-I.NS,998296,Oriental Bank Of Commerce Ltd,59
BPCL-I.NS,998279,Bharat Petroleum Corp. Ltd,59
CGPO-I.NS,998411,Crompton Greaves Ltd,59
BRTI-I.NS,998252,Bharti Airtel Ltd,59
PGRD-I.NS,998272,Power Grid Corporation of India Ltd,59
NALU-I.NS,1073513,National Aluminum Co. Ltd,59
JSTL-I.NS,998284,JSW Steel Ltd,59
ICMN-I.NS,998356,India Cements Ltd,59
IFCI-I.NS,998384,IFCI Ltd,59
NHPC-I.NS,998379,NHPC Ltd,59
HCNS-I.NS,1075209,Hindustan Construction Co. Ltd,59
DSTV-I.NS,998369,Dish TV India Ltd,59
BFRG-I.NS,998353,Bharat Forge Ltd,59
HPCL-I.NS,998291,Hindustan Petroleum Corporation Ltd,59
JAIR-I.NS,998360,Jain Irrigation Systems Ltd,59
CIPL-I.NS,998263,Cipla Ltd,59
WIPR-I.NS,998298,Wipro Ltd,59
IDBI-I.NS,998330,IDBI Bank Ltd,59
APSE-I.NS,998321,Adani Port and Special Economic Zone Ltd,59
IDFC-I.NS,998335,IDFC Ltd,59
TITN-I.NS,998373,Titan Company Ltd,59
MAHM-I.NS,998288,Mahindra & Mahindra Ltd,59
IRBI-I.NS,998352,IRB Infrastructure Developers Ltd,59
IGAS-I.NS,998343,Indraprastha Gas Ltd,59
HDBK-I.NS,998248,HDFC Bank Ltd,59
SBNK-I.NS,998338,Syndicate Bank Ltd,59
HDFC-I.NS,998246,Housing Development Finance Corporation Ltd,59
TEML-I.NS,998278,Tech Mahindra Ltd,59
APLO-I.NS,998331,Apollo Tyres Ltd,59
JUBI-I.NS,998367,Jubilant Foodworks Ltd,59
LUPN-I.NS,998308,Lupin Ltd,59
EQHL-I.NS,1055842,Equitas Holdings Ltd,59
NMDC-I.NS,998312,NMDC Ltd,59
DABU-I.NS,998347,Dabur India Ltd,59
TAMDV-I.NS,998351,Tata Motors DV Ltd,59
PTCI-I.NS,998328,PTC India Ltd,59
TVEB-I.NS,998363,TV18 Broadcast Ltd,59
ESCO-I.NS,1008710,Escorts Ltd,59
SUTV-I.NS,998302,Sun TV Network Ltd,59
BION-I.NS,998261,Biocon Ltd,59
BACH-I.NS,1075206,Balrampur Chini Mills Ltd,59
INBA-I.NS,1008711,Indian Bank,59
KBNK-I.NS,998336,Karnataka Bank Ltd,59
INRL-I.NS,998350,Indiabulls Real Estate Ltd,59
DCBA-I.NS,998409,Development Credit Bank Ltd,59
GLEN-I.NS,998380,Glenmark Pharmaceuticals Ltd,59
HLL-I.NS,998295,Hindustan Unilever Ltd,59
MMFS-I.NS,998391,Mahindra and Mahindra Financial Services Ltd,59
TCS-I.NS,998256,Tata Consultancy Services Ltd,59
VOLT-I.NS,998290,Voltas Ltd,59
OILI-I.NS,1075212,Oil India Ltd,59
INBK-I.NS,998275,IndusInd Bank Ltd,59
WCKH-I.NS,998375,Wockhardt Ltd,59
BJFN-I.NS,998388,Bajaj Finance Ltd,59
TOPO-I.NS,998407,Torrent Power Ltd,59
JUST-I.NS,998320,Just Dial Ltd,59
UPLL-I.NS,998340,UPL Ltd,59
HEXT-I.NS,998374,Hexaware Technologies Ltd,59
PLNG-I.NS,998317,Petronet LNG Ltd,59
TAGL-I.NS,998292,Tata Global Beverages Ltd,59
BATA-I.NS,998300,Bata India Ltd,59
BEML-I.NS,1008707,BEML Ltd,59
SRID-I.NS,998398,Strides Pharma Science Ltd,59
LART-I.NS,998265,Larsen & Toubro Ltd,59
REDY-I.NS,998299,Dr. Reddy’s Laboratories Ltd,59
ICIR-I.NS,1055003,ICICI Prudential Life Insurance Company Ltd,59
INGL-I.NS,1008712,Interglobe Aviation Ltd,59
MINT-I.NS,1008715,MindTree Ltd,59
ABUJ-I.NS,998269,Ambuja Cements Ltd,59
ASPN-I.NS,998297,Asian Paints Ltd,59
ENGI-I.NS,998381,Engineers India Ltd,59
UJVF-I.NS,1008722,Ujjivan Financial Services Ltd,59
MRCO-I.NS,998358,Marico Ltd,59
RATB-I.NS,1075213,RBL Bank Ltd,59
GRAS-I.NS,998324,Grasim Industries Ltd,59
CADI-I.NS,998386,Cadila Healthcare Ltd,59
NITT-I.NS,998408,NIIT Technologies Ltd,59
DIVI-I.NS,998319,Divis Laboratories Ltd,59
UNSP-I.NS,998399,United Spirits Ltd,59
CAST-I.NS,998345,Castrol India Ltd,59
LICH-I.NS,998311,Lic Housing Finance Ltd,59
GRAN-I.NS,998404,Granules India Ltd,59
BLKI-I.NS,1075205,Balkrishna Industries Ltd,59
CNFH-I.NS,1054778,Can Fin Homes Ltd,59
HVEL-I.NS,998397,Havells India Ltd,59
BHRI-I.NS,998368,Bharti Infratel Ltd,59
MRTI-I.NS,998251,Maruti Suzuki India Ltd,59
EXID-I.NS,998285,Exide Industries Ltd,59
APLH-I.NS,998385,Apollo Hospitals Enterprises Ltd,59
SRTR-I.NS,998366,Shriram Transport Finance Co. Ltd,59
TVSM-I.NS,1008721,TVS Motor Company Ltd,59
KVRI-I.NS,998365,Kaveri Seed Company Ltd,59
RYMD-I.NS,1075201,Raymond Ltd,59
CNTY-I.NS,998341,Century Textiles & Industries Ltd,59
JSWE-I.NS,998344,JSW Energy Ltd,59
VGUA-I.NS,1055004,V Guard Industries Ltd,59
GOCP-I.NS,998396,Godrej Consumer Products Ltd,59
BHAF-I.NS,998383,Bharat Financial Inclusion Ltd,59
CEAT-I.NS,998371,CEAT Ltd,59
CAPF-I.NS,1075207,Capital First Ltd,59
ADBK-I.NS,998337,Andhra Bank,59
MAXI-I.NS,1008714,Max Financial Services Ltd,59
CHLA-I.NS,1055005,Cholamandalam Investment and Finance Company,59
BAJA-I.NS,998276,Bajaj Auto Ltd,59
BRGR-I.NS,1084953,Berger Paints India Ltd,59
AJPH-I.NS,998392,Ajanta Pharma Ltd,59
MGAS-I.NS,1043103,Mahanagar Gas Ltd,59
HZNC-I.NS,998329,Hindustan Zinc Ltd,59
HROM-I.NS,998273,Hero MotoCorp Ltd,59
GODI-I.NS,998355,Godrej Industries Ltd,59
TTEX-I.NS,998402,Tata Elxsi Ltd,59
PIDI-I.NS,998362,Pidilite Industries Ltd,59
PIRA-I.NS,1008717,Piramal Enterprises Ltd,59
UBBW-I.NS,998378,United Breweries Ltd,59
ACC-I.NS,998267,ACC Ltd,59
TTCH-I.NS,998354,Tata Chemicals Ltd,59
PVRL-I.NS,1008718,PVR Ltd,59
SRFL-I.NS,998377,SRF Ltd,59
AMAR-I.NS,998387,Amara Raja Batteries Ltd,59
BJFS-I.NS,1073070,Bajaj Finserv Ltd,59
CHPC-I.NS,1075208,Chennai Petroleum Corporation Ltd,59
CCRI-I.NS,1008708,Container Corporation of India Ltd,59
RHFL-I.NS,1055006,Repco Home Finance Ltd,59
ULTC-I.NS,998314,UltraTech Cement Ltd,59
BRIT-I.NS,998327,Britannia Industries Ltd,59
EICH-I.NS,998294,Eicher Motors Ltd,59
TORP-I.NS,998394,Torrent Pharmaceuticals Ltd,59
TRCE-I.NS,1075214,The Ramco Cements Ltd,59
ICNT-I.NS,998405,Indo Count Industries Ltd,59
PAGE-I.NS,998393,Page Industries Ltd,59
ORCL-I.NS,998361,Oracle Financial Services Software Ltd,59
BOSH-I.NS,998303,Bosch Ltd,59
SHCM-I.NS,1008720,Shree Cements Ltd,59
MRF-I.NS,998372,M.R.F. Ltd,59
NSE50-I.NS,8985,Nifty 50,59
NSEBANK-I.NS,104423,Bank NIFTY,59

#JAMAICA
KPREIT.J,994967,Kingston Properties Ltd,60
XFUND.J,994993,Sagicor Real Estate X Fund Ltd,60
MJE.J,1122583,Mayberry Jamaican Equities Ltd,60
LASF.J,994971,LASCO Financial Services Ltd,60
GENAC.J,994954,General Accident Insurance Company,60
CAR.J,994944,Carreras Ltd,60
INDIES.J,1122579,Indies Pharma Jamaica Ltd,60
AMG.J,994940,AMG Packaging & Paper Company Ltd,60
SJ.J,994989,Sagicor Group Jamaica Ltd,60
JMMBGL750_P.J,1122582,JMMB Group Ltd Pref,60
NCBFG.J,1036855,NCB Financial Group Ltd,60
SVL.J,994991,Supreme Ventures Ltd,60
BIL.J,994941,Barita Investments Ltd,60
SCIJMD.J,1122584,Sygnus Credit Investments Ltd,60
FOSRICH.J,1062584,FosRich Company Ltd,60
MIL.J,994975,Mayberry Investments Ltd,60
SEP.J,994985,Seprod Ltd,60
JSE.J,994964,Jamaica Stock Exchange,60
JAMT.J,994957,Jamaican Teas Ltd,60
CBNY.J,994945,Ciboney Group Ltd,60
PULS.J,994981,Pulse Investments Ltd,60
JBG.J,994958,Jamaica Broilers Group Ltd,60
KEX.J,994965,Knutsford Express Services Ltd,60
HONBUN.J,994956,Honey Bun 1982 Ltd,60
TTECH.J,1062587,tTech Ltd,60
PJAM.J,994978,Pan Jamaican Investment Trust Ltd,60
CPJ.J,994949,Caribbean Producers Jamaica Ltd,60
MEEG.J,1062585,Main Event Entertainment Group Ltd,60
CCC.J,994946,Caribbean Cement Company Ltd,60
DTL.J,994952,Derrimon Trading Company Ltd,60
SGJ.J,994986,Scotia Group Jamaica Ltd,60
PROVEN.J,994979,Proven Investments Ltd,60
GK.J,994955,GraceKennedy Ltd,60
LASD.J,994970,Lasco Distributors Ltd,60
MDS.J,994974,Medical Disposable & Supplies Ltd,60
BRG.J,994943,Berger Paints Jamaica Ltd,60
JMMBGL.J,994961,JMMB Group Ltd,60
JETCON.J,1122581,Jetcon Corporation Ltd,60
EPLY.J,1062583,Eppley Ltd,60
KW.J,994969,Kingston Wharves Ltd,60
JP.J,994962,Jamaica Producers Group Ltd,60
SALF.J,994984,Salada Foods Jamaica Ltd,60
CFF.J,994947,Caribbean Flavours and Fragrances,60
PTL.J,994980,Paramount Trading Jamaica Ltd,60
RJR.J,994983,Radio Jamaica Ltd,60
KREMI.J,994968,Caribbean Cream Ltd,60
DCOVE.J,994951,Dolphin Cove Ltd,60
138SL.J,994939,138 Student Living Jamaica Ltd,60
BPOW.J,994942,Blue Power Group Ltd,60
CHL.J,994948,Cargo Handlers Ltd,60
CWJ.J,994950,Cable & Wireless Jamaica Ltd,60
EPLY95_P.J,994953,Eppley Ltd Pref 9.5%,60
JMMB725_P.J,994959,Jamaica Money Market Bro 7.25% Pref,60
JMMB75_P.J,994960,Jamaica Money Market Bro 7.50% Pref,60
KLE.J,994966,K.L.E. Group Ltd,60
LASM.J,994972,LASCO Manufacturing Ltd,60
MUSIC.J,994976,C2W Music Ltd,60
PURITY.J,994982,Consolidated Bakeries Jamaica Ltd,60
SIJL.J,994987,Scotia Investments Jamaica Ltd,60
SIL.J,994988,Sterling Investments Limited,60
SRA.J,994990,Sweet River Abattoir & Supplies Co,60
1834.J,1062581,1834 Investments Ltd,60
AFS.J,1062582,Access Financial Services Ltd,60
PJX.J,1062586,Portland JSX Ltd,60
PAL.J,1072426,Palace Amusement Company 1921 Ltd,60
MTL.J,1073126,Margaritaville Turks Ltd,60
CAC.J,1122578,CAC 2000 Ltd,60
ISP.J,1122580,ISP Finance Services Ltd,60

#US OTC
MRNJ,51494,Metatron Inc,OTC Markets
GARB,51231,Garb Oil & Pwr Corp,OTC Markets
PRPM,51477,Protek Capital Inc.,OTC Markets
QBAN,1131497,Telco Cuba Inc,OTC Markets
IRNC,1130915,Ironclad Encryption Corp,OTC Markets
IHSI,1130847,Intelligent Highway Solutions Inc,OTC Markets
FTXP,1123909,Foothills Exploration Inc,OTC Markets
IGNE,1130844,Igene Biotechnology Inc,OTC Markets
LIQDQ,41311,Liquid Holdings Group Inc,OTC Markets
HIMR,51255,Hollund Ind Marine,OTC Markets
HCMC,102926,Vapor Corp,61
PHIL,1131449,PHI Group Inc,61
AFPW,51501,Alumifuel Pwr Corp.,61
MCET,51373,Multicell Techs Inc,61
MDCN,51005,Medican Enterprises,61
RMTD,51305,Remote Dynamics Inc,61
MCIC,51551,Multicorp Intl Inc.,61
VEGGF,1122203,Better Plant Sciences Inc,61
WDLF,51222,Social Life Network Inc,61
MFST,52098,Medifirst Solutions Inc,61
DVLP,1123603,Golden Developing Solutions Inc,61
SMCE,1135961,SMC Entertainment Inc,61
EFIR,1169930,EGPI Firecreek Inc,61
DLOC,51630,Digital Locations Inc,61
DCAC,960988,Daniels Corporate Advisory Company Inc,61
GDET,1123916,GD Entertainment & Technology Inc,61
GBHL,1123913,Global Entertainment Holdings Inc,61
UGRO,1168967,Urban-Gro Inc,61
AGCB,1097890,Amarillo Gold Corporation,61
DSGT,1123597,DSG Global Inc,61
ESNC,30972,EnSync Inc,61
MICR,30794,Micron Solutions Inc,61
NTDOY,942463,Nintendo Co,61
TAK,942220,Takeda Pharmaceutical Co Ltd,61
TCEHY,102875,Tencent Holdings Ltd,61
SVNDY,942171,Seven & i Holdings Co Ltd,61
TSCDY,942239,Tesco PLC,61
RHHBY,942141,Roche Holding Ltd,61
CIHKY,941806,China Merchants Bank Co Ltd,61
BAYRY,941770,Bayer AG PK,61
EONGY,941874,EON SE,61
CIOXY,941816,Cielo SA,61
PPRUY,941993,Kering SA,61
NSRGY,942067,Nestle SA,61
CFRUY,941829,Compagnie Financiere Richemont,61
NGLOY,941734,Anglo American PLC,61
NRDBY,942078,Nordea Bank Abp,61
DTEGY,941857,Deutsche Telekom AG,61
AAGIY,941717,AIA Group Ltd,61
RBGLY,942131,Reckitt Benckiser Group PLC,61
GOFPY,941916,Greek Org of Football Prognostics,61
FANUY,941886,Fanuc Corporation,61
CKHUY,1053115,CK Hutchison Holdings LTD,61
ESLOY,941877,Essilor International SA,61
DANOY,941846,Danone PK,61
PRDSY,942112,Prada Spa PK,61
ENGIY,941904,Engie SA,61
RYCEY,942143,Rolls Royce Holdings plc,61
BASFY,941769,BASF SE,61
EBKDY,941875,Erste Group Bank AG PK,61
BDORY,941759,Banco Do Brasil SA,61
PNGAY,942106,Ping An Insurance Company of China,61
AVMXY,941754,Avita Medical Ltd,61
CABGY,941794,Carlsberg AS,61
SFTBY,942189,SoftBank Group Corp,61
JBAXY,941986,Julius Baer Group Ltd,61
ISNPY,941967,Intesa Sanpaolo SpA PK,61
SIEGY,39230,Siemens AG,61
CRRFY,941795,Carrefour SA PK,61
DMLRY,1053120,Daimler AG,61
NSANY,942074,Nissan Motor Co Ltd,61
FERGY,942294,Ferguson PLC,61
CAIXY,1053114,Caixabank SA,61
ACSAY,1053105,ACS Actividades De Construccion Y Servicios SA,61
AXAHY,941755,Axa SA,61
AZSEY,941725,Allianz SE,61
IDEXY,941959,Industria de Diseno Textil,61
UBSFY,942263,UbiSoft Entertainment Inc,61
OGZPY,102876,Gazprom PAO,61
REPYY,942134,Repsol SA,61
RDSMY,942145,Royal DSM NV,61
TATYY,942221,Tate & Lyle PLC,61
HOKCY,941938,Hong Kong & China Gas Co Ltd,61
KDDIY,941991,KDDI Corp PK,61
JBSAY,941979,JBS SA,61
CMPGY,941830,Compass Group PLC,61
EADSY,941718,Airbus Group NV,61
BAESY,941756,BAE Systems PLC,61
SBGSY,942164,Schneider Electric SA,61
SCGLY,942187,Societe Generale,61
EGFEY,941866,Eurobank Ergasias SA,61
LRLCY,942024,L’Oreal Co,61
ENLAY,941871,ENEL Societa per Azioni,61
SUTNY,942203,Sumitomo Mitsui Trust Holdings PK,61
GLNCY,941913,Glencore PLC,61
KGFHY,941995,Kingfisher PLC,61
VWAGY,959189,Volkswagen 10 AG Pref,61
BNPQY,941781,BNP Paribas SA,61
DBOEY,941854,Deutsche Boerse AG,61
SBRCY,942163,Sberbank Of Russia,61
JSAIY,941974,J Sainsbury PLC OTC,61
IFNNY,941961,Infineon Technologies AG,61
NHYDY,942079,Norsk Hydro ASA,61
TRYIY,942250,Toray Industries Inc,61
PCRFY,942098,Panasonic Corp PK,61
LVMUY,53053,LVMH Moet Hennessy Louis Vuitton SA,61
MRAAY,942061,Murata Manufacturing Inc,61
SOMLY,942166,Secom Co Ltd,61
KAOOY,941987,Kao Corp,61
TELNY,942231,Telenor ASA,61
ASAZY,941746,Assa Abloy AB,61
LNSTY,1053138,London Stock Exchange Ltd,61
DSEEY,941845,Daiwa Securities Group Inc,61
SAFRY,942153,Safran SA,61
CTTAY,941832,Continental AG PK,61
NTTYY,8166,Nippon Telegraph and Telephone Corp,61
NPSNY,942064,Naspers Ltd,61
PPERY,942119,PT Bank Mandiri Persero TBK,61
SMCAY,942184,SMC Corp Japan,61
NABZY,942065,National Australia Bank Ltd,61
VWAPY,942278,Volkswagen AG Pref,61
CRARY,941835,Credit Agricole SA PK,61
JAPAY,1053132,Japan Tobacco,61
SGTPY,942209,Surgutneftegaz OAO,61
LZAGY,942023,Lonza Group AG,61
VIVHY,942275,Vivendi SA PK,61
CODYY,1053117,Compagnie de Saint-Gobain,61
DNHBY,941859,DNB ASA,61
BRDCY,941785,Bridgestone Corp,61
RKUNY,1053149,Rakuten Inc,61
IMBBY,941955,Imperial Brands PLC,61
SHCAY,942175,Sharp Corp,61
CRZBY,941827,Commerzbank AG PK,61
NJDCY,22265,Nidec Corporation,61
AWCMY,941728,Alumina Limited PK,61
CCLAY,941823,Coca-Cola Amatil Ltd,61
USNZY,942270,Usinas Siderurgicas de Minas Gerais,61
CLPHY,941822,CLP Holdings Ltd,61
ALBKY,941726,Alpha Bank SA,61
DBSDY,941850,DBS Group Holdings Ltd,61
KMTUY,941998,Komatsu Ltd,61
AFLYY,941022,Air France KLM SA,61
FPAFY,941890,First Pacific Company Ltd,61
HLTOY,941928,Hellenic Telecommunications Org,61
BMWYY,941771,Bayerische Motoren Werke AG,61
VCISY,942274,Vinci SA,61
SGAMY,942167,Sega Sammy Holdings Inc,61
DPSGY,941856,Deutsche Post AG,61
BYDDY,941790,BYD Co Ltd,61
SSEZY,942194,SSE PLC,61
CDEVY,941818,City Developments Ltd,61
CJEWY,941814,Chow Tai Fook Jewellery Group,61
UNICY,942266,Unicharm Corp,61
ADDYY,941708,Adidas AG,61
DNPLY,941838,Dai Nippon Printing Co Ltd,61
SKVKY,1053152,Skandinaviska Enskilda Banken AB,61
ZTCOY,52699,ZTE Corp,61
BTLCY,941786,British Land Company,61
POAHY,942108,Porsche Automobile Holding SE,61
ICAGY,941965,Int Consolidated Airlines,61
FUJHY,941897,Subaru Corp,61
VWDRY,942273,Vestas Wind Systems AS,61
OTSKY,942096,Otsuka Holdings Co Ltd,61
PUBGY,942126,Publicis Groupe SA,61
CICHY,941805,China Construction Bank Corp,61
FSUGY,941893,Fortescue Metals Group Ltd,61
MRWSY,942293,WM Morrison Supermarkets PLC,61
SGSOY,942173,SGS SA,61
GBOOY,941917,Grupo Financiero Banorte SAB de CV,61
EXPGY,941883,Experian plc PK,61
DWAHY,941844,Daiwa House Industry Co Ltd,61
AIQUY,942010,L’Air Liquide SA,61
AACAY,941701,AAC Technologies Holdings Inc,61
RDEIY,942132,Red Electrica Corporacion SA,61
OVCHY,1053143,Overseas Chinese Banking Corp Ltd,61
ANZBY,941752,AU & NZ Banking Group Ltd,61
NILSY,941983,JSC MMC Norilsk Nickel,61
ATLKY,941751,Atlas Copco AB,61
SUHJY,942205,Sun Hung Kai Properties Ltd,61
ECIFY,941868,Electricite de France SA,61
AEXAY,1053106,Atos Origin SA,61
BBSEY,941772,BB Seguridade Participacoes SA,61
KWHIY,941989,Kawasaki Heavy Industries Ltd,61
AVVIY,21187,Aviva PLC,61
BXBLY,941784,Brambles Ltd,61
KKPNY,942146,Koninklijke KPN NV,61
ADRNY,942001,Koninklijke Ahold Delhaize NV,61
RNLSY,996129,Renault SA,61
SAXPY,942156,Sampo OYJ,61
AKBTY,941721,Akbank Turk Anonim Sirketi,61
RTOKY,942133,Rentokil Initial PLC,61
LGGNY,942011,Legal & General Group Plc,61
INVVY,1053130,INDIVIOR PLC,61
WIMHY,942291,William Hill PLC,61
SOUHY,969224,South32,61
IBDRY,941950,Iberdrola SA,61
CLLDY,941793,CapitaLand Ltd,61
CIBEY,941826,Commercial International Bank,61
CPYYY,941801,Centrica PLC,61
SVNLY,942211,Svenska Handelsbanken PK,61
WFAFY,942285,Wesfarmers Ltd,61
EJPRY,941864,East Japan Railway Co,61
ALPMY,941748,Astellas Pharma Inc,61
MIELY,942050,Mitsubishi Electric Corp,61
AHKSY,941744,Asahi Kaisei Corp,61
DNZOY,941853,Denso Corp,61
KPCPY,941988,KASIKORNBANK Public Co Ltd,61
MITEY,942051,Mitsubishi Estate Co Ltd,61
JPXGY,1053134,Japan Exchange Group Inc,61
AKZOY,941722,Akzo Nobel NV,61
LNVGY,942013,Lenovo Group Ltd PK,61
SKFRY,941703,AB SKF,61
ZURVY,942305,Zurich Insurance Group Ltd,61
TLSYY,942236,Telstra Corporation Ltd,61
FUJIY,941898,FUJIFILM Holdings Corp,61
SWRAY,942214,Swire Pacific Ltd,61
SYIEY,942217,Symrise Ag PK,61
RSNAY,942148,RSA Insurance Group PLC,61
MSADY,942056,MS&AD Insurance Group Holdings PK,61
MGDDY,942048,Michelin Cie Des Estb,61
OCPNY,942088,Olympus Corp,61
CLVLY,941821,Clinuvel Pharmaceuticals Ltd,61
MKTAY,13571,Makita Corp,61
DSDVY,996120,DSV A/S,61
KUBTY,942004,Kubota Corp,61
FUPBY,941896,Fuchs Petrolub SE,61
ASGLY,941743,AGC Inc,61
CLPBY,942450,Coloplast A,61
JAPSY,1053133,Japan Airlines Ltd,61
CMSQY,941831,Computershare Ltd,61
WEICY,942283,Weichai Power Company Ltd,61
CSUAY,941811,China Shenhua Energy Co Ltd,61
VEOEY,29470,Veolia Environnement SA,61
GMXAY,941908,Genmab AS,61
UOVEY,942267,United Overseas Bank Ltd,61
LLESY,942012,Lend Lease Group,61
IDCBY,941960,Industrial Commercial Bank of China,61
DLAKY,941855,Deutsche Lufthansa AG,61
GEAGY,941905,GEA Group AG,61
SWDBY,942213,Swedbank AB,61
DKILY,941841,Daikin Industries Ltd,61
MAKSY,942035,Marks & Spencer Group Plc,61
LUKOY,942025,NK Lukoil PAO,61
CSLLY,941836,CSL Ltd,61
WLWHY,942297,Woolworths Holdings Ltd PK,61
MONOY,942054,Monotaro Co Ltd,61
SKHHY,22013,Sonic Healthcare Ltd,61
JSHLY,941977,Jardine Strategic Holdings Ltd PK,61
CHYHY,941815,CHR Hansen Holding AS,61
AMKBY,941738,AP Moeller-Maersk AS,61
SHECY,942176,Shin-Etsu Chemical Co Ltd,61
WTKWY,942295,Wolters Kluwer NV,61
MURGY,942060,Muenchener Rueckver Ges,61
SDXAY,942188,Sodexo PK,61
TLSNY,942234,Telia Company AB,61
WMMVY,942281,Wal-Mart De Mexico,61
WEGRY,942284,Weir Group PLC,61
PDRDY,102877,Pernod Ricard SA PK,61
ACCYY,941706,Accor SA Ltd,61
WHGLY,1053158,WH Group Ltd,61
WOPEY,942296,Woodside Petroleum Ltd,61
SLLDY,942159,Sanlam Ltd PK,61
KNBWY,941996,Kirin Holdings Co Ltd,61
SGAPY,942182,Singapore Telecommunications PK,61
SONVY,942191,Sonova Holding AG,61
BURBY,941789,Burberry Group Plc,61
PTAIY,942118,Astra International Tbk PT,61
NPNYY,942073,Nippon Yusen Kabushiki Kaisha,61
HTHIY,941935,Hitachi Ltd,61
TKGBY,942261,Turkiye Garanti Bankasi AS,61
QBIEY,942127,QBE Insurance Group Ltd,61
MTZPY,942052,Mitsubishi Tanabe Pharma Corp,61
GLPEY,942454,Galp Energa,61
GFSZY,941900,G4S PLC,61
SSMXY,942218,Sysmex Corp,61
ORKLY,942094,Orkla ASA,61
TOPPY,942249,Toppan Printing Ltd,61
SSDOY,942177,Shiseido Company Ltd,61
KHOLY,941997,Koc Holdings AS,61
BKRKY,941765,Bank Rakyat,61
UPMKY,942269,UPM-Kymmene Corp,61
HNNMY,941931,Hennes & Mauritz AB,61
TKOMY,942244,Tokio Marine Holdings Inc,61
FJTSY,941899,Fujitsu Ltd,61
PBSFY,942116,ProSiebenSat1 Media AG,61
SGBLY,942196,Standard Bank Group Ltd PK,61
HEINY,941927,Heineken NV,61
VDMCY,942276,Vodacom Group Ltd PK,61
AMCRY,941730,Amcor Ltd,61
IMPUY,941953,Impala Platinum Holdings Ltd PK,61
BACHY,941762,Bank of China Ltd,61
HKXCY,941939,Hong Kong Exchange & Clearing,61
RYKKY,942151,Ryohin Keikaku Co Ltd,61
GVDNY,941911,Givaudan SA,61
RICOY,942138,Ricoh Company Ltd,61
IFJPY,941962,Informa PLC,61
PDYPY,1053144,Paddy Power Betfair PLC,61
HENKY,941930,Henkel AG & Co KGAA,61
RWEOY,942150,RWE AG PK,61
CJPRY,941800,Central Japan Railway Co,61
DASTY,941848,Dassault Systemes SA,61
ESALY,941867,Eisai Co Ltd,61
ALFVY,1053108,Alfa-Laval AB,61
SCMWY,942216,SwissCom AG,61
SSUMY,942201,Sumitomo Corp,61
HENOY,942455,Henkel Ag A,61
UUGRY,942268,United Utilities Group PLC,61
KROTY,942460,Kroton Edct,61
KCDMY,941994,Kimberly-Clark de Mexico,61
AONNY,941711,Aeon Co Ltd,61
HSNGY,941924,Hang Seng Bank Ltd,61
MKKGY,942041,Merck KGaA,61
SCRYY,942165,SCOR PK,61
VLEEY,942271,Valeo SA,61
SWGAY,942212,Swatch Group AG,61
KPELY,941992,Keppel Corporation Limited,61
OMRNY,942089,OMRON Corp,61
SSREY,942215,Swiss Re Ltd,61
SMGZY,942185,Smiths Group Plc,61
KBCSY,941990,KBC Group SA,61
GELYY,941906,Geely Automobile Holdings Ltd,61
SMFKY,942468,Smurfit Kappa Group Plc,61
EDNMY,1053121,Edenred Malakoff,61
SMTOY,1053153,Sumitomo Electric Industries Ltd,61
JGCCY,941981,JGC Corp,61
AMADY,941729,Amadeus IT Holding SA PK,61
HDELY,941926,HeidelbergCement AG,61
DNKEY,941847,Danske Bank A/S,61
BNTGY,1053113,Brenntag AG,61
LYSDY,942026,Lynas Corporation Ltd,61
HCMLY,941936,Lafargeholcim Ltd,61
SRGHY,942178,Shoprite Holdings Ltd PK,61
ASOMY,941745,ASOS plc PK,61
TTNDY,942227,Techtronic Industries Ltd,61
TEZNY,942238,Terna Rete Elettrica Nazionale,61
ROYMY,942147,Royal Mail PLC,61
NNGRY,1053142,NN Group NV,61
CCHGY,30371,Coca Cola HBC AG,61
SKHSY,942169,Sekisui House Ltd,61
ENGGY,941870,Enagas SA,61
SZEVY,942200,Suez Environnement Co SA,61
SWMAY,52980,Swedish Match Ab Ord,61
WYNMY,942299,Wynn Macau Ltd,61
CGEMY,941792,Capgemini SE,61
NVZMY,942081,Novozymes AS,61
MSBHY,942049,Mitsubishi Corp,61
TINLY,942228,Teijin Ltd,61
SPKKY,942193,Spark New Zealand Ltd,61
SGPYY,942154,Sage Group PLC,61
PKCOY,1053145,Park 24 Corp,61
HOCPY,941942,Hoya Corp,61
PSGTY,942123,Semen Indonesia Persero Tbk PT,61
SEKEY,942168,Seiko Epson Corp,61
TSRYY,942256,Treasury Wine Estates Ltd PK,61
FRCOY,941887,Fast Retailing Co Ltd,61
TOELY,942246,Tokyo Electron Ltd PK,61
NPSKY,942082,NSK Ltd,61
SEOAY,942198,Stora Enso Oyj PK,61
AHCHY,941735,Anhui Conch Cement Co Ltd,61
TOTDY,942252,Toto Ltd,61
MRPLY,942055,Mr Price Group Ltd,61
BAFYY,941757,Balfour Beatty PLC,61
AGESY,941714,ageas SA/NV,61
NINOY,942071,Nikon Corp,61
HYPMY,941948,Hypera SA,61
WBRBY,942290,Wienerberger Baustoffindustrie,61
ITOCY,941971,Itochu Corp,61
AJINY,941720,Ajinomoto Co Inc,61
CMWAY,941828,Commonwealth Bank of Australia PK,61
STBFY,942208,Suntory Beverage & Food Ltd,61
NDEKY,942075,Nitto Denko Corp,61
ATASY,941750,Atlantia SpA,61
GASNY,1053126,Naturgy Energy Group SA,61
REDFY,17040,Rediff.com India Ltd,61
MOR,1053141,MorphoSys AG,61
IHLDY,941954,Imperial Holdings Ltd PK,61
SNPHY,942160,Santen Pharmaceutical Co,61
TTDKY,942224,TDK Corp,61
NDBKY,942066,Nedbank Group,61
BZLFY,941788,Bunzl plc,61
NCMGY,942069,Newcrest Mining Ltd PK,61
AHEXY,941707,Adecco Group Inc,61
MTNOY,942057,MTN Group Ltd PK,61
SCHYY,942157,Sands China Ltd,61
MHGVY,101877,Mowi ASA,61
INGIY,941963,Ingenico Group SA,61
DSNKY,941840,Daiichi Sankyo Co Ltd,61
ZLNDY,1053161,ZALANDO SE,61
JMHLY,941976,Jardine Matheson Holdings Ltd PK,61
DIFTY,941843,Daito Trust Construction Co,61
ALSMY,941727,Alstom PK,61
ASBFY,941747,Associated British Foods plc,61
BZQIY,941777,Bezeq Corp Ltd,61
ROSYY,942144,PJSC Rostelecom PAO,61
KNYJY,941999,Kone Oyj,61
PANDY,942099,Pandora A/S,61
ACGBY,941716,Agricultural Bank of China PK,61
FRRVY,996121,Ferrovial SA,61
PUGOY,942104,Peugeot SA,61
XNGSY,941873,ENN Energy Holdings Ltd,61
TSGTY,942258,Tsingtao Brewery Co Ltd,61
DLNDY,1053119,D&L Industries Inc,61
CAOVY,941809,China Overseas Land Investment,61
SOMMY,1053155,Sumitomo Chemical Co Ltd,61
SMMYY,942202,Sumitomo Metal Mining Co Ltd,61
CLCGY,941820,Clicks Group Ltd,61
CPCAY,941798,Cathay Pacific Airways Ltd,61
PSMMY,942101,Persimmon Plc,61
BDVSY,941779,Bidvest Group Ltd PK,61
LZRFY,942021,Localiza Rent A Car SA,61
OPHLY,942091,Ono Pharmaceutical Co Ltd,61
MZDAY,942037,Mazda Motor Corp,61
SDVKY,942158,Sandvik AB,61
HOWWY,941941,Hopewell Holdings Ltd,61
ESSYY,1028155,Essity AB,61
TNABY,942237,Tenaga Nasional Berhad,61
HXGBY,1053129,Hexagon AB,61
SUBCY,942199,Subsea 7 SA,61
HLPPY,941923,Hang Lung Properties Ltd,61
IPXHY,941964,Inpex Corp,61
TLPFY,942232,Teleperformance PK,61
SSLZY,942161,Santos Ltd,61
JMPLY,941982,Johnson Matthey PLC,61
FSNUY,941895,Fresenius SE & Co KGaA,61
ISUZY,941969,Isuzu Motors Ltd,61
BHKLY,941782,BOC Hong Kong Holdings Ltd,61
CSIOY,941797,Casio Computer Co Ltd,61
GEBHY,941909,Genting Berhad,61
EDPFY,941865,EDP Energias de Portugal SA,61
MARUY,942036,Marubeni Corp,61
DQJCY,941861,Pan Pacific International Holdings Corp,61
MITSY,13572,Mitsui & Company Ltd,61
JSGRY,942020,Lixil Group Corp,61
RANJY,942130,Randstad Holdings NV,61
GWLLY,941915,Great Wall Motor Company Ltd,61
MRRTY,942034,Marfrig Global Foods SA,61
ITVPY,941973,ITV PLC,61
ARKAY,941741,Arkema SA,61
HLUYY,941921,H Lundbeck AS,61
SPHRY,942197,Starpharma Holdings Ltd,61
SPPJY,942162,Sappi Ltd,61
FINMY,941889,Leonardo SpA,61
MQBKY,942028,Macquarie Group Ltd,61
YARIY,942302,Yara International ASA,61
TOSYY,942251,Toshiba Corp PK,61
YAHOY,942301,Yahoo Japan Corp,61
HGKGY,942110,Power Assets Holdings Ltd,61
WJRYY,942286,West Japan Railway Co,61
YZCAY,29757,Yanzhou Coal Mining Company Limited,61
POFCY,942102,Petrofac Ltd,61
ANGPY,941733,Anglo American Platinum Ltd,61
BPIRY,942107,Piraeus Bank SA,61
ROHCY,942142,Rohm Co Ltd,61
VLOWY,942272,Vallourec SA,61
CCOHY,941812,China State Construction Int Hold,61
EKTAY,941869,Elekta AB,61
INCZY,941956,Incitec Pivot Ltd,61
ELUXY,941702,AB Electrolux,61
TSYHY,942255,TravelSky Technology Ltd,61
HESAY,941933,Hermes International SA,61
PRRFY,1053146,Premier Foods Plc,61
SNMRY,942186,Snam SpA,61
OMVKY,942090,OMV AG PK,61
MYTAY,942029,Magyar Telekom Plc,61
TDHOY,1053157,T&D Holdings Inc,61
HLDCY,941929,Henderson Land Development,61
THKLY,942240,THK Co Ltd,61
ECPCY,941878,Estacio Participacoes Sa,61
HVRRY,941925,Hannover Re,61
ASHTY,942447,Ashtead Gro,61
NDVLY,942068,New World Development Co Ltd,61
WHLKY,942289,Wheelock & Co Ltd,61
ATLCY,942448,Atlas Copco,61
PTXKY,1053147,PT XL Axiata Tbk,61
IPSEY,941968,Ipsen SA,61
MTTRY,942045,Ceconomy AG,61
SPXCY,1053156,Singapore Exchange Ltd,61
BKEAY,941763,Bank of East Asia Limited,61
KNCAY,942000,Konica Minolta Inc,61
FOVSY,1053123,Ford Otomotiv Sanayi AS,61
WARFY,942288,Wharf Holdings Ltd,61
CCGGY,941791,C&C Group Plc,61
NPSCY,942072,Nippon Steel Corp,61
ARCAY,941740,Arcadis NV,61
OAOFY,942222,Tatneft,61
TMICY,942257,Trend Micro Inc,61
PCCWY,942100,PCCW Limited,61
AGLXY,941715,AGL Energy Ltd,61
BOSSY,941944,Hugo Boss AG,61
HSQVY,941945,Husqvarna AB,61
ATEYY,1053110,Advantest Corp DRC,61
LNGLY,942018,Liquefied Natural Gas Ltd PK,61
CNVVY,1053116,ConvaTec Group plc,61
AGRPY,941767,Absa Group Ltd,61
SVCBY,942210,Svenska Cellulosa AB,61
ABCZY,941704,Abcam PLC PK,61
CRPJY,38061,China Resources Power Holding,61
ACKAY,1053104,Arcelik  AS,61
SMSMY,942180,Sims Metal Management Ltd PK,61
AIRYY,1053107,Air China Ltd,61
GZPFY,941903,Gazprom Neft PAO,61
APEMY,941739,Aperam PK,61
SMUUY,1053154,Siam Commercial Bank Public Co Ltd,61
DIISY,941858,Direct Line Insurance Group PLC,61
CSUNY,15837,China Sunergy Co Ltd,61
KURRY,942007,Kuraray Co,61
SIETY,1053151,SA D Ieteren NV,61
OCLDY,942092,Orica Ltd,61
SINGY,942181,Singapore Airlines Ltd,61
VTKLY,942280,VTech Holdings Ltd,61
AMIGY,941709,Admiral Group PLC,61
ASEKY,941719,Aisin Seiki Co Ltd,61
MLYBY,942031,Malayan Banking Berhad,61
HACBY,941922,Hachijuni Bank Ltd,61
TBLMY,942241,Tiger Brands Ltd PK,61
KHNGY,1053136,Kuehne & Nagel International AG,61
FPLPY,1053124,Provident Financial Plc,61
KNMCY,8010,Konami Holdings Corp,61
3591,13996,Wacoal Holdings Corp,61
HKTVY,15844,Hong Kong Television Network Ltd,61
PRISY,20308,Promotora De Informaciones SA,61
BKQNY,21832,Bank Of Queensland Ltd,61
ASXFY,22977,ASX Limited,61
SKBSY,25924,Skanska AB ser. B,61
FOJCY,25956,Fortum Oyj,61
AVIFY,941710,Advanced Info Service Public,61
ALGGY,941724,Alliance Global Group Inc,61
ALNPY,941731,ANA Holdings Inc,61
ARZTY,941742,Aryzta AG PK,61
BKHYY,941761,Bank Hapoalim BM,61
BPOSY,941783,Bpost SA,61
CGUSY,941796,Casino Guichard Perrachon SA,61
CHRYY,941813,Chorus Ltd,61
CLZNY,941819,Clariant AG,61
CHEOY,941824,CochLear Ltd,61
CUYTY,941825,Colruyt SA,61
CPKPY,941834,CP Pokphand Co Ltd,61
CYRBY,941837,Cyrela Brazil Realty SA,61
DVDCY,941849,Davide Campari-Milano SpA,61
DGRLY,941852,Delek Group Ltd,61
DNFGY,941862,Dongfeng Motor Group Co Ltd,61
EUSHY,941879,Eurocash SA PK,61
ETCMY,941880,Eutelsat Communications SA,61
EVTCY,941881,Evotec AG PK,61
FCREY,941891,Fletcher Building Ltd PK,61
FXTGY,941894,Foxtons Group PLC,61
GTOMY,941907,Gemalto NV,61
GNGBY,941910,Getinge Industrier AB,61
GTMAY,941918,Grupo TMM SAB,61
GGDVY,941920,Guangdong Investment Ltd,61
HINOY,941934,Hino Motors Ltd,61
ISMAY,941958,Indra Sistemas SA,61
IKTSY,941966,Intertek Group Plc,61
JRONY,941980,Jeronimo Martins SGPS SA,61
JSCPY,941984,JSR Corp,61
KIROY,942005,Kumba Iron Ore Ltd PK,61
KLYCY,942006,Kunlun Energy Co Ltd PK,61
LFUGY,942014,Li & Fung PK,61
LVCLY,942019,Living Cell Technologies Ltd,61
LNMIY,942022,Lonmin plc PK,61
MTENY,942030,Mahanagar Telephone Nigam PK,61
MXCYY,942046,Metso Corporation,61
MTUAY,942059,MTU Aero Engines AG,61
NPKLY,942063,Nampak Ltd,61
NOBGY,942076,Noble Group Ltd,61
NKRKY,942077,Nokian Tyres Plc,61
OPYGY,942086,OJSC Polyus Gold,61
PGSVY,942103,Petroleum Geo-Services ASA,61
PPCLY,942111,PPC Ltd,61
PMOIY,942113,Premier Oil PLC,61
PTKFY,942121,PT Kalba Farma IDR,61
PUTKY,942124,PT United Tractors,61
RNMBY,942136,Rheinmetall AG,61
RSTAY,942137,Rib Software AG PK,61
RRETY,942140,Robinsons Retail Holdings Inc,61
RSHYY,942149,RusHydro JSC,61
STRNY,942172,Severn Trent PLC PK,61
SNYFY,942192,Sony Financial Holdings Inc,61
SNMCY,942206,Suncorp Group Ltd,61
TAVHY,942223,Tav Havalimanlari Holding AS,61
TCLRY,942225,Technicolor,61
TMKXY,942242,TMK OAO,61
TKGSY,942247,Tokyo Gas Co Ltd,61
TPDKY,942248,Topdanmark AS,61
TYIDY,942253,Toyota Industries Corporation,61
TUWOY,942260,Tullow Oil PLC,61
UCBJY,942264,UCB SA,61
WLMIY,942292,Wilmar International Ltd,61
WYGPY,942298,Worley Parsons Ltd,61
YUEIY,942303,Yue Yuen Industrial Holdings,61
KLBAY,942459,Klabin Sa A,61
SGTZY,942466,Surgutneftegaz,61
TKYVY,942470,Turkiye Vakiflar Bankasi TAO,61
ESYJY,1013742,EasyJet PLC,61
RXEEY,1052237,Rexel SA,61
ANSLY,1053109,Ansell Ltd,61
BNCDY,1053112,Banca Mediolanum SPA,61
DIDAY,1053118,Distribuidora Internacional De Alimentacion SA,61
ELPVY,1053122,Companhia Paranaense de Energia-Copel,61
FSSLY,1053125,Fossal SAA,61
GJNSY,1053128,Gjensidige Forsikring Asa,61
ITEGY,1053131,ITE Group Plc,61
JTTRY,1053135,Japan Airport Terminal,61
KPLUY,1053137,K&S AG,61
MEGGY,1053139,Meggitt Plc,61
MITFY,1053140,Mitie Group Plc,61
RTOXY,1053150,Rotork PLC,61
YAMCY,1053160,Yamaha Corp DRC,61
SUTI,51310,Sutimco International Inc,61
PTOP,50825,Peer To Peer Network,61
ABWN,1123017,Airborne Wireless Network,61
TRDX,51416,Trend Exploration,61
DRNG,961107,Vopia Inc,61
UPZS,1075584,Unique Foods Corp,61
PCLI,51218,Protocall Technologs,61
APYP,1123087,AppYea Inc,61
BLSP,52219,Blue Sphere Corp,61
FTEG,1123905,For The Earth Corp,61
COBI,1123464,Compass Biotechnologies Inc,61
ETEK,51512,Eco-Tek Group,61
UBQU,52060,Ubiquitech Software,61
DNAD,51246,Dna Dynamics Inc,61
RGBP,961076,Regen BioPharma Inc,61
BLPG,960957,Blue Line Protection Group,61
SWHI,51975,SW Innovative Holdings Inc,61
CAVR,1123357,CAVU Resources Inc,61
RMHBD,51746,Rocky Mountain High Brands Inc,61
CMGO,1123456,CMG Holdings Group Inc,61
STEV,52069,Stevia Corp,61
DGTW,1123525,DigitalTown Inc,61
ALKM,50958,Alkame Holdings Inc,61
ZNGY,51608,Zenergy Brands Inc,61
SRMC,52659,Sierra Monitor Corp,61
LEAS,51763,Strategic Asset Leasing Inc,61
GETH,1123923,Green Envirotech Holdings,61
SFOR,51313,StrikeForce Technologies Inc,61
OCLN,52262,OriginClear Inc,61
GXXM,1128910,Gex Management Inc,61
APTY,1123085,APT Systems Inc,61
FTWS,,Flitways Technology Inc,61
AHIX,51390,ALUF Holdings Inc,61
TPNI,50856,The Pulse Network,61
TTCM,51344,Tautachrome Inc,61
BANT,51590,Bantek Inc,61
RNVA,17338,Rennova Health Inc,61
CFGX,51374,Capital Financial Gl,61
CLKA,1123453,Clikia Corp,61

#VIRTUAL CURRENCY
BTCUSD.VC,1035793,BTC/USD,62
ETHUSD.VC,1035794,ETH/USD,62
XRPUSD.VC,1075586,XRP/USD,62
USDTUSD.VC,1129325,USDT/USD,62
BCHUSD.VC,1099022,BCH/USD,62
BSVUSD.VC,1114538,BSV/USD,62
LTCUSD.VC,1056828,LTC/USD,62
EOSUSD.VC,1129127,EOS/USD,62
BNBUSD.VC,1054919,BNB/USD,62
XTZUSD.VC,1158893,XTZ/USD,62
TAGZ5USD.VC,1156570,TAGZ5/USD,62
LEOUSD.VC,1059952,LEO/USD,62
XLMUSD.VC,1122657,XLM/USD,62
LINKUSD.VC,1137399,LINK/USD,62
XMRUSD.VC,1031063,XMR/USD,62
HTUSD.VC,1072306,HT/USD,62
ADAUSD.VC,1073899,ADA/USD,62
TRXUSD.VC,1116580,TRX/USD,62
USDCUSD.VC,1142432,USDC/USD,62
DASHUSD.VC,1171321,DASH/USD,62
CROUSD.VC,1141853,CRO/USD,62
ETCUSD.VC,1129149,ETC/USD,62
MINUSD.VC,1155633,MIN/USD,62
NEOUSD.VC,1055863,NEO/USD,62
HEDGUSD.VC,1141742,HEDG/USD,62
ATOMUSD.VC,1130967,ATOM/USD,62
IOTAUSD.VC,1095907,IOTA/USD,62
XEMUSD.VC,1031712,XEM/USD,62
ZECUSD.VC,1127885,ZEC/USD,62
INOUSD.VC,1153116,INO/USD,62
MKRUSD.VC,1116639,MKR/USD,62
PAXUSD.VC,1115136,PAX/USD,62
ONTUSD.VC,1136337,ONT/USD,62
FTTUSD.VC,1156074,FTT/USD,62
DOGEUSD.VC,1158819,DOGE/USD,62
BATUSD.VC,1131258,BAT/USD,62
VETUSD.VC,1089757,VET/USD,62
TUSDUSD.VC,1093947,TUSD/USD,62
BTGUSD.VC,1053071,BTG/USD,62
HBARUSD.VC,1153133,HBAR/USD,62
LSKUSD.VC,1158825,LSK/USD,62
DCRUSD.VC,1116636,DCR/USD,62
QTUMUSD.VC,1097525,QTUM/USD,62
DNAUSD.VC,1070428,DNA/USD,62
INBUSD.VC,1117695,INB/USD,62
DOTUSD.VC,1165465,DOT/USD,62
UNIUSD.VC,1070789,UNI/USD,62
IOSTUSD.VC,1158822,IOST/USD,62
THETAUSD.VC,1158889,THETA/USD,62
FILUSD.VC,1057927,FIL/USD,62
CAKEUSD.VC,1170085,CAKE/USD,62
MATICUSD.VC,1131278,MATIC/USD,62
FUNUSD.VC,1141889,FUN/USD,62
XVGUSD.VC,1056502,XVG/USD,62
RUNEUSD.VC,1165352,RUNE/USD,62
SOLUSD.VC,1161528,SOL/USD,62
ANKRUSD.VC,1165346,ANKR/USD,62
MFTUSD.VC,1088160,MFT/USD,62
GTOUSD.VC,1066592,GTO/USD,62
ATOMUSD.VC,1130959,ATOM/USD,62
DENTUSD.VC,1153049,DENT/USD,62
CHZUSD.VC,1152984,CHZ/USD,62
FTMUSD.VC,1155566,FTM/USD,62
REPUSD.VC,1036961,REP/USD,62
SUPERUSD.VC,1070534,SUPER/USD,62
BANDUSD.VC,1162249,BAND/USD,62
UTKUSD.VC,1066595,UTK/USD,62

#JOHANNESBURG  SOUTH AFRICA
SYMBOL,ID,Name,ExchangeID
4SI.JO,1131015,4Sight Holdings Ltd,63
AFE.JO,50088,A E C I,63
ABG.JO,41398,Absa Group Ltd,63
ABSP.JO,985197,Absa Bank Ltd,63
APF.JO,949932,Accelerate Property Fund Ltd,63
ACE.JO,985198,Accentuate Ltd,63
ACS.JO,943607,Acsion Ltd,63
ADI.JO,949927,Adapt IT Holdings Ltd,63
AIP.JO,50178,Adcock,63
ADR.JO,50087,Adcorp,63
AVL.JO,985210,Advanced Health Limited,63
ADH.JO,50129,Advtech,63
AFEP.JO,985201,AECI Ltd,63
AON.JO,985207,African & Overseas Enterprises Ltd,63
ADW.JO,985200,African Dawn Capital Ltd,63
AEE.JO,949928,African Equity Empowerment Inv,63
AME.JO,949931,African Media Entertainment,63
AXL.JO,50126,African Phoenix Investments Ltd,63
AIL.JO,1052686,African Rainbow Capital Investments Ltd,63
ARI.JO,41384,African Rainbow Minerals Ltd,63
AFT.JO,50159,Afrimat,63
ACT.JO,949926,AfroCentric Investment Corp,63
AFX.JO,50147,Afrox,63
AHL.JO,985202,AH Vest Ltd,63
ALH.JO,953105,Alaris Royalty Corp,63
AFH.JO,949930,Alexander Forbes Group Holdings,63
AEL.JO,50120,Altron A,63
ACG.JO,985199,Anchor Group Ltd,63
AND.JO,985205,Andulela Investment Holdings Ltd,63
AGL.JO,8731,Anglo American PLC,63
AMS.JO,41375,Anglo American Platinum Ltd,63
ANG.JO,41383,AngloGold Ashanti Ltd,63
ANH.JO,962545,Anheuser Busch Inbev SA NV,63
ETO.JO,985206,Ansys Ltd,63
ARH.JO,949933,ARB Holdings Ltd,63
ACL.JO,50182,Arcmittal,63
ACZ.JO,1162353,Arden Capital Ltd,63
ART.JO,50110,Argent,63
ASC.JO,949934,Ascendis Health Ltd,63
APN.JO,41386,Aspen Pharmacare Holdings Ltd,63
ASR.JO,41395,Assore Ltd,63
ARA.JO,961690,Astoria Investments Ltd,63
ARL.JO,50122,Astral,63
ALP.JO,985203,Atlantic Leaf Properties Ltd,63
ATT.JO,50210,Attacq,63
AEG.JO,50172,Aveng Ltd,63
AVI.JO,50138,Avi,63
AYO.JO,1057291,Ayo Technology Solutions Ltd,63
BWN.JO,985215,Balwin Properties Ltd,63
BAW.JO,50115,Barloworld,63
BSR.JO,50124,Basread,63
BAU.JO,949935,Bauba Platinum Ltd,63
BEL.JO,50118,Bell,63
BHP.JO,8990,BHP Group PLC,63
BID.JO,985212,Bid Corporation Ltd,63
BVT.JO,41393,Bidvest Group Ltd,63
BLU.JO,50171,Bluetel,63
BCF.JO,949936,Bowler Metcalf Ltd,63
BAT.JO,50085,Brait SE,63
BRN.JO,50106,Brimstone Investment Corporation Ltd N,63
BRT.JO,985213,Brimstone Investment Corporation Ltd,63
BTI.JO,41367,British American Tobacco PLC,63
BUC.JO,1162354,Buffalo Coal Corp,63
CGR.JO,949941,Calgro M3 Holdings Ltd,63
CTA.JO,985219,Capital Appreciation Ltd,63
CRP.JO,960741,Capital & Regional PLC,63
CCO.JO,50081,Capital & Counties Properties Plc,63
CPI.JO,50130,Capitec Bank Holdings Ltd,63
CPIP.JO,985217,Capitec Bank Holdings Ltd Pref,63
CTK.JO,943608,Cartrack,63
CSB.JO,50119,Cashbil,63
CAT.JO,50134,Caxton,63
CHP.JO,953889,Choppies Enterprises Ltd,63
CMO.JO,985216,Chrometco Ltd,63
CIL.JO,50191,Cil,63
CLH.JO,50175,Cityldg,63
CLS.JO,50181,Clicks,63
CLI.JO,50174,Clientele,63
CMH.JO,50160,Cmh,63
CGN.JO,949940,Cognition Holdings Ltd,63
COM.JO,50125,Comair,63
CND.JO,949943,Conduit Capital Ltd,63
CML.JO,50137,Coronation Fund Managers Ltd,63
CKS.JO,949942,Crookes Brothers Ltd,63
CSG.JO,985218,CSG Holdings Ltd,63
COH.JO,50194,Curro Hol,63
DTC.JO,50108,Datatec,63
DLT.JO,50208,Delprop,63
DNB.JO,985222,Deneb Investments Ltd,63
DIB.JO,949946,Dipula Income Fund Ltd,63
DIA.JO,955897,Dipula Income Fund Ltd A,63
DCP.JO,993295,Dis-Chem Pharmacies,63
DSBP.JO,985224,Discovery Ltd,63
DSY.JO,41379,Discovery Holdings Ltd,63
DGH.JO,1096520,Distell Group Holdings Ltd,63
DRD.JO,50696,Drdgold,63
EMH.JO,961980,E Media Holdings Ltd,63
EPS.JO,985226,Eastern Platinum Limited,63
EPP.JO,989484,Echo Polska Properties NV,63
ECS.JO,949949,Ecsponent Ltd,63
EFG.JO,985225,Efficient Group Ltd,63
ELR.JO,949950,ELB Group Ltd,63
ELI.JO,50170,Ellies,63
EMI.JO,50139,Emira Property Fund,63
ENX.JO,945142,enX Group Ltd,63
EOH.JO,50148,Eoh,63
EPE.JO,986264,EPE Capital Partners Ltd,63
EQU.JO,949951,Equites Property Fund Ltd,63
ERN.JO,951026,Erin Energy Corp,63
ESR.JO,949952,Esor Ltd,63
EUZ.JO,985227,Europa Metals Ltd,63
EXP.JO,1162355,Exemplar REITail Ltd,63
EXX.JO,41391,Exxaro Resources Ltd,63
FVT.JO,949956,Fairvest Property Holdings Ltd,63
FBR.JO,50140,Famous Brands Ltd,63
FGL.JO,949955,Finbond Group Ltd,63
FSR.JO,41358,Firstrand Ltd,63
FSRP.JO,985228,FirstRand Ltd,63
FFA.JO,50183,Fortress Income Fund Ltd,63
FFB.JO,949954,Fortress Income Fund Ltd,63
FDP.JO,949953,Freedom Property Fund Ltd,63
GAI.JO,985229,GAIA Infrastructure Capital Ltd,63
GML.JO,50082,Gemfields Group Ltd,63
AHA.JO,949993,Gemgrow Properties Ltd A,63
AHB.JO,953545,Gemgrow Properties Ltd B,63
GLN.JO,985233,Glencore PLC,63
GTC.JO,986317,Globe Trade Centre SA,63
GLI.JO,993296,Go Life,63
GFI.JO,41378,Gold Fields Ltd,63
GPL.JO,50177,Granprade,63
GND.JO,50150,Grindrod,63
GNDP.JO,985234,Grindrod Ltd,63
GSH.JO,1094232,Grindrod Shipping Holdings Ltd,63
GTR.JO,953106,GRIT Real Estate Income Group,63
GRF.JO,50117,Group 5,63
GRT.JO,41399,Growthpoint Properties Ltd,63
HMN.JO,987136,Hammerson PLC,63
HAR.JO,50105,Harmony,63
HET.JO,1031260,Heriot Reit Ltd,63
HIL.JO,942746,HomeChoice Investments Ltd,63
HCI.JO,50090,Hosken Consolidated Investments Ltd,63
HPR.JO,1081726,Hosken Passenger Logistics and Rail Ltd,63
HPB.JO,50154,Hospitality Property Fund Ltd,63
HDC.JO,50091,Hudaco,63
HUG.JO,985235,Huge Group Ltd,63
HLM.JO,50165,Hulamin,63
HUL.JO,976182,Hulisani Ltd,63
HWA.JO,949957,Hwange Colliery Company Limited,63
HYP.JO,50092,Hyprop,63
ILE.JO,985236,Imbalie Beauty Ltd,63
IMP.JO,41390,Impala Platinum Holdings Ltd,63
IPL.JO,41387,Imperial Holdings Ltd,63
IDQ.JO,989485,Indequity Group Ltd,63
ILU.JO,954939,Indluplace Properties Ltd,63
ISB.JO,949961,Insimbi Refractory Alloy Supply,63
INP.JO,41370,Investec PLC,63
INLP.JO,985238,Investec Ltd,63
IBRP1.JO,1156879,Investec Bank,63
INPPR.JO,1162357,Investec PLC,63
IAP.JO,949958,Investec Australia Property Fund,63
SWXTR2.JO,1162362,Investec Bank Ltd,63
TOPTR2.JO,1162365,Investec Bank Ltd,63
SPIB32.JO,1153109,Investec Bank plc,63
INL.JO,41359,Investec Ltd,63
INPP.JO,985239,Investec Ltd Non Cum,63
INPR.JO,985240,Investec PLC,63
IVT.JO,50123,Invicta,63
IVTP.JO,985244,Invicta Holdings Ltd,63
IPF.JO,50212,Invprop,63
ISA.JO,985242,ISA Holdings Ltd,63
ITE.JO,985243,Italtile Ltd,63
JSC.JO,949963,Jasco Electronics Holdings Ltd,63
JSE.JO,50156,Jse,63
JBL.JO,985245,Jubilee Platinum,63
KAL.JO,1031091,Kaap Agri Bedryf Employee and Farm Worker Bee Trust,63
KAP.JO,50207,Kap Industrial Holdings Ltd,63
KDV.JO,949964,KayDav Group Ltd,63
KBO.JO,985246,Kibo Mining PLC,63
KP2.JO,1162358,Kore Potash Plc,63
KR.JO,985247,Krugerrand,63
KIO.JO,41392,Kumba Iron Ore Ltd,63
LAB.JO,949967,Labat Africa Ltd,63
LEW.JO,50144,Lewis,63
LBH.JO,50180,Lib Hold,63
L2D.JO,994046,Liberty Two Degrees,63
LBR.JO,1079933,Libstar Holdings Ltd,63
LHC.JO,50185,Life Healthcare,63
LTE.JO,980211,Lighthouse Capital Ltd,63
LNF.JO,989486,London Finance and Investment Group PLC,63
L4L.JO,1008669,Long4Life Ltd,63
MUR.JO,50151,M&R Hld,63
MMP.JO,949971,Marshall Monteagle PLC,63
MSP.JO,985250,MAS Real Estate Inc,63
MSM.JO,41396,Massmart Holdings Ltd,63
MDI.JO,949968,Master Drilling Group Ltd,63
MZR.JO,949974,Mazor Group Ltd,63
MCZ.JO,50694,MC Mining Ltd,63
MEI.JO,963732,Mediclinic International PLC,63
MRF.JO,50695,Merafe,63
MTA.JO,50162,Metair,63
MFL.JO,50146,Metrofile,63
MLE.JO,1079286,Mettle Investments Pty Ltd,63
SEB.JO,985248,MICROmega Holdings Ltd,63
MED.JO,949994,Middle East Diamond Resorces Ltd,63
MRI.JO,985249,Mine Restoration Investments Ltd,63
MIX.JO,949969,MiX Telematics Ltd,63
MTM.JO,50187,Mmi Holdings,63
MNP.JO,41371,Mondi PLC,63
MNK.JO,942744,Montauk Holdings Ltd,63
MTH.JO,1115204,Motus Holdings Ltd,63
MPT.JO,50195,Mpact,63
MRP.JO,50116,Mr Price Group Ltd,63
MTN.JO,41382,MTN Group Ltd,63
MTNZF.JO,1162359,Mtn Zakhele Futhi,63
MCG.JO,1123065,MultiChoice Group Ltd,63
MST.JO,949973,Mustek Ltd,63
NPK.JO,50149,Nampak,63
NPN.JO,41376,Naspers Ltd,63
NBKP.JO,985252,Nedbank Ltd,63
NED.JO,41360,Nedbank Group Ltd,63
NRP.JO,1031093,NEPI Rockcastle PLC,63
NT1.JO,50086,Net 1 UEPS Technologies Inc,63
NTC.JO,50102,Netcare,63
NTCP.JO,985254,Netcare Ltd,63
NFP.JO,985253,New Frontier Properties Ltd,63
NRL.JO,976486,Newpark REIT Ltd,63
NCS.JO,949975,Nictus,63
NY1.JO,1160905,Ninety One Ltd,63
N91.JO,1162360,Ninety One PLC,63
NIV.JO,50205,Niveus,63
NHM.JO,50128,Northam,63
NVS.JO,949976,Novus Holdings Ltd,63
NWL.JO,949977,NU World Holdings Ltd,63
NUT.JO,985255,Nutritional Holdings Ltd,63
NVE.JO,953890,NVest Financial Holdings Pty Ltd,63
OAO.JO,985256,Oando PLC,63
OAS.JO,985257,Oasis Crescent Property Fund,63
OCE.JO,50114,Oceana,63
OCT.JO,50093,Octodec,63
OMU.JO,41373,Old Mutual Ltd,63
OMN.JO,50094,Omnia,63
OLG.JO,949978,OneLogix Group Ltd,63
ORN.JO,1052786,Orion Gold NL,63
PAN.JO,50079,Pan African Resources PLC,63
PBG.JO,949979,PBT Group Ltd,63
PEM.JO,1006191,Pembury Lifestyle Group,63
PPH.JO,1052607,Pepkor Holdings Ltd,63
PGR.JO,50155,Pergrin,63
PHM.JO,50132,Phumelela,63
PIK.JO,50095,Picknpay,63
AVV.JO,50112,Pinnacle Holdings Ltd,63
PFB.JO,997449,Premier Fishing and Brands Ltd,63
PPC.JO,50206,Pretoria Portland Cement Ltd,63
PMV.JO,955689,Primeserv Group Ltd,63
PRX.JO,1152801,Prosus,63
PSG.JO,50103,PSG Group Ltd,63
KST.JO,949966,PSG Konsult Ltd,63
PGFP.JO,985259,PSG Group Ltd Pref,63
PSV.JO,985260,PSV Holdings Ltd,63
PPE.JO,949980,Purple Capital Ltd,63
PPR.JO,949981,Putprop Ltd,63
QFH.JO,949982,Quantum Foods Holdings,63
QLT.JO,1084843,Quilter PLC,63
RMI.JO,50190,Rand Merchant Investment Holdings Ltd,63
RNG.JO,949985,Randgold Exploration,63
RBX.JO,50163,Raubex,63
RBP.JO,50188,Rbplat,63
RCL.JO,50211,Rcl,63
RPL.JO,50084,RDI Reit PLC,63
REB.JO,50192,Rebosis,63
REA.JO,1008991,Rebosis Property Fund Ltd,63
RACP.JO,985262,Recm & Calibre Ltd,63
RDF.JO,50184,Redefine Properties Ltd,63
RNIJ.JO,50078,Reinet Investments SCA,63
REM.JO,41381,Remgro Ltd,63
REN.JO,985265,RENERGEN Ltd,63
RES.JO,50135,Resilient Property Income Fund Ltd,63
RSG.JO,949987,Resource Generation Ltd,63
RLO.JO,50143,Reunert,63
RTN.JO,953544,Rex Trueform Group Ltd,63
RHB.JO,1031092,RH Bophelo Ltd,63
RFG.JO,949983,Rhodes Food Group Holdings Ltd,63
CFRJ.JO,41365,Compagnie Financiere Richemont SA DRC,63
RMH.JO,41380,RMB Holdings Ltd,63
RDI.JO,985264,Rockwell Diamonds Inc,63
RBPCB.JO,1010694,Royal Bafokeng Platinum Ltd,63
SAC.JO,50157,SA Corporate Real Estate Fund Managers Ltd,63
SBP.JO,1162361,Sabvest Capital Ltd,63
SBV.JO,949989,Sabvest Ltd,63
SVN.JO,949998,Sabvest Ltd N,63
EEL.JO,949990,Sacoil Holdings Ltd,63
SAR.JO,949988,Safari Investments RSA Ltd,63
SLM.JO,41361,Sanlam Ltd,63
SNT.JO,50164,Santam,63
SNV.JO,949995,Santova Ltd,63
SAP.JO,50096,Sappi Ltd,63
SFN.JO,50097,Sasfin,63
SFNP.JO,985268,Sasfin Holdings Ltd,63
SOLBE1.JO,985270,Sasol Ltd Bee,63
SOL.JO,41374,Sasol Ltd,63
SBACRN.JO,1162363,SB Corn ETN,63
SCD.JO,961981,Schroder European Real Estate PLC,63
SHG.JO,999080,Sea Harvest Group Ltd,63
UCP.JO,50692,Sentula Mining Ltd,63
SEP.JO,949992,Sephaku Holdings Ltd,63
SHP.JO,41363,Shoprite Holdings Ltd,63
SSW.JO,50209,Sibanye Stillwater Ltd,63
SVB.JO,985273,SilverBridge Holdings Ltd,63
SRE.JO,942747,Sirius Real Estate Ltd,63
SOH.JO,949996,South Ocean Holdings Ltd,63
S32.JO,953891,South32 Ltd,63
SPA.JO,955690,Spanjaard Ltd,63
SPP.JO,50145,SPAR Group Ltd,63
SEA.JO,993253,Spear REIT Ltd,63
SUR.JO,50113,Spurcorp,63
SDO.JO,1054658,Stadio Holdings Ltd,63
SBPP.JO,985267,Standard Bank Group Ltd,63
SBKP.JO,985266,Standard Bank Group Ltd 6.5%,63
SBK.JO,41362,Standard Bank Group Ltd,63
SSK.JO,50179,Stefstock,63
SNH.JO,41377,Steinhoff International Holdings Ltd,63
SHFF.JO,985269,Steinhoff International Holdings Ltd,63
SCP.JO,949991,Stellar Capital Partners Ltd,63
STP.JO,985272,Stenprop Ltd,63
SSS.JO,961692,Stor-Age Property REIT Ltd,63
SUI.JO,50169,Sunint,63
SPG.JO,50199,Suprgrp,63
SYG.JO,960743,Sygnia Ltd,63
LUX.JO,1164001,Taste Holdings Ltd,63
LUX.JO,949999,Taste Holdings Ltd,63
TLM.JO,985276,Telemasters Holdings Ltd,63
TKG.JO,50136,Telkom,63
TXT.JO,1162366,Textainer Group Holdings Ltd,63
TEX.JO,953546,Texton Property Fund Ltd,63
TFG.JO,50186,Tfg,63
THA.JO,985275,Tharisa PLC,63
TBS.JO,41388,Tiger Brands Ltd,63
TBG.JO,954941,Tiso Blackstar Group SE,63
TON.JO,50166,Tongaat,63
TWR.JO,950005,Tower Property Fund Ltd,63
TDH.JO,985274,Tradehold Ltd,63
TCP.JO,50202,Transaction Capital,63
TPF.JO,994047,Transcend Residential Property Fund Ltd,63
TPC.JO,950002,Transpaco Ltd,63
TRL.JO,960744,Trellidor Holdings Ltd,63
TMT.JO,950000,Trematon Capital Investments,63
TRE.JO,50098,Trencor,63
TTO.JO,950004,Trustco Group Holdings,63
TRU.JO,41364,Truworths International Ltd,63
TSG.JO,50193,Tsogo Sun,63
TGO.JO,1162364,Tsogo Sun Hotels Ltd,63
FNBGSE.JO,1162356,UBS AG,63
UPCHPA.JO,1162367,UBS AG,63
UPL.JO,986318,Universal Partners Ltd,63
VLE.JO,950007,Value Group Ltd,63
VIS.JO,985277,Visual International Holdings Ltd,63
VVO.JO,1081727,Vivo Energy PLC,63
VOD.JO,41394,Vodacom Group Ltd,63
VKE.JO,50142,Vukile,63
VUN.JO,985278,Vunani Ltd,63
WBO.JO,50100,Wbho,63
WSL.JO,953549,Wescoal Holdings Ltd,63
WEZ.JO,50693,Wesizwe,63
WEA.JO,985279,WG Wearne Ltd,63
WHL.JO,41385,Woolworths Holdings Ltd,63
WKF.JO,985280,Workforce Holdings Ltd,63
YYLBEE.JO,986319,YeboYethu Ltd,63
YRK.JO,953550,York Timber Holdings Ltd,63
ZPLP.JO,985281,Zambezi Plat RF Ltd,63
ZCL.JO,1055314,Zarclear Holdings Ltd,63
ZED.JO,50161,Zeder,63