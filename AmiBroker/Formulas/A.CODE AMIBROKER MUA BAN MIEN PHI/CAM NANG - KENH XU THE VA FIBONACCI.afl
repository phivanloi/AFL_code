_SECTION_BEGIN("YTK vs THAN KIEM - Tong Hop");
SetBarFillColor(IIf(C>O,ParamColor("Candle UP Color", colorGreen),IIf(C<=O,ParamColor("Candle Down Color", colorRed),colorLightGrey)));
Plot(C,"\nPrice",IIf(C>O,ParamColor("Wick UP Color", colorCustom9),IIf(C<=O,ParamColor("Wick Down Color", colorCustom5),colorLightGrey)),64,0,0,0,0);
SetTradeDelays(1,1,1,1);
_SECTION_END();
_SECTION_BEGIN("Price");
Title = EncodeColor(colorYellow)+ FullName()+"("+Name()+") - " + "Hotline :" + EncodeColor(colorRed)+ " 0372.095.129" + EncodeColor(colorYellow)+ " - Website :  "+ EncodeColor(colorRed)+"Nududo.com" + EncodeColor(colorWhite) + " - " + Interval(2) + EncodeColor(colorWhite) +
 "  - " + Date() +"\n" +EncodeColor(colorWhite) +"Mo cua-"+O+"  "+"Cao-"+H+"  "+"Thap-"+L+"  "+
"Dong cua-"+C+"  "+ "Khoi Luong= "+ WriteVal(V);
_SECTION_BEGIN("Magnified Market Price");
FS=Param("Font Size",35,11,100,1);
GfxSelectFont("Times New Roman", 34, 700, italic = True, underline = False, True );
GfxSetBkMode( colorWhite );
GfxSetTextColor( ParamColor("Color",colorCustom9) );
Hor=Param("Horizontal Position",234,1,1200,1);
Ver=Param("Vertical Position",1,1,1,1);
GfxTextOut(""+C,Hor-150 , Ver+30 );
GfxTextOut( Name(), Hor,Ver-50 );
YC=TimeFrameGetPrice("C",inDaily,-1);
DD=Prec(C-YC,2);
xx=Prec((DD/YC)*100,2);
GfxSelectFont("Times New Roman", 14, 700, italic =True, underline = False, True );
GfxSetBkMode( colorWhite );
GfxSetTextColor(ParamColor("Color",colorCustom9) );
GfxTextOut(""+DD+" ("+xx+"%)", Hor-150, Ver+85 );
GfxSelectFont("arial", 18 );
GfxSetTextColor(ParamColor("dong",colorCustom8) );
GfxSetTextAlign( 6 );// center alignment
GfxSetTextColor( ColorRGB( 255, 255, 0 ) );
GfxSetBkMode(0); // transparent
GfxSelectFont("UVN But Long 1", Status("pxheight")/26 );
GfxTextOut( "KENH XU HUONG", Status("pxwidth")/2, Status("pxheight")/18 );
GfxSetTextColor( colorRed );
GfxSelectFont("UVN But Long 1", Status("pxheight")/36 );
GfxTextOut( "Hotline : 0372.095.129 - Website : Nududo.com" , Status("pxwidth")/2, Status("pxheight")/8 );
GfxTextOut( "("+Name()+") "+ FullName() , Status("pxwidth")/2, Status("pxheight")/6 );
_SECTION_END();
_SECTION_BEGIN("Background");
	SetChartOptions(0,chartShowArrows|chartShowDates);
	SetChartBkColor(ParamColor("Outer panel",colorBlack)); // color of outer border 
	SetChartBkGradientFill( ParamColor("Inner panel upper",colorBlack),ParamColor
 
("Inner panel lower",colorBlack));
	tchoice=Param("Title Selection ",2,1,2,1);
 
//////////////////////////////////////////////////////////////////
_SECTION_BEGIN("Fib Retracements");
	fibs = ParamToggle("Plot Fibs","Off|On",1);
	pctH = Param ("Pivot Hi %", 0.325,0.001,2.0,0.002);
	HiLB = Param ("Hi LookBack",1,1,BarCount-1,1);
	pctL = Param ("Pivot Lo %", 0.325,0.001,2.0,0.002);
	LoLB = Param ("Lo LookBack",1,1,BarCount-1,1);
	Back = Param ("Extend Left = 2",1,1,500,1);
	Fwd  = Param("Plot Forward", 0, 0, 500, 1);
	text = ParamToggle("Plot Text","Off|On",1);
	hts  = Param ("Text Shift", -33.5,-50,50,0.10);
	style =ParamStyle("Line Style",styleLine,styleNoLabel);
x = BarIndex();
pRp  = PeakBars( H, pctH, 1) == 0;
yRp0 = SelectedValue(ValueWhen( pRp, H, HiLB));
xRp0 = SelectedValue(ValueWhen( pRp, x, HiLB));
pSp  = TroughBars( L, pctL, 1) == 0;
ySp0 = SelectedValue(ValueWhen( pSp, L, LoLB));
xSp0 = SelectedValue(ValueWhen( pSp, x, LoLB));
Delta = yRp0 - ySp0;
 
function fib(ret)
{
retval = (Delta * ret);
Fibval = IIf(ret < 1.0 
AND xSp0 < xRp0, yRp0 - retval, IIf(ret < 1.0 
AND xSp0 > xRp0, ySp0 + retval,IIf(ret > 1.0 
AND xSp0 < xRp0, yRp0 - retval, IIf(ret > 1.0 
AND xSp0 > xRp0, ySp0 + retval, Null)))); 
return FibVal;
}
 
x0 = Min(xSp0,xRp0)-Back;
x1 = (BarCount -1);
//////////////////////////////////////////////////////////////////
r236 = fib(0.236);	r236I = LastValue (r236,1);
r382 = fib(0.382);	r382I = LastValue (r382,1);
r050 = fib(0.50);		r050I = LastValue (r050,1);
r618 = fib(0.618);	r618I = LastValue (r618,1);
r786 = fib(0.786);	r786I = LastValue (r786,1);
e127 = fib(1.27);		e127I = LastValue (e127,1);
e162 = fib(1.62);		e162I = LastValue (e162,1);
e200 = fib(2.00);		e200I = LastValue (e200,1);
e262 = fib(2.62);		e262I = LastValue (e262,1);
e424 = fib(4.24);		e424I = LastValue (e424,1);
//////////////////////////////////////////////////////////////////
p00 = IIf(xSp0 > xRp0,ySp0,yRp0); 	p00I = LastValue (p00,1);
p100 = IIf(xSp0 < xRp0,ySp0,yRp0); 	p100I = LastValue (p100,1);
color00 =IIf(xSp0 > xRp0,colorLime,colorRed);
color100 =IIf(xSp0 < xRp0,colorLime,colorRed);
//////////////////////////////////////////////////////////////////
numbars = LastValue(Cum(Status("barvisible")));
fraction= IIf(StrRight(Name(),3) == "", 3.2, 3.2);
//////////////////////////////////////////////////////////////////
if(fibs==1)
{
Plot(LineArray(xRp0-Fwd,yRp0,x1,yRp0,Back),"PR",32,8|styleNoRescale,Null,
Null,Fwd);
Plot(LineArray(xSp0-Fwd,ySp0,x1,ySp0,Back),"PS",27,8|styleNoRescale,Null,
Null,Fwd);
Plot(LineArray(x0-Fwd,r236,x1,r236,Back),"",45,style|styleNoRescale,Null,
Null,Fwd);
Plot(LineArray(x0-Fwd,r382,x1,r382,Back),"",44,style|styleNoRescale,Null,
Null,Fwd);
Plot(LineArray(x0-Fwd,r050,x1,r050,Back),"",41,style|styleNoRescale,Null,
Null,Fwd);
Plot(LineArray(x0-Fwd,r618,x1,r618,Back),"",43,style|styleNoRescale,Null,
Null,Fwd);
Plot(LineArray(x0-Fwd,r786,x1,r786,Back),"",42,style|styleNoRescale,Null,
Null,Fwd);
Plot(LineArray(x0-Fwd,e127,x1,e127,Back),"e127",47,style|styleNoRescale,Null,
Null,Fwd);
Plot(LineArray(x0-Fwd,e162,x1,e162,Back),"e162",47,style|styleNoRescale,Null,
Null,Fwd);
Plot(LineArray(x0-Fwd,e200,x1,e200,Back),"p200",47,style|styleNoRescale,Null,
Null,Fwd);
Plot(LineArray(x0-Fwd,e262,x1,e262,Back),"p262",47,style|styleNoRescale,Null,
Null,Fwd);
Plot(LineArray(x0-Fwd,e424,x1,e424,Back),"p424",25,style|styleNoRescale,Null,
Null,Fwd);
}
//////////////////////////////////////////////////////////////////
if(text==1)
{ 
PlotText(" 0% = " + WriteVal(p00,fraction),
	LastValue(BarIndex())-(numbars/hts), p00I  + 0.05, color00);
PlotText("23% = " + WriteVal(r236,fraction),
LastValue(BarIndex())-(numbars/hts), r236I + 0.05, 45);
PlotText("38% = " + WriteVal(r382,fraction),
LastValue(BarIndex())-(numbars/hts), r382I + 0.05, 44);
PlotText("50% = " + WriteVal(r050,fraction),
LastValue(BarIndex())-(numbars/hts), r050I + 0.05, 41);
PlotText("62% = " + WriteVal(r618,fraction),
LastValue(BarIndex())-(numbars/hts), r618I + 0.05, 43);
PlotText("78% = " + WriteVal(r786,fraction),
LastValue(BarIndex())-(numbars/hts), r786I + 0.05, 42);
PlotText("100% = " + WriteVal(p100,fraction),
LastValue(BarIndex())-(numbars/hts),p100I + 0.05, color100);
PlotText("127% = " + WriteVal(e127,fraction),
LastValue(BarIndex())-(numbars/hts),e127I + 0.05, 47);
PlotText("162% = " + WriteVal(e162,fraction),
LastValue(BarIndex())-(numbars/hts),e162I + 0.05, 47);
PlotText("200% = " + WriteVal(e200,fraction),
LastValue(BarIndex())-(numbars/hts),e200I + 0.05, 47);
PlotText("262% = " + WriteVal(e262,fraction),
LastValue(BarIndex())-(numbars/hts),e262I + 0.05, 47);
PlotText("424% = " + WriteVal(e424,fraction),
LastValue(BarIndex())-(numbars/hts),e424I + 0.05, 25);
}
_SECTION_END();



FormulaName = "Amibroker Pro - Kênh 1";

	SetChartOptions(0,chartShowDates|chartLogarithmic|chartWrapTitle);
	#pragma nocache
	#include_once  <\PEInc\PatternExplorer_f0.afl>
	#include_once "C:\Program Files\AmiBroker\Formulas\PatternExplorer\#Defaults & Mods\PE - Defaults.afl"
	#include_once "C:\Program Files\AmiBroker\Formulas\PatternExplorer\#Defaults & Mods\PE - Mods.afl"
	def_GraphXSpace = 10;
	/*******************************************************************************************/
	AddCustomCodeBeforePE();
	/*******************************************************************************************/
	AddAlertParam(def_AudioAlert,def_EmailAlert,def_BarComplete);
	/*******************************************************************************************/
	_SECTION_BEGIN("Alerts");
	SRbS = ParamToggle("S/R broken","Off,On",1);
	SRcS = ParamToggle("S/R confirmed","Off,On",1);
	PjabS = ParamToggle("Price just above/below","Off,On",1);
	_SECTION_END();
	/*******************************************************************************************/
	_SECTION_BEGIN("Main Parameters");
	AddparamUsefromChart(def_UseFromChart);
	PatternPriceBasis = ParamToggle("Pattern Price Basis","Close|High & Low",def_PatternPriceBasisCPR);
	Sensitivity = Param("Sensitivity",15,1,100,1);
	if(InChart)StaticVarSet("UO3443",PatternPriceBasis);if(inAA AND Usefromchart) PatternPriceBasis = StaticVarGet("UO3443");
	if(InChart)StaticVarSet("D4Q5T6",Sensitivity);
	if(inAA AND Usefromchart) Sensitivity = StaticVarGet("D4Q5T6");
	PatternPriceBasis = ParamToggle("Pattern Price Basis","Close|High & Low",def_PatternPriceBasisCPR);
	PlotP1P2 = ParamToggle("Plot P1/P2 Shapes","Off,On",def_Plot_P1P2_Shapes);
	P1Shape = Param("P1 Shape Typ",35,0,50,1);
	P2Shape = Param("P2 Shape Typ",37,0,50,1);
	Parallellinesswitch = ParamToggle("Plot Parallel Lines","Off,On");
	DisRange = Param("Plot Parallel Lines Trigger",3,0.0,10,0.5);
	_SECTION_END();
	/*******************************************************************************************/
	_SECTION_BEGIN("Styles");
	Style_SL= ParamStyle("Support",styleLine+styleThick,maskDefault)+styleNoRescale;
	Style_RL= ParamStyle("Resistance",styleLine+styleThick,maskDefault)+styleNoRescale;
	Style_PHL= ParamStyle("Parallel Support",styleLine,maskDefault)+styleNoRescale;
	Style_PLL= ParamStyle("Parallel Resistance",styleLine,maskDefault)+styleNoRescale;
	_SECTION_END();
	/*******************************************************************************************/
	_SECTION_BEGIN("Colors");
	Color_SL=  ParamColor("Support",def_Color1);
	Color_RL= ParamColor("Resistance",colorRed);
	Shadowcolor = ParamColor("Shadow",colorGrey50);
	Color_PLL= Color_RL; //ParamColor("Resistance",colorRed);
	Color_PHL= Color_SL; //ParamColor("Support",def_Color1);
	_SECTION_END();
	/*******************************************************************************************/
	if(inAA)
	{
	_SECTION_BEGIN("Pattern Selection");
	AscTs = ParamToggle("Ascending Triangle","Off,On",1);
	DscTs = ParamToggle("Descending Triangle","Off,On",1);
	STs = ParamToggle("Symmetrically Triangle","Off,On",1);
	ETs = ParamToggle("Expanding Triangle","Off,On",1);
	RWs = ParamToggle("Rising Wedge","Off,On",1);
	FWs = ParamToggle("Falling Wedge","Off,On",1);
	UTs = ParamToggle("Up Trend","Off,On",1);
	DTs = ParamToggle("Down Trend","Off,On",1);
	Rectangles = ParamToggle("Rectangle","Off,On",1);
	NonDefinedPatterns = ParamToggle("Not defined Patterns","Off,On",0);
	_SECTION_END();
	}
	/*******************************************************************************************/
	#include_once  <\PEInc\Lib\PatternExplorer_f06.afl>
	#include_once  <\PEInc\PatternExplorer_1.afl>
	/*******************************************************************************************/
	GraphZOrder = 0;
	Plot(TRS,"  SL" ,Color_SL,Style_SL+styleNoTitle);
	Plot(TRR,"  RL" ,Color_RL,Style_RL+styleNoTitle);
	PlotOHLC(Null,TRR,TRS,Null,"",Shadowcolor,styleCloud+styleNoLabel);
	Plot(IIf(Parallellinesswitch,PLL_plot,-1e10),"  PLL",Color_PLL,Style_PLL+styleNoTitle);
	Plot(IIf(Parallellinesswitch,PHL_plot,-1e10),"  PHL",Color_PHL,Style_PHL+styleNoTitle);
	/*******************************************************************************************/
	PlotShapes(IIf(BS & x>LastValue(x)-3,def_BuyShape,shapeNone),def_BuyShapeColor,0, Low,-def_BuyShapeOffset );
	PlotShapes(IIf(SS & x>LastValue(x)-3,def_SellShape,shapeNone),def_SellShapeColor,0, High,-def_SellShapeOffset );
	if(PlotP1P2)
	{
	PlotShapes(IIf(x==xa & NOT AnZ,P1Shape,shapeNone),Color_SL,0,SL,-13 );
	PlotShapes(IIf(x==xb & NOT AnZ,P2Shape,shapeNone),Color_SL,0,SL,-13 );
	PlotShapes(IIf(x==xc & NOT AnZ,P1Shape,shapeNone),Color_RL,0,H,13 );
	PlotShapes(IIf(x==xd & NOT AnZ,P2Shape,shapeNone),Color_RL,0,H,13 );
	}
	/*******************************************************************************************/
	Buy = def_Buy AND BS; Sell = def_Sell AND SS;
	/*******************************************************************************************/
	if(inAA){
	CPRFilter =
	(AscT AND AscTs)|(DscT AND DscTs)| (ST AND STs)|
	(ET AND ETs)| (RW AND RWs)| (FW AND FWs)|
	(UT AND UTs)| (DT AND DTs)|(Rectangle AND Rectangles)|
	(SupSignals AND NonDefinedPatterns AND NOT DefinedPatterns)|
	(ResSignals AND NonDefinedPatterns AND NOT DefinedPatterns);
	Filter = def_Filter AND BarIndex()==LastValue(BarIndex()) AND NOT GroupID()==253;
	Filter = Filter AND CPRFilter;
	/*******************************************************************************************/
	Addefaultcolumns();
	Adddefaultcolumns(2,1);
	AddTextColumn(WriteIf(Sup_pricejustabove,"Price just above",
	WriteIf(Sup_confirmed,"Confirmed",
	WriteIf(Sup_break,"Break",""))),"Support Line",1.2, IIf(Sup_pricejustabove OR sup_confirmed,colorGreen,colorRed));
	AddTextColumn(
	WriteIf(Res_pricejustbelow,"Price just below", WriteIf(Res_confirmed,"confirmed",
	WriteIf(Res_break,"Break",""))),"Resistance Line",1.2, IIf(Res_pricejustbelow OR Res_confirmed,colorRed,colorGreen));
	/*******************************************************************************************/
	patterncolor = 
	IIf(AscT|FW|UT,colorGreen,
	IIf(DscT|RW|DT,colorRed,
	IIf(ST|ET|Rectangle,colorBlue,colorBlack)));
	AddTextColumn(PatternText,"Pattern",0,patterncolor);
	AddTextColumn(FullName(),"Full name");
	}
	/*******************************************************************************************/
	/*
	AddTextColumn(
	WriteIf(PLL_pricejustabove,"price just above",
	WriteIf(PLL_confirmed,"confirmed",
	WriteIf(PLL_break,"break",""))),"Parallel support line");

	AddTextColumn(
	WriteIf(PHL_pricejustbelow,"price just below",
	WriteIf(PHL_confirmed,"confirmed",
	WriteIf(PHL_break,"break",""))),"Parallel resistance line");
	*/
	/*******************************************************************************************/
	if(SRbS){
	AddAlert(Res_break,Audio,Email,"Resistance broken",1,BarComplete,def_BuySound1);
	AddAlert(Sup_break,Audio,Email,"Support broken",2,BarComplete,def_SellSound1);
	}
	if(SRcS){
	AddAlert(Sup_confirmed,Audio,Email,"Support confirmed",1,BarComplete,def_BuySound2);
	AddAlert(Res_confirmed,Audio,Email,"Resistance confirmed",2,BarComplete,def_SellSound2);
	}
	if(PjabS){
	AddAlert(Sup_pricejustabove AND PatternDirection ==1,Audio,Email,"Price just above Support",1,BarComplete,def_BuySound3);
	AddAlert(Res_pricejustbelow AND PatternDirection ==-1,Audio,Email,"Price just below Resistance",2,BarComplete,def_SellSound3);
	AddAlert(Sup_pricejustabove AND PatternDirection ==0,Audio,Email,"Price just above Support",5,BarComplete,def_BuySound3);
	AddAlert(Res_pricejustbelow AND PatternDirection ==0,Audio,Email,"Price just below Resistance",5,BarComplete,def_SellSound3);
	}
	/*******************************************************************************************/
	/*******************************************************************************************/
	AddCustomCodeAfterPE();
	/*******************************************************************************************/
		/*******************************************************************************************/
	ST = LastValue(ST);
	AscT = LastValue(AscT);
	DscT = LastValue(DscT);
	ET = LastValue(ET);
	RW = LastValue(RW); 
	FW = LastValue(FW); 
	UT = LastValue(UT); ParamToggle("Up Trend","Off,On",1);
	DT = LastValue(DT); ParamToggle("Down Trend","Off,On",1);
	Rectangles = LastValue(Rectangle); ParamToggle("Rectangle","Off,On",1);
	/*******************************************************************************************/
	ToolTip = def_ToolTip;

	if(ST)
	{
	ToolTip = ToolTip +
	"\n\n"+
	"Current Pattern = Symmetrical Triangle" + "\n"+
	" ";
	}

	if(AscT)
	{
	ToolTip = ToolTip +
	"\n\n"+
	"Current Pattern = Ascending Triangle" + "\n"+
	" ";
	}

	if(DscT)
	{
	ToolTip = ToolTip +
	"\n\n"+
	"Current Pattern = Descending Triangle" + "\n"+
	" ";
	}

	if(ET)
	{
	ToolTip = ToolTip +
	"\n\n"+
	"Current Pattern = Expanding Triangle" + "\n"+
	" ";
	}

	if(RW)
	{
	ToolTip = ToolTip +
	"\n\n"+
	"Current Pattern = Rising Wedge" + "\n"+
	" ";
	}

	if(FW)
	{
	ToolTip = ToolTip +
	"\n\n"+
	"Current Pattern = Falling Wedge" + "\n"+
	" ";
	}

	if(UT)
	{
	ToolTip = ToolTip +
	"\n\n"+
	"Current Pattern = Up Channel" + "\n"+
	" ";
	}

	if(DT)
	{
	ToolTip = ToolTip +
	"\n\n"+
	"Current Pattern = Down Channel" + "\n"+
	" ";
	}

	if(Rectangles)
	{
	ToolTip = ToolTip +
	"\n\n"+
	"Current Pattern = Rectangle" + "\n"+
	" ";
	}

_SECTION_END(); 
