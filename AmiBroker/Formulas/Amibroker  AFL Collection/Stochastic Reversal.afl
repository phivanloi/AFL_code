/*				Stochastic Reversal.afl - Bill Barnard, 11/13/05
	This is to be used as an include file for SIGNAL STUDY.afl or the entire contents are to be
	pasted into SIGNAL OPTIMIZE.afl. Read discussion (first parameter) in SIGNAL STUDY.afl 	*/

AA		=  (Status("action")==3 OR Status("action")==4 OR Status("action")==5);	//	= 1 in AA
if (AA)	sigSelect = "Stochastic Reversal";
if (sigSelect=="Stochastic Reversal")	{

  if (AA)	//	if this code is being used in AA
  {
  	//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
	//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
	//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
  	Current		= ParamToggle("Use Current Symbol?", "Using Symbol named just below for Indicator,Using Current Symbol for Indicator");
  	indicSym		= ParamStr("Indicator Symbol", "RUT-I");
  	param1		= Optimize("StoPer",  80, 20, 80, 2);
  	param2		= Optimize("StoSm", 	18, 10, 50, 2);
  	param3		= 7;//Optimize("Rev%", 	7, 0, 18, 0.2);
  	param3		= 0.001*param3;
  	param4		= 0;//Optimize("BuyMin",  5, 4, 20, 2);
  	param5		= 100;//Optimize("SelMax",  95, 80, 96, 2);
  	param6		= 1;//Optimize("AveTyp",  1, 0, 5, 1);
  	param7		= ParamToggle("Standard number series or Fibonacci?",
  								"Using standard number series|Using Fibonacci series");
	param8		= ParamToggle("Include Foreign Arrays for Buy/Sell Calculation?", "Using only Stocastic for B / S - click to change,"+
								"Including Foreign Arrays for B / S- click to change", 0);
  	//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
	//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
	//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
}

//	if this code is being used for an indicator, retrieve stored param information
if (Status("action")==1)
{
	SRParamsList			= "";
	SRParamsFileName	= "ConfigFiles\\SRParams"+GetChartID()+".bf";

	fh 						= fopen( SRParamsFileName, "r");
	if( fh )
	{
		while( ! feof( fh ) )
		{
			SRParamsList = fgets( fh );
		}
		fclose( fh );
	}

	q0		=		IIf(SRParamsList !="", 	StrToNum(StrExtract(SRParamsList,  0	)), 0	 		);//	Current
	q1		= WriteIf(SRParamsList !="", 				  StrExtract(SRParamsList,   1	), 	"RUT-I"	);//	indicSym
	q2		=		IIf(SRParamsList !="", 	StrToNum(StrExtract(SRParamsList,  2	)), 53	 		);//	param1
	q3		=		IIf(SRParamsList !="", 	StrToNum(StrExtract(SRParamsList,  3	)), 49			);//	param2
	q4		=		IIf(SRParamsList !="", 	StrToNum(StrExtract(SRParamsList,  4	)), 10	 		);//	param3
	q5		=		IIf(SRParamsList !="", 	StrToNum(StrExtract(SRParamsList,  5	)), 5	 		);//	param4
	q6		=		IIf(SRParamsList !="", 	StrToNum(StrExtract(SRParamsList,  6	)), 95			);//	param5
	q7		=		IIf(SRParamsList !="", 	StrToNum(StrExtract(SRParamsList,  7	)), 1	 		);//	param6
	q8		=		IIf(SRParamsList !="", 	StrToNum(StrExtract(SRParamsList,  8	)), 0			);//	param7
	q9		=		IIf(SRParamsList !="", 	StrToNum(StrExtract(SRParamsList,  9	)), 0	 		);//	param8


	_SECTION_BEGIN("INDICATOR PARAMETERS");
	Current		= ParamToggle("Stochastic Reversal -             Use Current Symbol?",
						"Symbol below makes Indicator - click to change,Current Symbol makes Indicator - click to change", q0);
	IndicString	= ParamStr("Stochastic Reversal -                    Indicator Symbol", "Indicator Symbol---"+q1);
	indicSym		= StrMid(StrToUpper(IndicString), 19, 5);
	param1		= Param("Stochastic Reversal -                  Stochastic Period",  q2, 1, 125, 1);
	param2		= Param("Stochastic Reversal - Stochastic Smoothing Period", q3, 0, 100, 1);
	param3		= Param("Stochastic Reversal -                   Reversal Amount",  q4, 0, 20, 0.1);
	param3		= 0.001*param3;
	dummy		= ParamStr(".     .","( Params just below are Buy Min. and Sell Max. )");
	param4		= Param("Stochastic Reversal -                        Buy  Minimum",  q5, 0, 100, 1);
	param5		= Param("Stochastic Reversal -                         Sell Maximum",  q6, 0, 100, 1);
	param6		= ParamList("Stochastic Reversal -                        Average Type", "Simple Moving Average,"+
								"Exponential Moving Average,Double Moving Average,Triple Moving Average,"+
								"Weighted Moving Average,Till3 Moving Average", q7);
	param6		= 	IIf(param6=="Simple Moving Average", 0, IIf(param6=="Exponential Moving Average", 1,
						IIf(param6=="Double Moving Average", 2, IIf(param6=="Triple Moving Average", 3,
						IIf(param6=="Weighted Moving Average", 4, 5)))));
	param7		= ParamToggle("Stoch Rev -  Standard number series or Fibonacci?",
								"Using standard number series - click to change|Using Fibonacci series - click to change", q8);

	param8		= ParamToggle("Include Foreign Arrays for Buy/Sell Calculation?", "Using only Stocastic for B / S - click to change,"+
								"Including Foreign Arrays for B / S- click to change", q9);
	_SECTION_END();
}

//	Buy/Sell rules start here
aveStr		= "MA,EMA,DEMA,TEMA,WMA,Till3";
aveType 		= StrExtract(aveStr, Param6);

tmp1		= Param1;	tmp2		= Param2;
if (Param7)
{
	Param1	= Min(Param1, 14);
	Param2	= Min(Param2, 14);
	Param1 	= fib(Param1);
	Param2	= fib(Param2);
}

ind1		= IIf(current, Close, Foreign(indicSym, "Close"));
Nam		= WriteIf(current, Name(), indicSym);	Name1 = Nam+"  "+aveType+"  Stoch "+v0(param1)+", "+v0(param2);
indError	= IIf(IsNull(ind1), 1, 0);
indicSym	= WriteIf(indError, "", indicSym);
indstart	= param2;
lowVal	= LLV(ind1, param1);
HighVal	= HHV(ind1, param1);

dStoc		= MovAve(aveType, 100*(ind1- LowVal)/(HighVal - lowVal), param2);
dStoc		= 100000 + dStoc;
param1	= tmp1;
param2	= tmp2;

z			= Zig(dStoc, param3);
bot 		= ROC(z, 1) < 0 AND Ref(ROC(z, 1), 1) > 0;
top		= ROC(z, 1) > 0 AND Ref(ROC(z, 1), 1) < 0;
recValley	= ValueWhen(bot, dStoc, 1);
BuyLine	= IIf(BarsSince(top) > BarsSince(bot) OR BarsSince(top)==0
				OR IsEmpty(BarsSince(top)),  (1 + 0.01*param3)*recValley, Null);
recPeak	= ValueWhen(top, dStoc, 1);
SellLine	= IIf(BarsSince(top) < BarsSince(bot) OR BarsSince(bot)==0
				OR IsEmpty(BarsSince(bot)),  (1 - 0.01*param3)*recPeak, Null);


ind1		= Null;	//we are  through with it and don't want it to be plotted
ind2		= dStoc - 100000;														Name2	= " dStoc"+w2(ind2);
ind3		= IIf(NOT IsEmpty(BuyLine), BuyLine - 100000, BuyLine);	Name3	= "BuyLine"+w2(ind3);
ind4		= IIf(NOT IsEmpty(SellLine), SellLine - 100000, SellLine);	Name4	= "SellLine"+w2(ind4);

ind5		= 1000*param3;														Name5	= "Reversal"+w1(ind5);
Param3	= ind5;
ind5		= Null;	//we are  through with it and don't want it to be plotted
ind7		= Param4;																Name7	= "\nBuy Minimum"+w0(ind7);
ind8		= Param5;																Name8	= "   Sell Maximum"+w0(ind8);

BuyCond	= IIf(BarIndex() > indstart, ind2 > ind3 AND ind2 > ind7, 0);
SellCond	= IIf(BarIndex() > indstart, ind2 < ind4 AND ind2 < ind8, 0);

BS1 = SS1 = BS2 = SS2 = BS3 = SS3 = BS4 = SS4 = BC = SC = 1;

if (Param8) 
{
	//BS1		= Foreign("RSXBC", "Close");
	//SS1		= Foreign("RSXSC", "Close");
	BS2		= Foreign("RMXBC", "Close");
	SS2		= Foreign("RMXSC", "Close");
	BS3		= Foreign("RRSBC", "Close");
	SS3		= Foreign("RRSSC", "Close");
	//BS4		= Foreign("RRCBC", "Close");
	SS4		= Foreign("RRCSC", "Close");

	BC			= BS1 AND BS2 AND BS3 AND BS4;
	SC			= SS1 AND SS2 AND SS3 AND SS4;
	Name8	= Name8 + ec(colorRed) + "      Incl. Foreign";
}

BuyCond	= BuyCond AND BC;
SellCond	= SellCond AND SC;

Buy		= ExRem(BuyCond, SellCond);
Sell		= ExRem(SellCond, BuyCond);

if (Status("action")==1)	// if this code is being used for an indicator
{
	//	make an initiation file to store params
	SRParamsList = ""+
		Current		+","+
		indicSym		+","+
		param1		+","+
		param2		+","+
		param3		+","+
		param4		+","+
		param5		+","+
		param6		+","+
		param7		+","+
		param8		+","+
		"";

	fh 	= fopen( SRParamsFileName, "w");
	if( fh )
	{
		fputs(SRParamsList, fh);
		fclose( fh );
	}
}

}