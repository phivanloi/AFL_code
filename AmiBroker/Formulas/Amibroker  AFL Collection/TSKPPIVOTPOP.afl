BarCancl = Param( "BarCancel", 4, 1, 20, 1 );
frMeanSwing = Param( "MeanSwing Filter", 1, 0, 1, 1 ); // 1- Use MeanSwing Filter, 0-Donot use MeanSwing Filter


CHiPr = 0;
CLoPr = 9999999;
blsLong = 0;
PrevCOBar = 0;
NumBars = 0;
PrePP = 0;
PrevLowVal = 9999999;
BuySig = 0;
SellSig = 0;
blsShort = 0;
PrevHiVal = 0;
blsNewCO = 0;
BarDif   = 0;
CanclBar = 0;

KPA900Val = E_TSKPA900(Close);
KPAutoStopVal = E_TSKPAUTOSTOP(High,Low,Close);
//KPFast3Val = IIf((E_TSKPFAST3(Open,High,Low,Close,Volume)> 0),1, -1);
dummy = E_TSKPFAST2(Open,High,Low,Close,Volume);
KPFast2Val = IIf((tskp_fast2val1 > 0),1,-1);

UpperBand = BBandTop(Close,20,1);
LowerBand = BBandBot(Close,20,1);
swVal = E_TSKPSWINGLINE(High,Low,Close);
MeanSwingLnVal = tskp_swmean;

// -- Create 0-initialized arrays the size of barcount
aHPivs = H - H;
aLPivs = L - L;
aHiVal = H - H;
aLoVal = L - L;


Ctmpl = E_TSKPCOLORTMPL(Open,High,Low,Close,Volume);
sctotal = 0;
sctotal = sctotal  + IIf(tskp_colortmplcnd0 > 0, 1, -1); 
sctotal = sctotal  + IIf(tskp_colortmplcnd1 > 0, 1, -1); 
sctotal = sctotal  + IIf(tskp_colortmplcnd2 > 0, 1, -1); 
sctotal = sctotal  + IIf(tskp_colortmplcnd3 > 0, 1, -1); 
sctotal = sctotal  + IIf(tskp_colortmplcnd4 > 0, 1, -1); 
sctotal = sctotal  + IIf(tskp_colortmplcnd5 > 0, 1, -1); 
sctotal = sctotal  + IIf(tskp_colortmplcnd6 > 0, 1, -1); 
sctotal = sctotal  + IIf(tskp_colortmplcnd7 > 0, 1, -1); 
sctotal = sctotal  + IIf(tskp_colortmplcnd8 > 0, 1, -1); 


for (CurBar=1; CurBar < BarCount-1; CurBar++)
{

	if ( CurBar == 1 )
	{
		CHiPr = High[CurBar];
		CHiBar = CurBar;
		CLoPr = Low[CurBar];
		CLoBar = CurBar;
		blsLong = 0;
		blsShort = 0;
		blsNewCO = 0;
		PrePP = 0;
		PrevCOBar = 0;
		PrevHiVal = High[CurBar];
		PrevLowVal = Low[CurBar];
		BuySig = 0;
		SellSig = 0;
		CanclBar = 0;
	}

	if (High[CurBar] >= CHiPr) {
		CHiPr = High[CurBar];
		ChiBar = CurBar;
	}

	if (Low[CurBar] <= CLoPr) {
		CLoPr = Low[CurBar];
		CLoBar = CurBar;
	}

	if ( (KPA900Val[CurBar] > KPAutoStopVal[Curbar]) ){
		if ( (blsLong!= 1) ){
			blsNewCO = 1;
			SellSig = 0;
			blsLong = 1;
			blsShort = 0;
			BarDif = CurBar - PrevCOBar;
			if ( (BarDif >= NumBars) AND (PrePP != -1) AND (CLoPr >= PrevLowVal)){
				PrevCOBar = CurBar;
				CanclBar = CurBar + BarCancl;
				BuySig = 1;
			}
		}
	}
	else {
		if ((blsShort != 1)) {
			blsNewCO = 1;
			BuySig = 0;
			blsLong = 0;
			blsShort = 1;
			BarDif = CurBar - PrevCOBar;
			if ((BarDif >= NumBars) AND (PrePP != 1) AND (CHiPr <= PrevHiVal) ){
				PrevCOBar = CurBar;
				CanclBar = CurBar + BarCancl;
				SellSig = 1;
			}
		}
	}


	if( (BuySig ==1) AND (CurBar <= CanclBar) AND (KPA900Val[curBar] >= KPAutoStopVal[curbar]) ){
		if( (KPFast2Val[CurBar]  == 1) AND  (sctotal[CurBar] >= 5) AND (blsLong == 1)
			AND (((frMeanSwing ==1 ) AND (Close[Curbar] > MeanSwingLnVal[Curbar])) OR (frMeanSwing==0)) AND (Close[Curbar] > UpperBand[CurBar])
			AND (Close[Curbar] > Open[Curbar]) ){
				aLPivs[Curbar] = 1;
				aLoVal[Curbar] = Low[Curbar];
				BuySig = 0;
		}
		else {
			 if ( (BuySig == 1) AND ((CurBar > CanclBar) OR  (KPA900Val[CurBar] < KPAutoStopVal[Curbar]) ) ){
				BuySig = 0;
			}
		}
	}
	else BuySig = 0;



	if( (SellSig ==1) AND (CurBar <= CanclBar) AND (KPA900Val[CurBar] <= KPAutoStopVal[Curbar]) ){
		if( (KPFast2Val[CurBar]  == -1) AND  (sctotal[CurBar] <= -5) AND (blsShort == 1) 
			AND (((frMeanSwing ==1 ) AND (Close[Curbar] < MeanSwingLnVal[Curbar])) OR (frMeanSwing==0)) AND (Close[Curbar] < LowerBand[CurBar]) 
			AND (Close[Curbar] < Open[Curbar]) ){

				aHPivs[Curbar] = 1;
				aHiVal[Curbar] = High[Curbar];
				SellSig = 0;
		}
		else {
			if ( (SellSig == 1) AND ((CurBar > CanclBar) OR  (KPA900Val[CurBar] > KPAutoStopVal[Curbar]) ) ){
				SellSig = 0;
			}
		}
	}
	else SellSig = 0;
			



	if ( (blsNewCO == 1) ) { 
		if ((sctotal[CurBar] >= 5) AND (blsLong == 1) AND (PrePP != -1) ) {
			blsNewCO = 0;
			PrePP = -1;
			PrevLowVal = CLoPr;
			CHiPr = High[CurBar];
			CHiBar = CurBar;
			CLoPr = Low[Curbar];
			CLoBar = CurBar;
		} 
		else 
			if ( (sctotal[CurBar] <= -5) AND (blsShort == 1) AND (PrePP != 1) ) {
			blsNewCO = 0;
			PrePP = 1;
			PrevHiVal = CHiPr;
			CHiPr = High[CurBar];
			CHiBar = CurBar;
			CLoPr = Low[CurBar];
			CLoBar = CurBar;
			} 
	}

}

PlotShapes(
IIf(aHPivs == 1,  shapeDownArrow,shapeNone), colorDarkRed ,0, aHiVal+0.00, Offset = -20);

PlotShapes(
IIf(aLPivs == 1,  shapeUpArrow,shapeNone), colorDarkBlue,0, aLoVal-0.00, Offset = -20);