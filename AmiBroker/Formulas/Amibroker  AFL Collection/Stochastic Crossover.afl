/*				Stochastic Crossover.afl - Bill Barnard, 2/11/06
	This is to be used as an include file for SIGNAL STUDY.afl or the entire contents are to be
	pasted into SIGNAL OPTIMIZE.afl. Read discussion (first parameter) in SIGNAL STUDY.afl 	*/

AA		=  (Status("action")==3 OR Status("action")==4 OR Status("action")==5);	//	== 1 in AA
if (AA)	sigSelect = "Stochastic Crossover";
if (sigSelect=="Stochastic Crossover")	{

  if (AA)	//	if this code is being used in AA
  {
  	//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
	//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
	//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
  	Current		= ParamToggle("Use Current Symbol?", "Using Symbol named just below for Indicator,Using Current Symbol for Indicator");
  	indicSym		= ParamStr("Indicator Symbol", "RUT-I");
  	param1		= Optimize("StoPer",  65, 40, 80, 5);
  	param2		= Optimize("StoSm", 	75, 40, 80, 5);
  	param3		= Optimize("StoTr", 13, 5,19,2);
  	param4		= 0;//Optimize("BuyMin",  5, 4, 20, 2);
  	param5		= 87;//Optimize("SelMax",  95, 80, 96, 2);
  	param6		= 1;//Optimize("AveTyp",  1, 0, 5, 1);
  	param7		= ParamToggle("Standard number series or Fibonacci?",
  								"Using standard number series|Using Fibonacci series");
	param8		= ParamToggle("Include Foreign Arrays for Buy/Sell Calculation?", "Using only Stocastic for B / S - click to change,"+
								"Including Foreign Arrays for B / S- click to change", 0);
  	//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
	//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
	//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
}

//	if this code is being used for an indicator, retrieve stored param information
if (Status("action")==1)
{
	SCParamsList			= "";
	SCParamsFileName	= "ConfigFiles\\SCParams"+GetChartID()+".bf";

	fh 						= fopen( SCParamsFileName, "r");
	if( fh )
	{
		while( ! feof( fh ) )
		{
			SCParamsList = fgets( fh );
		}
		fclose( fh );
	}

	q0		=		IIf(SCParamsList !="", 	StrToNum(StrExtract(SCParamsList,  0	)), 0	 		);//	Current
	q1		= WriteIf(SCParamsList !="", 				  StrExtract(SCParamsList,   1	), 	"RUT-I"	);//	indicSym
	q2		=		IIf(SCParamsList !="", 	StrToNum(StrExtract(SCParamsList,  2	)), 53	 		);//	param1
	q3		=		IIf(SCParamsList !="", 	StrToNum(StrExtract(SCParamsList,  3	)), 49			);//	param2
	q4		=		IIf(SCParamsList !="", 	StrToNum(StrExtract(SCParamsList,  4	)), 28	 		);//	param3
	q5		=		IIf(SCParamsList !="", 	StrToNum(StrExtract(SCParamsList,  5	)), 0	 		);//	param4
	q6		=		IIf(SCParamsList !="", 	StrToNum(StrExtract(SCParamsList,  6	)), 100		);//	param5
	q7		=		IIf(SCParamsList !="", 	StrToNum(StrExtract(SCParamsList,  7	)), 1	 		);//	param6
	q8		=		IIf(SCParamsList !="", 	StrToNum(StrExtract(SCParamsList,  8	)), 0			);//	param7
	q9		=		IIf(SCParamsList !="", 	StrToNum(StrExtract(SCParamsList,  9	)), 0	 		);//	param8


	_SECTION_BEGIN("INDICATOR PARAMETERS");
	Current		= ParamToggle("Stochastic Crossover -           Use Current Symbol?",
						"Symbol below makes Indicator - click to change,Current Symbol makes Indicator - click to change", q0);
	IndicString	= ParamStr("Stochastic Crossover -                  Indicator Symbol", "Indicator Symbol---"+q1);
	indicSym		= StrMid(StrToUpper(IndicString), 19, 5);
	param1		= Param("Stochastic Crossover -                Stochastic Period",  q2, 1, 125, 1);
	param2		= Param("Stoch Crossover -      Stochastic Smoothing Period", q3, 0, 100, 1);
	param3		= Param("Stochastic Crossover -    Stochastic Trigger Period",  q4, 0, 50, 1);
	dummy		= ParamStr(".    .","( Params just below are Buy Min. and Sell Max. )");
	param4		= Param("Stochastic Crossover -                      Buy  Minimum",  q5, 0, 100, 1);
	param5		= Param("Stochastic Crossover -                       Sell Maximum",  q6, 0, 100, 1);
	param6		= ParamList("Stochastic Reversal -                       Average Type", "Simple Moving Average,"+
								"Exponential Moving Average,Double Moving Average,Triple Moving Average,"+
								"Weighted Moving Average,Till3 Moving Average", q7);
	param6		= 	IIf(param6=="Simple Moving Average", 0, IIf(param6=="Exponential Moving Average", 1,
						IIf(param6=="Double Moving Average", 2, IIf(param6=="Triple Moving Average", 3,
						IIf(param6=="Weighted Moving Average", 4, 5)))));
	param7		= ParamToggle("Stoch Cros - Standard number series or Fibonacci?",
								"Using standard number series - click to change|Using Fibonacci series - click to change", q8);

	param8		= ParamToggle("Include Foreign Arrays for Buy/Sell Calculation?", "Using only Stocastic for B / S - click to change,"+
								"Including Foreign Arrays for B / S- click to change", q9);
	_SECTION_END();
}

//	Buy/Sell rules start here
aveStr		= "MA,EMA,DEMA,TEMA,WMA,Till3";
aveType 		= StrExtract(aveStr, Param6);

tmp1		= Param1;	tmp2		= Param2;	tmp3		= Param3;
if (Param7)
{
	Param1	= Min(Param1, 14);
	Param2	= Min(Param2, 14);
	Param3	= Min(Param3, 14);
	Param1 	= fib(Param1);
	Param2	= fib(Param2);
	Param3	= fib(Param3);
}

ind1		= IIf(current, Close, Foreign(indicSym, "Close"));
Nam		= WriteIf(current, Name(), indicSym);	Name1	= Nam+"  "+aveType+"  Stoch "+V0(param1)+","+V0(param2)+","+V0(param3);
indstart	= param2 + param3;
lowVal	= LLV(ind1, param1);
HighVal	= HHV(ind1, param1);
dStoc		= MovAve(aveType, 100*(ind1- LowVal)/(HighVal - lowVal), param2);
SigLine 	= MovAve(aveType, dStoc, param3);
stohisto 	= dStoc - SigLine ;
ind2		= dStoc;								Name2	= "dStoc"+w2(dStoc);
ind5		= SigLine;							Name5	= "SigLine"+w2(SigLine);
ind6		= stohisto;							Name6	= "Histogram"+w2(stohisto);
ind7		= Param4;							Name7	= "\nBuy Minimum"+w0(ind7);
ind8		= Param5;							Name8	= "   Sell Maximum"+w0(ind8);

Param1	= tmp1;
Param2	= tmp2;
Param3	= tmp3;

indError	= IIf(IsNull(ind1), 1, 0);
indicSym	= WriteIf(indError, "", indicSym);
ind1		= Null;

BuyCond	= IIf(BarIndex() > indstart, ind6 > 0 AND ind5 > ind7, 0);
SellCond	= IIf(BarIndex() > indstart, ind6 < 0 AND ind5 < ind8, 0);

ind6		= 2*ind6;	//	scaling to make histo plot bigger

BS1 = SS1 = BS2 = SS2 = BS3 = SS3 = BS4 = SS4 = BC = SC = 1;

if (Param8) 
{
	//BS1		= Foreign("RSXBC", "Close");
	//SS1		= Foreign("RSXSC", "Close");
	BS2		= Foreign("RMXBC", "Close");
	SS2		= Foreign("RMXSC", "Close");
	BS3		= Foreign("RRSBC", "Close");
	SS3		= Foreign("RRSSC", "Close");
	//BS4		= Foreign("RRCBC", "Close");
	SS4		= Foreign("RRCSC", "Close");

	BC			= BS1 AND BS2 AND BS3 AND BS4;
	SC			= SS1 AND SS2 AND SS3 AND SS4;
	Name8	= Name8 + ec(colorRed) + "      Incl. Foreign";
}

BuyCond	= BuyCond AND BC;
SellCond	= SellCond AND SC;

Buy		= ExRem(BuyCond, SellCond);
Sell		= ExRem(SellCond, BuyCond);

if (Status("action")==1)	// if this code is being used for an indicator
{
	//	make an initiation file to store params
	SCParamsList = ""+
		Current		+","+
		indicSym		+","+
		param1		+","+
		param2		+","+
		param3		+","+
		param4		+","+
		param5		+","+
		param6		+","+
		param7		+","+
		param8		+","+
		"";

	fh 	= fopen( SCParamsFileName, "w");
	if( fh )
	{
		fputs(SCParamsList, fh);
		fclose( fh );
	}
}

}