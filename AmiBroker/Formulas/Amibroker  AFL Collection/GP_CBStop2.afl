SetChartOptions( 0, chartShowDates | chartShowArrows | chartLogarithmic | chartWrapTitle );
/*
        Guppy countback trailing stop plot #2

        This sample demonstrates use of a CBL trailing stop with a simple
        trading system using EMA crossovers.

        The stop array returned from the trailing stop function will run from
        each entry signal (either buy or short) to each corresponding exit
        signal (either sell or cover). In this mode, the stop out point is
        ignored (the price array is only needed to calculate an auto-resetting
        trailing stop).

        This sample then plots the trailing stop line with blue arrows for the
        entry and exit points and red triangles for the first stop out point
        during each open position (if there is one).

		Last change: WS 14/07/2005 12:16:51 AM
*/                                                                                                                              

Plot(Close, "Price", colorRose, styleCandle);

sname = Name();

cback = Param("1. Countback Value?", 2, 0, 20, 1);
semaPer = Param("2. Short EMA Period?", 30, 1, 100, 1);
lemaPer = Param("3. Long EMA Period?", 60, 2, 200, 2);
isLong = Param("4. Short=0, Long=1?", 1, 0, 1, 1) != 0;
useStop = Param("5. Use Stop For Gain?", 1, 0, 1, 1);

bi = BarIndex();            //  This gets the start and end bars of a range
startIx = BeginValue(bi) - bi[0];
endIx = EndValue(bi) - bi[0];

es = EMA(Close, semaPer);
el = EMA(Close, lemaPer);

Buy = False;
Sell = False;
Short = False;
Cover = False;              //  These arrays really only needed if doing backtests

enter = False;
exit = False;
if (isLong) {
    Buy = enter = Cross(es, el);        //  The EMA system
    Sell = exit = Cross(el, es);
    }
else {
    Short = enter = Cross(el, es);
    Cover = exit = Cross(es, el);
    }

bix = Cum(1)-1;                             //  Create mask over start/end range
tmask = Flip(bix==startIx, bix>endIx);
enter = IIf(IsNull(enter) || !tmask, False, enter);   //  Remove values before EMAs start
exit = IIf(IsNull(exit) || !tmask, False, exit);
exitmask = Flip(enter, 0);                  //  Ensure first signal is enter, not exit
exit = exit && exitmask;

cbArr = GP_CountBack(cback, isLong);        //  Get count back data array
sstop = GP_CreateStop(cbArr, Null, enter, exit, sname, -1, -2, isLong); //  Turn into trailing stop (price array not needed)

cbArr = IIf(tmask, cbArr, -1e10);           //  Mask values outside of range
sstop = IIf(tmask, sstop, -1e10);

stopOut = !IsNull(sstop) && ((isLong && Close < sstop) || (!isLong && Close > sstop));   //  All stopped out points
sflip = Flip(enter, stopOut);               //  Only want first one after enter signal
stopOut = !sflip && Ref(sflip, -1);         //  sflip going from 1 to 0 indicates first stop


//  Calculate gain based on 10K capital and $30 brokerage ...

icap = 10000;
capital = icap;
inOpen = False;                             //  For tracking open positions
bqty = 0;
for (i = 0; i < BarCount; i++) {
    if (!inOpen) {
        if (enter[i]) {
            inOpen = True;
            if (isLong) {
                bqty = int((capital-30)/BuyPrice[i]);
                capital = capital - bqty*BuyPrice[i] - 30;
                }
            else {
                bqty = int((capital-30)/ShortPrice[i]);     //  Use this for shorts too
                capital = capital + bqty*ShortPrice[i] - 30;
                }
            }
        }
    else {
        if (exit[i] || (useStop && stopOut[i]) || i == endIx) { //  Pretend exit on last bar for gain
            inOpen = False;
            if (isLong)
                capital = capital + bqty*SellPrice[i] - 30;
            else
                capital = capital - bqty*CoverPrice[i] - 30;
            }
        }
    }
gain = (capital-icap)/icap*100;

Plot(sstop, StrFormat("Countback(%1.0f), Gain = %1.3f%%", cback, gain), colorRed, styleDots);
Plot(es, StrFormat("EMA(%1.0f)", semaPer), colorOrange, styleLine);
Plot(el, StrFormat("EMA(%1.0f)", lemaPer), colorGreen, styleLine);

PlotShapes(IIf(enter, IIf(isLong, shapeUpArrow, shapeDownArrow), shapeNone), colorBlue, 0, sstop, IIf(isLong, -20, -20));
PlotShapes(IIf(exit, IIf(isLong, shapeDownArrow, shapeUpArrow), shapeNone), colorBlue, 0, sstop, IIf(isLong, 20, 20));
PlotShapes(IIf(stopOut, IIf(isLong, shapeUpTriangle, shapeDownTriangle), shapeNone), colorRed, 0, sstop, IIf(isLong, -30, -30));