/*							RSI Limit Cross.afl - Bill Barnard, 11/27/05
	This is to be used as an include file for SIGNAL STUDY.afl or the entire contents are to be
	pasted into SIGNAL OPTIMIZE.afl. Read discussion (first parameter) in SIGNAL STUDY.afl 	*/

AA		=  (Status("action")==3 OR Status("action")==4 OR Status("action")==5);	//	= 1 in AA
if (AA)	sigSelect = "RSI Limit Cross";
if (sigSelect=="RSI Limit Cross")	{

if (AA)	//	if this code is being used in AA
{
  	//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
	//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
	//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
	Current		= ParamToggle("Use Current Symbol?", "Using Symbol named just below for Indicator,Using Current Symbol for Indicator");
	indicSym		= ParamStr("Indicator Symbol", "RUT-I");
	param1		= Optimize("period",  14, 2, 24, 2);
	param2		= Optimize("smooth", 1, 1, 51, 5);
	param3		= 60;//Optimize("Buy Line",  60, 1, 99, 1);
	param4		= 40;//Optimize("Sell Line",  40, 1, 99, 1);
	param6		= 1;//Optimize("AveTyp",  1, 0, 5, 1);
	//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
	//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
	//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
}

//	if this code is being used for an indicator, retrieve stored param information
if (Status("action")==1)
{
	RLParamsList			= "";
	RLParamsFileName	= "ConfigFiles\\RLParams"+GetChartID()+".bf";

	fh 						= fopen( RLParamsFileName, "r");
	if( fh )
	{
		while( ! feof( fh ) )
		{
			RLParamsList = fgets( fh );
		}
		fclose( fh );
	}

	q0		=		IIf(RLParamsList !="", 	StrToNum(StrExtract(RLParamsList,  0	)), 0	 		);//	Current
	q1		= WriteIf(RLParamsList !="", 				  StrExtract(RLParamsList,   1	), 	"RUT-I"	);//	indicSym
	q2		=		IIf(RLParamsList !="", 	StrToNum(StrExtract(RLParamsList,  2	)), 14	 		);//	param1
	q3		=		IIf(RLParamsList !="", 	StrToNum(StrExtract(RLParamsList,  3	)), 1			);//	param2
	q4		=		IIf(RLParamsList !="", 	StrToNum(StrExtract(RLParamsList,  4	)), 60	 		);//	param3
	q5		=		IIf(RLParamsList !="", 	StrToNum(StrExtract(RLParamsList,  5	)), 40	 		);//	param4
	q6		=		IIf(RLParamsList !="", 	StrToNum(StrExtract(RLParamsList,  6	)), 0			);//	param5
	q7		=		IIf(RLParamsList !="", 	StrToNum(StrExtract(RLParamsList,  7	)), 1	 		);//	param6
	q8		=		IIf(RLParamsList !="", 	StrToNum(StrExtract(RLParamsList,  8	)), 0			);//	param7
	q9		=		IIf(RLParamsList !="", 	StrToNum(StrExtract(RLParamsList,  9	)), 0	 		);//	param8


	_SECTION_BEGIN("INDICATOR PARAMETERS");
	Current		= ParamToggle("RSI Limit Cross -                   Use Current Symbol?",
						"Symbol below makes Indicator - click to change,Current Symbol makes Indicator - click to change", q0);
	IndicString	= ParamStr("RSI Limit Cross -                          Indicator Symbol", "Indicator Symbol---"+q1);
	indicSym		= StrMid(StrToUpper(IndicString), 19, 5) ;
	param1		= Param("RSI Limit Cross -                                    RSI Period",  q2, 1, 25, 1);
	param2		= Param("RSI Limit Cross -                  RSI Smoothing Period", q3, 1, 50, 1);
	param3		= Param("RSI Limit Cross -                                     Buy Level",  q4, 1, 99, 1);
	param4		= Param("RSI Limit Cross -                                     Sell Level",  q5, 1, 99, 1);
	param5		= q6;
	param6	= ParamList("RSI Limit Cross -                              Average Type", "Simple Moving Average,"+
								"Exponential Moving Average,Double Moving Average,Triple Moving Average,"+
								"Weighted Moving Average,Till3 Moving Average", q7);
	param6	= 	IIf(param6=="Simple Moving Average", 0, IIf(param6=="Exponential Moving Average", 1,
					IIf(param6=="Double Moving Average", 2, IIf(param6=="Triple Moving Average", 3,
					IIf(param6=="Weighted Moving Average", 4, 5)))));
	param7		= q8;
	param8		= q9;
	_SECTION_END();
}

//	Buy/Sell rules start here
aveStr		= "MA,EMA,DEMA,TEMA,WMA,Till3";
aveType 		= StrExtract(aveStr, Param6);

if (NOT current)	SetForeign(indicSym);

ind1		= RSI(param1);
Nam		= WriteIf(current, Name(), indicSym);	Name1	= Nam+"  RSI("+V0(param1)+")"+w2(ind1);
indError	= IIf(IsNull(Close) OR (NOT current AND SetForeign(indicSym)==0), 1, 0);
indicSym	= WriteIf(indError, "", indicSym);
indstart	= 0;

if (NOT current)	RestorePriceArrays();
ind2		= MovAve(aveType, ind1, param2);		Name2	= aveType+"("+V0(param2)+") of RSI"+w2(ind2);
ind2		= IIf(indError, Null, ind2);
ind1		= Null;	//we are  through with it and don't want it to be plotted

ind3		= param3;									Name3	= "Buy Line"+w0(ind3);
ind4		= param4;
ind4		= Min(ind3, ind4);							
															Name4	= "Sell Line"+w0(ind4)+sp(5)+nl(1)+
																			wi(ind4 > ind3, ec(colorRed)+"( Lockouts Possible ! )");


Buy		= IIf(BarIndex() > indstart, Cross(ind2, ind3), 0);
Sell		= IIf(BarIndex() > indstart, Cross(ind4, ind2), 0);

BuyCond	= Flip(Buy, Sell);
SellCond	= Flip(Sell, Buy);

Buy		= ExRem(Buy, Sell);
Sell		= ExRem(Sell, Buy);

if (Status("action")==1)	// if this code is being used for an indicator
{
	//	make an initiation file to store params
	RLParamsList = ""+
		Current		+","+
		indicSym		+","+
		param1		+","+
		param2		+","+
		param3		+","+
		param4		+","+
		param5		+","+
		param6		+","+
		param7		+","+
		param8		+","+
		"";

	fh 	= fopen( RLParamsFileName, "w");
	if( fh )
	{
		fputs(RLParamsList, fh);
		fclose( fh );
	}
}

}