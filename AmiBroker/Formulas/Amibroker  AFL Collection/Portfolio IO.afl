#pragma nocache

MaxGraph    = 10;
GraphZOrder =  1;
GraphYSpace =  5;

BIR      = IIf(Status("BarInRange") > 0, 1, 0);

ISEq     = Foreign("~~~Equity", "C", 1);

CurEq    = Foreign("~~IO~Equity", "C", 1);
CurIOS   = Foreign("~~IO~Equity", "V", 1);
CurSig   = Foreign("~~IO~Equity", "I", 1);

CS128    = IIf(CurSig >= 128, 1, 0);
CurSig   = IIf(CS128  == 1, CurSig - 128, CurSig);
CS64     = IIf(CurSig >= 64, 1, 0);
CurSig   = IIf(CS64   == 1, CurSig - 64, CurSig);
CS32     = IIf(CurSig >= 32, 1, 0);
CurSig   = IIf(CS32   == 1, CurSig - 32, CurSig);
CS16     = IIf(CurSig >= 16, 1, 0);
CurSig   = IIf(CS16   == 1, CurSig - 16, CurSig);
CS8      = IIf(CurSig >= 8, 1, 0);
CurSig   = IIf(CS8    == 1, CurSig - 8, CurSig);
CS4      = IIf(CurSig >= 4, 1, 0);
CurSig   = IIf(CS4    == 1, CurSig - 4, CurSig);
CS2      = IIf(CurSig >= 2, 1, 0);
CurSig   = IIf(CS2    == 1, CurSig - 2, CurSig);
CS1      = IIf(CurSig >= 1, 1, 0);
CurSig   = IIf(CS1    == 1, CurSig - 1, CurSig);

BarEnt   = IIf(CS1 == 1 OR CS4 == 1 OR CS16 == 1 OR CS64 == 1, 1, 0);
CurEnt   = IIf(BarEnt != 0, CurEq, 0);

LastIS   = CurIOS == 0 AND Ref(CurIOS, 1) != 0;
OtherOOS = CurIOS != Ref(CurIOS, 1);

MaxEq    = Highest(CurEq);
FlatEq   = IIf(BIR, BarsSince(MaxEq > Ref(MaxEq,-1)),0);
MaxFlat  = Highest(FlatEq);
LMaxFlat = LastValue(MaxFlat) * (1 + GraphYSpace / 100);
LogEq    = log10(CurEq);

CurDD    = IIf(CurEq < MaxEq, 100 * (MaxEq - CurEq) / MaxEq, 0);
RCurDD   = round(CurDD * 100) / 100;
MaxDD    = Highest(CurDD);
RMaxDD   = round(MaxDD * 100) / 100;
LMaxDD   = LastValue(MaxDD) * (1 + GraphYSpace / 100);
SqrDD    = CurDD ^ 2;
CumDD    = Cum(SqrDD);

MaxEnt   = Highest(CurEnt);
CurDDE   = IIf(CurEq < MaxEnt, 100 * (MaxEnt - CurEq) / MaxEnt, 0);
RCurDDE  = round(CurDDE * 100) / 100;
MaxDDE   = Highest(CurDDE);
RMaxDDE  = round(MaxDDE * 100) / 100;

FirstBar = LastValue(ValueWhen(Status("FirstBarInRange") > 0, Cum(1)));
LastBar  = LastValue(ValueWhen(Status("LastBarInRange") > 0, Cum(1)));
TotBars  = LastValue(Cum(1));
BarNo    = ValueWhen(BIR > 0, Cum(1) - FirstBar + 1);
NoBars   = LastValue(BarNo);

Dates    = DateNum();
Days     = ValueWhen(BIR > 0, IIf(Dates != Ref(Dates,-1), 1, 0));
TotDays  = Cum(Days);
BPD      = round(BarNo / TotDays);

BAHEq    = ValueWhen(BIR > 0, Ref(CurEq, -(BarNo - 1)) * (C / Ref(C, -(BarNo - 1))));
LogBAHEq = log10(BAHEq);

CAR      = ValueWhen(BIR > 0, 100 * ((CurEq / Ref(CurEq, -(BarNo - 1))) ^ (1 / (BarNo / BPD / 252)) -1));
Ann      = ValueWhen(BIR > 0, 100 * ((CurEq / Ref(CurEq, -(252 * BPD)) - 1)));
MAR      = ValueWhen(BIR > 0, CAR / MaxDD);
UI       = ValueWhen(BIR > 0, sqrt(CumDD / BarNo));
UPI      = (CAR - 5.4) / UI;
TPI      = UPI / MaxDD;

OSCAR1   = ValueWhen(CurIOS >= 1, 100 * ISEq / Highest(ValueWhen(LastIS == 1, ISEq)));
OSMaxEq1 = ValueWhen(CurIOS >= 1, Highest(ISEq));
OSCurDD1 = IIf(CurIOS >= 1, 100 * (OSMaxEq1 - ISEq) / OSMaxEq1, 0);
OSMaxDD1 = Highest(OSCurDD1);
OSMAR1   = OSCAR1 / OSMaxDD1;

OSCAR2   = ValueWhen(CurIOS >= 1, 100 * CurEq / Highest(ValueWhen(LastIS == 1, CurEq)));
OSMaxEq2 = ValueWhen(CurIOS >= 1, Highest(CurEq));
OSCurDD2 = IIf(CurIOS >= 1, 100 * (OSMaxEq2 - CurEq) / OSMaxEq2, 0);
OSMaxDD2 = Highest(OSCurDD2);
OSMAR2   = OSCAR2 / OSMaxDD2;

WFEcar   = 100 * OSCAR2 / OSCAR1;
WFEmar   = 100 * OSMAR2 / OSMAR1;

b0       = LastValue(LinRegIntercept(Ref(LogEq, -(TotBars - LastBar)), NoBars));
m        = LastValue(LinRegSlope(Ref(LogEq, -(TotBars - LastBar)), NoBars));
y        = m * BarNo + b0;

BarsCum  = ValueWhen(BIR > 0, Cum(BarNo));
AvgBar   = LastValue(BarsCum) / NoBars;
SRDevSQ  = ValueWhen(BIR > 0, sqrt(Cum((BarNo - AvgBar) ^ 2)));
ErrEq    = LastValue(StdErr(Ref(logEq, -(TotBars - LastBar)), NoBars));
KRatio   = ValueWhen(BIR > 0, m * SRDevSQ / ErrEq / sqrt(NoBars));

Title = EncodeColor(colorGrey50) + "Equity   = " + EncodeColor(colorWhite)       + WriteVal(CurEq,   3.0) + " " +
        EncodeColor(colorGrey50) + "CurFlat = "  + EncodeColor(colorGold)        + WriteVal(FlatEq,  3.0) + " " +
        EncodeColor(colorGrey50) + "CAR = "      + EncodeColor(colorBrightGreen) + WriteVal(CAR,     3.2) + "% " +
        EncodeColor(colorGrey50) + "CDDE = "     + EncodeColor(colorOrange)      + WriteVal(CurDDE,  3.2) + "%  " +
        EncodeColor(colorGrey50) + "CDD = "      + EncodeColor(colorRed)         + WriteVal(CurDD,   3.2) + "%  " +
        EncodeColor(colorGrey50) + "MAR = "      + EncodeColor(colorBrightGreen) + WriteVal(MAR,     3.2) + "  " +
        EncodeColor(colorGrey50) + "UI = "       + EncodeColor(11)               + WriteVal(UI,      3.2) + "  " +
        EncodeColor(colorGrey50) + "WFEcar = "   + EncodeColor(colorGold)        + WriteVal(WFEcar,  3.2) + "% " +
        "\n" +
        EncodeColor(colorGrey50) + "LinReg = "   + EncodeColor(colorLightBlue)   + WriteVal(10 ^ y,  3.0) + " " +
        EncodeColor(colorGrey50) + "MaxFlat = "  + EncodeColor(colorGold)        + WriteVal(MaxFlat, 3.0) + " " +
        EncodeColor(colorGrey50) + "Ann = "      + EncodeColor(colorBrightGreen) + WriteVal(Ann,     3.2) + "% " +
        EncodeColor(colorGrey50) + "MDDE = "     + EncodeColor(colorOrange)      + WriteVal(MaxDDE,  3.2) + "% " +
        EncodeColor(colorGrey50) + "MDD = "      + EncodeColor(colorRed)         + WriteVal(MaxDD,   3.2) + "% " +
        EncodeColor(colorGrey50) + "UPI = "      + EncodeColor(colorBrightGreen) + WriteVal(UPI,     3.2) + " " +
        EncodeColor(colorGrey50) + "KR = "       + EncodeColor(colorPaleGreen)   + WriteVal(KRatio,  3.2) + " " +
        EncodeColor(colorGrey50) + "WFEmar = "   + EncodeColor(colorGold)        + WriteVal(WFEmar,  3.2) + "% " +
        "\n" +
        EncodeColor(colorGrey50) + "B & H    = " + EncodeColor(colorGrey50)      + WriteVal(BAHEq,   3.0);

Plot(IIf(BarNo > 0 AND BIR >  0, -RCurDD,  -1e10), "CDD",   colorDarkRed, styleThick | styleOwnScale | styleArea, -LMaxDD,   LMaxDD);
Plot(IIf(BarNo > 0 AND BIR == 0, -RCurDD,  -1e10), "CDD",   colorDarkRed, styleThick | styleOwnScale | styleLine, -LMaxDD,   LMaxDD);
Plot(IIf(BarNo > 0,              -RMaxDD,  -1e10), "MDD",   colorDarkRed, styleThick | styleOwnScale,             -LMaxDD,   LMaxDD);
Plot(IIf(BarNo > 0 AND BIR >  0, -RCurDDE, -1e10), "CDDE",  colorOrange,  styleThick | styleOwnScale | styleArea, -LMaxDD,   LMaxDD);
Plot(IIf(BarNo > 0 AND BIR == 0, -RCurDDE, -1e10), "CDDE",  colorOrange,  styleThick | styleOwnScale | styleLine, -LMaxDD,   LMaxDD);
Plot(IIf(BarNo > 0,              -RMaxDDE, -1e10), "MDDE",  colorOrange,  styleThick | styleOwnScale,             -LMaxDD,   LMaxDD);
Plot(IIf(BarNo > 0,               FlatEq,  -1e10), "CF",    colorGold,    styleThick | styleOwnScale | styleArea, -LMaxFlat, LMaxFlat);
Plot(IIf(BarNo > 0,               MaxFlat, -1e10), "MF",    colorGold,    styleThick | styleOwnScale,             -LMaxFlat, LMaxFlat);

Plot(LastIS,   "LastIS",   colorLightGrey, styleHistogram | styleThick | styleNoLabel | styleOwnScale);
Plot(OtherOOS, "OtherOOS", colorLightGrey, styleHistogram |              styleNoLabel | styleOwnScale);

Plot(IIf(BIR > 0, Y,        -1e10), "L/R Eq", colorBlue,      styleThick | styleNoLabel);
Plot(IIf(BIR > 0, LogBAHEq, -1e10), "BAH Eq", colorGrey50,    styleThick | styleNoLabel);
Plot(IIf(BIR > 0, LogEq,    -1e10), "Sys Eq", colorLightGrey, styleThick | styleNoLabel);

S1   = (CS1   == 1) * shapeUpArrow;
S2   = (CS2   == 1) * shapeDownArrow;
S4   = (CS4   == 1) * shapeDownArrow;
S8   = (CS8   == 1) * shapeUpArrow;
S16  = (CS16  == 1) * shapeUpArrow;
S32  = (CS32  == 1) * shapeDownArrow;
S64  = (CS64  == 1) * shapeDownArrow;
S128 = (CS128 == 1) * shapeUpArrow;

PlotShapes(IIf(BIR > 0, S2,   -1e10), colorWhite,       0, LogEq, -11);
PlotShapes(IIf(BIR > 0, S8,   -1e10), colorWhite,       0, LogEq, -11);

PlotShapes(IIf(BIR > 0, S1,   -1e10), colorBrightGreen, 0, logEq, IIf(CS8,   -17, -11));
PlotShapes(IIf(BIR > 0, S4,   -1e10), colorRed,         0, logEq, IIf(CS2,   -17, -11));

PlotShapes(IIf(BIR > 0, S32,  -1e10), colorGrey50,      0, LogEq, -11);
PlotShapes(IIf(BIR > 0, S128, -1e10), colorGrey50,      0, LogEq, -11);

PlotShapes(IIf(BIR > 0, S16,  -1e10), colorBlue,        0, LogEq, IIf(CS128, -17, -11));
PlotShapes(IIf(BIR > 0, S64,  -1e10), 11,               0, LogEq, IIf(CS32,  -17, -11));