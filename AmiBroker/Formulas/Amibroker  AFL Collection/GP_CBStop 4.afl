_SECTION_BEGIN("GP_CBStop");
/*
        Guppy countback trailing stop plot

		Last change: WS 14/07/2005 12:16:51 AM
*/                                                                                                                              

GP_pfIdUsed = -1;           //  Required global variable

//----------------------------------------------------------------------------


/*      This function checks if the buy date is in the dates array and if not,
        changes it to the closest date before it.
*/

function CheckDate(buyDate, dates)
{
    retDate = buyDate;

    i = 0;
    gotDate = 0;
    while (i < BarCount && !gotDate) {
        if (buyDate == dates[i])
            gotDate = 1;
        else {
            if (dates[i] > buyDate) {
                gotDate = 1;
                if (i)
                    retDate = dates[i-1];
                else
                    retDate = dates[0];
                }
            }
        i++;
        }

    return retDate;
}

//----------------------------------------------------------------------------
//----------------------------------------------------------------------------


//      The main program ....

//Plot(Close, "Price", -1, styleCandle);

sname = Name();

pfId = Param("1. Portfolio Number?", -1, -1, 255, 1);
cback = Param("2. Countback value?", 3, 0, 20, 1);
isLong = Param("3. Short=0, Long=1?", 1, 0, 1, 1) != 0;
doSl = Param("4. Plot as Stop/Loss?", 1, 0, 1, 1);

bi = BarIndex();            //  This gets the start and end bars of a range
startIx = BeginValue(bi) - bi[0];
endIx = EndValue(bi) - bi[0];
if (endIx < startIx)
    endIx = startIx;
if (startIx == 0)
    startIx = -1;

plong = GP_GetLongShort(sname, pfId);
if (plong >= 0)
    isLong = plong != 0;

cbArr = GP_CountBack(cback, isLong);    //  Get count back data array
sstop = GP_CreateStop(cbArr, sname, pfId, startIx, isLong); //  Turn into trailing stop

if (startIx > 0) {      //  Remove any data before start in count back array
    for (i = 0; i < startIx; i++)
        cbArr[i] = -1e10;
    }
if (endIx < BarCount-1) {   //  Remove any data after end in count back and stop arrays
    for (i = endIx+1; i < BarCount; i++) {
        sstop[i] = -1e10;
        cbArr[i] = -1e10;
        }
    }

Sells = 0;          //  Generate sell array (or buy array if short)
if (doSl) {
    if (!isLong)
        Sells = Cross(Close, sstop);
    else
        Sells = Cross(sstop, Close);
    }

buyStr = "";

pfId = GP_pfIdUsed;
dummy1 = -1e10;      //  As indicator can't display enough text in one parameter
dummy2 = -1e10;      //  As indicator can't display enough text in one parameter

if ((pfId >= 0 OR startIx > 0) AND doSl) {      //  Plot proper trailing stop
    if (startIx <= 0) {
        buyDate = GP_GetBuyDate(sname, pfId);
        buyQty = GP_GetBuyQty(sname, pfId);
        BuyPrice = GP_GetBuyPrice(sname, pfId);

        tgain = GP_GetGain(sname, pfId, endIx, 0);  //  Calculate gains
        pgain = GP_GetGain(sname, pfId, endIx, 1) * 100;
        if (!isLong) {
            tgain = -tgain;
            pgain = -pgain;
            }

        dates = DateNum();
        buyDate = CheckDate(buyDate, dates);
        yy = int(buyDate / 10000) + 1900;
        mm = int((buyDate % 10000) / 100);
        dd = buyDate % 100;
        watchName = CategoryGetName(categoryWatchlist, pfId);

        bpStr = StrFormat("(Gain = $%1.2f, ", tgain);   //  Format display string
        if (frac(tgain*100))
            bpStr = StrFormat("(Gain = $%1.3f, ", tgain);
        if (tgain > 0)
            bpStr = bpStr + "+";
        buyStr = watchName + StrFormat(" - %g/%g/%04g, %1.0f @ $%1.2f = $%1.2f ", dd, mm, yy, BuyQty, BuyPrice, BuyPrice*buyQty);
        Plot(dummy1, buyStr, colorBlue, styleDots);  //  Plot nothing to display this text
        buyStr = bpStr + StrFormat("%1.2f%%), ", pgain);
        Plot(dummy2, buyStr, colorBlue, styleDots);  //  Plot nothing to display this text
        }
    Plot(sstop, "Countback(" + WriteVal(cback, 1.0) + ")", colorBlue, styleDots);
    if (startIx <= 0)       //  Show buy date if no range marked
        PlotShapes(IIf(pfId >= 0 AND dates==buyDate, shapeUpTriangle, shapeNone), colorBlue, Graph0, 0);
    }
else            //  Plot raw count back data
    Plot(cbArr, "Countback(" + WriteVal(cback, 1.0) + ")", colorBlue, styleDots);

PlotShapes(IIf(Sells, IIf(isLong, shapeDownArrow, shapeUpArrow), shapeNone), colorBlue, Graph0, IIf(isLong, Low-Low*0.07, High+High*0.02)); //  Show sells
_SECTION_END();

_SECTION_BEGIN("Price");
SetChartOptions(0,chartShowArrows|chartShowDates);

Plot( C, "Close", IIf(MACD(3,34) > Signal(3,34,9),colorGreen, colorRed), styleNoTitle | ParamStyle("Style") | GetPriceStyle() ); 
_SECTION_END();

_SECTION_BEGIN("64 channel"); 

_N(Title = StrFormat("{{NAME}} - {{INTERVAL}} {{DATE}} Open %g, Hi %g, Lo %g, Close %g (%.1f%%) {{VALUES}}", O, H, L, C, SelectedValue( ROC( C, 1 ) ) ));
//Plot( C, "Close", ParamColor("Color", Null ), styleNoTitle | styleCandle ); 

P = ParamField("Field");
Type = ParamList("Type", "Simple,Exponential,Double Exponential,Tripple Exponential,Wilders,Weighted");
//Periods = Param("Periods", 30, 2, 300 );
//Displacement = Param("Displacement", 4, -50, 50 );
//m = 0;

//if( Type == "Simple" ) 
A = MA( H,6 );
B = MA( L,6 );

 					
x= Ref(A,-4);
y= Ref(B,-4);

D=.00005;

xb=x-x*D;

yt=y+y*D;

//PlotOHLC( 0,xt,xb,xb ,"",ColorRGB(200,0,0), styleCloud);
//PlotOHLC( 0,yt,yb,yb ,"",ColorRGB(0,200,0), styleCloud);
PlotOHLC( 0,x,xb,xb ,"",colorGold, styleCloud);
PlotOHLC( 0,yt,y,y ,"",colorGold, styleCloud);
PlotOHLC( 0,x,y,y ,"",ColorRGB(50,50,10), styleCloud);



_SECTION_END();



_SECTION_BEGIN("Fibo for all bars");

TimeFrameSet( in15Minute*2 ); 
DH=Ref(H,-1); 
DL=Ref(L,-1);
DC=Ref(C,-1);


pd = (O+ DH+ DL + DC )/4;
sd1 = (2*pd)-DH;
sd2 = pd -(DH - DL);
sd3 = Sd1 - (DH-DL); 
rd1 = (2*pd)-DL;
rd2 = pd +(DH -DL);
rd3 = rd1 +(DH-DL);



//Plot (pd,"Pivot",colorBlue,styleDots);
//Plot (rd1," R1 ",35,styleDots);
//Plot (rd2," R2 ",35,styleDots);
//Plot (rd3," R3 ",35,styleDots);

//Plot (sd1," S1 ",4,styleDots);
//Plot (Sd2," S2 ",4,styleDots);
//Plot (Sd3," S3 ",4,8+16);
/*
style = IIf(ParamList("Chart style", "styleCandle|styleBar")=="styleCandle",64,128+4);
Plot (C,Date ()+" close",1,style); //ENABLE THIS TO HAVE CANDLES AS WELL
*/
TimeFrameRestore();


Title = EncodeColor(colorWhite)+ "LINKON'S PIVOT TRADING SYSTEM" + " - " +  Name() + " - " + EncodeColor(colorRed)+ Interval(2) + EncodeColor(colorWhite) +
 "  - " + Date() +" - "
//+ WriteIf(Col_action==colorGreen, EncodeColor(colorGreen)+"stay LONG","")+ WriteIf(Col_action==colorRed, EncodeColor(colorRed)+"stay SHORT","")+  WriteIf(Col_action==colorBlack, EncodeColor(colorYellow)+"No Trend","")+"\n"
+ "Vol= "+ WriteVal(V) +WriteIf ( V > MA(V,26) ,EncodeColor(colorGreen)+"  UP "+ (V/MA(V,26))*100 + " %", EncodeColor(colorRed)+"  DOWN "+ (V/MA(V,26))*100 + " %")
+ EncodeColor(colorGreen)+   "\n R3 : "+ EncodeColor(colorWhite)+RD3
+ EncodeColor(colorGreen)+   "\n R2 : "+ EncodeColor(colorWhite)+RD2
+ EncodeColor(colorGreen)+   "\n R1 : "+ EncodeColor(colorWhite)+RD1+ EncodeColor(colorGreen)+   "`            Hi: "+ EncodeColor(colorWhite)+H
+ EncodeColor(colorBlue)+   "\n Pivot : "+ EncodeColor(colorWhite)+pd + EncodeColor(colorYellow)+   "`   Op: "+ EncodeColor(colorWhite)+O+ EncodeColor(colorAqua)+   "Cl: "+ EncodeColor(colorBrightGreen)+C
+ EncodeColor(colorRed)+   "\n S1 : "+ EncodeColor(colorWhite)+SD1+ EncodeColor(colorRed)+   "`            Lo: "+ EncodeColor(colorWhite)+L
+ EncodeColor(colorRed)+   "\n S2 : "+ EncodeColor(colorWhite)+SD2
+ EncodeColor(colorRed)+   "\n S3 : "+ EncodeColor(colorWhite)+SD3
;

_SECTION_END();